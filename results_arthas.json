{"requestedTools":null,"toolResults":[[{"tag":"Infer"},{"tag":"ToolSuccess","contents":[[{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getProperty(\"os.name\")` could be null and is dereferenced at line 11.","tnFile":"common/src/main/java/com/taobao/arthas/common/OSUtils.java","tnLine":11,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void OSUtils.<clinit>()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `osName` last assigned on line 21 could be null and is dereferenced at line 22.","tnFile":"core/src/main/java/com/taobao/arthas/core/util/IPUtils.java","tnLine":22,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"boolean IPUtils.isWindowsOS()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.util.Scanner` acquired by call to `new()` at line 67 is not released after line 67.","tnFile":"boot/src/main/java/com/taobao/arthas/boot/ProcessUtils.java","tnLine":67,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"int ProcessUtils.select(boolean,int)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `new()` at line 45 is not released after line 61.\n**Note**: potential exception at line 47","tnFile":"core/src/main/java/com/taobao/arthas/core/command/basic1000/KeymapCommand.java","tnLine":61,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void KeymapCommand.process(CommandProcess)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.util.Scanner` acquired to `scanner` by call to `new()` at line 45 is not released after line 54.","tnFile":"core/src/main/java/com/taobao/arthas/core/view/KVView.java","tnLine":54,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"String KVView.draw()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired to `reader` by call to `new()` at line 45 is not released after line 48.","tnFile":"client/src/main/java/com/taobao/arthas/client/IOUtil.java","tnLine":48,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void IOUtil$2.run()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired to `reader` by call to `new()` at line 45 is not released after line 54.\n**Note**: potential exception at line 47","tnFile":"client/src/main/java/com/taobao/arthas/client/IOUtil.java","tnLine":54,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void IOUtil$2.run()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `new()` at line 58 is not released after line 74.\n**Note**: potential exception at line 61","tnFile":"common/src/main/java/com/taobao/arthas/common/ExecutingCommand.java","tnLine":74,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List ExecutingCommand.runNative(java.lang.String[])","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.lang.Process` acquired to `p` by call to `exec(...)` at line 46 is not released after line 65.\n**Note**: potential exception at line 61","tnFile":"common/src/main/java/com/taobao/arthas/common/ExecutingCommand.java","tnLine":65,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List ExecutingCommand.runNative(java.lang.String[])","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getField(spyClass,\"AFTER_INVOKING_METHOD\")` could be null and is dereferenced at line 92.","tnFile":"core/src/main/java/com/taobao/arthas/core/advisor/Enhancer.java","tnLine":92,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void Enhancer.spy(ClassLoader)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getField(spyClass,\"BEFORE_INVOKING_METHOD\")` could be null and is dereferenced at line 91.","tnFile":"core/src/main/java/com/taobao/arthas/core/advisor/Enhancer.java","tnLine":91,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void Enhancer.spy(ClassLoader)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getField(spyClass,\"ON_BEFORE_METHOD\")` could be null and is dereferenced at line 88.","tnFile":"core/src/main/java/com/taobao/arthas/core/advisor/Enhancer.java","tnLine":88,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void Enhancer.spy(ClassLoader)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getField(spyClass,\"ON_RETURN_METHOD\")` could be null and is dereferenced at line 89.","tnFile":"core/src/main/java/com/taobao/arthas/core/advisor/Enhancer.java","tnLine":89,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void Enhancer.spy(ClassLoader)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getField(spyClass,\"ON_THROWS_METHOD\")` could be null and is dereferenced at line 90.","tnFile":"core/src/main/java/com/taobao/arthas/core/advisor/Enhancer.java","tnLine":90,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void Enhancer.spy(ClassLoader)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getField(spyClass,\"THROW_INVOKING_METHOD\")` could be null and is dereferenced at line 93.","tnFile":"core/src/main/java/com/taobao/arthas/core/advisor/Enhancer.java","tnLine":93,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void Enhancer.spy(ClassLoader)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `com.taobao.arthas.core.command.klass100.MemoryCompilerCommand$1` acquired by call to `new()` at line 92 is not released after line 123.","tnFile":"core/src/main/java/com/taobao/arthas/core/command/klass100/MemoryCompilerCommand.java","tnLine":123,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void MemoryCompilerCommand.process(CommandProcess)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `com.taobao.arthas.core.command.klass100.MemoryCompilerCommand$1` acquired by call to `new()` at line 92 is not released after line 140.\n**Note**: potential exception at line 115","tnFile":"core/src/main/java/com/taobao/arthas/core/command/klass100/MemoryCompilerCommand.java","tnLine":140,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void MemoryCompilerCommand.process(CommandProcess)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired by call to `new()` at line 111 is not released after line 126.\n**Note**: potential exception at line 117","tnFile":"common/src/main/java/com/taobao/arthas/common/IOUtils.java","tnLine":126,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void IOUtils.unzip(String,String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired to `is` by call to `new()` at line 111 is not released after line 127.\n**Note**: potential exception at line 117","tnFile":"common/src/main/java/com/taobao/arthas/common/IOUtils.java","tnLine":127,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void IOUtils.unzip(String,String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 117 is not released after line 126.\n**Note**: potential exception at line 121","tnFile":"common/src/main/java/com/taobao/arthas/common/IOUtils.java","tnLine":126,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void IOUtils.unzip(String,String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getLast(lineTokens)` could be null and is dereferenced at line 87.","tnFile":"core/src/main/java/com/taobao/arthas/core/command/hidden/OptionsCommand.java","tnLine":87,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void OptionsCommand.complete(Completion)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `count` last assigned on line 103 could be null and is dereferenced at line 104.","tnFile":"core/src/main/java/com/taobao/arthas/core/command/monitor200/ThreadCommand.java","tnLine":104,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ThreadCommand.processAllThreads(CommandProcess)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `new()` at line 106 is not released after line 112.\n**Note**: potential exception at line 109","tnFile":"core/src/main/java/com/taobao/arthas/core/util/UserStatUtil.java","tnLine":112,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void UserStatUtil$RemoteJob.run()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `command.name()` could be null and is dereferenced at line 104.","tnFile":"core/src/main/java/com/taobao/arthas/core/command/basic1000/HelpCommand.java","tnLine":104,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"Command HelpCommand.findCommand(ArrayList)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.net.Socket` acquired to `s` by call to `new()` at line 124 is not released after line 131.","tnFile":"core/src/main/java/com/taobao/arthas/core/util/NetUtils.java","tnLine":131,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"NetUtils$Response NetUtils.requestViaSocket(String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.net.Socket` acquired to `s` by call to `new()` at line 124 is not released after line 145.\n**Note**: potential exception at line 129","tnFile":"core/src/main/java/com/taobao/arthas/core/util/NetUtils.java","tnLine":145,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"NetUtils$Response NetUtils.requestViaSocket(String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `ThreadUtil$2.val$cpus.get(o1)` could be null and is dereferenced at line 132.","tnFile":"core/src/main/java/com/taobao/arthas/core/util/ThreadUtil.java","tnLine":132,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"int ThreadUtil$2.compare(Thread,Thread)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `ThreadUtil$2.val$cpus.get(o2)` could be null and is dereferenced at line 133.","tnFile":"core/src/main/java/com/taobao/arthas/core/util/ThreadUtil.java","tnLine":133,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"int ThreadUtil$2.compare(Thread,Thread)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired to `in` by call to `new()` at line 151 is not released after line 185.\n**Note**: potential exception at line 162","tnFile":"boot/src/main/java/com/taobao/arthas/boot/DownloadUtils.java","tnLine":185,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void DownloadUtils.saveUrl(String,String,boolean)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired to `fout` by call to `FileOutputStream(...)` at line 162 is not released after line 186.\n**Note**: potential exception at line 168","tnFile":"boot/src/main/java/com/taobao/arthas/boot/DownloadUtils.java","tnLine":186,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void DownloadUtils.saveUrl(String,String,boolean)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `new()` at line 153 is not released after line 160.","tnFile":"core/src/main/java/com/taobao/arthas/core/util/FileUtils.java","tnLine":160,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"String FileUtils.readFileToString(File,Charset)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `new()` at line 153 is not released after line 162.\n**Note**: potential exception at line 157","tnFile":"core/src/main/java/com/taobao/arthas/core/util/FileUtils.java","tnLine":162,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"String FileUtils.readFileToString(File,Charset)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired by call to `RedirectHandler(...)` at line 181 is not released after line 193.","tnFile":"core/src/main/java/com/taobao/arthas/core/shell/system/impl/JobControllerImpl.java","tnLine":193,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"Process JobControllerImpl.createCommandProcess(Command,ListIterator,int,Term)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `telnet._output_` last assigned on line 233 could be null and is dereferenced by call to `addOptionHandler(...)` at line 239.","tnFile":"client/src/main/java/com/taobao/arthas/client/TelnetConsole.java","tnLine":239,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void TelnetConsole.main(java.lang.String[])","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getLast(tokens)` could be null and is dereferenced at line 252.","tnFile":"core/src/main/java/com/taobao/arthas/core/command/monitor200/MBeanCommand.java","tnLine":252,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"boolean MBeanCommand.completeBeanName(Completion)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getLast(tokens)` could be null and is dereferenced at line 295.","tnFile":"core/src/main/java/com/taobao/arthas/core/command/monitor200/MBeanCommand.java","tnLine":295,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"boolean MBeanCommand.completeAttributeName(Completion)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.util.Scanner` acquired to `scanner` by call to `new()` at line 312 is not released after line 318.","tnFile":"core/src/main/java/com/taobao/arthas/core/view/TableView.java","tnLine":318,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"int TableView$ColumnDefine.getWidth()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Telnet._connectAction_()` writes to field `this.org.apache.commons.net.telnet.Telnet._doResponse.[_]` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/commons/net/telnet/Telnet.java","tnLine":833,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void Telnet._connectAction_()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Telnet._connectAction_()` writes to field `this.org.apache.commons.net.telnet.Telnet._options.[_]` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/commons/net/telnet/Telnet.java","tnLine":835,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void Telnet._connectAction_()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Telnet._processDo(int)` indirectly writes to field `this.org.apache.commons.net.telnet.Telnet._options.[_]` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/commons/net/telnet/Telnet.java","tnLine":503,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void Telnet._processDo(int)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Telnet._processDo(int)` indirectly reads without synchronization from `this.org.apache.commons.net.telnet.Telnet._options.[_]`. Potentially races with write in method `Telnet._requestWont(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/commons/net/telnet/Telnet.java","tnLine":457,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void Telnet._processDo(int)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Telnet._processDont(int)` indirectly reads without synchronization from `this.org.apache.commons.net.telnet.Telnet._options.[_]`. Potentially races with write in method `Telnet._requestWont(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/commons/net/telnet/Telnet.java","tnLine":528,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void Telnet._processDont(int)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Telnet._processDont(int)` indirectly writes to field `this.org.apache.commons.net.telnet.Telnet._options.[_]` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/commons/net/telnet/Telnet.java","tnLine":555,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void Telnet._processDont(int)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Telnet._processWill(int)` writes to field `this.org.apache.commons.net.telnet.Telnet._doResponse.[_]` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/commons/net/telnet/Telnet.java","tnLine":617,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void Telnet._processWill(int)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Telnet._processWill(int)` indirectly reads without synchronization from `this.org.apache.commons.net.telnet.Telnet._options.[_]`. Potentially races with write in method `Telnet._requestWont(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/commons/net/telnet/Telnet.java","tnLine":592,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void Telnet._processWill(int)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Telnet._processWill(int)` reads without synchronization from `this.org.apache.commons.net.telnet.Telnet._doResponse.[_]`. Potentially races with write in method `Telnet._requestWont(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/commons/net/telnet/Telnet.java","tnLine":598,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void Telnet._processWill(int)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Telnet._processWill(int)` indirectly writes to field `this.org.apache.commons.net.telnet.Telnet._options.[_]` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/commons/net/telnet/Telnet.java","tnLine":612,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void Telnet._processWill(int)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Telnet._processWont(int)` writes to field `this.org.apache.commons.net.telnet.Telnet._doResponse.[_]` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/commons/net/telnet/Telnet.java","tnLine":651,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void Telnet._processWont(int)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Telnet._processWont(int)` indirectly reads without synchronization from `this.org.apache.commons.net.telnet.Telnet._options.[_]`. Potentially races with write in method `Telnet._requestWont(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/commons/net/telnet/Telnet.java","tnLine":649,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void Telnet._processWont(int)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Telnet._processWont(int)` indirectly writes to field `this.org.apache.commons.net.telnet.Telnet._options.[_]` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/commons/net/telnet/Telnet.java","tnLine":672,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void Telnet._processWont(int)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Telnet._processWont(int)` reads without synchronization from `this.org.apache.commons.net.telnet.Telnet._doResponse.[_]`. Potentially races with write in method `Telnet._requestWont(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/commons/net/telnet/Telnet.java","tnLine":655,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void Telnet._processWont(int)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean Telnet._requestedDo(int)` reads without synchronization from `this.org.apache.commons.net.telnet.Telnet._options.[_]`. Potentially races with write in method `Telnet._requestWont(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/commons/net/telnet/Telnet.java","tnLine":243,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"boolean Telnet._requestedDo(int)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean Telnet._requestedDont(int)` indirectly reads without synchronization from `this.org.apache.commons.net.telnet.Telnet._options.[_]`. Potentially races with write in method `Telnet._requestWont(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/commons/net/telnet/Telnet.java","tnLine":255,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"boolean Telnet._requestedDont(int)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean Telnet._requestedWill(int)` reads without synchronization from `this.org.apache.commons.net.telnet.Telnet._options.[_]`. Potentially races with write in method `Telnet._requestWont(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/commons/net/telnet/Telnet.java","tnLine":219,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"boolean Telnet._requestedWill(int)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean Telnet._requestedWont(int)` indirectly reads without synchronization from `this.org.apache.commons.net.telnet.Telnet._options.[_]`. Potentially races with write in method `Telnet._requestWont(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/commons/net/telnet/Telnet.java","tnLine":231,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"boolean Telnet._requestedWont(int)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Telnet._setDo(int)` writes to field `this.org.apache.commons.net.telnet.Telnet._options.[_]` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/commons/net/telnet/Telnet.java","tnLine":295,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void Telnet._setDo(int)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Telnet._setDo(int)` indirectly reads without synchronization from `this.org.apache.commons.net.telnet.Telnet._options.[_]`. Potentially races with write in method `Telnet._requestWont(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/commons/net/telnet/Telnet.java","tnLine":298,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void Telnet._setDo(int)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Telnet._setDont(int)` writes to field `this.org.apache.commons.net.telnet.Telnet._options.[_]` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/commons/net/telnet/Telnet.java","tnLine":360,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void Telnet._setDont(int)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Telnet._setWantDo(int)` writes to field `this.org.apache.commons.net.telnet.Telnet._options.[_]` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/commons/net/telnet/Telnet.java","tnLine":333,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void Telnet._setWantDo(int)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Telnet._setWantDont(int)` writes to field `this.org.apache.commons.net.telnet.Telnet._options.[_]` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/commons/net/telnet/Telnet.java","tnLine":387,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void Telnet._setWantDont(int)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Telnet._setWantWill(int)` writes to field `this.org.apache.commons.net.telnet.Telnet._options.[_]` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/commons/net/telnet/Telnet.java","tnLine":323,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void Telnet._setWantWill(int)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Telnet._setWantWont(int)` writes to field `this.org.apache.commons.net.telnet.Telnet._options.[_]` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/commons/net/telnet/Telnet.java","tnLine":377,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void Telnet._setWantWont(int)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Telnet._setWill(int)` indirectly reads without synchronization from `this.org.apache.commons.net.telnet.Telnet._options.[_]`. Potentially races with write in method `Telnet._requestWont(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/commons/net/telnet/Telnet.java","tnLine":269,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void Telnet._setWill(int)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Telnet._setWill(int)` writes to field `this.org.apache.commons.net.telnet.Telnet._options.[_]` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/commons/net/telnet/Telnet.java","tnLine":266,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void Telnet._setWill(int)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Telnet._setWont(int)` writes to field `this.org.apache.commons.net.telnet.Telnet._options.[_]` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/commons/net/telnet/Telnet.java","tnLine":343,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void Telnet._setWont(int)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Telnet._spyWrite(int)` indirectly reads without synchronization from `this.org.apache.commons.net.telnet.Telnet._options.[_]`. Potentially races with write in method `Telnet._requestWont(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/commons/net/telnet/Telnet.java","tnLine":1226,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void Telnet._spyWrite(int)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean Telnet._stateIsDo(int)` reads without synchronization from `this.org.apache.commons.net.telnet.Telnet._options.[_]`. Potentially races with write in method `Telnet._requestWont(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/commons/net/telnet/Telnet.java","tnLine":195,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"boolean Telnet._stateIsDo(int)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean Telnet._stateIsDont(int)` indirectly reads without synchronization from `this.org.apache.commons.net.telnet.Telnet._options.[_]`. Potentially races with write in method `Telnet._requestWont(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/commons/net/telnet/Telnet.java","tnLine":207,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"boolean Telnet._stateIsDont(int)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean Telnet._stateIsWill(int)` reads without synchronization from `this.org.apache.commons.net.telnet.Telnet._options.[_]`. Potentially races with write in method `Telnet._requestWont(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/commons/net/telnet/Telnet.java","tnLine":171,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"boolean Telnet._stateIsWill(int)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean Telnet._stateIsWont(int)` indirectly reads without synchronization from `this.org.apache.commons.net.telnet.Telnet._options.[_]`. Potentially races with write in method `Telnet._requestWont(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/commons/net/telnet/Telnet.java","tnLine":183,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"boolean Telnet._stateIsWont(int)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void JobControllerImpl.close()` indirectly writes to field `job.com.taobao.arthas.core.shell.system.impl.JobImpl.terminateFuture.com.taobao.arthas.core.shell.future.Future.handler` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"core/src/main/java/com/taobao/arthas/core/shell/system/impl/JobControllerImpl.java","tnLine":226,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void JobControllerImpl.close()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ShellServerImpl.close(Handler)` indirectly writes to field `job.com.taobao.arthas.core.shell.system.impl.JobImpl.terminateFuture.com.taobao.arthas.core.shell.future.Future.handler` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"core/src/main/java/com/taobao/arthas/core/shell/impl/ShellServerImpl.java","tnLine":227,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ShellServerImpl.close(Handler)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ShellServerImpl.close(Handler)` indirectly writes to field `this.com.taobao.arthas.core.shell.impl.ShellServerImpl.sessionsClosed.com.taobao.arthas.core.shell.future.Future.handler` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"core/src/main/java/com/taobao/arthas/core/shell/impl/ShellServerImpl.java","tnLine":234,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ShellServerImpl.close(Handler)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ShellServerImpl.close(Handler)` indirectly reads with synchronization from `this.com.taobao.arthas.core.shell.impl.ShellServerImpl.sessionsClosed.com.taobao.arthas.core.shell.future.Future.handler`. Potentially races with unsynchronized write in method `ShellServerImpl.close(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"core/src/main/java/com/taobao/arthas/core/shell/impl/ShellServerImpl.java","tnLine":216,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ShellServerImpl.close(Handler)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ShellServerImpl.close(Handler)` indirectly reads without synchronization from `job.com.taobao.arthas.core.shell.system.impl.JobImpl.terminateFuture.com.taobao.arthas.core.shell.future.Future.handler`. Potentially races with write in method `ShellServerImpl.close(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"core/src/main/java/com/taobao/arthas/core/shell/impl/ShellServerImpl.java","tnLine":233,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ShellServerImpl.close(Handler)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void JobControllerImpl.close(Handler)` indirectly writes to field `job.com.taobao.arthas.core.shell.system.impl.JobImpl.terminateFuture.com.taobao.arthas.core.shell.future.Future.handler` outside of synchronization.\n Reporting because this access may occur on a background thread. [wob].","tnFile":"core/src/main/java/com/taobao/arthas/core/shell/system/impl/JobControllerImpl.java","tnLine":102,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void JobControllerImpl.close(Handler)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Integer ProcessImpl.exitCode()` reads without synchronization from `this.com.taobao.arthas.core.shell.system.impl.ProcessImpl.exitCode`. Potentially races with write in method `ProcessImpl.suspend(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"core/src/main/java/com/taobao/arthas/core/shell/system/impl/ProcessImpl.java","tnLine":72,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"Integer ProcessImpl.exitCode()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `ArthasBootstrap ArthasBootstrap.getInstance()` reads without synchronization from `server.ArthasBootstrap.com.taobao.arthas.core.server.ArthasBootstrap.arthasBootstrap`. Potentially races with write in method `ArthasBootstrap.getInstance(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"core/src/main/java/com/taobao/arthas/core/server/ArthasBootstrap.java","tnLine":168,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"ArthasBootstrap ArthasBootstrap.getInstance()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean ProcessImpl.interrupt()` indirectly reads without synchronization from `this.com.taobao.arthas.core.shell.system.impl.ProcessImpl.processStatus`. Potentially races with write in method `ProcessImpl.suspend(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"core/src/main/java/com/taobao/arthas/core/shell/system/impl/ProcessImpl.java","tnLine":132,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"boolean ProcessImpl.interrupt()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean ProcessImpl.interrupt(Handler)` reads without synchronization from `this.com.taobao.arthas.core.shell.system.impl.ProcessImpl.processStatus`. Potentially races with write in method `ProcessImpl.suspend(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"core/src/main/java/com/taobao/arthas/core/shell/system/impl/ProcessImpl.java","tnLine":150,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"boolean ProcessImpl.interrupt(Handler)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void MBeanCommand.process(CommandProcess)` indirectly writes to field `this.com.taobao.arthas.core.command.monitor200.MBeanCommand.timer` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"core/src/main/java/com/taobao/arthas/core/command/monitor200/MBeanCommand.java","tnLine":149,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void MBeanCommand.process(CommandProcess)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int TelnetInputStream.read()` indirectly reads with synchronization from `this.org.apache.commons.net.telnet.TelnetInputStream.__receiveState`. Potentially races with unsynchronized write in method `TelnetInputStream.run()`.\n Reporting because this access may occur on a background thread.","tnFile":"client/src/main/java/org/apache/commons/net/telnet/TelnetInputStream.java","tnLine":402,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"int TelnetInputStream.read()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int TelnetInputStream.read(byte[])` indirectly reads with synchronization from `this.org.apache.commons.net.telnet.TelnetInputStream.__receiveState`. Potentially races with unsynchronized write in method `TelnetInputStream.run()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/commons/net/telnet/TelnetInputStream.java","tnLine":491,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"int TelnetInputStream.read(byte[])","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int TelnetInputStream.read(byte[],int,int)` indirectly reads with synchronization from `this.org.apache.commons.net.telnet.TelnetInputStream.__suboption.[_]`. Potentially races with unsynchronized write in method `TelnetInputStream.run()`.\n Reporting because this access may occur on a background thread.","tnFile":"client/src/main/java/org/apache/commons/net/telnet/TelnetInputStream.java","tnLine":526,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"int TelnetInputStream.read(byte[],int,int)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int TelnetInputStream.read(byte[],int,int)` indirectly reads with synchronization from `this.org.apache.commons.net.telnet.TelnetInputStream.__receiveState`. Potentially races with unsynchronized write in method `TelnetInputStream.run()`.\n Reporting because this access may occur on a background thread.","tnFile":"client/src/main/java/org/apache/commons/net/telnet/TelnetInputStream.java","tnLine":536,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"int TelnetInputStream.read(byte[],int,int)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ShellServerImpl.removeSession(ShellImpl)` indirectly reads without synchronization from `this.com.taobao.arthas.core.shell.impl.ShellServerImpl.sessionsClosed.com.taobao.arthas.core.shell.future.Future.handler`. Potentially races with write in method `ShellServerImpl.close(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"core/src/main/java/com/taobao/arthas/core/shell/impl/ShellServerImpl.java","tnLine":183,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ShellServerImpl.removeSession(ShellImpl)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void TelnetInputStream.run()` indirectly writes to field `this.org.apache.commons.net.telnet.TelnetInputStream.__receiveState` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"client/src/main/java/org/apache/commons/net/telnet/TelnetInputStream.java","tnLine":603,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void TelnetInputStream.run()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Date ProcessImpl.startTime()` reads without synchronization from `this.com.taobao.arthas.core.shell.system.impl.ProcessImpl.startTime`. Potentially races with write in method `ProcessImpl.run(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"core/src/main/java/com/taobao/arthas/core/shell/system/impl/ProcessImpl.java","tnLine":113,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"Date ProcessImpl.startTime()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `ExecStatus ProcessImpl.status()` reads without synchronization from `this.com.taobao.arthas.core.shell.system.impl.ProcessImpl.processStatus`. Potentially races with write in method `ProcessImpl.suspend(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"core/src/main/java/com/taobao/arthas/core/shell/system/impl/ProcessImpl.java","tnLine":77,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"ExecStatus ProcessImpl.status()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int ProcessImpl.times()` reads without synchronization from `this.com.taobao.arthas.core.shell.system.impl.ProcessImpl.process`. Potentially races with write in method `ProcessImpl.run(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"core/src/main/java/com/taobao/arthas/core/shell/system/impl/ProcessImpl.java","tnLine":109,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"int ProcessImpl.times()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ProcessImpl.toBackground()` indirectly writes to field `this.com.taobao.arthas.core.shell.system.impl.ProcessImpl.exitCode` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"core/src/main/java/com/taobao/arthas/core/shell/system/impl/ProcessImpl.java","tnLine":200,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ProcessImpl.toBackground()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ProcessImpl.toBackground(Handler)` reads without synchronization from `this.com.taobao.arthas.core.shell.system.impl.ProcessImpl.processForeground`. Potentially races with write in method `ProcessImpl.suspend(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"core/src/main/java/com/taobao/arthas/core/shell/system/impl/ProcessImpl.java","tnLine":206,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ProcessImpl.toBackground(Handler)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ProcessImpl.toBackground(Handler)` reads without synchronization from `this.com.taobao.arthas.core.shell.system.impl.ProcessImpl.processStatus`. Potentially races with write in method `ProcessImpl.suspend(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"core/src/main/java/com/taobao/arthas/core/shell/system/impl/ProcessImpl.java","tnLine":210,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ProcessImpl.toBackground(Handler)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ProcessImpl.toBackground(Handler)` indirectly writes to field `this.com.taobao.arthas.core.shell.system.impl.ProcessImpl.exitCode` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"core/src/main/java/com/taobao/arthas/core/shell/system/impl/ProcessImpl.java","tnLine":207,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ProcessImpl.toBackground(Handler)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ProcessImpl.toForeground()` indirectly writes to field `this.com.taobao.arthas.core.shell.system.impl.ProcessImpl.exitCode` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"core/src/main/java/com/taobao/arthas/core/shell/system/impl/ProcessImpl.java","tnLine":216,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ProcessImpl.toForeground()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ProcessImpl.toForeground(Handler)` indirectly writes to field `this.com.taobao.arthas.core.shell.system.impl.ProcessImpl.exitCode` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"core/src/main/java/com/taobao/arthas/core/shell/system/impl/ProcessImpl.java","tnLine":223,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ProcessImpl.toForeground(Handler)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ProcessImpl.toForeground(Handler)` reads without synchronization from `this.com.taobao.arthas.core.shell.system.impl.ProcessImpl.processForeground`. Potentially races with write in method `ProcessImpl.suspend(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"core/src/main/java/com/taobao/arthas/core/shell/system/impl/ProcessImpl.java","tnLine":222,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ProcessImpl.toForeground(Handler)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ProcessImpl.toForeground(Handler)` reads without synchronization from `this.com.taobao.arthas.core.shell.system.impl.ProcessImpl.processStatus`. Potentially races with write in method `ProcessImpl.suspend(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"core/src/main/java/com/taobao/arthas/core/shell/system/impl/ProcessImpl.java","tnLine":226,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ProcessImpl.toForeground(Handler)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}}],null]}],[{"tag":"ErrorProne"},{"tag":"ToolFailure","contents":{"tag":"ToolSurfacableFailure","contents":"BuildError {renderError = \"Execution Failed: \\\"---STDOUT---\\\\n---ERR---\\\\n\\\\nFAILURE: Build failed with an exception.\\\\n\\\\n* What went wrong:\\\\nA problem occurred configuring root project 'arthas-all'.\\\\n> Could not open proj remapped class cache for 5c5f31636qmrow179r75m1nya (/root/.gradle/caches/5.2/scripts-remapped/build_4aogcibojsqzkmelvwt1vo5wh/5c5f31636qmrow179r75m1nya/projeadbf4c451bc4876d277fc099d472843).\\\\n   > Could not open proj generic class cache for build file '/tmp/analyzing-dd8930b5294cf27b/build.gradle' (/root/.gradle/caches/5.2/scripts/5c5f31636qmrow179r75m1nya/proj/projeadbf4c451bc4876d277fc099d472843).\\\\n      > Metaspace\\\\n\\\\n* Try:\\\\nRun with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights.\\\\n\\\\n* Get more help at https://help.gradle.org\\\\n\\\\nBUILD FAILED in 17s\\\\n---CMD---\\\\nCreateProcess {cmdspec = RawCommand \\\\\\\"gradle\\\\\\\" [\\\\\\\"init\\\\\\\"], cwd = Just \\\\\\\"/tmp/analyzing-dd8930b5294cf27b\\\\\\\", env = Nothing, std_in = Inherit, std_out = Inherit, std_err = Inherit, close_fds = False, create_group = False, delegate_ctlc = False, detach_console = False, create_new_console = False, new_session = False, child_group = Nothing, child_user = Nothing, use_process_jobs = False}\\\"\"}"}}]]}
