{"tag":"AnalysisSuccess","contents":{"requestedTools":null,"toolResults":[[{"tag":"Infer"},{"tag":"ToolSuccess","contents":[[{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ConcurrentReferenceHashMap$Segment.restructureIfNecessary(boolean)` reads without synchronization from `this.resizeThreshold`. Potentially races with write in method `ConcurrentReferenceHashMap$Segment.clear()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-core/src/main/java/org/springframework/util/ConcurrentReferenceHashMap.java","tnLine":573,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.util.ConcurrentReferenceHashMap$Segment.restructureIfNecessary(boolean):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ScheduledAnnotationBeanPostProcessor.afterSingletonsInstantiated()` indirectly writes to field `this.registrar.cronTasks` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/scheduling/annotation/ScheduledAnnotationBeanPostProcessor.java","tnLine":223,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor.afterSingletonsInstantiated():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void SpelExpression.revertToInterpreted()` writes to field `this.compiledAst` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-expression/src/main/java/org/springframework/expression/spel/standard/SpelExpression.java","tnLine":528,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.expression.spel.standard.SpelExpression.revertToInterpreted():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `toString()` could be null and is dereferenced at line 50.","tnFile":"spring-core/src/main/java/org/springframework/core/log/LogMessage.java","tnLine":50,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.core.log.LogMessage.length():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Collection AbstractApplicationEventMulticaster.getApplicationListeners(ApplicationEvent,ResolvableType)` reads without synchronization from `this.beanClassLoader`. Potentially races with write in method `AbstractApplicationEventMulticaster.setBeanClassLoader(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-context/src/main/java/org/springframework/context/event/AbstractApplicationEventMulticaster.java","tnLine":185,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.event.AbstractApplicationEventMulticaster.getApplicationListeners(org.springframework.context.ApplicationEvent,org.springframework.core.ResolvableType):java.util.Collection","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `toString()` could be null and is dereferenced at line 60.","tnFile":"spring-core/src/main/java/org/springframework/core/log/LogMessage.java","tnLine":60,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.core.log.LogMessage.subSequence(int,int):java.lang.CharSequence","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `java.lang.Object[] AbstractAspectJAdvice.argBinding(JoinPoint,JoinPointMatch,Object,Throwable)` reads without synchronization from `this.joinPointStaticPartArgumentIndex`. Potentially races with write in method `AbstractAspectJAdvice.calculateArgumentBindings()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-aop/src/main/java/org/springframework/aop/aspectj/AbstractAspectJAdvice.java","tnLine":574,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.aop.aspectj.AbstractAspectJAdvice.argBinding(org.aspectj.lang.JoinPoint,org.aspectj.weaver.tools.JoinPointMatch,java.lang.Object,java.lang.Throwable):java.lang.Object[]","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `CacheAspectSupport$CacheOperationContext.conditionPassing` last assigned on line 750 could be null and is dereferenced at line 753.","tnFile":"spring-context/src/main/java/org/springframework/cache/interceptor/CacheAspectSupport.java","tnLine":753,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.cache.interceptor.CacheAspectSupport$CacheOperationContext.isConditionPassing(java.lang.Object):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void CachingMetadataReaderFactory.clearCache()` indirectly writes to field `this.metadataReaderCache` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"spring-core/src/main/java/org/springframework/core/type/classreading/CachingMetadataReaderFactory.java","tnLine":154,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.core.type.classreading.CachingMetadataReaderFactory.clearCache():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `managedResource.getClass()` could be null and is dereferenced at line 487.","tnFile":"spring-context/src/main/java/org/springframework/jmx/export/MBeanExporter.java","tnLine":487,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.jmx.export.MBeanExporter.registerManagedResource(org.springframework.jmx.export.notification.NotificationPublisherAware,javax.management.ObjectName):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `String AbstractMessageSource.getMessageInternal(String,java.lang.Object[],Locale)` indirectly reads without synchronization from `this.parentMessageSource`. Potentially races with write in method `AbstractMessageSource.setParentMessageSource(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-context/src/main/java/org/springframework/context/support/AbstractMessageSource.java","tnLine":242,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.support.AbstractMessageSource.getMessageInternal(java.lang.String,java.lang.Object[],java.util.Locale):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void AbstractApplicationContext.stop()` indirectly reads without synchronization from `this.applicationEventMulticaster`. Potentially races with write in method `AbstractApplicationContext.refresh()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java","tnLine":1354,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.support.AbstractApplicationContext.stop():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `ConnectorServerFactoryBean.connectorServer` last assigned on line 158 could be null and is dereferenced at line 162.","tnFile":"spring-context/src/main/java/org/springframework/jmx/support/ConnectorServerFactoryBean.java","tnLine":162,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.jmx.support.ConnectorServerFactoryBean.afterPropertiesSet():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void JndiRmiClientInterceptor.prepare()` writes to field `this.cachedStub` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/remoting/rmi/JndiRmiClientInterceptor.java","tnLine":207,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.remoting.rmi.JndiRmiClientInterceptor.prepare():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void AbstractApplicationContext.prepareRefresh()` writes to field `this.earlyApplicationListeners` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java","tnLine":607,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.support.AbstractApplicationContext.prepareRefresh():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `toString()` could be null and is dereferenced at line 55.","tnFile":"spring-core/src/main/java/org/springframework/core/log/LogMessage.java","tnLine":55,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.core.log.LogMessage.charAt(int):char","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `ConnectorServerFactoryBean.connectorServer` last assigned on line 158 could be null and is dereferenced at line 192.","tnFile":"spring-context/src/main/java/org/springframework/jmx/support/ConnectorServerFactoryBean.java","tnLine":192,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.jmx.support.ConnectorServerFactoryBean.afterPropertiesSet():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void AbstractApplicationContext.registerListeners()` indirectly reads without synchronization from `this.applicationEventMulticaster`. Potentially races with write in method `AbstractApplicationContext.refresh()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java","tnLine":825,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.support.AbstractApplicationContext.registerListeners():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Class AbstractAspectJAdvice.getDiscoveredThrowingType()` reads without synchronization from `this.discoveredThrowingType`. Potentially races with write in method `AbstractAspectJAdvice.calculateArgumentBindings()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-aop/src/main/java/org/springframework/aop/aspectj/AbstractAspectJAdvice.java","tnLine":350,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.aop.aspectj.AbstractAspectJAdvice.getDiscoveredThrowingType():java.lang.Class","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object AbstractSlsbInvokerInterceptor.getHome()` reads without synchronization from `this.cachedHome`. Potentially races with write in method `AbstractSlsbInvokerInterceptor.create()`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-context/src/main/java/org/springframework/ejb/access/AbstractSlsbInvokerInterceptor.java","tnLine":163,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.ejb.access.AbstractSlsbInvokerInterceptor.getHome():java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `ConnectorDelegate.connector` last assigned on line 62 could be null and is dereferenced at line 63.","tnFile":"spring-context/src/main/java/org/springframework/jmx/access/ConnectorDelegate.java","tnLine":63,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.jmx.access.ConnectorDelegate.connect(javax.management.remote.JMXServiceURL,java.util.Map,java.lang.String):javax.management.MBeanServerConnection","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void RmiRegistryFactoryBean.destroy()` reads without synchronization from `this.created`. Potentially races with write in method `RmiRegistryFactoryBean.getRegistry(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/remoting/rmi/RmiRegistryFactoryBean.java","tnLine":309,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.remoting.rmi.RmiRegistryFactoryBean.destroy():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void MBeanRegistrationSupport.unregisterBeans()` indirectly reads without synchronization from `this.server`. Potentially races with write in method `MBeanRegistrationSupport.setServer(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-context/src/main/java/org/springframework/jmx/support/MBeanRegistrationSupport.java","tnLine":187,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.jmx.support.MBeanRegistrationSupport.unregisterBeans():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ProxyCreatorSupport.adviceChanged()` indirectly mutates container `this.methodCache` via call to `clear` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"spring-aop/src/main/java/org/springframework/aop/framework/ProxyCreatorSupport.java","tnLine":125,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.aop.framework.ProxyCreatorSupport.adviceChanged():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Registry RmiServiceExporter.getRegistry(int,RMIClientSocketFactory,RMIServerSocketFactory)` indirectly reads without synchronization from `this.alwaysCreateRegistry`. Potentially races with write in method `RmiServiceExporter.setAlwaysCreateRegistry(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-context/src/main/java/org/springframework/remoting/rmi/RmiServiceExporter.java","tnLine":378,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.remoting.rmi.RmiServiceExporter.getRegistry(int,java.rmi.server.RMIClientSocketFactory,java.rmi.server.RMIServerSocketFactory):java.rmi.registry.Registry","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `String MessageSourceSupport.formatMessage(String,java.lang.Object[],Locale)` indirectly reads without synchronization from `this.alwaysUseMessageFormat`. Potentially races with write in method `MessageSourceSupport.setAlwaysUseMessageFormat(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-context/src/main/java/org/springframework/context/support/MessageSourceSupport.java","tnLine":115,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.support.MessageSourceSupport.formatMessage(java.lang.String,java.lang.Object[],java.util.Locale):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void AbstractEnvironment.merge(ConfigurableEnvironment)` indirectly reads without synchronization from container `this.propertySources.propertySourceList` via call to `contains`. Potentially races with write in method `AbstractEnvironment.merge(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-core/src/main/java/org/springframework/core/env/AbstractEnvironment.java","tnLine":458,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.core.env.AbstractEnvironment.merge(org.springframework.core.env.ConfigurableEnvironment):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `ThemeSource ResourceBundleThemeSource.getParentThemeSource()` reads without synchronization from `this.parentThemeSource`. Potentially races with write in method `ResourceBundleThemeSource.setParentThemeSource(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/ui/context/support/ResourceBundleThemeSource.java","tnLine":84,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.ui.context.support.ResourceBundleThemeSource.getParentThemeSource():org.springframework.ui.context.ThemeSource","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `String ResourceScriptSource.getScriptAsString()` reads without synchronization from `this.resource`. Potentially races with write in method `ResourceScriptSource.setEncoding(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-context/src/main/java/org/springframework/scripting/support/ResourceScriptSource.java","tnLine":102,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.scripting.support.ResourceScriptSource.getScriptAsString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void AbstractApplicationContext.finishRefresh()` indirectly mutates container `this.resourceCaches` via call to `clear` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java","tnLine":887,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.support.AbstractApplicationContext.finishRefresh():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.net.HttpURLConnection` acquired by call to `openConnection()` at line 170 is not released after line 173.","tnFile":"spring-core/src/main/java/org/springframework/core/io/UrlResource.java","tnLine":173,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.core.io.UrlResource.getInputStream():java.io.InputStream","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.OutputStreamWriter` acquired by call to `new()` at line 122 is not released after line 125.\n**Note**: potential exception at line 123","tnFile":"spring-core/src/main/java/org/springframework/util/StreamUtils.java","tnLine":125,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.util.StreamUtils.copy(java.lang.String,java.nio.charset.Charset,java.io.OutputStream):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `java.lang.Object[] AbstractAspectJAdvice.argBinding(JoinPoint,JoinPointMatch,Object,Throwable)` reads without synchronization from `this.argumentBindings`. Potentially races with write in method `AbstractAspectJAdvice.calculateArgumentBindings()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-aop/src/main/java/org/springframework/aop/aspectj/AbstractAspectJAdvice.java","tnLine":579,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.aop.aspectj.AbstractAspectJAdvice.argBinding(org.aspectj.lang.JoinPoint,org.aspectj.weaver.tools.JoinPointMatch,java.lang.Object,java.lang.Throwable):java.lang.Object[]","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void AbstractApplicationContext.doClose()` reads without synchronization from `this.lifecycleProcessor`. Potentially races with write in method `AbstractApplicationContext.refresh()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java","tnLine":1016,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.support.AbstractApplicationContext.doClose():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Class ProxyFactoryBean.getObjectType()` indirectly reads without synchronization from `this.proxyClassLoader`. Potentially races with write in method `ProxyFactoryBean.setBeanClassLoader(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-aop/src/main/java/org/springframework/aop/framework/ProxyFactoryBean.java","tnLine":283,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.aop.framework.ProxyFactoryBean.getObjectType():java.lang.Class","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object MBeanClientInterceptor.doInvoke(MethodInvocation)` indirectly reads without synchronization from `this.allowedOperations`. Potentially races with write in method `MBeanClientInterceptor.invoke(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/jmx/access/MBeanClientInterceptor.java","tnLine":425,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.jmx.access.MBeanClientInterceptor.doInvoke(org.aopalliance.intercept.MethodInvocation):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void AbstractApplicationContext.start()` indirectly reads without synchronization from `this.applicationEventMulticaster`. Potentially races with write in method `AbstractApplicationContext.refresh()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java","tnLine":1348,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.support.AbstractApplicationContext.start():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void AbstractApplicationContext.prepareRefresh()` reads without synchronization from `this.earlyApplicationListeners`. Potentially races with write in method `AbstractApplicationContext.refresh()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java","tnLine":606,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.support.AbstractApplicationContext.prepareRefresh():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void AbstractApplicationContext.finishRefresh()` indirectly reads without synchronization from `this.applicationEventMulticaster`. Potentially races with write in method `AbstractApplicationContext.refresh()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java","tnLine":896,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.support.AbstractApplicationContext.finishRefresh():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int ThreadLocalTargetSource.getInvocationCount()` reads without synchronization from `this.invocationCount`. Potentially races with write in method `ThreadLocalTargetSource.getTarget()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-aop/src/main/java/org/springframework/aop/target/ThreadLocalTargetSource.java","tnLine":120,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.aop.target.ThreadLocalTargetSource.getInvocationCount():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int CachingMetadataReaderFactory.getCacheLimit()` reads without synchronization from `this.metadataReaderCache`. Potentially races with write in method `CachingMetadataReaderFactory.clearCache()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-core/src/main/java/org/springframework/core/type/classreading/CachingMetadataReaderFactory.java","tnLine":108,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.core.type.classreading.CachingMetadataReaderFactory.getCacheLimit():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void AbstractApplicationContext.doClose()` reads without synchronization from `this.earlyApplicationListeners`. Potentially races with write in method `AbstractApplicationContext.refresh()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java","tnLine":1035,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.support.AbstractApplicationContext.doClose():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object BshScriptFactory.getScriptedObject(ScriptSource,java.lang.Class[])` reads without synchronization from `this.beanClassLoader`. Potentially races with write in method `BshScriptFactory.setBeanClassLoader(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-context/src/main/java/org/springframework/scripting/bsh/BshScriptFactory.java","tnLine":174,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.scripting.bsh.BshScriptFactory.getScriptedObject(org.springframework.scripting.ScriptSource,java.lang.Class[]):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object JndiObjectTargetSource.getTarget()` reads without synchronization from `this.cachedObject`. Potentially races with write in method `JndiObjectTargetSource.afterPropertiesSet()`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-context/src/main/java/org/springframework/jndi/JndiObjectTargetSource.java","tnLine":135,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.jndi.JndiObjectTargetSource.getTarget():java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void AbstractApplicationContext.resetCommonCaches()` indirectly mutates container `util.ReflectionUtils.declaredFieldsCache` via call to `clear` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java","tnLine":922,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.support.AbstractApplicationContext.resetCommonCaches():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean SimpleAliasRegistry.isAlias(String)` reads without synchronization from container `this.aliasMap` via call to `containsKey`. Potentially races with write in method `SimpleAliasRegistry.removeAlias(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-core/src/main/java/org/springframework/core/SimpleAliasRegistry.java","tnLine":125,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.core.SimpleAliasRegistry.isAlias(java.lang.String):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean AbstractApplicationContext.isRunning()` reads without synchronization from `this.lifecycleProcessor`. Potentially races with write in method `AbstractApplicationContext.refresh()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java","tnLine":1359,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.support.AbstractApplicationContext.isRunning():boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean JndiObjectTargetSource.isStatic()` reads without synchronization from `this.cachedObject`. Potentially races with write in method `JndiObjectTargetSource.getTarget()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/jndi/JndiObjectTargetSource.java","tnLine":127,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.jndi.JndiObjectTargetSource.isStatic():boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Registry RmiRegistryFactoryBean.getRegistry(int,RMIClientSocketFactory,RMIServerSocketFactory)` indirectly reads without synchronization from `this.alwaysCreate`. Potentially races with write in method `RmiRegistryFactoryBean.setAlwaysCreate(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-context/src/main/java/org/springframework/remoting/rmi/RmiRegistryFactoryBean.java","tnLine":238,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.remoting.rmi.RmiRegistryFactoryBean.getRegistry(int,java.rmi.server.RMIClientSocketFactory,java.rmi.server.RMIServerSocketFactory):java.rmi.registry.Registry","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean SimpleAliasRegistry.hasAlias(String,String)` reads without synchronization from container `this.aliasMap` via call to `entrySet`. Potentially races with write in method `SimpleAliasRegistry.removeAlias(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-core/src/main/java/org/springframework/core/SimpleAliasRegistry.java","tnLine":101,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.core.SimpleAliasRegistry.hasAlias(java.lang.String,java.lang.String):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `ReloadableResourceBundleMessageSource$PropertiesHolder ReloadableResourceBundleMessageSource.getProperties(String)` reads without synchronization from `this.concurrentRefresh`. Potentially races with write in method `ReloadableResourceBundleMessageSource.setConcurrentRefresh(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-context/src/main/java/org/springframework/context/support/ReloadableResourceBundleMessageSource.java","tnLine":369,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.support.ReloadableResourceBundleMessageSource.getProperties(java.lang.String):org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Advice AbstractBeanFactoryPointcutAdvisor.getAdvice()` reads without synchronization from `this.beanFactory`. Potentially races with write in method `AbstractBeanFactoryPointcutAdvisor.setBeanFactory(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-aop/src/main/java/org/springframework/aop/support/AbstractBeanFactoryPointcutAdvisor.java","tnLine":112,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor.getAdvice():org.aopalliance.aop.Advice","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object AbstractAspectJAdvice.invokeAdviceMethod(JoinPoint,JoinPointMatch,Object,Throwable)` indirectly reads without synchronization from `this.argumentBindings`. Potentially races with write in method `AbstractAspectJAdvice.calculateArgumentBindings()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-aop/src/main/java/org/springframework/aop/aspectj/AbstractAspectJAdvice.java","tnLine":633,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(org.aspectj.lang.JoinPoint,org.aspectj.weaver.tools.JoinPointMatch,java.lang.Object,java.lang.Throwable):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `ConfigurableEnvironment AbstractApplicationContext.getEnvironment()` writes to field `this.environment` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java","tnLine":317,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.support.AbstractApplicationContext.getEnvironment():org.springframework.core.env.ConfigurableEnvironment","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `AbstractRefreshableTargetSource.targetObject` last assigned on line 71 could be null and is dereferenced at line 73.","tnFile":"spring-aop/src/main/java/org/springframework/aop/target/dynamic/AbstractRefreshableTargetSource.java","tnLine":73,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource.getTargetClass():java.lang.Class","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object MBeanClientInterceptor.doInvoke(MethodInvocation)` indirectly reads without synchronization from `segment.resizeThreshold`. Potentially races with write in method `MBeanClientInterceptor.invoke(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/jmx/access/MBeanClientInterceptor.java","tnLine":428,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.jmx.access.MBeanClientInterceptor.doInvoke(org.aopalliance.intercept.MethodInvocation):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `String AbstractApplicationContext.toString()` indirectly reads without synchronization from `this.startupDate`. Potentially races with write in method `AbstractApplicationContext.refresh()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java","tnLine":1409,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.support.AbstractApplicationContext.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object AbstractSlsbInvokerInterceptor.create()` indirectly reads without synchronization from `this.cachedHome`. Potentially races with write in method `AbstractSlsbInvokerInterceptor.refreshHome()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/ejb/access/AbstractSlsbInvokerInterceptor.java","tnLine":221,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.ejb.access.AbstractSlsbInvokerInterceptor.create():java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.springframework.core.ConfigurableObjectInputStream` acquired by call to `ConfigurableObjectInputStream(...)` at line 70 is not released after line 72.","tnFile":"spring-core/src/main/java/org/springframework/core/serializer/DefaultDeserializer.java","tnLine":72,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.core.serializer.DefaultDeserializer.deserialize(java.io.InputStream):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `ConfigurableEnvironment AbstractApplicationContext.getEnvironment()` reads without synchronization from `this.environment`. Potentially races with write in method `AbstractApplicationContext.refresh()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java","tnLine":316,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.support.AbstractApplicationContext.getEnvironment():org.springframework.core.env.ConfigurableEnvironment","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `NotificationListenerRegistrar.server` last assigned on line 139 could be null and is dereferenced at line 148.","tnFile":"spring-context/src/main/java/org/springframework/jmx/access/NotificationListenerRegistrar.java","tnLine":148,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.jmx.access.NotificationListenerRegistrar.prepare():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Registry RmiRegistryFactoryBean.getRegistry(int)` writes to field `this.created` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"spring-context/src/main/java/org/springframework/remoting/rmi/RmiRegistryFactoryBean.java","tnLine":251,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.remoting.rmi.RmiRegistryFactoryBean.getRegistry(int):java.rmi.registry.Registry","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void GroovyScriptFactory.setBeanClassLoader(ClassLoader)` writes to field `this.groovyClassLoader` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/scripting/groovy/GroovyScriptFactory.java","tnLine":161,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.scripting.groovy.GroovyScriptFactory.setBeanClassLoader(java.lang.ClassLoader):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object AbstractAspectJAdvice.invokeAdviceMethod(JoinPointMatch,Object,Throwable)` indirectly reads without synchronization from `this.argumentBindings`. Potentially races with write in method `AbstractAspectJAdvice.calculateArgumentBindings()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-aop/src/main/java/org/springframework/aop/aspectj/AbstractAspectJAdvice.java","tnLine":626,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(org.aspectj.weaver.tools.JoinPointMatch,java.lang.Object,java.lang.Throwable):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void AbstractApplicationEventMulticaster.addApplicationListenerBean(String)` reads without synchronization from `this.retrievalMutex`. Potentially races with write in method `AbstractApplicationEventMulticaster.setBeanFactory(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-context/src/main/java/org/springframework/context/event/AbstractApplicationEventMulticaster.java","tnLine":120,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.event.AbstractApplicationEventMulticaster.addApplicationListenerBean(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `parameter.getParameterType()` could be null and is dereferenced at line 107.","tnFile":"spring-core/src/main/java/org/springframework/core/Conventions.java","tnLine":107,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.core.Conventions.getVariableNameForParameter(org.springframework.core.MethodParameter):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void AbstractApplicationContext.publishEvent(Object,ResolvableType)` reads without synchronization from `this.earlyApplicationEvents`. Potentially races with write in method `AbstractApplicationContext.refresh()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java","tnLine":398,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.support.AbstractApplicationContext.publishEvent(java.lang.Object,org.springframework.core.ResolvableType):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void AbstractApplicationContext.publishEvent(Object,ResolvableType)` indirectly reads without synchronization from `this.applicationEventMulticaster`. Potentially races with write in method `AbstractApplicationContext.refresh()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java","tnLine":402,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.support.AbstractApplicationContext.publishEvent(java.lang.Object,org.springframework.core.ResolvableType):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void AbstractApplicationEventMulticaster.removeAllListeners()` reads without synchronization from `this.retrievalMutex`. Potentially races with write in method `AbstractApplicationEventMulticaster.setBeanFactory(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-context/src/main/java/org/springframework/context/event/AbstractApplicationEventMulticaster.java","tnLine":144,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.event.AbstractApplicationEventMulticaster.removeAllListeners():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `String AbstractMessageSource.getMessageInternal(String,java.lang.Object[],Locale)` indirectly reads without synchronization from `this.useCodeAsDefaultMessage`. Potentially races with write in method `AbstractMessageSource.setUseCodeAsDefaultMessage(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-context/src/main/java/org/springframework/context/support/AbstractMessageSource.java","tnLine":222,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.support.AbstractMessageSource.getMessageInternal(java.lang.String,java.lang.Object[],java.util.Locale):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object RmiClientInterceptor.invoke(MethodInvocation)` indirectly reads without synchronization from `this.cachedStub`. Potentially races with write in method `RmiClientInterceptor.refreshAndRetry(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/remoting/rmi/RmiClientInterceptor.java","tnLine":259,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.remoting.rmi.RmiClientInterceptor.invoke(org.aopalliance.intercept.MethodInvocation):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ScheduledAnnotationBeanPostProcessor.processScheduled(Scheduled,Method,Object)` indirectly writes to field `this.registrar.fixedDelayTasks` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"spring-context/src/main/java/org/springframework/scheduling/annotation/ScheduledAnnotationBeanPostProcessor.java","tnLine":441,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor.processScheduled(org.springframework.scheduling.annotation.Scheduled,java.lang.reflect.Method,java.lang.Object):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `phases.get(key)` could be null and is dereferenced at line 210.","tnFile":"spring-context/src/main/java/org/springframework/context/support/DefaultLifecycleProcessor.java","tnLine":210,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.support.DefaultLifecycleProcessor.stopBeans():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `obtainPointcutExpression(this)` could be null and is dereferenced at line 327.","tnFile":"spring-aop/src/main/java/org/springframework/aop/aspectj/AspectJExpressionPointcut.java","tnLine":327,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.aop.aspectj.AspectJExpressionPointcut.isRuntime():boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void AbstractApplicationContext.initApplicationEventMulticaster()` writes to field `this.applicationEventMulticaster` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java","tnLine":766,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `long AbstractApplicationContext.getStartupDate()` reads without synchronization from `this.startupDate`. Potentially races with write in method `AbstractApplicationContext.refresh()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java","tnLine":346,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.support.AbstractApplicationContext.getStartupDate():long","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Cache ConcurrentMapCacheManager.getCache(String)` reads without synchronization from `this.dynamic`. Potentially races with write in method `ConcurrentMapCacheManager.setCacheNames(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-context/src/main/java/org/springframework/cache/concurrent/ConcurrentMapCacheManager.java","tnLine":168,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.cache.concurrent.ConcurrentMapCacheManager.getCache(java.lang.String):org.springframework.cache.Cache","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Collection AbstractApplicationEventMulticaster.getApplicationListeners(ApplicationEvent,ResolvableType)` indirectly reads without synchronization from `this.beanFactory`. Potentially races with write in method `AbstractApplicationEventMulticaster.setBeanFactory(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-context/src/main/java/org/springframework/context/event/AbstractApplicationEventMulticaster.java","tnLine":203,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.event.AbstractApplicationEventMulticaster.getApplicationListeners(org.springframework.context.ApplicationEvent,org.springframework.core.ResolvableType):java.util.Collection","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Registry RmiRegistryFactoryBean.getRegistry(int)` reads without synchronization from `this.alwaysCreate`. Potentially races with write in method `RmiRegistryFactoryBean.setAlwaysCreate(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-context/src/main/java/org/springframework/remoting/rmi/RmiRegistryFactoryBean.java","tnLine":249,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.remoting.rmi.RmiRegistryFactoryBean.getRegistry(int):java.rmi.registry.Registry","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void SimpleRemoteSlsbInvokerInterceptor.refreshHome()` reads without synchronization from `this.cacheSessionBean`. Potentially races with write in method `SimpleRemoteSlsbInvokerInterceptor.setCacheSessionBean(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-context/src/main/java/org/springframework/ejb/access/SimpleRemoteSlsbInvokerInterceptor.java","tnLine":166,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.ejb.access.SimpleRemoteSlsbInvokerInterceptor.refreshHome():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Collection AbstractApplicationEventMulticaster.getApplicationListeners(ApplicationEvent,ResolvableType)` reads without synchronization from container `this.retrieverCache` via call to `get`. Potentially races with write in method `AbstractApplicationEventMulticaster.removeApplicationListener(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-context/src/main/java/org/springframework/context/event/AbstractApplicationEventMulticaster.java","tnLine":180,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.event.AbstractApplicationEventMulticaster.getApplicationListeners(org.springframework.context.ApplicationEvent,org.springframework.core.ResolvableType):java.util.Collection","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void AbstractApplicationContext.prepareBeanFactory(ConfigurableListableBeanFactory)` indirectly writes to field `this.environment` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java","tnLine":649,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.support.AbstractApplicationContext.prepareBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Object AbstractClassGenerator.create(Object)` writes to field `this.key` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"spring-core/src/main/java/org/springframework/cglib/core/AbstractClassGenerator.java","tnLine":318,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.cglib.core.AbstractClassGenerator.create(java.lang.Object):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `new()` at line 86 is not released after line 92.","tnFile":"spring-core/src/main/java/org/springframework/util/StreamUtils.java","tnLine":92,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.util.StreamUtils.copyToString(java.io.InputStream,java.nio.charset.Charset):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Class AbstractClassGenerator.generate(AbstractClassGenerator$ClassLoaderData)` reads without synchronization from `this.attemptLoad`. Potentially races with write in method `AbstractClassGenerator.setAttemptLoad(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-core/src/main/java/org/springframework/cglib/core/AbstractClassGenerator.java","tnLine":349,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.cglib.core.AbstractClassGenerator.generate(org.springframework.cglib.core.AbstractClassGenerator$ClassLoaderData):java.lang.Class","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void CachingMetadataReaderFactory.clearCache()` reads with synchronization from `this.metadataReaderCache`. Potentially races with unsynchronized write in method `CachingMetadataReaderFactory.clearCache()`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-core/src/main/java/org/springframework/core/type/classreading/CachingMetadataReaderFactory.java","tnLine":149,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.core.type.classreading.CachingMetadataReaderFactory.clearCache():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getParameterAnnotations()` could be null and is dereferenced at line 357.","tnFile":"spring-core/src/main/java/org/springframework/core/MethodParameter.java","tnLine":357,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.core.MethodParameter.hasNullableAnnotation():boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object AbstractSlsbInvokerInterceptor.create()` reads without synchronization from `this.createMethod`. Potentially races with write in method `AbstractSlsbInvokerInterceptor.refreshHome()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/ejb/access/AbstractSlsbInvokerInterceptor.java","tnLine":222,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.ejb.access.AbstractSlsbInvokerInterceptor.create():java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void AbstractApplicationContext.prepareRefresh()` writes to field `this.startupDate` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java","tnLine":585,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.support.AbstractApplicationContext.prepareRefresh():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void AbstractAspectJAdvice.setReturningNameNoCheck(String)` writes to field `this.discoveredReturningType` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-aop/src/main/java/org/springframework/aop/aspectj/AbstractAspectJAdvice.java","tnLine":304,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.aop.aspectj.AbstractAspectJAdvice.setReturningNameNoCheck(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void AbstractApplicationContext.addApplicationListener(ApplicationListener)` reads without synchronization from `this.applicationEventMulticaster`. Potentially races with write in method `AbstractApplicationContext.refresh()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java","tnLine":501,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.support.AbstractApplicationContext.addApplicationListener(org.springframework.context.ApplicationListener):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired to `reader` by call to `new()` at line 86 is not released after line 92.\n**Note**: potential exception at line 89","tnFile":"spring-core/src/main/java/org/springframework/util/StreamUtils.java","tnLine":92,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.util.StreamUtils.copyToString(java.io.InputStream,java.nio.charset.Charset):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List BeanFactoryAspectJAdvisorsBuilder.buildAspectJAdvisors()` reads without synchronization from container `this.aspectFactoryCache` via call to `get`. Potentially races with write in method `BeanFactoryAspectJAdvisorsBuilder.buildAspectJAdvisors()`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-aop/src/main/java/org/springframework/aop/aspectj/annotation/BeanFactoryAspectJAdvisorsBuilder.java","tnLine":148,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.aop.aspectj.annotation.BeanFactoryAspectJAdvisorsBuilder.buildAspectJAdvisors():java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ConcurrencyThrottleSupport.beforeAccess()` reads without synchronization from `this.concurrencyLimit`. Potentially races with write in method `ConcurrencyThrottleSupport.setConcurrencyLimit(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-core/src/main/java/org/springframework/util/ConcurrencyThrottleSupport.java","tnLine":106,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.util.ConcurrencyThrottleSupport.beforeAccess():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ScheduledAnnotationBeanPostProcessor.processScheduled(Scheduled,Method,Object)` indirectly writes to field `this.registrar.cronTasks` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"spring-context/src/main/java/org/springframework/scheduling/annotation/ScheduledAnnotationBeanPostProcessor.java","tnLine":426,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor.processScheduled(org.springframework.scheduling.annotation.Scheduled,java.lang.reflect.Method,java.lang.Object):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object SimpleRemoteSlsbInvokerInterceptor.getSessionBeanInstance()` reads without synchronization from `this.cacheSessionBean`. Potentially races with write in method `SimpleRemoteSlsbInvokerInterceptor.setCacheSessionBean(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-context/src/main/java/org/springframework/ejb/access/SimpleRemoteSlsbInvokerInterceptor.java","tnLine":135,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.ejb.access.SimpleRemoteSlsbInvokerInterceptor.getSessionBeanInstance():java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Class AbstractAspectJAdvice.getDiscoveredReturningType()` reads without synchronization from `this.discoveredReturningType`. Potentially races with write in method `AbstractAspectJAdvice.calculateArgumentBindings()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-aop/src/main/java/org/springframework/aop/aspectj/AbstractAspectJAdvice.java","tnLine":315,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.aop.aspectj.AbstractAspectJAdvice.getDiscoveredReturningType():java.lang.Class","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean SpelExpression.compileExpression()` reads without synchronization from `this.compiledAst`. Potentially races with write in method `SpelExpression.revertToInterpreted()`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-expression/src/main/java/org/springframework/expression/spel/standard/SpelExpression.java","tnLine":519,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.expression.spel.standard.SpelExpression.compileExpression():boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object SpelExpression.getValue(Class)` reads without synchronization from `this.compiledAst`. Potentially races with write in method `SpelExpression.compileExpression()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-expression/src/main/java/org/springframework/expression/spel/standard/SpelExpression.java","tnLine":149,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.expression.spel.standard.SpelExpression.getValue(java.lang.Class):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Object ThreadLocalTargetSource.getTarget()` writes to field `this.invocationCount` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"spring-aop/src/main/java/org/springframework/aop/target/ThreadLocalTargetSource.java","tnLine":80,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.aop.target.ThreadLocalTargetSource.getTarget():java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `MetadataReader CachingMetadataReaderFactory.getMetadataReader(Resource)` reads with synchronization from `this.metadataReaderCache`. Potentially races with unsynchronized write in method `CachingMetadataReaderFactory.clearCache()`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-core/src/main/java/org/springframework/core/type/classreading/CachingMetadataReaderFactory.java","tnLine":130,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.core.type.classreading.CachingMetadataReaderFactory.getMetadataReader(org.springframework.core.io.Resource):org.springframework.core.type.classreading.MetadataReader","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `pointcutExpression` last assigned on line 272 could be null and is dereferenced at line 275.","tnFile":"spring-aop/src/main/java/org/springframework/aop/aspectj/AspectJExpressionPointcut.java","tnLine":275,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.aop.aspectj.AspectJExpressionPointcut.matches(java.lang.Class):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void AbstractApplicationContext.registerListeners()` reads without synchronization from `this.earlyApplicationEvents`. Potentially races with write in method `AbstractApplicationContext.refresh()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java","tnLine":836,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.support.AbstractApplicationContext.registerListeners():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `String AbstractClassGenerator.getClassName()` reads without synchronization from `this.className`. Potentially races with write in method `AbstractClassGenerator.generate(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-core/src/main/java/org/springframework/cglib/core/AbstractClassGenerator.java","tnLine":169,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.cglib.core.AbstractClassGenerator.getClassName():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `MetadataReader CachingMetadataReaderFactory.getMetadataReader(Resource)` mutates container `this.metadataReaderCache` via call to `put` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"spring-core/src/main/java/org/springframework/core/type/classreading/CachingMetadataReaderFactory.java","tnLine":124,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.core.type.classreading.CachingMetadataReaderFactory.getMetadataReader(org.springframework.core.io.Resource):org.springframework.core.type.classreading.MetadataReader","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ResourceBundleThemeSource.setParentThemeSource(ThemeSource)` indirectly reads with synchronization from `this.parentThemeSource`. Potentially races with unsynchronized write in method `ResourceBundleThemeSource.setParentThemeSource(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-context/src/main/java/org/springframework/ui/context/support/ResourceBundleThemeSource.java","tnLine":76,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.ui.context.support.ResourceBundleThemeSource.setParentThemeSource(org.springframework.ui.context.ThemeSource):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `phases.get(key)` could be null and is dereferenced at line 158.","tnFile":"spring-context/src/main/java/org/springframework/context/support/DefaultLifecycleProcessor.java","tnLine":158,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.support.DefaultLifecycleProcessor.startBeans(boolean):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Class ProxyFactoryBean.getObjectType()` reads without synchronization from `this.beanFactory`. Potentially races with write in method `ProxyFactoryBean.setBeanFactory(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-aop/src/main/java/org/springframework/aop/framework/ProxyFactoryBean.java","tnLine":285,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.aop.framework.ProxyFactoryBean.getObjectType():java.lang.Class","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ProxyFactoryBean.setProxyInterfaces(java.lang.Class[])` indirectly mutates container `this.methodCache` via call to `clear` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-aop/src/main/java/org/springframework/aop/framework/ProxyFactoryBean.java","tnLine":144,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.aop.framework.ProxyFactoryBean.setProxyInterfaces(java.lang.Class[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object JndiRmiClientInterceptor.getStub()` reads without synchronization from `this.cachedStub`. Potentially races with write in method `JndiRmiClientInterceptor.prepare()`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-context/src/main/java/org/springframework/remoting/rmi/JndiRmiClientInterceptor.java","tnLine":245,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.remoting.rmi.JndiRmiClientInterceptor.getStub():java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.net.HttpURLConnection` acquired by call to `openConnection()` at line 183 is not released after line 185.","tnFile":"spring-core/src/main/java/org/springframework/core/io/support/PropertiesLoaderUtils.java","tnLine":185,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.core.io.support.PropertiesLoaderUtils.loadAllProperties(java.lang.String,java.lang.ClassLoader):java.util.Properties","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object SpelExpression.getValue(Object)` reads without synchronization from `this.compiledAst`. Potentially races with write in method `SpelExpression.compileExpression()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-expression/src/main/java/org/springframework/expression/spel/standard/SpelExpression.java","tnLine":184,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.expression.spel.standard.SpelExpression.getValue(java.lang.Object):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object MBeanClientInterceptor.convertResultValueIfNecessary(Object,MethodParameter)` indirectly reads without synchronization from `segment.resizeThreshold`. Potentially races with write in method `MBeanClientInterceptor.invoke(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/jmx/access/MBeanClientInterceptor.java","tnLine":555,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.jmx.access.MBeanClientInterceptor.convertResultValueIfNecessary(java.lang.Object,org.springframework.core.MethodParameter):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object JndiRmiClientInterceptor.refreshAndRetry(MethodInvocation)` indirectly reads without synchronization from `this.remoteInvocationFactory`. Potentially races with write in method `JndiRmiClientInterceptor.setRemoteInvocationFactory(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-context/src/main/java/org/springframework/remoting/rmi/JndiRmiClientInterceptor.java","tnLine":352,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.remoting.rmi.JndiRmiClientInterceptor.refreshAndRetry(org.aopalliance.intercept.MethodInvocation):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Collection AbstractApplicationEventMulticaster.getApplicationListeners(ApplicationEvent,ResolvableType)` reads without synchronization from `this.retrievalMutex`. Potentially races with write in method `AbstractApplicationEventMulticaster.setBeanFactory(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-context/src/main/java/org/springframework/context/event/AbstractApplicationEventMulticaster.java","tnLine":189,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.event.AbstractApplicationEventMulticaster.getApplicationListeners(org.springframework.context.ApplicationEvent,org.springframework.core.ResolvableType):java.util.Collection","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void AbstractApplicationContext.initApplicationEventMulticaster()` reads without synchronization from `this.applicationEventMulticaster`. Potentially races with write in method `AbstractApplicationContext.refresh()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java","tnLine":768,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Theme ResourceBundleThemeSource.getTheme(String)` indirectly reads with synchronization from `this.parentThemeSource`. Potentially races with unsynchronized write in method `ResourceBundleThemeSource.setParentThemeSource(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-context/src/main/java/org/springframework/ui/context/support/ResourceBundleThemeSource.java","tnLine":149,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.ui.context.support.ResourceBundleThemeSource.getTheme(java.lang.String):org.springframework.ui.context.Theme","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void AbstractApplicationContext.setEnvironment(ConfigurableEnvironment)` writes to field `this.environment` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java","tnLine":305,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.support.AbstractApplicationContext.setEnvironment(org.springframework.core.env.ConfigurableEnvironment):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void AbstractApplicationContext.doClose()` indirectly reads without synchronization from `this.applicationEventMulticaster`. Potentially races with write in method `AbstractApplicationContext.refresh()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java","tnLine":1009,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.support.AbstractApplicationContext.doClose():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Class ProxyFactoryBean.getObjectType()` indirectly reads without synchronization from `this.targetSource`. Potentially races with write in method `ProxyFactoryBean.getObject()`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-aop/src/main/java/org/springframework/aop/framework/ProxyFactoryBean.java","tnLine":289,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.aop.framework.ProxyFactoryBean.getObjectType():java.lang.Class","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `null` is dereferenced by call to `create(...)` at line 104.","tnFile":"spring-core/src/main/java/org/springframework/cglib/proxy/Enhancer.java","tnLine":104,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.cglib.proxy.Enhancer.<clinit>():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object AbstractClassGenerator.create(Object)` indirectly reads without synchronization from `this.classLoader`. Potentially races with write in method `AbstractClassGenerator.setClassLoader(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-core/src/main/java/org/springframework/cglib/core/AbstractClassGenerator.java","tnLine":303,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.cglib.core.AbstractClassGenerator.create(java.lang.Object):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object AbstractClassGenerator.create(Object)` indirectly reads without synchronization from `this.attemptLoad`. Potentially races with write in method `AbstractClassGenerator.setAttemptLoad(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-core/src/main/java/org/springframework/cglib/core/AbstractClassGenerator.java","tnLine":319,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.cglib.core.AbstractClassGenerator.create(java.lang.Object):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `boolean AbstractApplicationEventMulticaster.supportsEvent(Class,ResolvableType)` indirectly mutates container `event.GenericApplicationListenerAdapter.eventTypeCache` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/context/event/AbstractApplicationEventMulticaster.java","tnLine":283,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.event.AbstractApplicationEventMulticaster.supportsEvent(java.lang.Class,org.springframework.core.ResolvableType):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object MBeanClientInterceptor.doInvoke(MethodInvocation)` reads without synchronization from `this.invocationHandler`. Potentially races with write in method `MBeanClientInterceptor.invoke(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/jmx/access/MBeanClientInterceptor.java","tnLine":416,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.jmx.access.MBeanClientInterceptor.doInvoke(org.aopalliance.intercept.MethodInvocation):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Object MBeanClientInterceptor.doInvoke(MethodInvocation)` indirectly writes to field `chars.[_]` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/jmx/access/MBeanClientInterceptor.java","tnLine":422,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.jmx.access.MBeanClientInterceptor.doInvoke(org.aopalliance.intercept.MethodInvocation):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void AbstractApplicationContext.initLifecycleProcessor()` reads without synchronization from `this.lifecycleProcessor`. Potentially races with write in method `AbstractApplicationContext.refresh()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java","tnLine":792,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Collection AbstractApplicationEventMulticaster.getApplicationListeners(ApplicationEvent,ResolvableType)` indirectly reads with synchronization from container `event.GenericApplicationListenerAdapter.eventTypeCache` via call to `get`. Potentially races with unsynchronized write in method `AbstractApplicationEventMulticaster.getApplicationListeners(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-context/src/main/java/org/springframework/context/event/AbstractApplicationEventMulticaster.java","tnLine":196,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.event.AbstractApplicationEventMulticaster.getApplicationListeners(org.springframework.context.ApplicationEvent,org.springframework.core.ResolvableType):java.util.Collection","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void AbstractAspectJAdvice.setArgumentNamesFromStringArray(java.lang.String[])` reads without synchronization from `this.argumentNames`. Potentially races with write in method `AbstractAspectJAdvice.calculateArgumentBindings()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-aop/src/main/java/org/springframework/aop/aspectj/AbstractAspectJAdvice.java","tnLine":272,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.aop.aspectj.AbstractAspectJAdvice.setArgumentNamesFromStringArray(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.OutputStreamWriter` acquired by call to `new()` at line 122 is not released after line 124.","tnFile":"spring-core/src/main/java/org/springframework/util/StreamUtils.java","tnLine":124,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.util.StreamUtils.copy(java.lang.String,java.nio.charset.Charset,java.io.OutputStream):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `MBeanRegistrationSupport.server` last accessed on line 987 could be null and is dereferenced at line 987.","tnFile":"spring-context/src/main/java/org/springframework/jmx/export/MBeanExporter.java","tnLine":987,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.jmx.export.MBeanExporter.lambda$unregisterNotificationListeners$3(org.springframework.jmx.export.NotificationListenerBean,javax.management.ObjectName[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void AbstractApplicationContext.stop()` indirectly reads without synchronization from `this.lifecycleProcessor`. Potentially races with write in method `AbstractApplicationContext.refresh()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java","tnLine":1353,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.support.AbstractApplicationContext.stop():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Class AbstractClassGenerator.generate(AbstractClassGenerator$ClassLoaderData)` indirectly reads with synchronization from `this.key`. Potentially races with unsynchronized write in method `AbstractClassGenerator.create(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-core/src/main/java/org/springframework/cglib/core/AbstractClassGenerator.java","tnLine":345,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.cglib.core.AbstractClassGenerator.generate(org.springframework.cglib.core.AbstractClassGenerator$ClassLoaderData):java.lang.Class","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `CustomValidatorBean.validatorFactory` last assigned on line 75 could be null and is dereferenced at line 78.","tnFile":"spring-context/src/main/java/org/springframework/validation/beanvalidation/CustomValidatorBean.java","tnLine":78,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.validation.beanvalidation.CustomValidatorBean.afterPropertiesSet():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void SimpleRemoteSlsbInvokerInterceptor.destroy()` reads without synchronization from `this.cacheSessionBean`. Potentially races with write in method `SimpleRemoteSlsbInvokerInterceptor.setCacheSessionBean(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-context/src/main/java/org/springframework/ejb/access/SimpleRemoteSlsbInvokerInterceptor.java","tnLine":178,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.ejb.access.SimpleRemoteSlsbInvokerInterceptor.destroy():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object SpelExpression.getValue(EvaluationContext,Object,Class)` reads without synchronization from `this.compiledAst`. Potentially races with write in method `SpelExpression.compileExpression()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-expression/src/main/java/org/springframework/expression/spel/standard/SpelExpression.java","tnLine":343,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.expression.spel.standard.SpelExpression.getValue(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Class):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void MBeanClientInterceptor.destroy()` indirectly reads without synchronization from `this.connector.connector`. Potentially races with write in method `MBeanClientInterceptor.invoke(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/jmx/access/MBeanClientInterceptor.java","tnLine":631,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.jmx.access.MBeanClientInterceptor.destroy():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void AbstractAspectJAdvice.setArgumentNames(String)` indirectly writes to field `this.argumentNames` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-aop/src/main/java/org/springframework/aop/aspectj/AbstractAspectJAdvice.java","tnLine":259,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.aop.aspectj.AbstractAspectJAdvice.setArgumentNames(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void JndiRmiClientInterceptor.afterPropertiesSet()` indirectly writes to field `this.cachedStub` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/remoting/rmi/JndiRmiClientInterceptor.java","tnLine":182,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.remoting.rmi.JndiRmiClientInterceptor.afterPropertiesSet():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Theme ResourceBundleThemeSource.getTheme(String)` reads without synchronization from container `this.themeCache` via call to `get`. Potentially races with write in method `ResourceBundleThemeSource.getTheme(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-context/src/main/java/org/springframework/ui/context/support/ResourceBundleThemeSource.java","tnLine":141,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.ui.context.support.ResourceBundleThemeSource.getTheme(java.lang.String):org.springframework.ui.context.Theme","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void AbstractApplicationContext.initMessageSource()` reads without synchronization from `this.messageSource`. Potentially races with write in method `AbstractApplicationContext.refresh()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java","tnLine":733,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.support.AbstractApplicationContext.initMessageSource():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `String AbstractApplicationContext.getMessage(MessageSourceResolvable,Locale)` indirectly reads without synchronization from `this.messageSource`. Potentially races with write in method `AbstractApplicationContext.refresh()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java","tnLine":1304,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.support.AbstractApplicationContext.getMessage(org.springframework.context.MessageSourceResolvable,java.util.Locale):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object JndiRmiClientInterceptor.getStub()` reads without synchronization from `this.cacheStub`. Potentially races with write in method `JndiRmiClientInterceptor.setCacheStub(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-context/src/main/java/org/springframework/remoting/rmi/JndiRmiClientInterceptor.java","tnLine":244,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.remoting.rmi.JndiRmiClientInterceptor.getStub():java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `ResolvableType.componentType` last assigned on line 162 could be null and is dereferenced by call to `resolveClass()` at line 164.","tnFile":"spring-core/src/main/java/org/springframework/core/ResolvableType.java","tnLine":164,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.core.ResolvableType.<init>(java.io.Serializable,org.springframework.core.SerializableTypeWrapper$TypeProvider,org.springframework.core.ResolvableType$VariableResolver,java.lang.Integer)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `String AbstractMessageSource.getMessageInternal(String,java.lang.Object[],Locale)` indirectly reads without synchronization from `this.commonMessages`. Potentially races with write in method `AbstractMessageSource.setCommonMessages(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-context/src/main/java/org/springframework/context/support/AbstractMessageSource.java","tnLine":233,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.support.AbstractMessageSource.getMessageInternal(java.lang.String,java.lang.Object[],java.util.Locale):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void AbstractApplicationContext.prepareRefresh()` writes to field `this.earlyApplicationEvents` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java","tnLine":617,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.support.AbstractApplicationContext.prepareRefresh():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ConcurrencyThrottleSupport.afterAccess()` reads without synchronization from `this.concurrencyLimit`. Potentially races with write in method `ConcurrencyThrottleSupport.setConcurrencyLimit(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-core/src/main/java/org/springframework/util/ConcurrencyThrottleSupport.java","tnLine":145,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.util.ConcurrencyThrottleSupport.afterAccess():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object AbstractSlsbInvokerInterceptor.getHome()` reads without synchronization from `this.cacheHome`. Potentially races with write in method `AbstractSlsbInvokerInterceptor.setCacheHome(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-context/src/main/java/org/springframework/ejb/access/AbstractSlsbInvokerInterceptor.java","tnLine":162,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.ejb.access.AbstractSlsbInvokerInterceptor.getHome():java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int ThreadPoolTaskExecutor.getPoolSize()` reads without synchronization from `this.corePoolSize`. Potentially races with write in method `ThreadPoolTaskExecutor.setCorePoolSize(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.java","tnLine":292,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.getPoolSize():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `DirectFieldBindingResult.directFieldAccessor` last assigned on line 84 could be null and is dereferenced at line 85.","tnFile":"spring-context/src/main/java/org/springframework/validation/DirectFieldBindingResult.java","tnLine":85,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.validation.DirectFieldBindingResult.getPropertyAccessor():org.springframework.beans.ConfigurablePropertyAccessor","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ProxyFactoryBean.adviceChanged()` reads without synchronization from `this.singleton`. Potentially races with write in method `ProxyFactoryBean.setSingleton(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-aop/src/main/java/org/springframework/aop/framework/ProxyFactoryBean.java","tnLine":616,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.aop.framework.ProxyFactoryBean.adviceChanged():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Advice AbstractBeanFactoryPointcutAdvisor.getAdvice()` reads without synchronization from `this.adviceBeanName`. Potentially races with write in method `AbstractBeanFactoryPointcutAdvisor.setAdviceBeanName(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-aop/src/main/java/org/springframework/aop/support/AbstractBeanFactoryPointcutAdvisor.java","tnLine":111,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor.getAdvice():org.aopalliance.aop.Advice","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void AbstractRefreshableApplicationContext.refreshBeanFactory()` indirectly reads without synchronization from `this.allowBeanDefinitionOverriding`. Potentially races with write in method `AbstractRefreshableApplicationContext.setAllowBeanDefinitionOverriding(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-context/src/main/java/org/springframework/context/support/AbstractRefreshableApplicationContext.java","tnLine":132,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object SpelExpression.getValue()` reads without synchronization from `this.compiledAst`. Potentially races with write in method `SpelExpression.compileExpression()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-expression/src/main/java/org/springframework/expression/spel/standard/SpelExpression.java","tnLine":121,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.expression.spel.standard.SpelExpression.getValue():java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int ThreadLocalTargetSource.getHitCount()` reads without synchronization from `this.hitCount`. Potentially races with write in method `ThreadLocalTargetSource.getTarget()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-aop/src/main/java/org/springframework/aop/target/ThreadLocalTargetSource.java","tnLine":125,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.aop.target.ThreadLocalTargetSource.getHitCount():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.net.HttpURLConnection` acquired by call to `openConnection()` at line 591 is not released after line 612.","tnFile":"spring-core/src/main/java/org/springframework/core/io/support/PathMatchingResourcePatternResolver.java","tnLine":612,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(org.springframework.core.io.Resource,java.net.URL,java.lang.String):java.util.Set","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean HotSwappableTargetSource.equals(Object)` reads without synchronization from `this.target`. Potentially races with write in method `HotSwappableTargetSource.swap(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-aop/src/main/java/org/springframework/aop/target/HotSwappableTargetSource.java","tnLine":104,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.aop.target.HotSwappableTargetSource.equals(java.lang.Object):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object SimpleRemoteSlsbInvokerInterceptor.getSessionBeanInstance()` indirectly reads without synchronization from `this.cachedHome`. Potentially races with write in method `SimpleRemoteSlsbInvokerInterceptor.doInvoke(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-context/src/main/java/org/springframework/ejb/access/SimpleRemoteSlsbInvokerInterceptor.java","tnLine":144,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.ejb.access.SimpleRemoteSlsbInvokerInterceptor.getSessionBeanInstance():java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object JndiRmiClientInterceptor.invoke(MethodInvocation)` indirectly reads without synchronization from `this.cachedStub`. Potentially races with write in method `JndiRmiClientInterceptor.getStub()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/remoting/rmi/JndiRmiClientInterceptor.java","tnLine":273,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.remoting.rmi.JndiRmiClientInterceptor.invoke(org.aopalliance.intercept.MethodInvocation):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ResourceBundleThemeSource.setParentThemeSource(ThemeSource)` writes to field `this.parentThemeSource` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"spring-context/src/main/java/org/springframework/ui/context/support/ResourceBundleThemeSource.java","tnLine":70,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.ui.context.support.ResourceBundleThemeSource.setParentThemeSource(org.springframework.ui.context.ThemeSource):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Object ThreadLocalTargetSource.getTarget()` writes to field `this.hitCount` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"spring-aop/src/main/java/org/springframework/aop/target/ThreadLocalTargetSource.java","tnLine":95,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.aop.target.ThreadLocalTargetSource.getTarget():java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void AbstractAspectJAdvice.setArgumentNamesFromStringArray(java.lang.String[])` writes to field `this.argumentNames` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-aop/src/main/java/org/springframework/aop/aspectj/AbstractAspectJAdvice.java","tnLine":263,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.aop.aspectj.AbstractAspectJAdvice.setArgumentNamesFromStringArray(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `charset` last assigned on line 111 could be null and is dereferenced at line 112.","tnFile":"spring-core/src/main/java/org/springframework/core/codec/StringDecoder.java","tnLine":112,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.core.codec.StringDecoder.decode(org.springframework.core.io.buffer.DataBuffer,org.springframework.core.ResolvableType,org.springframework.util.MimeType,java.util.Map):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ProxyFactoryBean.adviceChanged()` indirectly mutates container `this.methodCache` via call to `clear` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"spring-aop/src/main/java/org/springframework/aop/framework/ProxyFactoryBean.java","tnLine":615,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.aop.framework.ProxyFactoryBean.adviceChanged():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void AbstractApplicationContext.publishEvent(Object)` indirectly reads without synchronization from `this.applicationEventMulticaster`. Potentially races with write in method `AbstractApplicationContext.refresh()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java","tnLine":372,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.support.AbstractApplicationContext.publishEvent(java.lang.Object):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Object MBeanClientInterceptor.invoke(MethodInvocation)` indirectly writes to field `chars.[_]` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"spring-context/src/main/java/org/springframework/jmx/access/MBeanClientInterceptor.java","tnLine":366,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.jmx.access.MBeanClientInterceptor.invoke(org.aopalliance.intercept.MethodInvocation):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getParameterAnnotations()` could be null and is dereferenced at line 562.","tnFile":"spring-core/src/main/java/org/springframework/core/MethodParameter.java","tnLine":562,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.core.MethodParameter.hasParameterAnnotations():boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `boolean AbstractApplicationEventMulticaster.supportsEvent(ApplicationListener,ResolvableType,Class)` indirectly mutates container `event.GenericApplicationListenerAdapter.eventTypeCache` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/context/event/AbstractApplicationEventMulticaster.java","tnLine":302,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.event.AbstractApplicationEventMulticaster.supportsEvent(org.springframework.context.ApplicationListener,org.springframework.core.ResolvableType,java.lang.Class):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ScheduledAnnotationBeanPostProcessor.onApplicationEvent(ApplicationEvent)` indirectly writes to field `this.registrar.cronTasks` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/scheduling/annotation/ScheduledAnnotationBeanPostProcessor.java","tnLine":105,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor.onApplicationEvent(org.springframework.context.ApplicationEvent):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ScheduledAnnotationBeanPostProcessor.processScheduled(Scheduled,Method,Object)` reads without synchronization from `this.embeddedValueResolver`. Potentially races with write in method `ScheduledAnnotationBeanPostProcessor.setEmbeddedValueResolver(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-context/src/main/java/org/springframework/scheduling/annotation/ScheduledAnnotationBeanPostProcessor.java","tnLine":393,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor.processScheduled(org.springframework.scheduling.annotation.Scheduled,java.lang.reflect.Method,java.lang.Object):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `javax.net.ssl.HttpsURLConnection` acquired by call to `openConnection()` at line 591 is not released after line 612.","tnFile":"spring-core/src/main/java/org/springframework/core/io/support/PathMatchingResourcePatternResolver.java","tnLine":612,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(org.springframework.core.io.Resource,java.net.URL,java.lang.String):java.util.Set","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `BeanPropertyBindingResult.beanWrapper` last assigned on line 97 could be null and is dereferenced at line 98.","tnFile":"spring-context/src/main/java/org/springframework/validation/BeanPropertyBindingResult.java","tnLine":98,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.validation.BeanPropertyBindingResult.getPropertyAccessor():org.springframework.beans.ConfigurablePropertyAccessor","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `String SimpleAliasRegistry.canonicalName(String)` reads without synchronization from container `this.aliasMap` via call to `get`. Potentially races with write in method `SimpleAliasRegistry.removeAlias(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-core/src/main/java/org/springframework/core/SimpleAliasRegistry.java","tnLine":219,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.core.SimpleAliasRegistry.canonicalName(java.lang.String):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Remote RmiClientInterceptor.getStub()` reads without synchronization from `this.cachedStub`. Potentially races with write in method `RmiClientInterceptor.afterPropertiesSet()`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-context/src/main/java/org/springframework/remoting/rmi/RmiClientInterceptor.java","tnLine":233,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.remoting.rmi.RmiClientInterceptor.getStub():java.rmi.Remote","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void AbstractApplicationContext.setParent(ApplicationContext)` indirectly writes to field `this.environment` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java","tnLine":479,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.support.AbstractApplicationContext.setParent(org.springframework.context.ApplicationContext):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object SimpleRemoteSlsbInvokerInterceptor.doInvoke(MethodInvocation)` indirectly reads without synchronization from `this.cachedHome`. Potentially races with write in method `SimpleRemoteSlsbInvokerInterceptor.getSessionBeanInstance()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/ejb/access/SimpleRemoteSlsbInvokerInterceptor.java","tnLine":100,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.ejb.access.SimpleRemoteSlsbInvokerInterceptor.doInvoke(org.aopalliance.intercept.MethodInvocation):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void SimpleAliasRegistry.checkForAliasCircle(String,String)` indirectly reads without synchronization from container `this.aliasMap` via call to `entrySet`. Potentially races with write in method `SimpleAliasRegistry.removeAlias(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-core/src/main/java/org/springframework/core/SimpleAliasRegistry.java","tnLine":202,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.core.SimpleAliasRegistry.checkForAliasCircle(java.lang.String,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `ApplicationEventMulticaster AbstractApplicationContext.getApplicationEventMulticaster()` reads without synchronization from `this.applicationEventMulticaster`. Potentially races with write in method `AbstractApplicationContext.refresh()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java","tnLine":422,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.support.AbstractApplicationContext.getApplicationEventMulticaster():org.springframework.context.event.ApplicationEventMulticaster","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void RmiRegistryFactoryBean.afterPropertiesSet()` indirectly writes to field `this.created` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/remoting/rmi/RmiRegistryFactoryBean.java","tnLine":166,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.remoting.rmi.RmiRegistryFactoryBean.afterPropertiesSet():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void AbstractApplicationContext.initMessageSource()` writes to field `this.messageSource` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java","tnLine":731,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.support.AbstractApplicationContext.initMessageSource():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `MetadataReader CachingMetadataReaderFactory.getMetadataReader(Resource)` indirectly writes to field `methodWriter.sourceOffset` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"spring-core/src/main/java/org/springframework/core/type/classreading/CachingMetadataReaderFactory.java","tnLine":139,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.core.type.classreading.CachingMetadataReaderFactory.getMetadataReader(org.springframework.core.io.Resource):org.springframework.core.type.classreading.MetadataReader","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Registry RmiRegistryFactoryBean.getRegistry(int,RMIClientSocketFactory,RMIServerSocketFactory)` writes to field `this.created` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"spring-context/src/main/java/org/springframework/remoting/rmi/RmiRegistryFactoryBean.java","tnLine":214,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.remoting.rmi.RmiRegistryFactoryBean.getRegistry(int,java.rmi.server.RMIClientSocketFactory,java.rmi.server.RMIServerSocketFactory):java.rmi.registry.Registry","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `null` is dereferenced by call to `addIfPossible(...)` at line 68.","tnFile":"spring-core/src/main/java/org/springframework/core/annotation/AnnotationTypeMappings.java","tnLine":68,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.core.annotation.AnnotationTypeMappings.addAllMappings(java.lang.Class):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `MetadataReader CachingMetadataReaderFactory.getMetadataReader(Resource)` reads without synchronization from container `this.metadataReaderCache` via call to `get`. Potentially races with write in method `CachingMetadataReaderFactory.getMetadataReader(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-core/src/main/java/org/springframework/core/type/classreading/CachingMetadataReaderFactory.java","tnLine":121,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.core.type.classreading.CachingMetadataReaderFactory.getMetadataReader(org.springframework.core.io.Resource):org.springframework.core.type.classreading.MetadataReader","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void AbstractEnvironment.merge(ConfigurableEnvironment)` indirectly mutates container `this.propertySources.propertySourceList` via call to `remove` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"spring-core/src/main/java/org/springframework/core/env/AbstractEnvironment.java","tnLine":459,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.core.env.AbstractEnvironment.merge(org.springframework.core.env.ConfigurableEnvironment):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Environment AbstractApplicationContext.getEnvironment()` indirectly writes to field `this.environment` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java","tnLine":127,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.support.AbstractApplicationContext.getEnvironment():org.springframework.core.env.Environment","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Class AbstractClassGenerator.generate(AbstractClassGenerator$ClassLoaderData)` indirectly reads without synchronization from `this.className`. Potentially races with write in method `AbstractClassGenerator.generate(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-core/src/main/java/org/springframework/cglib/core/AbstractClassGenerator.java","tnLine":351,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.cglib.core.AbstractClassGenerator.generate(org.springframework.cglib.core.AbstractClassGenerator$ClassLoaderData):java.lang.Class","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `MessageFormat StaticMessageSource.resolveCode(String,Locale)` reads without synchronization from container `this.messages` via call to `get`. Potentially races with write in method `StaticMessageSource.addMessage(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-context/src/main/java/org/springframework/context/support/StaticMessageSource.java","tnLine":54,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.support.StaticMessageSource.resolveCode(java.lang.String,java.util.Locale):java.text.MessageFormat","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void RmiClientInterceptor.afterPropertiesSet()` indirectly writes to field `this.cachedStub` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/remoting/rmi/RmiClientInterceptor.java","tnLine":136,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.remoting.rmi.RmiClientInterceptor.afterPropertiesSet():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object SpelExpression.getValue(EvaluationContext,Object)` reads without synchronization from `this.compiledAst`. Potentially races with write in method `SpelExpression.compileExpression()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-expression/src/main/java/org/springframework/expression/spel/standard/SpelExpression.java","tnLine":312,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.expression.spel.standard.SpelExpression.getValue(org.springframework.expression.EvaluationContext,java.lang.Object):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Class AbstractClassGenerator.generate(AbstractClassGenerator$ClassLoaderData)` reads without synchronization from `this.strategy`. Potentially races with write in method `AbstractClassGenerator.setStrategy(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-core/src/main/java/org/springframework/cglib/core/AbstractClassGenerator.java","tnLine":358,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.cglib.core.AbstractClassGenerator.generate(org.springframework.cglib.core.AbstractClassGenerator$ClassLoaderData):java.lang.Class","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Collection AbstractApplicationEventMulticaster.getApplicationListeners()` reads without synchronization from `this.retrievalMutex`. Potentially races with write in method `AbstractApplicationEventMulticaster.setBeanFactory(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-context/src/main/java/org/springframework/context/event/AbstractApplicationEventMulticaster.java","tnLine":158,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.event.AbstractApplicationEventMulticaster.getApplicationListeners():java.util.Collection","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `MBeanServerConnectionFactoryBean.connector` last assigned on line 141 could be null and is dereferenced at line 142.","tnFile":"spring-context/src/main/java/org/springframework/jmx/support/MBeanServerConnectionFactoryBean.java","tnLine":142,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.jmx.support.MBeanServerConnectionFactoryBean.connect():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void RmiClientInterceptor.prepare()` writes to field `this.cachedStub` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/remoting/rmi/RmiClientInterceptor.java","tnLine":161,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.remoting.rmi.RmiClientInterceptor.prepare():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `null` is dereferenced by call to `readElementValues(...)` at line 2590.","tnFile":"spring-core/src/main/java/org/springframework/asm/ClassReader.java","tnLine":2590,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.asm.ClassReader.readTypeAnnotations(org.springframework.asm.MethodVisitor,org.springframework.asm.Context,int,boolean):int[]","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List BeanFactoryAspectJAdvisorsBuilder.buildAspectJAdvisors()` reads without synchronization from container `this.advisorsCache` via call to `get`. Potentially races with write in method `BeanFactoryAspectJAdvisorsBuilder.buildAspectJAdvisors()`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-aop/src/main/java/org/springframework/aop/aspectj/annotation/BeanFactoryAspectJAdvisorsBuilder.java","tnLine":143,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.aop.aspectj.annotation.BeanFactoryAspectJAdvisorsBuilder.buildAspectJAdvisors():java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `String AbstractApplicationContext.getMessage(String,java.lang.Object[],Locale)` indirectly reads without synchronization from `this.messageSource`. Potentially races with write in method `AbstractApplicationContext.refresh()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java","tnLine":1299,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.support.AbstractApplicationContext.getMessage(java.lang.String,java.lang.Object[],java.util.Locale):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `anns` could be null and is dereferenced at line 574.","tnFile":"spring-core/src/main/java/org/springframework/core/MethodParameter.java","tnLine":574,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.core.MethodParameter.getParameterAnnotation(java.lang.Class):java.lang.annotation.Annotation","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object SpelExpression.getValue(EvaluationContext,Class)` reads without synchronization from `this.compiledAst`. Potentially races with write in method `SpelExpression.compileExpression()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-expression/src/main/java/org/springframework/expression/spel/standard/SpelExpression.java","tnLine":278,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.expression.spel.standard.SpelExpression.getValue(org.springframework.expression.EvaluationContext,java.lang.Class):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `String AbstractApplicationContext.getMessage(String,java.lang.Object[],String,Locale)` indirectly reads without synchronization from `this.messageSource`. Potentially races with write in method `AbstractApplicationContext.refresh()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java","tnLine":1294,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.support.AbstractApplicationContext.getMessage(java.lang.String,java.lang.Object[],java.lang.String,java.util.Locale):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ScheduledAnnotationBeanPostProcessor.destroy()` indirectly reads without synchronization from `this.registrar.localExecutor`. Potentially races with write in method `ScheduledAnnotationBeanPostProcessor.onApplicationEvent(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-context/src/main/java/org/springframework/scheduling/annotation/ScheduledAnnotationBeanPostProcessor.java","tnLine":579,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor.destroy():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `DefaultConversionService.<init>()` indirectly writes to field `segments.[_]` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-core/src/main/java/org/springframework/core/convert/support/DefaultConversionService.java","tnLine":51,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.core.convert.support.DefaultConversionService.<init>()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ResourceBundleThemeSource.initParent(Theme)` indirectly reads without synchronization from `this.parentThemeSource`. Potentially races with write in method `ResourceBundleThemeSource.setParentThemeSource(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/ui/context/support/ResourceBundleThemeSource.java","tnLine":194,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.ui.context.support.ResourceBundleThemeSource.initParent(org.springframework.ui.context.Theme):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void AbstractApplicationContext.finishRefresh()` indirectly writes to field `this.lifecycleProcessor` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java","tnLine":890,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.support.AbstractApplicationContext.finishRefresh():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void JndiObjectTargetSource.afterPropertiesSet()` writes to field `this.cachedObject` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/jndi/JndiObjectTargetSource.java","tnLine":102,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.jndi.JndiObjectTargetSource.afterPropertiesSet():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `variant` last assigned on line 836 could be null and is dereferenced at line 837.","tnFile":"spring-core/src/main/java/org/springframework/util/StringUtils.java","tnLine":837,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.util.StringUtils.parseLocaleTokens(java.lang.String,java.lang.String[]):java.util.Locale","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object SpelExpression.getValue(EvaluationContext)` reads without synchronization from `this.compiledAst`. Potentially races with write in method `SpelExpression.compileExpression()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-expression/src/main/java/org/springframework/expression/spel/standard/SpelExpression.java","tnLine":249,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.expression.spel.standard.SpelExpression.getValue(org.springframework.expression.EvaluationContext):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `ConcurrentReferenceHashMap$Reference ConcurrentReferenceHashMap$Segment.getReference(Object,int,ConcurrentReferenceHashMap$Restructure)` indirectly reads without synchronization from `this.resizeThreshold`. Potentially races with write in method `ConcurrentReferenceHashMap$Segment.clear()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-core/src/main/java/org/springframework/util/ConcurrentReferenceHashMap.java","tnLine":495,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.util.ConcurrentReferenceHashMap$Segment.getReference(java.lang.Object,int,org.springframework.util.ConcurrentReferenceHashMap$Restructure):org.springframework.util.ConcurrentReferenceHashMap$Reference","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Registry RmiRegistryFactoryBean.getRegistry(String,int,RMIClientSocketFactory,RMIServerSocketFactory)` indirectly writes to field `this.created` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/remoting/rmi/RmiRegistryFactoryBean.java","tnLine":195,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.remoting.rmi.RmiRegistryFactoryBean.getRegistry(java.lang.String,int,java.rmi.server.RMIClientSocketFactory,java.rmi.server.RMIServerSocketFactory):java.rmi.registry.Registry","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void AbstractApplicationContext.registerListeners()` writes to field `this.earlyApplicationEvents` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java","tnLine":837,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.support.AbstractApplicationContext.registerListeners():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void MBeanRegistrationSupport.doUnregister(ObjectName)` reads without synchronization from `this.server`. Potentially races with write in method `MBeanRegistrationSupport.setServer(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-context/src/main/java/org/springframework/jmx/support/MBeanRegistrationSupport.java","tnLine":197,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.jmx.support.MBeanRegistrationSupport.doUnregister(javax.management.ObjectName):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ScheduledAnnotationBeanPostProcessor.processScheduled(Scheduled,Method,Object)` indirectly writes to field `this.registrar.fixedRateTasks` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"spring-context/src/main/java/org/springframework/scheduling/annotation/ScheduledAnnotationBeanPostProcessor.java","tnLine":467,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor.processScheduled(org.springframework.scheduling.annotation.Scheduled,java.lang.reflect.Method,java.lang.Object):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Class ScriptFactoryPostProcessor.createConfigInterface(BeanDefinition,java.lang.Class[])` indirectly writes to field `chars.[_]` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/scripting/support/ScriptFactoryPostProcessor.java","tnLine":514,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.scripting.support.ScriptFactoryPostProcessor.createConfigInterface(org.springframework.beans.factory.config.BeanDefinition,java.lang.Class[]):java.lang.Class","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `ThreadPoolTaskExecutor$1.this$0.taskDecorator` last accessed on line 234 could be null and is dereferenced at line 234.","tnFile":"spring-context/src/main/java/org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.java","tnLine":234,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor$1.execute(java.lang.Runnable):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Class JndiObjectTargetSource.getTargetClass()` reads without synchronization from `this.cachedObject`. Potentially races with write in method `JndiObjectTargetSource.getTarget()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/jndi/JndiObjectTargetSource.java","tnLine":114,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.jndi.JndiObjectTargetSource.getTargetClass():java.lang.Class","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.net.HttpURLConnection` acquired by call to `openConnection()` at line 422 is not released after line 425.","tnFile":"spring-context/src/main/java/org/springframework/context/support/ResourceBundleMessageSource.java","tnLine":425,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.support.ResourceBundleMessageSource$MessageSourceControl.lambda$newBundle$0(boolean,java.lang.ClassLoader,java.lang.String):java.io.InputStream","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object JndiObjectTargetSource.getTarget()` reads without synchronization from `this.cache`. Potentially races with write in method `JndiObjectTargetSource.setCache(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-context/src/main/java/org/springframework/jndi/JndiObjectTargetSource.java","tnLine":134,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.jndi.JndiObjectTargetSource.getTarget():java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void AbstractApplicationEventMulticaster.removeApplicationListenerBean(String)` reads without synchronization from `this.retrievalMutex`. Potentially races with write in method `AbstractApplicationEventMulticaster.setBeanFactory(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-context/src/main/java/org/springframework/context/event/AbstractApplicationEventMulticaster.java","tnLine":136,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.event.AbstractApplicationEventMulticaster.removeApplicationListenerBean(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void AbstractApplicationContext.initLifecycleProcessor()` writes to field `this.lifecycleProcessor` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java","tnLine":790,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void AbstractApplicationEventMulticaster.addApplicationListener(ApplicationListener)` reads without synchronization from `this.retrievalMutex`. Potentially races with write in method `AbstractApplicationEventMulticaster.setBeanFactory(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-context/src/main/java/org/springframework/context/event/AbstractApplicationEventMulticaster.java","tnLine":106,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.event.AbstractApplicationEventMulticaster.addApplicationListener(org.springframework.context.ApplicationListener):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ScheduledAnnotationBeanPostProcessor.onApplicationEvent(ContextRefreshedEvent)` indirectly writes to field `this.registrar.cronTasks` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/scheduling/annotation/ScheduledAnnotationBeanPostProcessor.java","tnLine":233,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor.onApplicationEvent(org.springframework.context.event.ContextRefreshedEvent):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Object MBeanClientInterceptor.handleConnectFailure(MethodInvocation,Exception)` indirectly writes to field `chars.[_]` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/jmx/access/MBeanClientInterceptor.java","tnLine":396,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.jmx.access.MBeanClientInterceptor.handleConnectFailure(org.aopalliance.intercept.MethodInvocation,java.lang.Exception):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void AbstractApplicationContext.resetCommonCaches()` indirectly mutates container `annotation.AnnotationTypeMappings.cache` via call to `clear` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java","tnLine":923,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.support.AbstractApplicationContext.resetCommonCaches():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `MetadataReader CachingMetadataReaderFactory.getMetadataReader(Resource)` indirectly writes to field `methodWriter.sourceLength` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"spring-core/src/main/java/org/springframework/core/type/classreading/CachingMetadataReaderFactory.java","tnLine":123,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.core.type.classreading.CachingMetadataReaderFactory.getMetadataReader(org.springframework.core.io.Resource):org.springframework.core.type.classreading.MetadataReader","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `LocalValidatorFactoryBean.validatorFactory` last assigned on line 309 could be null and is dereferenced at line 310.","tnFile":"spring-context/src/main/java/org/springframework/validation/beanvalidation/LocalValidatorFactoryBean.java","tnLine":310,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.validation.beanvalidation.LocalValidatorFactoryBean.afterPropertiesSet():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `String HotSwappableTargetSource.toString()` reads without synchronization from `this.target`. Potentially races with write in method `HotSwappableTargetSource.swap(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-aop/src/main/java/org/springframework/aop/target/HotSwappableTargetSource.java","tnLine":114,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.aop.target.HotSwappableTargetSource.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void AbstractApplicationContext.start()` indirectly reads without synchronization from `this.lifecycleProcessor`. Potentially races with write in method `AbstractApplicationContext.refresh()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java","tnLine":1347,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.support.AbstractApplicationContext.start():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `name` last assigned on line 541 could be null and is dereferenced at line 542.","tnFile":"spring-aop/src/main/java/org/springframework/aop/framework/ProxyFactoryBean.java","tnLine":542,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.aop.framework.ProxyFactoryBean.addGlobalAdvisor(org.springframework.beans.factory.ListableBeanFactory,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void AbstractApplicationEventMulticaster.removeApplicationListener(ApplicationListener)` reads without synchronization from `this.retrievalMutex`. Potentially races with write in method `AbstractApplicationEventMulticaster.setBeanFactory(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-context/src/main/java/org/springframework/context/event/AbstractApplicationEventMulticaster.java","tnLine":128,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.event.AbstractApplicationEventMulticaster.removeApplicationListener(org.springframework.context.ApplicationListener):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `hashCode` last assigned on line 124 could be null and is dereferenced at line 127.","tnFile":"spring-core/src/main/java/org/springframework/core/annotation/SynthesizedMergedAnnotationInvocationHandler.java","tnLine":127,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.core.annotation.SynthesizedMergedAnnotationInvocationHandler.annotationHashCode():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `java.lang.Object[] AbstractAspectJAdvice.argBinding(JoinPoint,JoinPointMatch,Object,Throwable)` reads without synchronization from `this.joinPointArgumentIndex`. Potentially races with write in method `AbstractAspectJAdvice.calculateArgumentBindings()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-aop/src/main/java/org/springframework/aop/aspectj/AbstractAspectJAdvice.java","tnLine":570,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.aop.aspectj.AbstractAspectJAdvice.argBinding(org.aspectj.lang.JoinPoint,org.aspectj.weaver.tools.JoinPointMatch,java.lang.Object,java.lang.Throwable):java.lang.Object[]","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `LifecycleProcessor AbstractApplicationContext.getLifecycleProcessor()` reads without synchronization from `this.lifecycleProcessor`. Potentially races with write in method `AbstractApplicationContext.refresh()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java","tnLine":435,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.support.AbstractApplicationContext.getLifecycleProcessor():org.springframework.context.LifecycleProcessor","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void MBeanRegistrationSupport.doRegister(Object,ObjectName)` reads without synchronization from `this.server`. Potentially races with write in method `MBeanRegistrationSupport.setServer(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-context/src/main/java/org/springframework/jmx/support/MBeanRegistrationSupport.java","tnLine":131,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.jmx.support.MBeanRegistrationSupport.doRegister(java.lang.Object,javax.management.ObjectName):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Registry RmiServiceExporter.getRegistry(int)` reads without synchronization from `this.alwaysCreateRegistry`. Potentially races with write in method `RmiServiceExporter.setAlwaysCreateRegistry(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-context/src/main/java/org/springframework/remoting/rmi/RmiServiceExporter.java","tnLine":389,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.remoting.rmi.RmiServiceExporter.getRegistry(int):java.rmi.registry.Registry","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void AbstractApplicationContext.publishEvent(ApplicationEvent)` indirectly reads without synchronization from `this.applicationEventMulticaster`. Potentially races with write in method `AbstractApplicationContext.refresh()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java","tnLine":359,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.support.AbstractApplicationContext.publishEvent(org.springframework.context.ApplicationEvent):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Remote RmiClientInterceptor.getStub()` reads without synchronization from `this.cacheStub`. Potentially races with write in method `RmiClientInterceptor.setCacheStub(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-context/src/main/java/org/springframework/remoting/rmi/RmiClientInterceptor.java","tnLine":232,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.remoting.rmi.RmiClientInterceptor.getStub():java.rmi.Remote","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object ConcurrentReferenceHashMap$Segment.doTask(int,Object,ConcurrentReferenceHashMap$Task)` indirectly reads without synchronization from `this.resizeThreshold`. Potentially races with write in method `ConcurrentReferenceHashMap$Segment.restructureIfNecessary(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"spring-core/src/main/java/org/springframework/util/ConcurrentReferenceHashMap.java","tnLine":519,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.util.ConcurrentReferenceHashMap$Segment.doTask(int,java.lang.Object,org.springframework.util.ConcurrentReferenceHashMap$Task):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object SpelExpression.getValue(Object,Class)` reads without synchronization from `this.compiledAst`. Potentially races with write in method `SpelExpression.compileExpression()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-expression/src/main/java/org/springframework/expression/spel/standard/SpelExpression.java","tnLine":212,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.expression.spel.standard.SpelExpression.getValue(java.lang.Object,java.lang.Class):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void AbstractAspectJAdvice.setThrowingNameNoCheck(String)` writes to field `this.discoveredThrowingType` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-aop/src/main/java/org/springframework/aop/aspectj/AbstractAspectJAdvice.java","tnLine":339,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.aop.aspectj.AbstractAspectJAdvice.setThrowingNameNoCheck(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void CachingMetadataReaderFactory.setCacheLimit(int)` writes to field `this.metadataReaderCache` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-core/src/main/java/org/springframework/core/type/classreading/CachingMetadataReaderFactory.java","tnLine":100,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.core.type.classreading.CachingMetadataReaderFactory.setCacheLimit(int):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `ExecutorService ThreadPoolTaskExecutor.initializeExecutor(ThreadFactory,RejectedExecutionHandler)` reads without synchronization from `this.corePoolSize`. Potentially races with write in method `ThreadPoolTaskExecutor.setCorePoolSize(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.java","tnLine":229,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initializeExecutor(java.util.concurrent.ThreadFactory,java.util.concurrent.RejectedExecutionHandler):java.util.concurrent.ExecutorService","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Type AbstractAspectJAdvice.getDiscoveredReturningGenericType()` reads without synchronization from `this.discoveredReturningGenericType`. Potentially races with write in method `AbstractAspectJAdvice.calculateArgumentBindings()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-aop/src/main/java/org/springframework/aop/aspectj/AbstractAspectJAdvice.java","tnLine":320,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.aop.aspectj.AbstractAspectJAdvice.getDiscoveredReturningGenericType():java.lang.reflect.Type","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void AbstractApplicationContext.prepareRefresh()` indirectly writes to field `this.environment` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java","tnLine":603,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.context.support.AbstractApplicationContext.prepareRefresh():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void CachingMetadataReaderFactory.setCacheLimit(int)` reads without synchronization from `this.metadataReaderCache`. Potentially races with write in method `CachingMetadataReaderFactory.clearCache()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"spring-core/src/main/java/org/springframework/core/type/classreading/CachingMetadataReaderFactory.java","tnLine":96,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.springframework.core.type.classreading.CachingMetadataReaderFactory.setCacheLimit(int):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}}],null,{"analysisLOC":null,"analysisBuildSys":"Gradlew [\"assemble\",\"-xtest\"]","analysisLang":null}]}],[{"tag":"ErrorProne_JDK8"},{"tag":"ToolSuccess","contents":[[],null,{"analysisLOC":null,"analysisBuildSys":"Gradlew [\"assemble\",\"-xtest\"]","analysisLang":null}]}]],"debugLog":"\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-websocket/src/main/java/org/springframework/web/socket/adapter/standard/WebSocketToStandardExtensionAdapter.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-websocket/src/main/java/org/springframework/web/socket/adapter/standard/StandardToWebSocketExtensionAdapter.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-websocket/src/main/java/org/springframework/web/socket/adapter/NativeWebSocketSession.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-websocket/src/main/java/org/springframework/web/socket/adapter/AbstractWebSocketSession.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-websocket/src/main/java/org/springframework/web/socket/adapter/jetty/package-info.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-websocket/src/main/java/org/springframework/web/socket/adapter/jetty/JettyWebSocketHandlerAdapter.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-websocket/src/main/java/org/springframework/web/socket/adapter/jetty/WebSocketToJettyExtensionConfigAdapter.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-websocket/src/main/java/org/springframework/web/socket/adapter/jetty/JettyWebSocketSession.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-websocket/src/main/java/org/springframework/web/socket/TextMessage.java\"\n            ]\n        , jceOutputDir =\n            \"/tmp/analyzing-2bd51b5802831fa9/spring-websocket/build/classes/java/main\"\n        }\n    , SolverError\n        { solverName = \"error-prone\"\n        , renderError =\n            \"Capture:\\n-----\\nCall Stack: \\n------Execution Failed:\\nwarning: [path] bad path element \\\"/tmp/analyzing-2bd51b5802831fa9/spring-framework-bom/build/classes/kotlin/main\\\": no such file or directory\\nwarning: [path] bad path element \\\"/tmp/analyzing-2bd51b5802831fa9/buildSrc/build/classes/kotlin/main\\\": no such file or directory\\nwarning: [path] bad path element \\\"/tmp/analyzing-2bd51b5802831fa9/spring-context/build/classes/groovy/main\\\": no such file or directory\\nerror: warnings found and -Werror specified\\n1 error\\n3 warnings\\n\"\n        }\n    )\n[DEBUG] [20/Jun/2019:19:41:59 +0000] [()] Per file run failed on entry \n    ( JavaCompEntry\n        { jceJDK = \"JDK1.8\"\n        , jceClasspath =\n            [ \"/tmp/analyzing-2bd51b5802831fa9/spring-test/build/classes/kotlin/main\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-websocket/build/classes/kotlin/main\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-webmvc/build/classes/kotlin/main\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-webflux/build/classes/kotlin/main\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-jms/build/classes/kotlin/main\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-messaging/build/classes/kotlin/main\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-framework-bom/build/classes/kotlin/main\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-context-indexer/build/classes/kotlin/main\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/buildSrc/build/classes/groovy/main\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/buildSrc/build/classes/kotlin/main\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-aspects/build/classes/kotlin/main\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-orm/build/classes/kotlin/main\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-web/build/classes/kotlin/main\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-oxm/build/classes/kotlin/main\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-context-support/build/classes/kotlin/main\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-jdbc/build/classes/kotlin/main\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-tx/build/classes/kotlin/main\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-context/build/classes/groovy/main\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-context/build/classes/kotlin/main\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-instrument/build/classes/kotlin/main\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-expression/build/classes/kotlin/main\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-aop/build/classes/kotlin/main\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-beans/build/classes/kotlin/main\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-beans/build/classes/groovy/main\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-core/build/classes/kotlin/main\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-jcl/build/classes/kotlin/main\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-core-coroutines/build/classes/kotlin/main\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-core/build/libs/spring-core-5.2.0.BUILD-SNAPSHOT.jar\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-core/build/libs/spring-cglib-repack-3.2.11.jar\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-core/build/libs/spring-objenesis-repack-3.0.1.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/com.google.code.findbugs/jsr305/3.0.2/25ea2e8b0c338a877313bd4672d3fe056ea78f0d/jsr305-3.0.2.jar\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-jcl/build/libs/spring-jcl-5.2.0.BUILD-SNAPSHOT.jar\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-webmvc/build/libs/spring-webmvc-5.2.0.BUILD-SNAPSHOT.jar\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-websocket/build/libs/spring-websocket-5.2.0.BUILD-SNAPSHOT.jar\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-context/build/libs/spring-context-5.2.0.BUILD-SNAPSHOT.jar\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-aop/build/libs/spring-aop-5.2.0.BUILD-SNAPSHOT.jar\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-orm/build/libs/spring-orm-5.2.0.BUILD-SNAPSHOT.jar\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-jdbc/build/libs/spring-jdbc-5.2.0.BUILD-SNAPSHOT.jar\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-tx/build/libs/spring-tx-5.2.0.BUILD-SNAPSHOT.jar\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-webflux/build/libs/spring-webflux-5.2.0.BUILD-SNAPSHOT.jar\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-web/build/libs/spring-web-5.2.0.BUILD-SNAPSHOT.jar\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-beans/build/libs/spring-beans-5.2.0.BUILD-SNAPSHOT.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/javax.xml.bind/jaxb-api/2.3.1/8531ad5ac454cc2deb9d4d32c40c4d7451939b5d/jaxb-api-2.3.1.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/javax.activation/javax.activation-api/1.2.0/85262acf3ca9816f9537ca47d5adeabaead7cb16/javax.activation-api-1.2.0.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/javax.el/javax.el-api/3.0.1-b04/8c0c970b8deae5054ff0bf4b17979c8181a506d3/javax.el-api-3.0.1-b04.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/javax.inject/javax.inject/1/6975da39a7040257bd51d21a231b76c915872d38/javax.inject-1.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/javax.servlet/javax.servlet-api/4.0.1/a27082684a2ff0bf397666c3943496c44541d1ca/javax.servlet-api-4.0.1.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/javax.servlet.jsp/javax.servlet.jsp-api/2.3.2-b02/287387015b38bb4fc5d5f085c938ab51bf82b00/javax.servlet.jsp-api-2.3.2-b02.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/javax.servlet.jsp.jstl/javax.servlet.jsp.jstl-api/1.2.1/f072f63ab1689e885ac40c221df3e6bb3e64a84a/javax.servlet.jsp.jstl-api-1.2.1.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/javax.websocket/javax.websocket-api/1.1/eeeb68631711256418dfbb47b11c731b6c8f6235/javax.websocket-api-1.1.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/junit/junit/4.13-beta-3/24e695de7450859f58dcfb2d818af908aee93e36/junit-4.13-beta-3.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/org.junit.jupiter/junit-jupiter-api/5.5.0-RC2/c75caf203e310f902f771945d1f2c16762fda9/junit-jupiter-api-5.5.0-RC2.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/org.testng/testng/6.14.3/d24515dc253e77e54b73df97e1fb2eb7faf34fdd/testng-6.14.3.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/org.aspectj/aspectjweaver/1.9.3/ef0506e0b8ae645f8c3b60df0c6832a0e2222cf6/aspectjweaver-1.9.3.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/org.codehaus.groovy/groovy/2.5.7/99907efe4b69f800c42584386f5d668e4d952bd5/groovy-2.5.7.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/org.xmlunit/xmlunit-matchers/2.6.2/9bd458f42d9cf7d9a7d22c7b7589d2ac79e0cb2d/xmlunit-matchers-2.6.2.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/org.hamcrest/hamcrest-core/1.3/42a25dc3219429f0e5d060061f71acb49bf010a0/hamcrest-core-1.3.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/org.apache.taglibs/taglibs-standard-jstlel/1.2.5/7acb4b1a404d8016caf89fddcbe84791c4bc2ba0/taglibs-standard-jstlel-1.2.5.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/org.seleniumhq.selenium/htmlunit-driver/2.35.1/c5d456f4e5e40f004af108e17fd4643a19f89d7e/htmlunit-driver-2.35.1.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/net.sourceforge.htmlunit/htmlunit/2.35.0/14e83558a9df8df7ffb09651719a8ffacd3e4e7b/htmlunit-2.35.0.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/org.seleniumhq.selenium/selenium-java/3.141.59/e8e20b741299cb8ffedbd2925a3ab69d08b41063/selenium-java-3.141.59.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/org.skyscreamer/jsonassert/1.5.0/6c9d5fe2f59da598d9aefc1cfc6528ff3cf32df3/jsonassert-1.5.0.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/com.jayway.jsonpath/json-path/2.4.0/765a4401ceb2dc8d40553c2075eb80a8fa35c2ae/json-path-2.4.0.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/org.jetbrains.kotlin/kotlin-reflect/1.3.40/f2f8357e000fd80d8d799110f012b86fd4637386/kotlin-reflect-1.3.40.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/org.jetbrains.kotlin/kotlin-stdlib/1.3.40/b8a521c687329303778548e2f09b0ba5b2665236/kotlin-stdlib-1.3.40.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/io.projectreactor/reactor-test/3.3.0.M2/fa1a77a601dea8b7ebb65a7953db5f2526082e8e/reactor-test-3.3.0.M2.jar\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-expression/build/libs/spring-expression-5.2.0.BUILD-SNAPSHOT.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/io.projectreactor/reactor-core/3.3.0.M2/2b1b820aecbb1ad24c9cc4f4874d45503bbadd2f/reactor-core-3.3.0.M2.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/org.junit.platform/junit-platform-commons/1.5.0-RC2/f3935b5d26294872b294ed785041175369f5377e/junit-platform-commons-1.5.0-RC2.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/org.apiguardian/apiguardian-api/1.1.0/fc9dff4bb36d627bdc553de77e1f17efd790876c/apiguardian-api-1.1.0.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/org.opentest4j/opentest4j/1.2.0/28c11eb91f9b6d8e200631d46e20a7f407f2a046/opentest4j-1.2.0.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/com.beust/jcommander/1.72/6375e521c1e11d6563d4f25a07ce124ccf8cd171/jcommander-1.72.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/org.apache-extras.beanshell/bsh/2.0b6/fb418f9b33a0b951e9a2978b4b6ee93b2707e72f/bsh-2.0b6.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/org.apache.taglibs/taglibs-standard-impl/1.2.5/9b9783ccb2a323383e6e20e36d368f8997b71967/taglibs-standard-impl-1.2.5.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/xalan/xalan/2.7.2/d55d3f02a56ec4c25695fe67e1334ff8c2ecea23/xalan-2.7.2.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/org.apache.commons/commons-lang3/3.9/122c7cee69b53ed4a7681c03d4ee4c0e2765da5/commons-lang3-3.9.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/org.apache.commons/commons-text/1.6/ba72cf0c40cf701e972fe7720ae844629f4ecca2/commons-text-1.6.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/org.apache.httpcomponents/httpmime/4.5.8/f5bd81aa5b2d091398199e6ee234bf7094889f1d/httpmime-4.5.8.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/net.sourceforge.htmlunit/htmlunit-core-js/2.35.0/60d897e72f27a05e69624d74b9929cf168e7c49a/htmlunit-core-js-2.35.0.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/net.sourceforge.htmlunit/neko-htmlunit/2.35.0/9786dc3ae4c32b7ff03ac7fef83e9b79b2fedaf/neko-htmlunit-2.35.0.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/net.sourceforge.htmlunit/htmlunit-cssparser/1.4.0/425e57761648ef7d99892c2ec7fe3954a31d1348/htmlunit-cssparser-1.4.0.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/commons-io/commons-io/2.6/815893df5f31da2ece4040fe0a12fd44b577afaf/commons-io-2.6.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/commons-net/commons-net/3.6/b71de00508dcb078d2b24b5fa7e538636de9b3da/commons-net-3.6.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/org.eclipse.jetty.websocket/websocket-client/9.4.16.v20190411/bc9da4de49196a95e1a7db6500be72ae15fadf0a/websocket-client-9.4.16.v20190411.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/org.seleniumhq.selenium/selenium-support/3.141.59/8735de5049acf0e761defc65ee5837d6541abaf5/selenium-support-3.141.59.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/org.seleniumhq.selenium/selenium-chrome-driver/3.141.59/67137314736c6a2f39a8aa59a562e9616ae5f77e/selenium-chrome-driver-3.141.59.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/org.seleniumhq.selenium/selenium-edge-driver/3.141.59/fc09c66f2d0b33b0816d770761ad1d599ef0df29/selenium-edge-driver-3.141.59.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/org.seleniumhq.selenium/selenium-firefox-driver/3.141.59/a99f2fe2a42747ed9809d4f62f51a9e1b336dde8/selenium-firefox-driver-3.141.59.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/org.seleniumhq.selenium/selenium-ie-driver/3.141.59/677b9b414a3a9bb2aeea89042a7b326edeb13a82/selenium-ie-driver-3.141.59.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/org.seleniumhq.selenium/selenium-opera-driver/3.141.59/6b11ed01182bfd8bb62ddeae34cf9eadd3cfc7ff/selenium-opera-driver-3.141.59.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/org.seleniumhq.selenium/selenium-safari-driver/3.141.59/a32b5b88f46ea4b0356079f0d2e2217543923046/selenium-safari-driver-3.141.59.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/org.seleniumhq.selenium/selenium-remote-driver/3.141.59/1c79ca890c312ff9916bd95df4f0c5182ec722d8/selenium-remote-driver-3.141.59.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/org.seleniumhq.selenium/selenium-api/3.141.59/e006ffd3aa7841e6e9125d9e6691b3a6b7592b05/selenium-api-3.141.59.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/net.bytebuddy/byte-buddy/1.8.15/cb36fe3c70ead5fcd016856a7efff908402d86b8/byte-buddy-1.8.15.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/org.apache.commons/commons-exec/1.3/8dfb9facd0830a27b1b5f29f84593f0aeee7773b/commons-exec-1.3.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/com.google.guava/guava/25.0-jre/7319c34fa5866a85b6bad445adad69d402323129/guava-25.0-jre.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/com.squareup.okhttp3/okhttp/3.11.0/75966e05a49046ca2ae734e5626f28837a8d1e82/okhttp-3.11.0.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/com.squareup.okio/okio/1.14.0/102d7be47241d781ef95f1581d414b0943053130/okio-1.14.0.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/org.xmlunit/xmlunit-core/2.6.2/b0461888cdd8d3975ea8a57df96520409cadcb6c/xmlunit-core-2.6.2.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/com.vaadin.external.google/android-json/0.0.20131108.vaadin1/fa26d351fe62a6a17f5cda1287c1c6110dec413f/android-json-0.0.20131108.vaadin1.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/net.minidev/json-smart/2.3/7396407491352ce4fa30de92efb158adb76b5b/json-smart-2.3.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/org.slf4j/slf4j-api/1.7.26/77100a62c2e6f04b53977b9f541044d7d722693d/slf4j-api-1.7.26.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/org.jetbrains.kotlin/kotlin-stdlib-common/1.3.40/ff8f3da514fc2877d1303d55e22d6da8156c29fb/kotlin-stdlib-common-1.3.40.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/org.jetbrains/annotations/13.0/919f0dfe192fb4e063e7dacadee7f8bb9a2672a9/annotations-13.0.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/org.reactivestreams/reactive-streams/1.0.2/323964c36556eb0e6209f65c1cef72b53b461ab8/reactive-streams-1.0.2.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/xalan/serializer/2.7.2/24247f3bb052ee068971393bdb83e04512bb1c3c/serializer-2.7.2.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/org.apache.httpcomponents/httpclient/4.5.8/c27c9d6f15435dc2b6947112027b418b0eef32b9/httpclient-4.5.8.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/xerces/xercesImpl/2.12.0/f02c844149fd306601f20e0b34853a670bef7fa2/xercesImpl-2.12.0.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/org.eclipse.jetty/jetty-client/9.4.16.v20190411/1efc1f164b9a7b88e779989c119347814a36f6fa/jetty-client-9.4.16.v20190411.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/org.eclipse.jetty/jetty-xml/9.4.16.v20190411/b4f944eb0210e97c7a2cabed1807bbd2a2a6122/jetty-xml-9.4.16.v20190411.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/org.eclipse.jetty.websocket/websocket-common/9.4.16.v20190411/eb3d57c1c486bcafbc8e99bad2b2af3c006e547d/websocket-common-9.4.16.v20190411.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/org.eclipse.jetty/jetty-http/9.4.16.v20190411/f0584878af4a1eed5c8c5230d330b7a174b494f5/jetty-http-9.4.16.v20190411.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/org.eclipse.jetty/jetty-io/9.4.16.v20190411/4b2277e4f103889305582e221084a49089a59869/jetty-io-9.4.16.v20190411.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/org.eclipse.jetty/jetty-util/9.4.16.v20190411/e210e1cefbc341422704606f0f41f31b3b374913/jetty-util-9.4.16.v20190411.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/com.google.code.findbugs/jsr305/1.3.9/40719ea6961c0cb6afaeb6a921eaa1f6afd4cfdf/jsr305-1.3.9.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/org.checkerframework/checker-compat-qual/2.0.0/fc89b03860d11d6213d0154a62bcd1c2f69b9efa/checker-compat-qual-2.0.0.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/com.google.errorprone/error_prone_annotations/2.1.3/39b109f2cd352b2d71b52a3b5a1a9850e1dc304b/error_prone_annotations-2.1.3.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/com.google.j2objc/j2objc-annotations/1.1/ed28ded51a8b1c6b112568def5f4b455e6809019/j2objc-annotations-1.1.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/org.codehaus.mojo/animal-sniffer-annotations/1.14/775b7e22fb10026eed3f86e8dc556dfafe35f2d5/animal-sniffer-annotations-1.14.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/net.minidev/accessors-smart/1.2/c592b500269bfde36096641b01238a8350f8aa31/accessors-smart-1.2.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/org.apache.httpcomponents/httpcore/4.4.11/de748cf874e4e193b42eceea9fe5574fabb9d4df/httpcore-4.4.11.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/commons-codec/commons-codec/1.11/3acb4705652e16236558f0f4f2192cc33c3bd189/commons-codec-1.11.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/xml-apis/xml-apis/1.4.01/3789d9fada2d3d458c4ba2de349d48780f381ee3/xml-apis-1.4.01.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/org.eclipse.jetty.websocket/websocket-api/9.4.16.v20190411/47df44edbf52d14b80a8d8d1cb5cc7a265bed8f0/websocket-api-9.4.16.v20190411.jar\"\n            , \"/root/.gradle/caches/modules-2/files-2.1/org.ow2.asm/asm/5.0.4/da08b8cce7bbf903602a25a3a163ae252435795/asm-5.0.4.jar\"\n            ]\n        , jceArguments =\n            [ \"-Xlint:serial\"\n            , \"-Xlint:cast\"\n            , \"-Xlint:classfile\"\n            , \"-Xlint:dep-ann\"\n            , \"-Xlint:divzero\"\n            , \"-Xlint:empty\"\n            , \"-Xlint:finally\"\n            , \"-Xlint:overrides\"\n            , \"-Xlint:path\"\n            , \"-Xlint:processing\"\n            , \"-Xlint:static\"\n            , \"-Xlint:try\"\n            , \"-Xlint:-options\"\n            , \"-Xlint:varargs\"\n            , \"-Xlint:fallthrough\"\n            , \"-Xlint:rawtypes\"\n            , \"-Xlint:deprecation\"\n            , \"-Xlint:unchecked\"\n            , \"-Werror\"\n            ]\n        , jceInputFiles =\n            [ \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/mock/env/package-info.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/mock/env/MockEnvironment.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/mock/env/MockPropertySource.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/mock/jndi/package-info.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/mock/jndi/SimpleNamingContext.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/mock/jndi/ExpectedLookupTemplate.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/mock/jndi/SimpleNamingContextBuilder.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/mock/http/package-info.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/mock/http/MockHttpOutputMessage.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/mock/http/client/package-info.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/mock/http/client/reactive/package-info.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/mock/http/client/reactive/MockClientHttpRequest.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/mock/http/client/reactive/MockClientHttpResponse.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/mock/http/client/MockClientHttpRequest.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/mock/http/client/MockClientHttpResponse.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/mock/http/client/MockAsyncClientHttpRequest.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/mock/http/server/reactive/package-info.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/mock/http/server/reactive/MockServerHttpResponse.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/mock/http/server/reactive/MockServerHttpRequest.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/mock/http/MockHttpInputMessage.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/mock/web/MockBodyContent.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/mock/web/package-info.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/mock/web/MockMultipartFile.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/mock/web/MockRequestDispatcher.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/mock/web/MockHttpServletRequest.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/mock/web/HeaderValueHolder.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/mock/web/DelegatingServletInputStream.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/mock/web/reactive/function/server/package-info.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/mock/web/reactive/function/server/MockServerRequest.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/mock/web/MockFilterConfig.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/mock/web/MockHttpServletResponse.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/mock/web/MockExpressionEvaluator.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/mock/web/MockServletContext.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/mock/web/MockCookie.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/mock/web/MockSessionCookieConfig.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/mock/web/MockFilterChain.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/mock/web/MockServletConfig.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/mock/web/server/package-info.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/mock/web/server/MockWebSession.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/mock/web/server/MockServerWebExchange.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/mock/web/MockPageContext.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/mock/web/MockHttpSession.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/mock/web/PassThroughFilterChain.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/mock/web/MockAsyncContext.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/mock/web/MockPart.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/mock/web/MockMultipartHttpServletRequest.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/mock/web/DelegatingServletOutputStream.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/mock/web/MockJspWriter.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/package-info.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/jdbc/package-info.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/jdbc/JdbcTestUtils.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/ActiveProfilesResolver.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/cache/ContextCache.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/cache/DefaultCacheAwareContextLoaderDelegate.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/cache/package-info.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/cache/ContextCacheUtils.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/cache/DefaultContextCache.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/TestContext.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/CacheAwareContextLoaderDelegate.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/BootstrapContext.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/package-info.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/TestExecutionListener.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/ContextCustomizerFactory.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/ContextLoader.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/jdbc/package-info.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/jdbc/SqlGroup.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/jdbc/SqlConfig.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/jdbc/SqlScriptsTestExecutionListener.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/jdbc/Sql.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/jdbc/MergedSqlConfig.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/TestPropertySource.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/ActiveProfiles.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/SmartContextLoader.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/ContextHierarchy.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/TestContextBootstrapper.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/TestExecutionListeners.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/ContextCustomizer.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/junit/jupiter/package-info.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/junit/jupiter/DisabledIfCondition.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/junit/jupiter/DisabledIf.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/junit/jupiter/AbstractExpressionEvaluatingCondition.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/junit/jupiter/SpringJUnitConfig.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/junit/jupiter/SpringExtension.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/junit/jupiter/web/package-info.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/junit/jupiter/web/SpringJUnitWebConfig.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/junit/jupiter/EnabledIfCondition.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/junit/jupiter/EnabledIf.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/support/ContextLoaderUtils.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/support/AnnotationConfigContextLoader.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/support/package-info.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/support/GenericPropertiesContextLoader.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/support/AbstractDirtiesContextTestExecutionListener.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/support/TestConstructorUtils.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/support/AbstractTestContextBootstrapper.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/support/AbstractGenericContextLoader.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/support/DefaultActiveProfilesResolver.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/support/DefaultBootstrapContext.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/support/GenericXmlContextLoader.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/support/AbstractDelegatingSmartContextLoader.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/support/ApplicationContextInitializerUtils.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/support/DependencyInjectionTestExecutionListener.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/support/TestPropertySourceAttributes.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/support/DirtiesContextTestExecutionListener.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/support/AnnotationConfigContextLoaderUtils.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/support/MergedTestPropertySources.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/support/GenericGroovyXmlContextLoader.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/support/AbstractContextLoader.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/support/TestPropertySourceUtils.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/support/ActiveProfilesUtils.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/support/DefaultTestContextBootstrapper.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/support/DelegatingSmartContextLoader.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/support/DirtiesContextBeforeModesTestExecutionListener.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/support/AbstractTestExecutionListener.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/support/DefaultTestContext.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/web/package-info.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/web/WebDelegatingSmartContextLoader.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/web/WebAppConfiguration.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/web/GenericGroovyXmlWebContextLoader.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/web/WebMergedContextConfiguration.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/web/AbstractGenericWebContextLoader.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/web/ServletTestExecutionListener.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/web/WebTestContextBootstrapper.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/web/AnnotationConfigWebContextLoader.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/web/GenericXmlWebContextLoader.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/web/socket/package-info.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/web/socket/MockServerContainer.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/web/socket/MockServerContainerContextCustomizer.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/web/socket/MockServerContainerContextCustomizerFactory.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/ContextConfigurationAttributes.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/MergedContextConfiguration.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/event/package-info.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/event/EventPublishingTestExecutionListener.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/event/AfterTestExecutionEvent.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/event/AfterTestClassEvent.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/event/BeforeTestExecutionEvent.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/event/PrepareTestInstanceEvent.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/event/TestContextEvent.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/event/AfterTestMethodEvent.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/event/BeforeTestClassEvent.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/event/annotation/package-info.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/event/annotation/BeforeTestExecution.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/event/annotation/PrepareTestInstance.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/event/annotation/BeforeTestMethod.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/event/annotation/AfterTestMethod.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/event/annotation/AfterTestExecution.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/event/annotation/BeforeTestClass.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/event/annotation/AfterTestClass.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/event/BeforeTestMethodEvent.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/testng/package-info.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/testng/AbstractTestNGSpringContextTests.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/testng/AbstractTransactionalTestNGSpringContextTests.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/junit4/package-info.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/junit4/statements/ProfileValueChecker.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/junit4/statements/package-info.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/junit4/statements/RunAfterTestMethodCallbacks.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/junit4/statements/RunBeforeTestClassCallbacks.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/junit4/statements/RunBeforeTestMethodCallbacks.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/junit4/statements/SpringFailOnTimeout.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/junit4/statements/RunPrepareTestInstanceCallbacks.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/junit4/statements/RunAfterTestExecutionCallbacks.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/junit4/statements/SpringRepeat.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/junit4/statements/RunAfterTestClassCallbacks.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/junit4/statements/RunBeforeTestExecutionCallbacks.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/junit4/rules/package-info.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/junit4/rules/SpringClassRule.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/junit4/rules/SpringMethodRule.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/junit4/AbstractJUnit4SpringContextTests.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/junit4/AbstractTransactionalJUnit4SpringContextTests.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/junit4/SpringJUnit4ClassRunner.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/junit4/SpringRunner.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/transaction/BeforeTransaction.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/transaction/package-info.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/transaction/AfterTransaction.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/transaction/TestTransaction.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/transaction/TestContextTransactionUtils.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/transaction/TransactionContextHolder.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/transaction/TransactionContext.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/transaction/TransactionalTestExecutionListener.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/TestContextManager.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/util/package-info.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/util/TestContextResourceUtils.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/ContextConfiguration.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/BootstrapWith.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/TestConstructor.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/context/BootstrapUtils.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/package-info.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/servlet/MvcResult.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/servlet/package-info.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/servlet/DefaultMvcResult.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/servlet/DispatcherServletCustomizer.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/servlet/htmlunit/webdriver/package-info.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/servlet/htmlunit/webdriver/WebConnectionHtmlUnitDriver.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/servlet/htmlunit/webdriver/MockMvcHtmlUnitDriverBuilder.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/servlet/htmlunit/MockMvcWebConnection.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/servlet/htmlunit/package-info.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/servlet/htmlunit/HostRequestMatcher.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/servlet/htmlunit/MockMvcWebClientBuilder.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/servlet/htmlunit/MockWebResponseBuilder.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/servlet/htmlunit/MockMvcWebConnectionBuilderSupport.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/servlet/htmlunit/HtmlUnitRequestBuilder.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/servlet/htmlunit/UrlRegexRequestMatcher.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/servlet/htmlunit/ForwardRequestPostProcessor.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/servlet/htmlunit/DelegatingWebConnection.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/servlet/htmlunit/WebRequestMatcher.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/servlet/request/package-info.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/servlet/request/MockMvcRequestBuilders.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/servlet/request/MockMultipartHttpServletRequestBuilder.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/servlet/request/RequestPostProcessor.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/servlet/request/ConfigurableSmartRequestBuilder.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/servlet/MockMvc.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/servlet/ResultHandler.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/servlet/RequestBuilder.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/servlet/result/package-info.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/servlet/result/FlashAttributeResultMatchers.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/servlet/result/XpathResultMatchers.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/servlet/result/MockMvcResultMatchers.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/servlet/result/ViewResultMatchers.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/servlet/result/StatusResultMatchers.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/servlet/result/RequestResultMatchers.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/servlet/result/HeaderResultMatchers.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/servlet/result/MockMvcResultHandlers.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/servlet/result/ContentResultMatchers.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/servlet/result/CookieResultMatchers.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/servlet/result/ModelResultMatchers.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/servlet/result/HandlerResultMatchers.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/servlet/result/PrintingResultHandler.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/servlet/result/JsonPathResultMatchers.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/servlet/SmartRequestBuilder.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/servlet/MockMvcBuilder.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/servlet/TestDispatcherServlet.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/servlet/ResultActions.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/servlet/setup/package-info.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/servlet/setup/StubWebApplicationContext.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/servlet/setup/SharedHttpSessionConfigurer.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/servlet/setup/MockMvcConfigurer.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/servlet/setup/ConfigurableMockMvcBuilder.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/servlet/setup/PatternMappingFilterProxy.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/servlet/setup/MockMvcBuilders.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/servlet/setup/MockMvcConfigurerAdapter.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/servlet/setup/AbstractMockMvcBuilder.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/servlet/setup/DefaultMockMvcBuilder.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/servlet/ResultMatcher.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/servlet/MockMvcBuilderSupport.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/reactive/server/DefaultWebTestClient.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/reactive/server/package-info.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/reactive/server/EntityExchangeResult.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/reactive/server/FluxExchangeResult.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/reactive/server/AbstractMockServerSpec.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/reactive/server/HttpHandlerConnector.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/reactive/server/HeaderAssertions.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/reactive/server/DefaultMockServerSpec.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/reactive/server/ApplicationContextSpec.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/reactive/server/ExchangeResult.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/reactive/server/XpathAssertions.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/reactive/server/DefaultRouterFunctionSpec.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/reactive/server/JsonPathAssertions.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/reactive/server/WiretapConnector.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/reactive/server/DefaultControllerSpec.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/reactive/server/DefaultWebTestClientBuilder.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/reactive/server/WebTestClient.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/reactive/server/StatusAssertions.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/reactive/server/WebTestClientConfigurer.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/reactive/server/MockServerConfigurer.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/ModelAndViewAssert.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/client/package-info.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/client/RequestMatcher.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/client/response/package-info.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/client/response/DefaultResponseCreator.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/client/response/MockRestResponseCreators.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/client/DefaultRequestExpectation.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/client/UnorderedRequestExpectationManager.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/client/RequestExpectationManager.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/client/RequestExpectation.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/client/MockRestServiceServer.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/client/ResponseCreator.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/client/SimpleRequestExpectationManager.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/client/match/package-info.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/client/match/MockRestRequestMatchers.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/client/match/XpathRequestMatchers.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/client/match/ContentRequestMatchers.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/client/match/JsonPathRequestMatchers.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/client/AbstractRequestExpectationManager.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/client/ExpectedCount.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/client/ResponseActions.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/web/client/MockMvcClientHttpRequestFactory.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/annotation/DirtiesContext.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/annotation/package-info.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/annotation/SystemProfileValueSource.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/annotation/ProfileValueSource.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/annotation/IfProfileValue.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/annotation/ProfileValueUtils.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/annotation/Commit.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/annotation/TestAnnotationUtils.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/annotation/Timed.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/annotation/Rollback.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/annotation/Repeat.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/annotation/ProfileValueSourceConfiguration.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/util/XpathExpectationsHelper.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/util/package-info.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/util/XmlExpectationsHelper.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/util/AopTestUtils.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/util/AssertionErrors.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/util/JsonPathExpectationsHelper.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/util/MetaAnnotationUtils.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/util/JsonExpectationsHelper.java\"\n            , \"/tmp/analyzing-2bd51b5802831fa9/spring-test/src/main/java/org/springframework/test/util/ReflectionTestUtils.java\"\n            ]\n        , jceOutputDir =\n            \"/tmp/analyzing-2bd51b5802831fa9/spring-test/build/classes/java/main\"\n        }\n    , SolverError\n        { solverName = \"error-prone\"\n        , renderError =\n            \"Capture:\\n-----\\nCall Stack: \\n------Execution Failed:\\nwarning: [path] bad path element \\\"/tmp/analyzing-2bd51b5802831fa9/spring-framework-bom/build/classes/kotlin/main\\\": no such file or directory\\nwarning: [path] bad path element \\\"/tmp/analyzing-2bd51b5802831fa9/buildSrc/build/classes/kotlin/main\\\": no such file or directory\\nwarning: [path] bad path element \\\"/tmp/analyzing-2bd51b5802831fa9/spring-context/build/classes/groovy/main\\\": no such file or directory\\nwarning: [path] bad path element \\\"/root/.gradle/caches/modules-2/files-2.1/xalan/xalan/2.7.2/d55d3f02a56ec4c25695fe67e1334ff8c2ecea23/xercesImpl.jar\\\": no such file or directory\\nwarning: [path] bad path element \\\"/root/.gradle/caches/modules-2/files-2.1/xalan/xalan/2.7.2/d55d3f02a56ec4c25695fe67e1334ff8c2ecea23/xml-apis.jar\\\": no such file or directory\\nwarning: [path] bad path element \\\"/root/.gradle/caches/modules-2/files-2.1/xalan/xalan/2.7.2/d55d3f02a56ec4c25695fe67e1334ff8c2ecea23/serializer.jar\\\": no such file or directory\\nwarning: [path] bad path element \\\"/root/.gradle/caches/modules-2/files-2.1/xalan/serializer/2.7.2/24247f3bb052ee068971393bdb83e04512bb1c3c/xml-apis.jar\\\": no such file or directory\\nerror: warnings found and -Werror specified\\n1 error\\n7 warnings\\n\"\n        }\n    )\n[DEBUG] [20/Jun/2019:19:41:59 +0000] [()] Tool completed with 0 but only reporting up to 1200.\n[DEBUG] [20/Jun/2019:19:41:59 +0000] [()] All tools complete for commit \"master\"\n[DEBUG] [20/Jun/2019:19:42:03 +0000] [()] Analysis has completed.\n"}}
