{"tag":"AnalysisSuccess","contents":{"requestedTools":null,"toolResults":[[{"tag":"Infer"},{"tag":"ToolSuccess","contents":[[{"tnType":"NULL_DEREFERENCE","tnDesc":"object `executorSummary` last assigned on line 1313 could be null and is dereferenced at line 1314.","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java","tnLine":1314,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.ui.UIHelpers.getBoltExecutorStats(java.lang.String,java.util.Map,org.apache.storm.generated.ExecutorAggregateStats):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `x.get_total_resources()` could be null and is dereferenced at line 571.","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java","tnLine":571,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.ui.UIHelpers.lambda$getClusterSummary$0(org.apache.storm.generated.SupervisorSummary):double","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `workerExecMap.get(worker)` could be null and is dereferenced at line 159.","tnFile":"storm-server/src/main/java/org/apache/storm/scheduler/resource/strategies/scheduling/ConstraintSolverStrategy.java","tnLine":159,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.scheduler.resource.strategies.scheduling.ConstraintSolverStrategy.checkSpreadSchedulingValid(org.apache.storm.scheduler.Cluster,org.apache.storm.scheduler.TopologyDetails):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void BasicContainer.relaunch()` indirectly reads with synchronization from `this._workerId`. Potentially races with unsynchronized write in method `BasicContainer.cleanUpForRestart()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/supervisor/BasicContainer.java","tnLine":240,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.supervisor.BasicContainer.relaunch():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `meta.get_settable()` could be null and is dereferenced at line 213.","tnFile":"storm-core/src/jvm/org/apache/storm/command/Blobstore.java","tnLine":213,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.command.Blobstore$3.run(org.apache.storm.blobstore.ClientBlobStore):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `AtomicOutputStream HdfsBlobStore.createBlob(String,SettableBlobMeta,Subject)` indirectly reads without synchronization from `this.localSubject`. Potentially races with write in method `HdfsBlobStore.prepareInternal(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"external/storm-hdfs-blobstore/src/main/java/org/apache/storm/hdfs/blobstore/HdfsBlobStore.java","tnLine":186,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.hdfs.blobstore.HdfsBlobStore.createBlob(java.lang.String,org.apache.storm.generated.SettableBlobMeta,javax.security.auth.Subject):org.apache.storm.blobstore.AtomicOutputStream","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `stats.get_specific()` could be null and is dereferenced at line 1424.","tnFile":"storm-server/src/main/java/org/apache/storm/stats/StatsUtil.java","tnLine":1424,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.stats.StatsUtil.convertExecutorStats(org.apache.storm.generated.ExecutorStats):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `componentPageInfo.get_window_to_stats()` could be null and is dereferenced at line 1923.","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java","tnLine":1923,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.ui.UIHelpers.unpackBoltPageInfo(org.apache.storm.generated.ComponentPageInfo,java.lang.String,java.lang.String,boolean,java.util.Map):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getOffHeapMemoryRequirement(exec)` could be null and is dereferenced at line 286.","tnFile":"storm-server/src/main/java/org/apache/storm/scheduler/TopologyDetails.java","tnLine":286,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.scheduler.TopologyDetails.getTotalMemReqTask(org.apache.storm.scheduler.ExecutorDetails):java.lang.Double","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int HdfsBlobStore.updateBlobReplication(String,int,Subject)` reads without synchronization from `this.aclHandler`. Potentially races with write in method `HdfsBlobStore.prepareInternal(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"external/storm-hdfs-blobstore/src/main/java/org/apache/storm/hdfs/blobstore/HdfsBlobStore.java","tnLine":371,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.hdfs.blobstore.HdfsBlobStore.updateBlobReplication(java.lang.String,int,javax.security.auth.Subject):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `AtomicOutputStream HdfsBlobStore.createBlob(String,SettableBlobMeta,Subject)` reads without synchronization from `this.hbs`. Potentially races with write in method `HdfsBlobStore.prepareInternal(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"external/storm-hdfs-blobstore/src/main/java/org/apache/storm/hdfs/blobstore/HdfsBlobStore.java","tnLine":191,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.hdfs.blobstore.HdfsBlobStore.createBlob(java.lang.String,org.apache.storm.generated.SettableBlobMeta,javax.security.auth.Subject):org.apache.storm.blobstore.AtomicOutputStream","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `newSummary.get_nimbuses()` could be null and is dereferenced at line 5020.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":5020,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus$ClusterSummaryMetricSet.updateHistogram(org.apache.storm.generated.ClusterSummary):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void LocalCluster.waitForIdle()` indirectly reads without synchronization from container `utils.Time.THREAD_SLEEP_TIMES_NANOS` via call to `get`. Potentially races with write in method `LocalCluster.addSupervisor(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"storm-server/src/main/java/org/apache/storm/LocalCluster.java","tnLine":743,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.LocalCluster.waitForIdle():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void WorkerTransfer.flush()` indirectly mutates container `taskMessages` via call to `clear` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"storm-client/src/jvm/org/apache/storm/daemon/worker/WorkerTransfer.java","tnLine":105,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.worker.WorkerTransfer.flush():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `nid` last assigned on line 157 could be null and is dereferenced at line 183.","tnFile":"storm-client/src/jvm/org/apache/storm/security/auth/sasl/SimpleSaslServerCallbackHandler.java","tnLine":183,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.security.auth.sasl.SimpleSaslServerCallbackHandler.handle(javax.security.auth.callback.Callback[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `spout2stats` last assigned on line 671 could be null and is dereferenced at line 673.","tnFile":"storm-server/src/main/java/org/apache/storm/stats/StatsUtil.java","tnLine":673,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.stats.StatsUtil.postAggregateTopoStats(java.util.Map,java.util.Map,java.util.HashMap,java.lang.String,org.apache.storm.cluster.IStormClusterState):org.apache.storm.generated.TopologyPageInfo","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `m.get_type()` could be null and is dereferenced at line 72.","tnFile":"storm-server/src/main/java/org/apache/storm/pacemaker/Pacemaker.java","tnLine":72,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.pacemaker.Pacemaker.handleMessage(org.apache.storm.generated.HBMessage,boolean):org.apache.storm.generated.HBMessage","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int HiveWriter.getTotalRecords()` reads without synchronization from `this.totalRecords`. Potentially races with write in method `HiveWriter.flush(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"external/storm-hive/src/main/java/org/apache/storm/hive/common/HiveWriter.java","tnLine":221,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.hive.common.HiveWriter.getTotalRecords():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `summary.get_topologies()` could be null and is dereferenced at line 49.","tnFile":"examples/storm-starter/src/jvm/org/apache/storm/starter/FastWordCountTopology.java","tnLine":49,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.starter.FastWordCountTopology.printMetrics(org.apache.storm.generated.Nimbus$Iface,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `struct.supervisors` last accessed on line 684 could be null and is dereferenced at line 684.","tnFile":"storm-client/src/jvm/org/apache/storm/generated/ClusterSummary.java","tnLine":684,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.generated.ClusterSummary$ClusterSummaryTupleScheme.write(org.apache.storm.thrift.protocol.TProtocol,org.apache.storm.generated.ClusterSummary):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `context.getThisSources()` could be null and is dereferenced at line 58.","tnFile":"storm-client/src/jvm/org/apache/storm/topology/BaseStatefulBoltExecutor.java","tnLine":58,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.topology.BaseStatefulBoltExecutor.getCheckpointInputTaskCount(org.apache.storm.task.TopologyContext):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileReader` acquired by call to `new()` at line 135 is not released after line 140.\n**Note**: potential exception at line 136","tnFile":"examples/storm-starter/src/jvm/org/apache/storm/starter/BlobStoreAPIWordCountTopology.java","tnLine":140,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.starter.BlobStoreAPIWordCountTopology.readFile(java.io.File):java.lang.StringBuilder","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.apache.storm.metric.internal.RateTracker` acquired by call to `JCQueue$QueueMetrics(...)` at line 69 is not released after line 69.\n**Note**: potential exception at line 69","tnFile":"storm-client/src/jvm/org/apache/storm/utils/JCQueue.java","tnLine":69,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.utils.JCQueue.<init>(java.lang.String,int,int,int,org.apache.storm.policy.IWaitStrategy,java.lang.String,java.lang.String,java.lang.Integer,int,org.apache.storm.metrics2.StormMetricRegistry)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `summ.get_stats().get_specific()` could be null and is dereferenced at line 74.","tnFile":"examples/storm-loadgen/src/main/java/org/apache/storm/loadgen/CaptureLoad.java","tnLine":74,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.loadgen.CaptureLoad.extractBoltValues(java.util.List,org.apache.storm.generated.GlobalStreamId,java.util.function.Function):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.apache.storm.assignments.InMemoryAssignmentBackend` acquired by call to `mkStormClusterState(...)` at line 99 is not released after line 109.","tnFile":"storm-core/src/jvm/org/apache/storm/command/AdminCommands.java","tnLine":109,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.command.AdminCommands$CredentialsDebug.run(java.lang.String[],java.util.Map,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `clusterSummary.get_supervisors()` could be null and is dereferenced at line 4986.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":4986,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus$ClusterSummaryMetricSet$6.transform(org.apache.storm.generated.ClusterSummary):java.lang.Integer","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `base.get_topology_action_options()` could be null and is dereferenced at line 372.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":372,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus.lambda$static$8(java.lang.Object,org.apache.storm.daemon.nimbus.Nimbus,java.lang.String,org.apache.storm.generated.StormBase):org.apache.storm.generated.StormBase","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void HdfsBlobStore.setBlobMeta(String,SettableBlobMeta,Subject)` indirectly reads without synchronization from `this.hbs`. Potentially races with write in method `HdfsBlobStore.prepareInternal(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"external/storm-hdfs-blobstore/src/main/java/org/apache/storm/hdfs/blobstore/HdfsBlobStore.java","tnLine":303,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.hdfs.blobstore.HdfsBlobStore.setBlobMeta(java.lang.String,org.apache.storm.generated.SettableBlobMeta,javax.security.auth.Subject):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `execToPort` last assigned on line 835 could be null and is dereferenced at line 836.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":836,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus.auditAssignmentChanges(java.util.Map,java.util.HashMap):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Rankings Rankings.copy()` indirectly reads without synchronization from container `this.rankedItems` via call to `iterator`. Potentially races with write in method `Rankings.updateWith(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"examples/storm-starter/src/jvm/org/apache/storm/starter/tools/Rankings.java","tnLine":147,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.starter.tools.Rankings.copy():org.apache.storm.starter.tools.Rankings","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `AtomicOutputStream NimbusBlobStore.createBlobToExtend(String,SettableBlobMeta)` reads without synchronization from `this.client`. Potentially races with write in method `NimbusBlobStore.prepare(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"storm-client/src/jvm/org/apache/storm/blobstore/NimbusBlobStore.java","tnLine":57,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.blobstore.NimbusBlobStore.createBlobToExtend(java.lang.String,org.apache.storm.generated.SettableBlobMeta):org.apache.storm.blobstore.AtomicOutputStream","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `componentAggregateStats.get_specific_stats()` could be null and is dereferenced at line 1469.","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java","tnLine":1469,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.ui.UIHelpers.getTopologyBoltAggStatsMap(org.apache.storm.generated.ComponentAggregateStats,java.lang.String):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `com.esotericsoftware.kryo.io.Input` acquired by call to `KryoTupleDeserializer(...)` at line 46 is not released after line 47.","tnFile":"storm-client/src/jvm/org/apache/storm/state/DefaultStateSerializer.java","tnLine":47,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.state.DefaultStateSerializer$1.initialValue():com.esotericsoftware.kryo.Kryo","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `bolt.getValue().get_common()` could be null and is dereferenced at line 378.","tnFile":"examples/storm-loadgen/src/main/java/org/apache/storm/loadgen/CaptureLoad.java","tnLine":378,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.loadgen.CaptureLoad.getBoltsResources(org.apache.storm.generated.StormTopology,java.util.Map):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `topoPageInfo.get_id_to_spout_agg_stats()` could be null and is dereferenced at line 4071.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":4071,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus.getTopologyPageInfo(java.lang.String,java.lang.String,boolean):org.apache.storm.generated.TopologyPageInfo","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `workerHeartbeat.get_executors()` could be null and is dereferenced at line 175.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/HeartbeatCache.java","tnLine":175,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.HeartbeatCache.updateHeartbeat(org.apache.storm.generated.SupervisorWorkerHeartbeat,java.lang.Integer):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Iterator NimbusBlobStore.listKeys()` reads without synchronization from `this.client`. Potentially races with write in method `NimbusBlobStore.prepare(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"storm-client/src/jvm/org/apache/storm/blobstore/NimbusBlobStore.java","tnLine":159,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.blobstore.NimbusBlobStore.listKeys():java.util.Iterator","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `assignment.get_executor_node_port()` could be null and is dereferenced at line 1207.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":1207,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus.topologiesOnSupervisor(java.util.Map,java.lang.String):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `spouts` last assigned on line 59 could be null and is dereferenced at line 60.","tnFile":"storm-core/src/jvm/org/apache/storm/utils/TopologySpoutLag.java","tnLine":60,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.utils.TopologySpoutLag.lag(org.apache.storm.generated.StormTopology,java.util.Map):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `realUser` last assigned on line 3479 could be null and is dereferenced at line 3492.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":3492,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus.uploadNewCredentials(java.lang.String,org.apache.storm.generated.Credentials):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `com.esotericsoftware.kryo.io.Input` acquired by call to `new()` at line 59 is not released after line 60.","tnFile":"examples/storm-loadgen/src/main/java/org/apache/storm/loadgen/HttpForwardingMetricsServer.java","tnLine":60,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.loadgen.HttpForwardingMetricsServer$MetricsCollectionServlet.doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `common` last assigned on line 143 could be null and is dereferenced at line 144.","tnFile":"storm-client/src/jvm/org/apache/storm/daemon/StormCommon.java","tnLine":144,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.StormCommon.componentConf(java.lang.Object):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `m.get_data()` could be null and is dereferenced at line 74.","tnFile":"storm-client/src/jvm/org/apache/storm/pacemaker/codec/ThriftDecoder.java","tnLine":74,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.pacemaker.codec.ThriftDecoder.decode(org.apache.storm.shade.io.netty.channel.ChannelHandlerContext,org.apache.storm.shade.io.netty.buffer.ByteBuf,java.util.List):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getMapByKey(accData,\"window->emitted\")` could be null and is dereferenced by call to `mapKeyStr(...)` at line 690.","tnFile":"storm-server/src/main/java/org/apache/storm/stats/StatsUtil.java","tnLine":690,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.stats.StatsUtil.postAggregateTopoStats(java.util.Map,java.util.Map,java.util.HashMap,java.lang.String,org.apache.storm.cluster.IStormClusterState):org.apache.storm.generated.TopologyPageInfo","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `details` last assigned on line 129 could be null and is dereferenced at line 132.","tnFile":"storm-server/src/main/java/org/apache/storm/pacemaker/Pacemaker.java","tnLine":132,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.pacemaker.Pacemaker.sendPulse(org.apache.storm.generated.HBPulse):org.apache.storm.generated.HBMessage","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void BasicContainer.launch()` reads without synchronization from `this._workerId`. Potentially races with write in method `BasicContainer.createNewWorkerId()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/supervisor/BasicContainer.java","tnLine":824,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.supervisor.BasicContainer.launch():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getBlobReplicationCount(this,masterStormCodeKey(topoId))` could be null and is dereferenced at line 1681.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":1681,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus.waitForDesiredCodeReplication(java.util.Map,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `execToNodeInfo` last assigned on line 4318 could be null and is dereferenced at line 4320.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":4320,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus.getComponentPageInfo(java.lang.String,java.lang.String,java.lang.String,boolean):org.apache.storm.generated.ComponentPageInfo","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `StormTopology Nimbus.getTopology(String)` indirectly writes to field `common.inputs` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":4416,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus.getTopology(java.lang.String):org.apache.storm.generated.StormTopology","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `TopologyInfo Nimbus.getTopologyInfoWithOpts(String,GetInfoOptions)` indirectly writes to field `common.inputs` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":3926,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus.getTopologyInfoWithOpts(java.lang.String,org.apache.storm.generated.GetInfoOptions):org.apache.storm.generated.TopologyInfo","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `String HiveWriter.toString()` reads without synchronization from `this.txnBatch`. Potentially races with write in method `HiveWriter.abort()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"external/storm-hive/src/main/java/org/apache/storm/hive/common/HiveWriter.java","tnLine":132,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.hive.common.HiveWriter.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `struct.spouts` last accessed on line 1592 could be null and is dereferenced at line 1592.","tnFile":"storm-client/src/jvm/org/apache/storm/generated/StormTopology.java","tnLine":1592,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.generated.StormTopology$StormTopologyTupleScheme.write(org.apache.storm.thrift.protocol.TProtocol,org.apache.storm.generated.StormTopology):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `history.get_users()` could be null and is dereferenced at line 2633.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":2633,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus.readTopologyHistory(java.lang.String,java.util.Collection):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getUsedSlots(topId)` could be null and is dereferenced at line 197.","tnFile":"storm-server/src/main/java/org/apache/storm/scheduler/resource/RAS_Node.java","tnLine":197,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.scheduler.resource.RAS_Node.totalSlotsUsed(java.lang.String):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.util.zip.ZipFile` acquired by call to `ZipFile(...)` at line 247 is not released after line 247.","tnFile":"storm-server/src/main/java/org/apache/storm/utils/ServerUtils.java","tnLine":247,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.utils.ServerUtils.zipDoesContainDir(java.lang.String,java.lang.String):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void BasicContainer.cleanUpForRestart()` indirectly writes to field `this._workerId` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/supervisor/BasicContainer.java","tnLine":221,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.supervisor.BasicContainer.cleanUpForRestart():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `topology.get_bolts()` could be null and is dereferenced at line 230.","tnFile":"storm-client/src/jvm/org/apache/storm/daemon/StormCommon.java","tnLine":230,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.StormCommon.ackerInputs(org.apache.storm.generated.StormTopology):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `struct.serialized_parts` last accessed on line 417 could be null and is dereferenced at line 417.","tnFile":"storm-client/src/jvm/org/apache/storm/generated/LocalStateData.java","tnLine":417,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.generated.LocalStateData$LocalStateDataTupleScheme.write(org.apache.storm.thrift.protocol.TProtocol,org.apache.storm.generated.LocalStateData):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `args` last assigned on line 121 could be null and is dereferenced at line 122.","tnFile":"storm-client/src/jvm/org/apache/storm/Thrift.java","tnLine":122,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.Thrift.instantiateJavaObject(org.apache.storm.generated.JavaObject):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `entry.getKey().get_port_iterator()` could be null and is dereferenced at line 406.","tnFile":"storm-client/src/jvm/org/apache/storm/cluster/StormClusterStateImpl.java","tnLine":406,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.cluster.StormClusterStateImpl.executorBeats(java.lang.String,java.util.Map):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `distribution` last assigned on line 78 could be null and is dereferenced at line 84.","tnFile":"storm-server/src/main/java/org/apache/storm/scheduler/IsolationScheduler.java","tnLine":84,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.scheduler.IsolationScheduler.schedule(org.apache.storm.scheduler.Topologies,org.apache.storm.scheduler.Cluster):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `topology.get_bolts()` could be null and is dereferenced at line 34.","tnFile":"storm-client/src/jvm/org/apache/storm/utils/ThriftTopologyUtils.java","tnLine":34,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.utils.ThriftTopologyUtils.getComponentIds(org.apache.storm.generated.StormTopology):java.util.Set","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `streams.get(outputStream)` could be null and is dereferenced at line 161.","tnFile":"storm-client/src/jvm/org/apache/storm/drpc/LinearDRPCTopologyBuilder.java","tnLine":161,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.drpc.LinearDRPCTopologyBuilder.createTopology(org.apache.storm.drpc.DRPCSpout):org.apache.storm.generated.StormTopology","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `componentExecutors` last assigned on line 605 could be null and is dereferenced at line 607.","tnFile":"storm-client/src/jvm/org/apache/storm/cluster/StormClusterStateImpl.java","tnLine":607,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.cluster.StormClusterStateImpl.updateStorm(java.lang.String,org.apache.storm.generated.StormBase):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getMapByKey(stats,\"acked\")` could be null and is dereferenced by call to `aggregateCountStreams(...)` at line 552.","tnFile":"storm-server/src/main/java/org/apache/storm/stats/StatsUtil.java","tnLine":552,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.stats.StatsUtil.aggTopoExecStats(java.lang.String,boolean,java.util.HashMap,java.util.Map,java.lang.String):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `entry.getValue().get_node()` could be null and is dereferenced at line 270.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/supervisor/ReadClusterState.java","tnLine":270,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.supervisor.ReadClusterState.readMyExecutors(java.lang.String,java.lang.String,org.apache.storm.generated.Assignment):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `component.get_inputs()` could be null and is dereferenced at line 532.","tnFile":"storm-client/src/jvm/org/apache/storm/topology/TopologyBuilder.java","tnLine":532,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.topology.TopologyBuilder.addCheckPointInputs(org.apache.storm.generated.ComponentCommon):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `logs` last assigned on line 452 could be null and is dereferenced at line 453.","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/logviewer/handler/LogviewerLogSearchHandler.java","tnLine":453,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.logviewer.handler.LogviewerLogSearchHandler.findNMatches(java.util.List,int,int,int,java.lang.String):org.apache.storm.daemon.logviewer.handler.LogviewerLogSearchHandler$Matched","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `struct.emitted` last accessed on line 795 could be null and is dereferenced at line 795.","tnFile":"storm-client/src/jvm/org/apache/storm/generated/ExecutorStats.java","tnLine":795,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.generated.ExecutorStats$ExecutorStatsTupleScheme.write(org.apache.storm.thrift.protocol.TProtocol,org.apache.storm.generated.ExecutorStats):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `partitions.get(valueOf(partition))` could be null and is dereferenced at line 144.","tnFile":"storm-client/src/jvm/org/apache/storm/trident/testing/FeederBatchSpout.java","tnLine":144,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.trident.testing.FeederBatchSpout$FeederCoordinator.initializeTransaction(long,java.util.Map,java.util.Map):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `componentAggregateStats.get_specific_stats()` could be null and is dereferenced at line 1449.","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java","tnLine":1449,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.ui.UIHelpers.getTopologySpoutAggStatsMap(org.apache.storm.generated.ComponentAggregateStats,java.lang.String):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getState(id)` could be null and is dereferenced at line 295.","tnFile":"storm-server/src/main/java/org/apache/storm/Testing.java","tnLine":295,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.Testing.globalAmt(java.lang.String,java.lang.String):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.apache.storm.assignments.InMemoryAssignmentBackend` acquired by call to `mkStormClusterState(...)` at line 251 is not released after line 255.","tnFile":"storm-core/src/jvm/org/apache/storm/command/AdminCommands.java","tnLine":255,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.command.AdminCommands$PrintAssignments.run(java.lang.String[],java.util.Map,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `InputStreamWithMeta HdfsBlobStore.getBlob(String,Subject)` reads without synchronization from `this.aclHandler`. Potentially races with write in method `HdfsBlobStore.prepareInternal(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"external/storm-hdfs-blobstore/src/main/java/org/apache/storm/hdfs/blobstore/HdfsBlobStore.java","tnLine":330,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.hdfs.blobstore.HdfsBlobStore.getBlob(java.lang.String,javax.security.auth.Subject):org.apache.storm.blobstore.InputStreamWithMeta","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `context.principal()` could be null and is dereferenced at line 132.","tnFile":"storm-client/src/jvm/org/apache/storm/security/auth/authorizer/SimpleACLAuthorizer.java","tnLine":132,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.security.auth.authorizer.SimpleACLAuthorizer.permit(org.apache.storm.security.auth.ReqContext,java.lang.String,java.util.Map):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `struct.creds` last accessed on line 502 could be null and is dereferenced at line 502.","tnFile":"storm-client/src/jvm/org/apache/storm/generated/Credentials.java","tnLine":502,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.generated.Credentials$CredentialsTupleScheme.write(org.apache.storm.thrift.protocol.TProtocol,org.apache.storm.generated.Credentials):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `InputStreamReader(...)` at line 230 is not released after line 237.\n**Note**: potential exception at line 233","tnFile":"flux/flux-core/src/main/java/org/apache/storm/flux/Flux.java","tnLine":237,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.flux.Flux.printSplash():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.apache.storm.shade.org.apache.commons.io.input.ClassLoaderObjectInputStream` acquired by call to `new()` at line 540 is not released after line 545.\n**Note**: potential exception at line 542","tnFile":"storm-client/src/jvm/org/apache/storm/utils/Utils.java","tnLine":545,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.utils.Utils.javaDeserialize(byte[],java.lang.Class):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `AtomicOutputStream HdfsBlobStore.createBlob(String,SettableBlobMeta,Subject)` reads without synchronization from `this.aclHandler`. Potentially races with write in method `HdfsBlobStore.prepareInternal(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"external/storm-hdfs-blobstore/src/main/java/org/apache/storm/hdfs/blobstore/HdfsBlobStore.java","tnLine":188,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.hdfs.blobstore.HdfsBlobStore.createBlob(java.lang.String,org.apache.storm.generated.SettableBlobMeta,javax.security.auth.Subject):org.apache.storm.blobstore.AtomicOutputStream","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `spouts` last assigned on line 259 could be null and is dereferenced at line 264.","tnFile":"storm-client/src/jvm/org/apache/storm/daemon/Task.java","tnLine":264,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.Task.mkTaskObject():java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `executorStatsMap` last assigned on line 266 could be null and is dereferenced at line 268.","tnFile":"storm-client/src/jvm/org/apache/storm/cluster/ClusterUtils.java","tnLine":268,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.cluster.ClusterUtils.convertExecutorBeats(java.util.List,org.apache.storm.generated.ClusterWorkerHeartbeat):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `componentPageInfo.get_window_to_stats()` could be null and is dereferenced at line 1964.","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java","tnLine":1964,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.ui.UIHelpers.unpackSpoutPageInfo(org.apache.storm.generated.ComponentPageInfo,java.lang.String,java.lang.String,boolean,java.util.Map):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `ComponentPageInfo Nimbus.getComponentPageInfo(String,String,String,boolean)` indirectly mutates container `list` via call to `add` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":4356,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus.getComponentPageInfo(java.lang.String,java.lang.String,java.lang.String,boolean):org.apache.storm.generated.ComponentPageInfo","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void HdfsBlobStore.prepareInternal(Map,String,Configuration)` writes to field `this.localSubject` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"external/storm-hdfs-blobstore/src/main/java/org/apache/storm/hdfs/blobstore/HdfsBlobStore.java","tnLine":162,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.hdfs.blobstore.HdfsBlobStore.prepareInternal(java.util.Map,java.lang.String,org.apache.hadoop.conf.Configuration):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getLong(conf.get(\"topology.backpressure.wait.park.microsec\"))` could be null and is dereferenced at line 44.","tnFile":"storm-client/src/jvm/org/apache/storm/policy/WaitStrategyPark.java","tnLine":44,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.policy.WaitStrategyPark.prepare(java.util.HashMap,org.apache.storm.policy.IWaitStrategy$WAIT_SITUATION):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `executorToNodePort` last assigned on line 638 could be null and is dereferenced at line 639.","tnFile":"storm-client/src/jvm/org/apache/storm/daemon/worker/WorkerState.java","tnLine":639,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.worker.WorkerState.readWorkerExecutors(org.apache.storm.cluster.IStormClusterState,java.lang.String,java.lang.String,int):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `new()` at line 106 is not released after line 116.\n**Note**: potential exception at line 107","tnFile":"storm-server/src/main/java/org/apache/storm/healthcheck/HealthChecker.java","tnLine":116,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.healthcheck.HealthChecker.processScript(java.util.Map,java.lang.String):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `clusterSummary.get_supervisors()` could be null and is dereferenced at line 5002.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":5002,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus$ClusterSummaryMetricSet$8.transform(org.apache.storm.generated.ClusterSummary):java.lang.Double","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `reqContext.principal()` could be null and is dereferenced at line 161.","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/ui/filters/AuthorizedUserFilter.java","tnLine":161,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.ui.filters.AuthorizedUserFilter.filter(javax.ws.rs.container.ContainerRequestContext):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `info.get_executors()` could be null and is dereferenced at line 216.","tnFile":"examples/storm-loadgen/src/main/java/org/apache/storm/loadgen/CaptureLoad.java","tnLine":216,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.loadgen.CaptureLoad.captureTopology(org.apache.storm.generated.Nimbus$Iface,org.apache.storm.generated.TopologySummary):org.apache.storm.loadgen.TopologyLoadConf","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.apache.storm.blobstore.BlobStore$BlobStoreFileOutputStream` acquired by call to `BlobStore$BlobStoreFileOutputStream(...)` at line 244 is not released after line 244.\n**Note**: potential exception at line 244","tnFile":"storm-server/src/main/java/org/apache/storm/blobstore/LocalFsBlobStore.java","tnLine":244,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.blobstore.LocalFsBlobStore.updateBlob(java.lang.String,javax.security.auth.Subject):org.apache.storm.blobstore.AtomicOutputStream","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `TopologyInfo LocalCluster.getTopologyInfo(String)` indirectly reads without synchronization from `daemon.StormCommon._instance`. Potentially races with write in method `LocalCluster.close()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"storm-server/src/main/java/org/apache/storm/LocalCluster.java","tnLine":548,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.LocalCluster.getTopologyInfo(java.lang.String):org.apache.storm.generated.TopologyInfo","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `redis.clients.jedis.JedisCluster` acquired by call to `new()` at line 323 is not released after line 340.","tnFile":"external/storm-redis/src/main/java/org/apache/storm/redis/trident/state/RedisClusterMapState.java","tnLine":340,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.redis.trident.state.RedisClusterMapState$Factory.makeState(java.util.Map,org.apache.storm.task.IMetricsContext,int,int):org.apache.storm.trident.state.State","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.apache.storm.hdfs.blobstore.HdfsBlobStore` acquired by call to `HdfsBlobStore()` at line 56 is not released after line 64.","tnFile":"external/storm-blobstore-migration/src/main/java/org/apache/storm/blobstore/ListHDFS.java","tnLine":64,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.blobstore.ListHDFS.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `msg` last assigned on line 178 could be null and is dereferenced at line 179.","tnFile":"external/storm-mqtt/src/main/java/org/apache/storm/mqtt/spout/MqttSpout.java","tnLine":179,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.mqtt.spout.MqttSpout.ack(java.lang.Object):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getState(FeederBatchSpout._id)` could be null and is dereferenced at line 52.","tnFile":"storm-client/src/jvm/org/apache/storm/trident/testing/FeederBatchSpout.java","tnLine":52,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.trident.testing.FeederBatchSpout.feed(java.lang.Object):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void AbstractEsBolt.prepare(Map,TopologyContext,OutputCollector)` writes to field `this.collector` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"external/storm-elasticsearch/src/main/java/org/apache/storm/elasticsearch/bolt/AbstractEsBolt.java","tnLine":55,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.elasticsearch.bolt.AbstractEsBolt.prepare(java.util.Map,org.apache.storm.task.TopologyContext,org.apache.storm.task.OutputCollector):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `StormTopology LocalCluster.getTopology(String)` indirectly reads without synchronization from `daemon.StormCommon._instance`. Potentially races with write in method `LocalCluster.close()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"storm-server/src/main/java/org/apache/storm/LocalCluster.java","tnLine":538,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.LocalCluster.getTopology(java.lang.String):org.apache.storm.generated.StormTopology","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `com.esotericsoftware.kryo.io.Output` acquired by call to `LocalExecutor$1(...)` at line 30 is not released after line 30.\n**Note**: potential exception at line 30","tnFile":"storm-client/src/jvm/org/apache/storm/executor/LocalExecutor.java","tnLine":30,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.executor.LocalExecutor.mkExecutor(org.apache.storm.daemon.worker.WorkerState,java.util.List,java.util.Map):org.apache.storm.executor.Executor","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `osName` last assigned on line 86 could be null and is dereferenced at line 87.","tnFile":"storm-client/src/jvm/org/apache/storm/utils/ShellUtils.java","tnLine":87,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.utils.ShellUtils.getOSType():org.apache.storm.utils.ShellUtils$OSType","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `struct.initial_status` last accessed on line 483 could be null and is dereferenced at line 483.","tnFile":"storm-client/src/jvm/org/apache/storm/generated/SubmitOptions.java","tnLine":483,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.generated.SubmitOptions$SubmitOptionsTupleScheme.write(org.apache.storm.thrift.protocol.TProtocol,org.apache.storm.generated.SubmitOptions):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `spouts` last assigned on line 402 could be null and is dereferenced at line 410.","tnFile":"storm-server/src/main/java/org/apache/storm/Testing.java","tnLine":410,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.Testing.completeTopology(org.apache.storm.ILocalCluster,org.apache.storm.generated.StormTopology,org.apache.storm.testing.CompleteTopologyParam):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `List Nimbus.getOwnerResourceSummaries(String)` indirectly writes to field `common.inputs` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":4582,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus.getOwnerResourceSummaries(java.lang.String):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `last(matches)` could be null and is dereferenced at line 551.","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/logviewer/handler/LogviewerLogSearchHandler.java","tnLine":551,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.logviewer.handler.LogviewerLogSearchHandler.bufferSubstringSearch(boolean,java.nio.file.Path,int,int,int,java.io.BufferedInputStream,java.lang.Integer,int,java.nio.ByteBuffer,byte[],java.util.List,java.lang.Integer,byte[]):org.apache.storm.daemon.logviewer.handler.LogviewerLogSearchHandler$SubstringSearchResult","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Path AbstractHdfsBolt.getBasePathForNextFile(Tuple)` reads without synchronization from container `this.rotationCounterMap` via call to `get`. Potentially races with write in method `AbstractHdfsBolt.execute(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"external/storm-hdfs/src/main/java/org/apache/storm/hdfs/bolt/AbstractHdfsBolt.java","tnLine":293,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.hdfs.bolt.AbstractHdfsBolt.getBasePathForNextFile(org.apache.storm.tuple.Tuple):org.apache.hadoop.fs.Path","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void FixedTupleSpout.clear(String)` mutates container `testing.FixedTupleSpout.acked` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"storm-client/src/jvm/org/apache/storm/testing/FixedTupleSpout.java","tnLine":77,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.testing.FixedTupleSpout.clear(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"INTERFACE_NOT_THREAD_SAFE","tnDesc":"Unprotected call to method `void Logger.debug(String)` of un-annotated interface `org.slf4j.Logger`. Consider annotating the class with `@ThreadSafe`, adding a lock, or using an interface that is known to be thread-safe.\n Reporting because a superclass `class com.github.benmanes.caffeine.cache.CacheLoader` is annotated `@ThreadSafe`.","tnFile":"external/storm-hbase/src/main/java/org/apache/storm/hbase/bolt/HBaseLookupBolt.java","tnLine":79,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.hbase.bolt.HBaseLookupBolt$1.load(byte[]):org.apache.hadoop.hbase.client.Result","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `struct.approved_workers` last accessed on line 405 could be null and is dereferenced at line 405.","tnFile":"storm-client/src/jvm/org/apache/storm/generated/LSApprovedWorkers.java","tnLine":405,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.generated.LSApprovedWorkers$LSApprovedWorkersTupleScheme.write(org.apache.storm.thrift.protocol.TProtocol,org.apache.storm.generated.LSApprovedWorkers):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `ClojureTransformer.entries.get(key)` could be null and is dereferenced at line 69.","tnFile":"storm-buildtools/maven-shade-clojure-transformer/src/main/java/org/apache/storm/maven/shade/clojure/ClojureTransformer.java","tnLine":69,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.maven.shade.clojure.ClojureTransformer.modifyOutputStream(java.util.jar.JarOutputStream):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `ReadableBlobMeta HdfsBlobStore.getBlobMeta(String,Subject)` indirectly reads without synchronization from `this.hbs`. Potentially races with write in method `HdfsBlobStore.prepareInternal(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"external/storm-hdfs-blobstore/src/main/java/org/apache/storm/hdfs/blobstore/HdfsBlobStore.java","tnLine":270,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.hdfs.blobstore.HdfsBlobStore.getBlobMeta(java.lang.String,javax.security.auth.Subject):org.apache.storm.generated.ReadableBlobMeta","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void HdfsBlobStore.deleteBlob(String,Subject)` indirectly reads without synchronization from `this.hbs`. Potentially races with write in method `HdfsBlobStore.prepareInternal(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"external/storm-hdfs-blobstore/src/main/java/org/apache/storm/hdfs/blobstore/HdfsBlobStore.java","tnLine":314,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.hdfs.blobstore.HdfsBlobStore.deleteBlob(java.lang.String,javax.security.auth.Subject):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `control.get_type()` could be null and is dereferenced at line 357.","tnFile":"storm-client/src/jvm/org/apache/storm/blobstore/BlobStoreAclHandler.java","tnLine":357,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.blobstore.BlobStoreAclHandler.removeBadACLs(java.util.List):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Nimbus.submitTopology(String,String,String,StormTopology)` indirectly reads with synchronization from `common.inputs`. Potentially races with unsynchronized write in method `Nimbus.submitTopologyWithOpts(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":2974,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus.submitTopology(java.lang.String,java.lang.String,java.lang.String,org.apache.storm.generated.StormTopology):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.apache.storm.blobstore.BlobStore$BlobStoreFileOutputStream` acquired by call to `BlobStore$BlobStoreFileOutputStream(...)` at line 386 is not released after line 386.\n**Note**: potential exception at line 386","tnFile":"external/storm-hdfs-blobstore/src/main/java/org/apache/storm/hdfs/blobstore/HdfsBlobStore.java","tnLine":386,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.hdfs.blobstore.HdfsBlobStore.writeMetadata(java.lang.String,org.apache.storm.generated.SettableBlobMeta):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Nimbus.submitTopologyWithOpts(String,String,String,StormTopology,SubmitOptions)` indirectly reads with synchronization from `common.inputs`. Potentially races with unsynchronized write in method `Nimbus.submitTopologyWithOpts(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":3142,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus.submitTopologyWithOpts(java.lang.String,java.lang.String,java.lang.String,org.apache.storm.generated.StormTopology,org.apache.storm.generated.SubmitOptions):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `AtomicOutputStream HdfsBlobStore.updateBlob(String,Subject)` indirectly reads without synchronization from `this.localSubject`. Potentially races with write in method `HdfsBlobStore.prepareInternal(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"external/storm-hdfs-blobstore/src/main/java/org/apache/storm/hdfs/blobstore/HdfsBlobStore.java","tnLine":221,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.hdfs.blobstore.HdfsBlobStore.updateBlob(java.lang.String,javax.security.auth.Subject):org.apache.storm.blobstore.AtomicOutputStream","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `common` last assigned on line 173 could be null and is dereferenced by call to `getParallelismHint(...)` at line 174.","tnFile":"storm-client/src/jvm/org/apache/storm/daemon/StormCommon.java","tnLine":174,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.StormCommon.validateBasic(org.apache.storm.generated.StormTopology):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Nimbus.submitTopologyWithOpts(String,String,String,StormTopology,SubmitOptions)` indirectly reads without synchronization from container `topoConf` via call to `get`. Potentially races with write in method `Nimbus.submitTopologyWithOpts(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":2999,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus.submitTopologyWithOpts(java.lang.String,java.lang.String,java.lang.String,org.apache.storm.generated.StormTopology,org.apache.storm.generated.SubmitOptions):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `struct.inputs` last accessed on line 751 could be null and is dereferenced at line 751.","tnFile":"storm-client/src/jvm/org/apache/storm/generated/ComponentCommon.java","tnLine":751,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.generated.ComponentCommon$ComponentCommonTupleScheme.write(org.apache.storm.thrift.protocol.TProtocol,org.apache.storm.generated.ComponentCommon):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `ClusterSummary Nimbus.getClusterInfo()` indirectly writes to field `common.inputs` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":4482,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus.getClusterInfo():org.apache.storm.generated.ClusterSummary","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `TrackedTopology.topology.get_bolts()` could be null and is dereferenced at line 57.","tnFile":"storm-server/src/main/java/org/apache/storm/testing/TrackedTopology.java","tnLine":57,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.testing.TrackedTopology.<init>(org.apache.storm.generated.StormTopology,org.apache.storm.ILocalCluster)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `topologyInfo.get_executors()` could be null and is dereferenced at line 1598.","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java","tnLine":1598,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.ui.UIHelpers.getTopologyWorkers(org.apache.storm.generated.TopologyInfo,java.util.Map):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.apache.storm.metric.internal.RateTracker` acquired by call to `JCQueue(...)` at line 110 is not released after line 117.","tnFile":"examples/storm-perf/src/main/java/org/apache/storm/perf/JCQueuePerfTest.java","tnLine":117,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.perf.JCQueuePerfTest.oneProducer2Consumers(int):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void HdfsBlobStore.setBlobMeta(String,SettableBlobMeta,Subject)` indirectly reads without synchronization from `this.localSubject`. Potentially races with write in method `HdfsBlobStore.prepareInternal(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"external/storm-hdfs-blobstore/src/main/java/org/apache/storm/hdfs/blobstore/HdfsBlobStore.java","tnLine":299,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.hdfs.blobstore.HdfsBlobStore.setBlobMeta(java.lang.String,org.apache.storm.generated.SettableBlobMeta,javax.security.auth.Subject):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `type` last assigned on line 834 could be null and is dereferenced at line 846.","tnFile":"examples/storm-loadgen/src/main/java/org/apache/storm/loadgen/LoadMetricsServer.java","tnLine":846,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.loadgen.LoadMetricsServer.<init>(java.util.Map,org.apache.commons.cli.CommandLine,java.util.LinkedHashMap)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `nimbusSummaries` last assigned on line 2362 could be null and is dereferenced at line 2372.","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java","tnLine":2372,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.ui.UIHelpers.getNimbusSummary(org.apache.storm.generated.ClusterSummary,java.util.Map):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `client` last assigned on line 226 could be null and is dereferenced at line 235.","tnFile":"storm-client/src/jvm/org/apache/storm/drpc/DRPCSpout.java","tnLine":235,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.drpc.DRPCSpout.fail(java.lang.Object):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `lsTopoHistoryListWrapper.get_topo_history()` could be null and is dereferenced at line 185.","tnFile":"storm-client/src/jvm/org/apache/storm/utils/LocalState.java","tnLine":185,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.utils.LocalState.filterOldTopologies(long):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `newExecutorNodePort` last assigned on line 1358 could be null and is dereferenced at line 1367.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":1367,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus.assignmentChangedNodes(org.apache.storm.generated.Assignment,org.apache.storm.generated.Assignment):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `new()` at line 41 is not released after line 42.","tnFile":"storm-client/src/jvm/org/apache/storm/metric/cgroup/CGroupCpu.java","tnLine":42,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.metric.cgroup.CGroupCpu.getUserHZ():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void DRPCSpout.nextTuple()` indirectly reads without synchronization from `this._backround`. Potentially races with write in method `DRPCSpout.open(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"storm-client/src/jvm/org/apache/storm/drpc/DRPCSpout.java","tnLine":167,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.drpc.DRPCSpout.nextTuple():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `topoPageInfo.get_id_to_spout_agg_stats()` could be null and is dereferenced at line 4146.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":4146,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus.maybeAddPlaceholderSpoutAggStats(org.apache.storm.generated.TopologyPageInfo,org.apache.storm.generated.StormTopology):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void DRPCSpout.nextTuple()` indirectly reads without synchronization from container `this._futures` via call to `iterator`. Potentially races with write in method `DRPCSpout.nextTuple()`.\n Reporting because this access may occur on a background thread.","tnFile":"storm-client/src/jvm/org/apache/storm/drpc/DRPCSpout.java","tnLine":191,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.drpc.DRPCSpout.nextTuple():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `struct.executor_info` last accessed on line 853 could be null and is dereferenced at line 853.","tnFile":"storm-client/src/jvm/org/apache/storm/generated/ExecutorSummary.java","tnLine":853,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.generated.ExecutorSummary$ExecutorSummaryTupleScheme.write(org.apache.storm.thrift.protocol.TProtocol,org.apache.storm.generated.ExecutorSummary):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Rankings.pruneZeroCounts()` mutates container `this.rankedItems` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"examples/storm-starter/src/jvm/org/apache/storm/starter/tools/Rankings.java","tnLine":131,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.starter.tools.Rankings.pruneZeroCounts():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `requestedResources` last assigned on line 553 could be null and is dereferenced by call to `couldFit(...)` at line 554.","tnFile":"storm-server/src/main/java/org/apache/storm/scheduler/Cluster.java","tnLine":554,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.scheduler.Cluster.wouldFit(org.apache.storm.scheduler.WorkerSlot,org.apache.storm.scheduler.ExecutorDetails,org.apache.storm.scheduler.TopologyDetails,org.apache.storm.scheduler.resource.normalization.NormalizedResourceOffer,double):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `struct.args_list` last accessed on line 509 could be null and is dereferenced at line 509.","tnFile":"storm-client/src/jvm/org/apache/storm/generated/JavaObject.java","tnLine":509,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.generated.JavaObject$JavaObjectTupleScheme.write(org.apache.storm.thrift.protocol.TProtocol,org.apache.storm.generated.JavaObject):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getOnHeapMemoryRequirement(exec)` could be null and is dereferenced at line 287.","tnFile":"storm-server/src/main/java/org/apache/storm/scheduler/TopologyDetails.java","tnLine":287,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.scheduler.TopologyDetails.getTotalMemReqTask(org.apache.storm.scheduler.ExecutorDetails):java.lang.Double","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `client` last assigned on line 70 could be null and is dereferenced at line 93.","tnFile":"storm-client/src/jvm/org/apache/storm/drpc/ReturnResults.java","tnLine":93,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.drpc.ReturnResults.execute(org.apache.storm.tuple.Tuple):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `entry.getKey().get_node()` could be null and is dereferenced at line 250.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/supervisor/ReadClusterState.java","tnLine":250,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.supervisor.ReadClusterState.readMyExecutors(java.lang.String,java.lang.String,org.apache.storm.generated.Assignment):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `metrics.get_metricList()` could be null and is dereferenced at line 4753.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":4753,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus.processWorkerMetrics(org.apache.storm.generated.WorkerMetrics):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedWriter` acquired to `bw` by call to `new()` at line 163 is not released after line 170.\n**Note**: potential exception at line 166","tnFile":"examples/storm-starter/src/jvm/org/apache/storm/starter/BlobStoreAPIWordCountTopology.java","tnLine":170,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.starter.BlobStoreAPIWordCountTopology.writeToFile(java.io.File,java.util.HashSet):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int HdfsBlobStore.updateBlobReplication(String,int,Subject)` indirectly reads without synchronization from `this.localSubject`. Potentially races with write in method `HdfsBlobStore.prepareInternal(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"external/storm-hdfs-blobstore/src/main/java/org/apache/storm/hdfs/blobstore/HdfsBlobStore.java","tnLine":367,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.hdfs.blobstore.HdfsBlobStore.updateBlobReplication(java.lang.String,int,javax.security.auth.Subject):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void HdfsBlobStore.prepare(Map,String,NimbusInfo,ILeaderElector)` writes to field `this.conf` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"external/storm-hdfs-blobstore/src/main/java/org/apache/storm/hdfs/blobstore/HdfsBlobStore.java","tnLine":120,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.hdfs.blobstore.HdfsBlobStore.prepare(java.util.Map,java.lang.String,org.apache.storm.nimbus.NimbusInfo,org.apache.storm.nimbus.ILeaderElector):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.apache.storm.utils.JCQueue$QueueMetrics` acquired by call to `JCQueue(...)` at line 50 is not released after line 57.\n**Note**: potential exception at line 51","tnFile":"examples/storm-perf/src/main/java/org/apache/storm/perf/JCQueuePerfTest.java","tnLine":57,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.perf.JCQueuePerfTest.ackingProducerSimulation():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `stats` last assigned on line 83 could be null and is dereferenced at line 84.","tnFile":"storm-client/src/jvm/org/apache/storm/testing/SpoutTracker.java","tnLine":84,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.testing.SpoutTracker$SpoutTrackOutputCollector.recordSpoutEmit():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `AtomicOutputStream HdfsBlobStore.createBlob(String,SettableBlobMeta,Subject)` reads without synchronization from `this.conf`. Potentially races with write in method `HdfsBlobStore.prepareInternal(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"external/storm-hdfs-blobstore/src/main/java/org/apache/storm/hdfs/blobstore/HdfsBlobStore.java","tnLine":184,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.hdfs.blobstore.HdfsBlobStore.createBlob(java.lang.String,org.apache.storm.generated.SettableBlobMeta,javax.security.auth.Subject):org.apache.storm.blobstore.AtomicOutputStream","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `fields` last assigned on line 161 could be null and is dereferenced at line 162.","tnFile":"storm-client/src/jvm/org/apache/storm/drpc/LinearDRPCTopologyBuilder.java","tnLine":162,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.drpc.LinearDRPCTopologyBuilder.createTopology(org.apache.storm.drpc.DRPCSpout):org.apache.storm.generated.StormTopology","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `summ.get_supervisors()` could be null and is dereferenced at line 1229.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":1229,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus.extractClusterMetrics(org.apache.storm.generated.ClusterSummary):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.apache.storm.blobstore.BlobStore$BlobStoreFileInputStream` acquired by call to `getBlob(...)` at line 78 is not released after line 78.","tnFile":"external/storm-hdfs-blobstore/src/main/java/org/apache/storm/hdfs/blobstore/HdfsClientBlobStore.java","tnLine":78,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.hdfs.blobstore.HdfsClientBlobStore.isRemoteBlobExists(java.lang.String):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `summary.get_topologies()` could be null and is dereferenced at line 118.","tnFile":"examples/storm-hdfs-examples/src/main/java/org/apache/storm/hdfs/spout/HdfsSpoutTopology.java","tnLine":118,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.hdfs.spout.HdfsSpoutTopology.printMetrics(org.apache.storm.generated.Nimbus$Iface,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `workerHeartbeats.get_worker_heartbeats()` could be null and is dereferenced at line 1769.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":1769,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus.updateCachedHeartbeatsFromSupervisor(org.apache.storm.generated.SupervisorWorkerHeartbeats):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void HdfsBlobStore.prepareInternal(Map,String,Configuration)` writes to field `this.hbs` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"external/storm-hdfs-blobstore/src/main/java/org/apache/storm/hdfs/blobstore/HdfsBlobStore.java","tnLine":171,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.hdfs.blobstore.HdfsBlobStore.prepareInternal(java.util.Map,java.lang.String,org.apache.hadoop.conf.Configuration):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.util.zip.GZIPInputStream` acquired to `in` by call to `GZIPInputStream(...)` at line 877 is not released after line 886.\n**Note**: potential exception at line 880","tnFile":"storm-client/src/jvm/org/apache/storm/utils/Utils.java","tnLine":886,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.utils.Utils.gunzip(byte[]):byte[]","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `workerNormalizedResources` last assigned on line 121 could be null and is dereferenced at line 122.","tnFile":"storm-server/src/main/java/org/apache/storm/scheduler/resource/normalization/NormalizedResources.java","tnLine":122,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.scheduler.resource.normalization.NormalizedResources.add(org.apache.storm.generated.WorkerResources):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `CommandExec$OutputBufferThread(...)` at line 36 is not released after line 47.","tnFile":"storm-buildtools/storm-maven-plugins/src/main/java/org/apache/storm/maven/plugin/util/CommandExec.java","tnLine":47,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.maven.plugin.util.CommandExec.run(java.util.List,java.util.ArrayList):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Rankings.pruneZeroCounts()` reads without synchronization from container `this.rankedItems` via call to `size`. Potentially races with write in method `Rankings.updateWith(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"examples/storm-starter/src/jvm/org/apache/storm/starter/tools/Rankings.java","tnLine":129,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.starter.tools.Rankings.pruneZeroCounts():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.RandomAccessFile` acquired to `raf` by call to `RandomAccessFile(...)` at line 248 is not released after line 252.\n**Note**: potential exception at line 250","tnFile":"storm-buildtools/storm-maven-plugins/src/main/java/org/apache/storm/maven/plugin/versioninfo/VersionInfoMojo.java","tnLine":252,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.maven.plugin.versioninfo.VersionInfoMojo.readFile(java.io.File):byte[]","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.util.zip.GZIPInputStream` acquired by call to `GZIPInputStream(...)` at line 52 is not released after line 57.\n**Note**: potential exception at line 54","tnFile":"storm-client/src/jvm/org/apache/storm/serialization/GzipSerializationDelegate.java","tnLine":57,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.serialization.GzipSerializationDelegate.deserialize(byte[],java.lang.Class):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `response.get_data()` could be null and is dereferenced at line 164.","tnFile":"storm-client/src/jvm/org/apache/storm/cluster/PaceMakerStateStorage.java","tnLine":164,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.cluster.PaceMakerStateStorage.get_worker_hb(java.lang.String,boolean):byte[]","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void BasicContainer.createNewWorkerId()` reads with synchronization from `this._workerId`. Potentially races with unsynchronized write in method `BasicContainer.cleanUpForRestart()`.\n Reporting because this access may occur on a background thread.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/supervisor/BasicContainer.java","tnLine":212,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.supervisor.BasicContainer.createNewWorkerId():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `redis.clients.jedis.JedisPool` acquired by call to `Base64ToBinaryStateMigrationUtil(...)` at line 144 is not released after line 150.","tnFile":"examples/storm-redis-examples/src/main/java/org/apache/storm/redis/tools/Base64ToBinaryStateMigrationUtil.java","tnLine":150,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.redis.tools.Base64ToBinaryStateMigrationUtil.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void HiveWriter.close()` indirectly reads without synchronization from `this.txnBatch`. Potentially races with write in method `HiveWriter.abort()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"external/storm-hive/src/main/java/org/apache/storm/hive/common/HiveWriter.java","tnLine":239,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.hive.common.HiveWriter.close():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.apache.storm.shade.org.apache.curator.framework.recipes.leader.LeaderLatch` acquired to `latch` by call to `new()` at line 58 is not released after line 72.\n**Note**: potential exception at line 59","tnFile":"storm-server/src/main/java/org/apache/storm/zookeeper/LeaderElectorImp.java","tnLine":72,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.zookeeper.LeaderElectorImp.addToLeaderLockQueue():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileInputStream` acquired by call to `FileInputStream(...)` at line 119 is not released after line 119.\n**Note**: potential exception at line 119","tnFile":"examples/storm-perf/src/main/java/org/apache/storm/perf/spout/FileReadSpout.java","tnLine":119,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.perf.spout.FileReadSpout$FileReader.<init>(java.lang.String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `new()` at line 129 is not released after line 134.\n**Note**: potential exception at line 131","tnFile":"external/storm-hdfs/src/main/java/org/apache/storm/hdfs/spout/FileLock.java","tnLine":134,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.hdfs.spout.FileLock.getLastEntry(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path):org.apache.storm.hdfs.spout.FileLock$LogEntry","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `or(__new_array(java.lang.Double*[_*_]))` could be null and is dereferenced at line 247.","tnFile":"examples/storm-loadgen/src/main/java/org/apache/storm/loadgen/TopologyLoadConf.java","tnLine":247,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.loadgen.TopologyLoadConf.scaleCompParallel(org.apache.storm.loadgen.LoadCompConf,double,java.util.Map):org.apache.storm.loadgen.LoadCompConf","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `struct.type` last accessed on line 572 could be null and is dereferenced at line 572.","tnFile":"storm-client/src/jvm/org/apache/storm/generated/AccessControl.java","tnLine":572,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.generated.AccessControl$AccessControlTupleScheme.write(org.apache.storm.thrift.protocol.TProtocol,org.apache.storm.generated.AccessControl):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getMapByKey(newStats,\"executed\")` could be null and is dereferenced at line 949.","tnFile":"storm-server/src/main/java/org/apache/storm/stats/StatsUtil.java","tnLine":949,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.stats.StatsUtil.aggBoltExecWinStats(java.util.Map,java.util.Map,boolean):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `struct.executors` last accessed on line 798 could be null and is dereferenced at line 798.","tnFile":"storm-client/src/jvm/org/apache/storm/generated/LocalAssignment.java","tnLine":798,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.generated.LocalAssignment$LocalAssignmentTupleScheme.write(org.apache.storm.thrift.protocol.TProtocol,org.apache.storm.generated.LocalAssignment):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.apache.storm.LocalCluster$LocalTopology` acquired by call to `submitTopology(...)` at line 801 is not released after line 801.","tnFile":"storm-server/src/main/java/org/apache/storm/LocalCluster.java","tnLine":801,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.LocalCluster.submitTopology(java.lang.String,java.lang.String,java.lang.String,org.apache.storm.generated.StormTopology):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void HikariCPConnectionProvider.cleanup()` reads without synchronization from `this.dataSource`. Potentially races with write in method `HikariCPConnectionProvider.prepare()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"external/storm-jdbc/src/main/java/org/apache/storm/jdbc/common/HikariCPConnectionProvider.java","tnLine":61,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.jdbc.common.HikariCPConnectionProvider.cleanup():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `struct.executors` last accessed on line 692 could be null and is dereferenced at line 692.","tnFile":"storm-client/src/jvm/org/apache/storm/generated/LSWorkerHeartbeat.java","tnLine":692,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.generated.LSWorkerHeartbeat$LSWorkerHeartbeatTupleScheme.write(org.apache.storm.thrift.protocol.TProtocol,org.apache.storm.generated.LSWorkerHeartbeat):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Nimbus.doRebalance(String,StormBase)` indirectly reads with synchronization from `common.inputs`. Potentially races with unsynchronized write in method `Nimbus.submitTopologyWithOpts(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":1574,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus.doRebalance(java.lang.String,org.apache.storm.generated.StormBase):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `profileRequest.get_nodeInfo()` could be null and is dereferenced at line 1853.","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java","tnLine":1853,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.ui.UIHelpers.getActiveAction(org.apache.storm.generated.ProfileRequest,java.util.Map,java.lang.String):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getLong(conf.get(\"topology.spout.wait.park.microsec\"))` could be null and is dereferenced at line 40.","tnFile":"storm-client/src/jvm/org/apache/storm/policy/WaitStrategyPark.java","tnLine":40,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.policy.WaitStrategyPark.prepare(java.util.HashMap,org.apache.storm.policy.IWaitStrategy$WAIT_SITUATION):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void BasicContainer.launchWorkerProcess(List,Map,String,ExitCodeCallback,File)` reads without synchronization from `this._workerId`. Potentially races with write in method `BasicContainer.createNewWorkerId()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/supervisor/BasicContainer.java","tnLine":511,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.supervisor.BasicContainer.launchWorkerProcess(java.util.List,java.util.Map,java.lang.String,org.apache.storm.daemon.supervisor.ExitCodeCallback,java.io.File):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.net.HttpURLConnection` acquired by call to `openConnection()` at line 68 is not released after line 76.","tnFile":"examples/storm-loadgen/src/main/java/org/apache/storm/loadgen/HttpForwardingMetricsConsumer.java","tnLine":76,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.loadgen.HttpForwardingMetricsConsumer.handleDataPoints(org.apache.storm.metric.api.IMetricsConsumer$TaskInfo,java.util.Collection):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `stormBase.get_topology_action_options()` could be null and is dereferenced at line 1559.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":1559,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus.doRebalance(java.lang.String,org.apache.storm.generated.StormBase):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `node` last assigned on line 194 could be null and is dereferenced at line 196.","tnFile":"storm-server/src/main/java/org/apache/storm/scheduler/resource/strategies/scheduling/ConstraintSolverStrategy.java","tnLine":196,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.scheduler.resource.strategies.scheduling.ConstraintSolverStrategy.checkResourcesCorrect(org.apache.storm.scheduler.Cluster,org.apache.storm.scheduler.TopologyDetails):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `spouts` last assigned on line 35 could be null and is dereferenced at line 36.","tnFile":"storm-server/src/main/java/org/apache/storm/nimbus/DefaultTopologyValidator.java","tnLine":36,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.nimbus.DefaultTopologyValidator.validate(java.lang.String,java.util.Map,org.apache.storm.generated.StormTopology):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `ex.get_type()` could be null and is dereferenced at line 38.","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/drpc/webapp/DRPCExceptionMapper.java","tnLine":38,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.drpc.webapp.DRPCExceptionMapper.toResponse(org.apache.storm.generated.DRPCExecutionException):javax.ws.rs.core.Response","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void HdfsBlobStore.setBlobMeta(String,SettableBlobMeta,Subject)` reads without synchronization from `this.aclHandler`. Potentially races with write in method `HdfsBlobStore.prepareInternal(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"external/storm-hdfs-blobstore/src/main/java/org/apache/storm/hdfs/blobstore/HdfsBlobStore.java","tnLine":301,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.hdfs.blobstore.HdfsBlobStore.setBlobMeta(java.lang.String,org.apache.storm.generated.SettableBlobMeta,javax.security.auth.Subject):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getMapByKey(beat,\"acked\")` could be null and is dereferenced at line 993.","tnFile":"storm-server/src/main/java/org/apache/storm/stats/StatsUtil.java","tnLine":993,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.stats.StatsUtil.aggSpoutExecWinStats(java.util.Map,java.util.Map,boolean):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `last(matches)` could be null and is dereferenced at line 392.","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/logviewer/handler/LogviewerLogSearchHandler.java","tnLine":392,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.logviewer.handler.LogviewerLogSearchHandler.substringSearch(java.nio.file.Path,java.lang.String,boolean,java.lang.Integer,java.lang.Integer):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Nimbus.submitTopologyWithOpts(String,String,String,StormTopology,SubmitOptions)` mutates container `topoConf` via call to `put` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":3021,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus.submitTopologyWithOpts(java.lang.String,java.lang.String,java.lang.String,org.apache.storm.generated.StormTopology,org.apache.storm.generated.SubmitOptions):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.rocksdb.Options` acquired by call to `new()` at line 70 is not released after line 70.","tnFile":"storm-server/src/main/java/org/apache/storm/metricstore/rocksdb/RocksDbStore.java","tnLine":70,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.metricstore.rocksdb.RocksDbStore.prepare(java.util.Map,org.apache.storm.metric.StormMetricsRegistry):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List BasicContainer.substituteChildopts(Object)` indirectly reads without synchronization from `this._workerId`. Potentially races with write in method `BasicContainer.createNewWorkerId()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/supervisor/BasicContainer.java","tnLine":468,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.supervisor.BasicContainer.substituteChildopts(java.lang.Object):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getMapByKey(stats,\"acked\")` could be null and is dereferenced by call to `aggregateCountStreams(...)` at line 912.","tnFile":"storm-server/src/main/java/org/apache/storm/stats/StatsUtil.java","tnLine":912,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.stats.StatsUtil.aggregateSpoutStreams(java.util.HashMap):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.apache.storm.blobstore.NimbusBlobStore` acquired by call to `NimbusBlobStore()` at line 237 is not released after line 239.","tnFile":"storm-server/src/main/java/org/apache/storm/blobstore/BlobStoreUtils.java","tnLine":239,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.blobstore.BlobStoreUtils.createStateInZookeeper(java.util.Map,java.lang.String,org.apache.storm.nimbus.NimbusInfo):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.lang.Process` acquired by call to `exec(...)` at line 83 is not released after line 109.","tnFile":"storm-server/src/main/java/org/apache/storm/healthcheck/HealthChecker.java","tnLine":109,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.healthcheck.HealthChecker.processScript(java.util.Map,java.lang.String):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getState(AckFailMapTracker._failed)` could be null and is dereferenced at line 44.","tnFile":"storm-client/src/jvm/org/apache/storm/testing/AckFailMapTracker.java","tnLine":44,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.testing.AckFailMapTracker.fail(java.lang.Object):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void HdfsBlobStore.writeMetadata(String,SettableBlobMeta)` reads without synchronization from `this.hbs`. Potentially races with write in method `HdfsBlobStore.prepareInternal(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"external/storm-hdfs-blobstore/src/main/java/org/apache/storm/hdfs/blobstore/HdfsBlobStore.java","tnLine":384,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.hdfs.blobstore.HdfsBlobStore.writeMetadata(java.lang.String,org.apache.storm.generated.SettableBlobMeta):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `topology.get_spouts()` could be null and is dereferenced at line 337.","tnFile":"storm-server/src/main/java/org/apache/storm/Testing.java","tnLine":337,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.Testing.captureTopology(org.apache.storm.generated.StormTopology):org.apache.storm.Testing$CapturedTopology","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `summary.get_topologies()` could be null and is dereferenced at line 1156.","tnFile":"storm-client/src/jvm/org/apache/storm/utils/Utils.java","tnLine":1156,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.utils.Utils.getTopologyId(java.lang.String,org.apache.storm.generated.Nimbus$Iface):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.apache.commons.csv.CSVPrinter` acquired by call to `new()` at line 50 is not released after line 55.","tnFile":"sql/storm-sql-runtime/src/jvm/org/apache/storm/sql/runtime/serde/csv/CsvSerializer.java","tnLine":55,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.sql.runtime.serde.csv.CsvSerializer.write(java.util.List,java.nio.ByteBuffer):java.nio.ByteBuffer","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void HdfsBlobStore.prepare(Map,String,NimbusInfo,ILeaderElector)` indirectly writes to field `this.aclHandler` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"external/storm-hdfs-blobstore/src/main/java/org/apache/storm/hdfs/blobstore/HdfsBlobStore.java","tnLine":121,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.hdfs.blobstore.HdfsBlobStore.prepare(java.util.Map,java.lang.String,org.apache.storm.nimbus.NimbusInfo,org.apache.storm.nimbus.ILeaderElector):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `config.get(\"storm.metricstore.rocksdb.retention_hours\")` could be null and is dereferenced at line 87.","tnFile":"storm-server/src/main/java/org/apache/storm/metricstore/rocksdb/RocksDbStore.java","tnLine":87,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.metricstore.rocksdb.RocksDbStore.prepare(java.util.Map,org.apache.storm.metric.StormMetricsRegistry):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `cluster.getAssignmentById(topo.getId())` could be null and is dereferenced at line 103.","tnFile":"storm-server/src/main/java/org/apache/storm/scheduler/resource/strategies/scheduling/ConstraintSolverStrategy.java","tnLine":103,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.scheduler.resource.strategies.scheduling.ConstraintSolverStrategy.checkConstraintsSatisfied(org.apache.storm.scheduler.Cluster,org.apache.storm.scheduler.TopologyDetails):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `assignmentEntry.getValue().get_node_host()` could be null and is dereferenced at line 1393.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":1393,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus.lambda$assignmentsForNode$17(java.lang.String,java.util.Map$Entry):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.apache.storm.assignments.InMemoryAssignmentBackend` acquired by call to `mkStormClusterState(...)` at line 226 is not released after line 227.","tnFile":"storm-core/src/jvm/org/apache/storm/command/AdminCommands.java","tnLine":227,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.command.AdminCommands$PrintSupervisors.run(java.lang.String[],java.util.Map,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int HdfsBlobStore.updateBlobReplication(String,int,Subject)` indirectly reads without synchronization from `this.hbs`. Potentially races with write in method `HdfsBlobStore.prepareInternal(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"external/storm-hdfs-blobstore/src/main/java/org/apache/storm/hdfs/blobstore/HdfsBlobStore.java","tnLine":369,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.hdfs.blobstore.HdfsBlobStore.updateBlobReplication(java.lang.String,int,javax.security.auth.Subject):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `struct.serviceType` last accessed on line 602 could be null and is dereferenced at line 602.","tnFile":"storm-client/src/jvm/org/apache/storm/generated/WorkerToken.java","tnLine":602,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.generated.WorkerToken$WorkerTokenTupleScheme.write(org.apache.storm.thrift.protocol.TProtocol,org.apache.storm.generated.WorkerToken):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `struct.settable` last accessed on line 467 could be null and is dereferenced at line 467.","tnFile":"storm-client/src/jvm/org/apache/storm/generated/ReadableBlobMeta.java","tnLine":467,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.generated.ReadableBlobMeta$ReadableBlobMetaTupleScheme.write(org.apache.storm.thrift.protocol.TProtocol,org.apache.storm.generated.ReadableBlobMeta):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `ReadableBlobMeta NimbusBlobStore.getBlobMeta(String)` reads without synchronization from `this.client`. Potentially races with write in method `NimbusBlobStore.prepare(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"storm-client/src/jvm/org/apache/storm/blobstore/NimbusBlobStore.java","tnLine":84,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.blobstore.NimbusBlobStore.getBlobMeta(java.lang.String):org.apache.storm.generated.ReadableBlobMeta","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `stream2stat` last assigned on line 1740 could be null and is dereferenced at line 1741.","tnFile":"storm-server/src/main/java/org/apache/storm/stats/StatsUtil.java","tnLine":1741,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.stats.StatsUtil.filterSysStreams(java.util.HashMap,boolean):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int Rankings.size()` reads without synchronization from container `this.rankedItems` via call to `size`. Potentially races with write in method `Rankings.updateWith(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"examples/storm-starter/src/jvm/org/apache/storm/starter/tools/Rankings.java","tnLine":60,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.starter.tools.Rankings.size():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `StatefulWindowedBoltExecutor.topologyContext.getThisSources()` could be null and is dereferenced at line 152.","tnFile":"storm-client/src/jvm/org/apache/storm/topology/StatefulWindowedBoltExecutor.java","tnLine":152,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.topology.StatefulWindowedBoltExecutor.initState(org.apache.storm.state.State):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `spouts` last assigned on line 36 could be null and is dereferenced at line 37.","tnFile":"storm-server/src/main/java/org/apache/storm/nimbus/StrictTopologyValidator.java","tnLine":37,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.nimbus.StrictTopologyValidator.validate(java.lang.String,java.util.Map,org.apache.storm.generated.StormTopology):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `summ.get_topologies()` could be null and is dereferenced at line 1239.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":1239,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus.extractClusterMetrics(org.apache.storm.generated.ClusterSummary):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void HiveWriter.flushAndClose()` indirectly reads without synchronization from `this.totalRecords`. Potentially races with write in method `HiveWriter.flush(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"external/storm-hive/src/main/java/org/apache/storm/hive/common/HiveWriter.java","tnLine":229,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.hive.common.HiveWriter.flushAndClose():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `new()` at line 39 is not released after line 50.\n**Note**: potential exception at line 42","tnFile":"external/storm-hdfs/src/main/java/org/apache/storm/hdfs/avro/FixedAvroSerializer.java","tnLine":50,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.hdfs.avro.FixedAvroSerializer.<init>()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `sleepMs` last assigned on line 48 could be null and is dereferenced by call to `BackPressureTopo$ThrottledBolt(...)` at line 53.","tnFile":"examples/storm-perf/src/main/java/org/apache/storm/perf/BackPressureTopo.java","tnLine":53,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.perf.BackPressureTopo.getTopology(java.util.Map):org.apache.storm.generated.StormTopology","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `summary.get_topologies()` could be null and is dereferenced at line 919.","tnFile":"examples/storm-loadgen/src/main/java/org/apache/storm/loadgen/LoadMetricsServer.java","tnLine":919,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.loadgen.LoadMetricsServer.outputMetrics(org.apache.storm.generated.Nimbus$Iface,java.util.Collection):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `struct.status` last accessed on line 1428 could be null and is dereferenced at line 1428.","tnFile":"storm-client/src/jvm/org/apache/storm/generated/StormBase.java","tnLine":1428,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.generated.StormBase$StormBaseTupleScheme.write(org.apache.storm.thrift.protocol.TProtocol,org.apache.storm.generated.StormBase):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `specificAggregateStats` last assigned on line 1251 could be null and is dereferenced at line 1252.","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java","tnLine":1252,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.ui.UIHelpers.getBoltInputStats(org.apache.storm.generated.GlobalStreamId,org.apache.storm.generated.ComponentAggregateStats):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getState(AckFailMapTracker._acked)` could be null and is dereferenced at line 39.","tnFile":"storm-client/src/jvm/org/apache/storm/testing/AckFailMapTracker.java","tnLine":39,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.testing.AckFailMapTracker.ack(java.lang.Object):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.apache.storm.metric.internal.RateTracker` acquired by call to `JCQueue(...)` at line 74 is not released after line 80.","tnFile":"examples/storm-perf/src/main/java/org/apache/storm/perf/JCQueuePerfTest.java","tnLine":80,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.perf.JCQueuePerfTest.oneProducer1Consumer(int):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `struct.executor_stats` last accessed on line 699 could be null and is dereferenced at line 699.","tnFile":"storm-client/src/jvm/org/apache/storm/generated/ClusterWorkerHeartbeat.java","tnLine":699,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.generated.ClusterWorkerHeartbeat$ClusterWorkerHeartbeatTupleScheme.write(org.apache.storm.thrift.protocol.TProtocol,org.apache.storm.generated.ClusterWorkerHeartbeat):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getThisSources()` could be null and is dereferenced at line 215.","tnFile":"storm-client/src/jvm/org/apache/storm/task/TopologyContext.java","tnLine":215,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.task.TopologyContext.getThisInputFields():java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `InputStreamWithMeta HdfsBlobStore.getBlob(String,Subject)` indirectly reads without synchronization from `this.hbs`. Potentially races with write in method `HdfsBlobStore.prepareInternal(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"external/storm-hdfs-blobstore/src/main/java/org/apache/storm/hdfs/blobstore/HdfsBlobStore.java","tnLine":329,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.hdfs.blobstore.HdfsBlobStore.getBlob(java.lang.String,javax.security.auth.Subject):org.apache.storm.blobstore.InputStreamWithMeta","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `executorSummary` last assigned on line 1352 could be null and is dereferenced at line 1353.","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java","tnLine":1353,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.ui.UIHelpers.getSpoutExecutorStats(java.lang.String,java.util.Map,org.apache.storm.generated.ExecutorAggregateStats):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `creds.get_creds()` could be null and is dereferenced at line 104.","tnFile":"storm-core/src/jvm/org/apache/storm/command/AdminCommands.java","tnLine":104,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.command.AdminCommands$CredentialsDebug.run(java.lang.String[],java.util.Map,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `execToPort` last assigned on line 846 could be null and is dereferenced at line 847.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":847,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus.auditAssignmentChanges(java.util.Map,java.util.HashMap):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `bolts` last assigned on line 2216 could be null and is dereferenced at line 2217.","tnFile":"storm-server/src/main/java/org/apache/storm/stats/StatsUtil.java","tnLine":2217,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.stats.StatsUtil.componentType(org.apache.storm.generated.StormTopology,java.lang.String):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void NimbusBlobStore.createStateInZookeeper(String)` reads without synchronization from `this.client`. Potentially races with write in method `NimbusBlobStore.prepare(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"storm-client/src/jvm/org/apache/storm/blobstore/NimbusBlobStore.java","tnLine":135,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.blobstore.NimbusBlobStore.createStateInZookeeper(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `com.esotericsoftware.kryo.io.Output` acquired by call to `KryoValuesSerializer(...)` at line 43 is not released after line 43.","tnFile":"storm-client/src/jvm/org/apache/storm/messaging/netty/StormServerPipelineFactory.java","tnLine":43,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.messaging.netty.StormServerPipelineFactory.initChannel(org.apache.storm.shade.io.netty.channel.Channel):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Iterator HdfsBlobStore.listKeys()` reads without synchronization from `this.hbs`. Potentially races with write in method `HdfsBlobStore.prepareInternal(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"external/storm-hdfs-blobstore/src/main/java/org/apache/storm/hdfs/blobstore/HdfsBlobStore.java","tnLine":341,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.hdfs.blobstore.HdfsBlobStore.listKeys():java.util.Iterator","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getState(id)` could be null and is dereferenced at line 70.","tnFile":"storm-server/src/main/java/org/apache/storm/testing/TrackedTopology.java","tnLine":70,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.testing.TrackedTopology.globalAmt(java.lang.String,java.lang.String):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `struct.acked` last accessed on line 768 could be null and is dereferenced at line 768.","tnFile":"storm-client/src/jvm/org/apache/storm/generated/SpoutStats.java","tnLine":768,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.generated.SpoutStats$SpoutStatsTupleScheme.write(org.apache.storm.thrift.protocol.TProtocol,org.apache.storm.generated.SpoutStats):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `supervisorIds` last assigned on line 4250 could be null and is dereferenced at line 4256.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":4256,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus.getSupervisorPageInfo(java.lang.String,java.lang.String,boolean):org.apache.storm.generated.SupervisorPageInfo","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void AbstractHdfsBolt.doRotationAndRemoveWriter(String,Writer)` mutates container `this.writers` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"external/storm-hdfs/src/main/java/org/apache/storm/hdfs/bolt/AbstractHdfsBolt.java","tnLine":236,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.hdfs.bolt.AbstractHdfsBolt.doRotationAndRemoveWriter(java.lang.String,org.apache.storm.hdfs.bolt.Writer):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void NimbusBlobStore.setBlobMetaToExtend(String,SettableBlobMeta)` reads without synchronization from `this.client`. Potentially races with write in method `NimbusBlobStore.prepare(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"storm-client/src/jvm/org/apache/storm/blobstore/NimbusBlobStore.java","tnLine":109,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.blobstore.NimbusBlobStore.setBlobMetaToExtend(java.lang.String,org.apache.storm.generated.SettableBlobMeta):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `componentType(stormTopology,executorSummary.get_component_id())` could be null and is dereferenced at line 1637.","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java","tnLine":1637,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.ui.UIHelpers.getBoltExecutors(java.util.List,org.apache.storm.generated.StormTopology,boolean):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `summ.get_supervisors()` could be null and is dereferenced at line 1250.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":1250,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus.extractSupervisorMetrics(org.apache.storm.generated.ClusterSummary):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getState(FeederBatchSpout._semaphoreId)` could be null and is dereferenced at line 51.","tnFile":"storm-client/src/jvm/org/apache/storm/trident/testing/FeederBatchSpout.java","tnLine":51,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.trident.testing.FeederBatchSpout.feed(java.lang.Object):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `clusterSummary.get_topologies()` could be null and is dereferenced at line 81.","tnFile":"examples/storm-loadgen/src/main/java/org/apache/storm/loadgen/EstimateThroughput.java","tnLine":81,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.loadgen.EstimateThroughput.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getThisSources()` could be null and is dereferenced at line 295.","tnFile":"storm-client/src/jvm/org/apache/storm/task/TopologyContext.java","tnLine":295,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.task.TopologyContext.toJSONString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Connection HikariCPConnectionProvider.getConnection()` reads without synchronization from `this.dataSource`. Potentially races with write in method `HikariCPConnectionProvider.prepare()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"external/storm-jdbc/src/main/java/org/apache/storm/jdbc/common/HikariCPConnectionProvider.java","tnLine":53,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.jdbc.common.HikariCPConnectionProvider.getConnection():java.sql.Connection","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `common` last assigned on line 318 could be null and is dereferenced at line 320.","tnFile":"storm-client/src/jvm/org/apache/storm/daemon/StormCommon.java","tnLine":320,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.StormCommon.addSystemStreams(org.apache.storm.generated.StormTopology):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.util.zip.GZIPInputStream` acquired by call to `GZIPInputStream(...)` at line 52 is not released after line 53.","tnFile":"storm-client/src/jvm/org/apache/storm/serialization/GzipSerializationDelegate.java","tnLine":53,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.serialization.GzipSerializationDelegate.deserialize(byte[],java.lang.Class):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `subSystems` last assigned on line 99 could be null and is dereferenced at line 100.","tnFile":"storm-client/src/jvm/org/apache/storm/container/cgroup/CgroupCenter.java","tnLine":100,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.container.cgroup.CgroupCenter.isSubSystemEnabled(org.apache.storm.container.cgroup.SubSystemType):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getMapByKey(accData,\"window->acked\")` could be null and is dereferenced by call to `mapKeyStr(...)` at line 689.","tnFile":"storm-server/src/main/java/org/apache/storm/stats/StatsUtil.java","tnLine":689,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.stats.StatsUtil.postAggregateTopoStats(java.util.Map,java.util.Map,java.util.HashMap,java.lang.String,org.apache.storm.cluster.IStormClusterState):org.apache.storm.generated.TopologyPageInfo","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getState(AckFailMapTracker._acked)` could be null and is dereferenced at line 30.","tnFile":"storm-client/src/jvm/org/apache/storm/testing/AckFailMapTracker.java","tnLine":30,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.testing.AckFailMapTracker.isAcked(java.lang.Object):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `ReadableBlobMeta HdfsBlobStore.getBlobMeta(String,Subject)` reads without synchronization from `this.aclHandler`. Potentially races with write in method `HdfsBlobStore.prepareInternal(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"external/storm-hdfs-blobstore/src/main/java/org/apache/storm/hdfs/blobstore/HdfsBlobStore.java","tnLine":271,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.hdfs.blobstore.HdfsBlobStore.getBlobMeta(java.lang.String,javax.security.auth.Subject):org.apache.storm.generated.ReadableBlobMeta","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void LocalCluster.waitForIdle(long)` indirectly reads without synchronization from container `this.supervisors` via call to `iterator`. Potentially races with write in method `LocalCluster.addSupervisor(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"storm-server/src/main/java/org/apache/storm/LocalCluster.java","tnLine":759,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.LocalCluster.waitForIdle(long):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `ac.get_type()` could be null and is dereferenced at line 144.","tnFile":"storm-client/src/jvm/org/apache/storm/blobstore/BlobStoreAclHandler.java","tnLine":144,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.blobstore.BlobStoreAclHandler.accessControlToString(org.apache.storm.generated.AccessControl):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void NimbusBlobStore.deleteBlob(String)` reads without synchronization from `this.client`. Potentially races with write in method `NimbusBlobStore.prepare(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"storm-client/src/jvm/org/apache/storm/blobstore/NimbusBlobStore.java","tnLine":122,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.blobstore.NimbusBlobStore.deleteBlob(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void AbstractHdfsBolt.execute(Tuple)` reads without synchronization from `this.writeLock`. Potentially races with write in method `AbstractHdfsBolt.prepare(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"external/storm-hdfs/src/main/java/org/apache/storm/hdfs/bolt/AbstractHdfsBolt.java","tnLine":130,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.hdfs.bolt.AbstractHdfsBolt.execute(org.apache.storm.tuple.Tuple):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `mergedCreds` last assigned on line 3502 could be null and is dereferenced at line 3503.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":3503,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus.uploadNewCredentials(java.lang.String,org.apache.storm.generated.Credentials):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `executorSummaries` last assigned on line 74 could be null and is dereferenced at line 90.","tnFile":"examples/storm-perf/src/main/java/org/apache/storm/perf/utils/MetricsSample.java","tnLine":90,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.perf.utils.MetricsSample.getMetricsSample(org.apache.storm.generated.TopologyInfo):org.apache.storm.perf.utils.MetricsSample","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `componentPageInfo.get_component_type()` could be null and is dereferenced at line 2004.","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java","tnLine":2004,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.ui.UIHelpers.getComponentPage(org.apache.storm.generated.Nimbus$Iface,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String,java.util.Map):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RestClient AbstractEsBolt.getClient()` reads without synchronization from `bolt.AbstractEsBolt.client`. Potentially races with write in method `AbstractEsBolt.prepare(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"external/storm-elasticsearch/src/main/java/org/apache/storm/elasticsearch/bolt/AbstractEsBolt.java","tnLine":94,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.elasticsearch.bolt.AbstractEsBolt.getClient():org.elasticsearch.client.RestClient","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `struct.component_type` last accessed on line 2061 could be null and is dereferenced at line 2061.","tnFile":"storm-client/src/jvm/org/apache/storm/generated/ComponentPageInfo.java","tnLine":2061,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.generated.ComponentPageInfo$ComponentPageInfoTupleScheme.write(org.apache.storm.thrift.protocol.TProtocol,org.apache.storm.generated.ComponentPageInfo):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void AbstractEsBolt.replaceClient(RestClient)` writes to field `bolt.AbstractEsBolt.client` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"external/storm-elasticsearch/src/main/java/org/apache/storm/elasticsearch/bolt/AbstractEsBolt.java","tnLine":98,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.elasticsearch.bolt.AbstractEsBolt.replaceClient(org.elasticsearch.client.RestClient):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getRawTopology().get_spouts()` could be null and is dereferenced at line 194.","tnFile":"storm-client/src/jvm/org/apache/storm/task/GeneralTopologyContext.java","tnLine":194,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.task.GeneralTopologyContext.maxTopologyMessageTimeout():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.apache.storm.metric.internal.RateTracker` acquired by call to `JCQueue(...)` at line 62 is not released after line 69.","tnFile":"examples/storm-perf/src/main/java/org/apache/storm/perf/JCQueuePerfTest.java","tnLine":69,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.perf.JCQueuePerfTest.producerFwdConsumer(int):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `cpuCore` last assigned on line 173 could be null and is dereferenced at line 175.","tnFile":"storm-server/src/main/java/org/apache/storm/container/cgroup/CgroupManager.java","tnLine":175,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.container.cgroup.CgroupManager.reserveResourcesForWorker(java.lang.String,java.lang.Integer,java.lang.Integer):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `td` last assigned on line 84 could be null and is dereferenced at line 86.","tnFile":"storm-server/src/main/java/org/apache/storm/scheduler/multitenant/IsolatedPool.java","tnLine":86,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.scheduler.multitenant.IsolatedPool.scheduleAsNeeded(org.apache.storm.scheduler.multitenant.NodePool[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void HiveWriter.flushAndClose()` indirectly reads without synchronization from `this.txnBatch`. Potentially races with write in method `HiveWriter.abort()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"external/storm-hive/src/main/java/org/apache/storm/hive/common/HiveWriter.java","tnLine":230,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.hive.common.HiveWriter.flushAndClose():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void HdfsBlobStore.deleteBlob(String,Subject)` reads without synchronization from `this.aclHandler`. Potentially races with write in method `HdfsBlobStore.prepareInternal(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"external/storm-hdfs-blobstore/src/main/java/org/apache/storm/hdfs/blobstore/HdfsBlobStore.java","tnLine":315,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.hdfs.blobstore.HdfsBlobStore.deleteBlob(java.lang.String,javax.security.auth.Subject):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List Rankings.getRankings()` reads without synchronization from container `this.rankedItems` via call to `iterator`. Potentially races with write in method `Rankings.updateWith(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"examples/storm-starter/src/jvm/org/apache/storm/starter/tools/Rankings.java","tnLine":73,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.starter.tools.Rankings.getRankings():java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `nodeInfo1` last assigned on line 344 could be null and is dereferenced at line 345.","tnFile":"storm-client/src/jvm/org/apache/storm/cluster/StormClusterStateImpl.java","tnLine":345,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.cluster.StormClusterStateImpl.getWorkerProfileRequests(java.lang.String,org.apache.storm.generated.NodeInfo):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `a.get_topology_id()` could be null and is dereferenced at line 172.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/supervisor/Slot.java","tnLine":172,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.supervisor.Slot.forSameTopology(org.apache.storm.generated.LocalAssignment,org.apache.storm.generated.LocalAssignment):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void EsState.updateState(List)` reads without synchronization from `trident.EsState.client`. Potentially races with write in method `EsState.prepare()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"external/storm-elasticsearch/src/main/java/org/apache/storm/elasticsearch/trident/EsState.java","tnLine":125,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.elasticsearch.trident.EsState.updateState(java.util.List):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `LogWriter(...)` at line 43 is not released after line 50.","tnFile":"storm-client/src/jvm/org/apache/storm/LogWriter.java","tnLine":50,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.LogWriter.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `response.get_data()` could be null and is dereferenced at line 205.","tnFile":"storm-client/src/jvm/org/apache/storm/cluster/PaceMakerStateStorage.java","tnLine":205,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.cluster.PaceMakerStateStorage.get_worker_hb_children(java.lang.String,boolean):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `accData.get(\"workers-set\")` could be null and is dereferenced at line 647.","tnFile":"storm-server/src/main/java/org/apache/storm/stats/StatsUtil.java","tnLine":647,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.stats.StatsUtil.postAggregateTopoStats(java.util.Map,java.util.Map,java.util.HashMap,java.lang.String,org.apache.storm.cluster.IStormClusterState):org.apache.storm.generated.TopologyPageInfo","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `logConfig.get_named_logger_level()` could be null and is dereferenced at line 93.","tnFile":"storm-client/src/jvm/org/apache/storm/daemon/worker/LogConfigManager.java","tnLine":93,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.worker.LogConfigManager.processLogConfigChange(org.apache.storm.generated.LogConfig):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `struct.action` last accessed on line 755 could be null and is dereferenced at line 755.","tnFile":"storm-client/src/jvm/org/apache/storm/generated/LogLevel.java","tnLine":755,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.generated.LogLevel$LogLevelTupleScheme.write(org.apache.storm.thrift.protocol.TProtocol,org.apache.storm.generated.LogLevel):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `base.get_topology_action_options()` could be null and is dereferenced at line 367.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":367,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus.lambda$static$7(java.lang.Object,org.apache.storm.daemon.nimbus.Nimbus,java.lang.String,org.apache.storm.generated.StormBase):org.apache.storm.generated.StormBase","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ReadClusterState.close()` reads without synchronization from container `this.slots` via call to `values`. Potentially races with write in method `ReadClusterState.run()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/supervisor/ReadClusterState.java","tnLine":345,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.supervisor.ReadClusterState.close():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `struct.bolt_object` last accessed on line 473 could be null and is dereferenced at line 473.","tnFile":"storm-client/src/jvm/org/apache/storm/generated/Bolt.java","tnLine":473,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.generated.Bolt$BoltTupleScheme.write(org.apache.storm.thrift.protocol.TProtocol,org.apache.storm.generated.Bolt):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `stats` last assigned on line 759 could be null and is dereferenced at line 760.","tnFile":"storm-server/src/main/java/org/apache/storm/stats/StatsUtil.java","tnLine":760,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.stats.StatsUtil.aggregateSpoutStats(java.util.ArrayList,boolean):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `profileRequest.get_nodeInfo()` could be null and is dereferenced at line 373.","tnFile":"storm-client/src/jvm/org/apache/storm/cluster/StormClusterStateImpl.java","tnLine":373,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.cluster.StormClusterStateImpl.setWorkerProfileRequest(java.lang.String,org.apache.storm.generated.ProfileRequest):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `workerTopologyContext.getComponentCommon(componentId).get_streams()` could be null and is dereferenced at line 421.","tnFile":"storm-client/src/jvm/org/apache/storm/executor/Executor.java","tnLine":421,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.executor.Executor.outboundComponents(org.apache.storm.task.WorkerTopologyContext,java.lang.String,java.util.Map):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `meta.get_settable()` could be null and is dereferenced at line 184.","tnFile":"storm-core/src/jvm/org/apache/storm/command/Blobstore.java","tnLine":184,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.command.Blobstore$2.run(org.apache.storm.blobstore.ClientBlobStore):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `or(__new_array(java.lang.Double*[_*_]))` could be null and is dereferenced at line 259.","tnFile":"examples/storm-loadgen/src/main/java/org/apache/storm/loadgen/TopologyLoadConf.java","tnLine":259,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.loadgen.TopologyLoadConf.scaleCompThroughput(org.apache.storm.loadgen.LoadCompConf,double,java.util.Map):org.apache.storm.loadgen.LoadCompConf","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.apache.storm.metric.internal.RateTracker` acquired by call to `JCQueue(...)` at line 51 is not released after line 56.","tnFile":"examples/storm-perf/src/main/java/org/apache/storm/perf/JCQueuePerfTest.java","tnLine":56,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.perf.JCQueuePerfTest.ackingProducerSimulation():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `struct.executors` last accessed on line 2012 could be null and is dereferenced at line 2012.","tnFile":"storm-client/src/jvm/org/apache/storm/generated/TopologyInfo.java","tnLine":2012,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.generated.TopologyInfo$TopologyInfoTupleScheme.write(org.apache.storm.thrift.protocol.TProtocol,org.apache.storm.generated.TopologyInfo):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.apache.storm.metric.internal.RateTracker` acquired by call to `JCQueue(...)` at line 95 is not released after line 103.","tnFile":"examples/storm-perf/src/main/java/org/apache/storm/perf/JCQueuePerfTest.java","tnLine":103,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.perf.JCQueuePerfTest.threeProducer1Consumer(int):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `clusterSummary.get_supervisors()` could be null and is dereferenced at line 5011.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":5011,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus$ClusterSummaryMetricSet$9.transform(org.apache.storm.generated.ClusterSummary):java.lang.Double","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getState(org.apache.storm.executor.LocalExecutor.trackId)` could be null and is dereferenced at line 34.","tnFile":"storm-client/src/jvm/org/apache/storm/executor/LocalExecutor.java","tnLine":34,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.executor.LocalExecutor$1.tryTransfer(org.apache.storm.tuple.AddressedTuple,java.util.Queue):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `struct.acked` last accessed on line 1158 could be null and is dereferenced at line 1158.","tnFile":"storm-client/src/jvm/org/apache/storm/generated/BoltStats.java","tnLine":1158,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.generated.BoltStats$BoltStatsTupleScheme.write(org.apache.storm.thrift.protocol.TProtocol,org.apache.storm.generated.BoltStats):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `struct.port` last accessed on line 505 could be null and is dereferenced at line 505.","tnFile":"storm-client/src/jvm/org/apache/storm/generated/NodeInfo.java","tnLine":505,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.generated.NodeInfo$NodeInfoTupleScheme.write(org.apache.storm.thrift.protocol.TProtocol,org.apache.storm.generated.NodeInfo):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `redis.clients.jedis.JedisPool` acquired by call to `new()` at line 354 is not released after line 369.","tnFile":"external/storm-redis/src/main/java/org/apache/storm/redis/trident/state/RedisMapState.java","tnLine":369,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.redis.trident.state.RedisMapState$Factory.makeState(java.util.Map,org.apache.storm.task.IMetricsContext,int,int):org.apache.storm.trident.state.State","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `struct.executors` last accessed on line 602 could be null and is dereferenced at line 602.","tnFile":"storm-client/src/jvm/org/apache/storm/generated/SupervisorWorkerHeartbeat.java","tnLine":602,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.generated.SupervisorWorkerHeartbeat$SupervisorWorkerHeartbeatTupleScheme.write(org.apache.storm.thrift.protocol.TProtocol,org.apache.storm.generated.SupervisorWorkerHeartbeat):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `InputStreamWithMeta NimbusBlobStore.getBlob(String)` reads without synchronization from `this.client`. Potentially races with write in method `NimbusBlobStore.prepare(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"storm-client/src/jvm/org/apache/storm/blobstore/NimbusBlobStore.java","tnLine":146,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.blobstore.NimbusBlobStore.getBlob(java.lang.String):org.apache.storm.blobstore.InputStreamWithMeta","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `new()` at line 106 is not released after line 109.","tnFile":"storm-server/src/main/java/org/apache/storm/healthcheck/HealthChecker.java","tnLine":109,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.healthcheck.HealthChecker.processScript(java.util.Map,java.lang.String):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `ReadableBlobMeta HdfsBlobStore.getBlobMeta(String,Subject)` indirectly reads without synchronization from `this.localSubject`. Potentially races with write in method `HdfsBlobStore.prepareInternal(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"external/storm-hdfs-blobstore/src/main/java/org/apache/storm/hdfs/blobstore/HdfsBlobStore.java","tnLine":268,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.hdfs.blobstore.HdfsBlobStore.getBlobMeta(java.lang.String,javax.security.auth.Subject):org.apache.storm.generated.ReadableBlobMeta","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `x.get_total_resources()` could be null and is dereferenced at line 578.","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java","tnLine":578,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.ui.UIHelpers.lambda$getClusterSummary$1(org.apache.storm.generated.SupervisorSummary):double","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `topoPageInfo.get_id_to_bolt_agg_stats()` could be null and is dereferenced at line 4176.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":4176,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus.maybeAddPlaceholderBoltAggStats(org.apache.storm.generated.TopologyPageInfo,org.apache.storm.generated.StormTopology,boolean):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void HdfsBlobStore.deleteBlob(String,Subject)` indirectly reads without synchronization from `this.localSubject`. Potentially races with write in method `HdfsBlobStore.prepareInternal(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"external/storm-hdfs-blobstore/src/main/java/org/apache/storm/hdfs/blobstore/HdfsBlobStore.java","tnLine":312,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.hdfs.blobstore.HdfsBlobStore.deleteBlob(java.lang.String,javax.security.auth.Subject):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `stormBase` last assigned on line 601 could be null and is dereferenced at line 602.","tnFile":"storm-client/src/jvm/org/apache/storm/cluster/StormClusterStateImpl.java","tnLine":602,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.cluster.StormClusterStateImpl.updateStorm(java.lang.String,org.apache.storm.generated.StormBase):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getMapByKey(stats,\"acked\")` could be null and is dereferenced by call to `aggregateCountStreams(...)` at line 929.","tnFile":"storm-server/src/main/java/org/apache/storm/stats/StatsUtil.java","tnLine":929,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.stats.StatsUtil.aggregateBoltStreams(java.util.HashMap):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.apache.storm.blobstore.NimbusBlobStore` acquired by call to `NimbusBlobStore()` at line 181 is not released after line 192.","tnFile":"storm-server/src/main/java/org/apache/storm/blobstore/BlobStoreUtils.java","tnLine":192,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.blobstore.BlobStoreUtils.downloadUpdatedBlob(java.util.Map,org.apache.storm.blobstore.BlobStore,java.lang.String,java.util.HashSet):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Path AbstractHdfsBolt.getBasePathForNextFile(Tuple)` mutates container `this.rotationCounterMap` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"external/storm-hdfs/src/main/java/org/apache/storm/hdfs/bolt/AbstractHdfsBolt.java","tnLine":297,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.hdfs.bolt.AbstractHdfsBolt.getBasePathForNextFile(org.apache.storm.tuple.Tuple):org.apache.hadoop.fs.Path","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `o1` last assigned on line 24 could be null and is dereferenced at line 26.","tnFile":"storm-client/src/jvm/org/apache/storm/trident/operation/builtin/Equals.java","tnLine":26,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.trident.operation.builtin.Equals.isKeep(org.apache.storm.trident.tuple.TridentTuple):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `spouts` last assigned on line 208 could be null and is dereferenced at line 210.","tnFile":"storm-client/src/jvm/org/apache/storm/executor/Executor.java","tnLine":210,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.executor.Executor.getExecutorType(org.apache.storm.task.WorkerTopologyContext,java.lang.String):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `struct.state_spout_object` last accessed on line 473 could be null and is dereferenced at line 473.","tnFile":"storm-client/src/jvm/org/apache/storm/generated/StateSpoutSpec.java","tnLine":473,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.generated.StateSpoutSpec$StateSpoutSpecTupleScheme.write(org.apache.storm.thrift.protocol.TProtocol,org.apache.storm.generated.StateSpoutSpec):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `workerHeartbeat.get_executors()` could be null and is dereferenced at line 1361.","tnFile":"storm-server/src/main/java/org/apache/storm/stats/StatsUtil.java","tnLine":1361,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.stats.StatsUtil.convertWorkerBeats(org.apache.storm.generated.SupervisorWorkerHeartbeat):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `bpCheckIntervalMs` last assigned on line 330 could be null and is dereferenced at line 331.","tnFile":"storm-client/src/jvm/org/apache/storm/daemon/worker/Worker.java","tnLine":331,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.worker.Worker.setupBackPressureCheckTimer(java.util.Map):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `long BasicContainer.getMemoryUsageMb()` reads without synchronization from `this._workerId`. Potentially races with write in method `BasicContainer.createNewWorkerId()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/supervisor/BasicContainer.java","tnLine":788,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.supervisor.BasicContainer.getMemoryUsageMb():long","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `conf.get(\"storm.blobstore.acl.validation.enabled\")` could be null and is dereferenced at line 76.","tnFile":"storm-client/src/jvm/org/apache/storm/blobstore/BlobStoreAclHandler.java","tnLine":76,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.blobstore.BlobStoreAclHandler.<init>(java.util.Map)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void LocalCluster.advanceClusterTime(int)` indirectly reads without synchronization from container `utils.Time.THREAD_SLEEP_TIMES_NANOS` via call to `get`. Potentially races with write in method `LocalCluster.addSupervisor(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"storm-server/src/main/java/org/apache/storm/LocalCluster.java","tnLine":772,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.LocalCluster.advanceClusterTime(int):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void FixedTupleSpout.clear(String)` mutates container `testing.FixedTupleSpout.failed` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"storm-client/src/jvm/org/apache/storm/testing/FixedTupleSpout.java","tnLine":78,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.testing.FixedTupleSpout.clear(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `settable` last assigned on line 356 could be null and is dereferenced at line 357.","tnFile":"storm-server/src/main/java/org/apache/storm/utils/ServerUtils.java","tnLine":357,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.utils.ServerUtils.canUserReadBlob(org.apache.storm.generated.ReadableBlobMeta,java.lang.String,java.util.Map):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean BasicContainer.isMemoryLimitViolated(LocalAssignment)` indirectly reads without synchronization from `this._workerId`. Potentially races with write in method `BasicContainer.createNewWorkerId()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/supervisor/BasicContainer.java","tnLine":711,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.supervisor.BasicContainer.isMemoryLimitViolated(org.apache.storm.generated.LocalAssignment):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileInputStream` acquired by call to `BufferFileInputStream(...)` at line 477 is not released after line 505.\n**Note**: potential exception at line 486","tnFile":"storm-client/src/jvm/org/apache/storm/StormSubmitter.java","tnLine":505,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.StormSubmitter.submitJarAs(java.util.Map,java.lang.String,org.apache.storm.StormSubmitter$ProgressListener,org.apache.storm.utils.NimbusClient):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.apache.storm.blobstore.LocalFsBlobStore` acquired to `lfsBlobStore` by call to `LocalFsBlobStore()` at line 46 is not released after line 55.\n**Note**: potential exception at line 47","tnFile":"external/storm-blobstore-migration/src/main/java/org/apache/storm/blobstore/ListLocalFs.java","tnLine":55,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.blobstore.ListLocalFs.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `ComponentPageInfo Nimbus.getComponentPageInfo(String,String,String,boolean)` indirectly writes to field `common.inputs` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":4306,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus.getComponentPageInfo(java.lang.String,java.lang.String,java.lang.String,boolean):org.apache.storm.generated.ComponentPageInfo","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `CgroupManager.rootCgroup.getChildren()` could be null and is dereferenced at line 250.","tnFile":"storm-server/src/main/java/org/apache/storm/container/cgroup/CgroupManager.java","tnLine":250,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.container.cgroup.CgroupManager.getLaunchCommandPrefix(java.lang.String):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `InputStreamWithMeta HdfsBlobStore.getBlob(String,Subject)` indirectly reads without synchronization from `this.localSubject`. Potentially races with write in method `HdfsBlobStore.prepareInternal(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"external/storm-hdfs-blobstore/src/main/java/org/apache/storm/hdfs/blobstore/HdfsBlobStore.java","tnLine":327,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.hdfs.blobstore.HdfsBlobStore.getBlob(java.lang.String,javax.security.auth.Subject):org.apache.storm.blobstore.InputStreamWithMeta","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `ac.get_type()` could be null and is dereferenced at line 341.","tnFile":"storm-client/src/jvm/org/apache/storm/blobstore/BlobStoreAclHandler.java","tnLine":341,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.blobstore.BlobStoreAclHandler.getAllowed(org.apache.storm.generated.AccessControl,java.util.Set):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `com.esotericsoftware.kryo.io.Input` acquired by call to `KryoValuesDeserializer(...)` at line 40 is not released after line 40.","tnFile":"storm-client/src/jvm/org/apache/storm/messaging/netty/StormClientPipelineFactory.java","tnLine":40,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.messaging.netty.StormClientPipelineFactory.initChannel(org.apache.storm.shade.io.netty.channel.Channel):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int HdfsBlobStore.getBlobReplication(String,Subject)` reads without synchronization from `this.aclHandler`. Potentially races with write in method `HdfsBlobStore.prepareInternal(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"external/storm-hdfs-blobstore/src/main/java/org/apache/storm/hdfs/blobstore/HdfsBlobStore.java","tnLine":357,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.hdfs.blobstore.HdfsBlobStore.getBlobReplication(java.lang.String,javax.security.auth.Subject):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `execToNodeInfo` last assigned on line 4038 could be null and is dereferenced at line 4040.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":4040,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus.getTopologyPageInfo(java.lang.String,java.lang.String,boolean):org.apache.storm.generated.TopologyPageInfo","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `struct.topo_history` last accessed on line 410 could be null and is dereferenced at line 410.","tnFile":"storm-client/src/jvm/org/apache/storm/generated/LSTopoHistoryList.java","tnLine":410,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.generated.LSTopoHistoryList$LSTopoHistoryListTupleScheme.write(org.apache.storm.thrift.protocol.TProtocol,org.apache.storm.generated.LSTopoHistoryList):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `AtomicOutputStream NimbusBlobStore.updateBlob(String)` reads without synchronization from `this.client`. Potentially races with write in method `NimbusBlobStore.prepare(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"storm-client/src/jvm/org/apache/storm/blobstore/NimbusBlobStore.java","tnLine":71,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.blobstore.NimbusBlobStore.updateBlob(java.lang.String):org.apache.storm.blobstore.AtomicOutputStream","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `specificAggregateStats` last assigned on line 1290 could be null and is dereferenced at line 1291.","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java","tnLine":1291,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.ui.UIHelpers.getSpoutOutputStats(java.lang.String,org.apache.storm.generated.ComponentAggregateStats):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void HdfsBlobStore.fullCleanup(long)` reads without synchronization from `this.hbs`. Potentially races with write in method `HdfsBlobStore.prepareInternal(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"external/storm-hdfs-blobstore/src/main/java/org/apache/storm/hdfs/blobstore/HdfsBlobStore.java","tnLine":404,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.hdfs.blobstore.HdfsBlobStore.fullCleanup(long):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `long HiveWriter.getLastUsed()` reads without synchronization from `this.lastUsed`. Potentially races with write in method `HiveWriter.flush(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"external/storm-hive/src/main/java/org/apache/storm/hive/common/HiveWriter.java","tnLine":428,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.hive.common.HiveWriter.getLastUsed():long","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean WindowManager.onTrigger()` reads without synchronization from `this.triggerPolicy`. Potentially races with write in method `WindowManager.setTriggerPolicy(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"storm-client/src/jvm/org/apache/storm/windowing/WindowManager.java","tnLine":160,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.windowing.WindowManager.onTrigger():boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `topologySummary.get_owner()` could be null and is dereferenced at line 795.","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java","tnLine":795,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.ui.UIHelpers.getTopologiesMap(java.lang.String,java.util.List):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `requestedResources` last assigned on line 47 could be null and is dereferenced by call to `updateForRareResourceAffinity(...)` at line 49.","tnFile":"storm-server/src/main/java/org/apache/storm/scheduler/resource/strategies/scheduling/GenericResourceAwareStrategy.java","tnLine":49,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.scheduler.resource.strategies.scheduling.GenericResourceAwareStrategy.sortObjectResourcesImpl(org.apache.storm.scheduler.resource.strategies.scheduling.BaseResourceAwareStrategy$AllResources,org.apache.storm.scheduler.ExecutorDetails,org.apache.storm.scheduler.TopologyDetails,org.apache.storm.scheduler.resource.strategies.scheduling.BaseResourceAwareStrategy$ExistingScheduleFunc):java.util.TreeSet","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `context.getThisSources()` could be null and is dereferenced at line 228.","tnFile":"storm-client/src/jvm/org/apache/storm/topology/WindowedBoltExecutor.java","tnLine":228,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.topology.WindowedBoltExecutor.getComponentStreams(org.apache.storm.task.TopologyContext):java.util.Set","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `CgroupCommon.parent.getChildren()` could be null and is dereferenced at line 188.","tnFile":"storm-client/src/jvm/org/apache/storm/container/cgroup/CgroupCommon.java","tnLine":188,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.container.cgroup.CgroupCommon.delete():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.apache.storm.utils.BufferInputStream` acquired by call to `new()` at line 3652 is not released after line 3651.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":3651,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus.beginBlobDownload(java.lang.String):org.apache.storm.generated.BeginDownloadResult","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `com.esotericsoftware.kryo.io.Input` acquired by call to `StormClientHandler(...)` at line 52 is not released after line 52.","tnFile":"storm-client/src/jvm/org/apache/storm/messaging/netty/StormClientPipelineFactory.java","tnLine":52,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.messaging.netty.StormClientPipelineFactory.initChannel(org.apache.storm.shade.io.netty.channel.Channel):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `com.esotericsoftware.kryo.io.Input` acquired by call to `KryoValuesDeserializer(...)` at line 40 is not released after line 40.","tnFile":"storm-client/src/jvm/org/apache/storm/messaging/netty/StormServerPipelineFactory.java","tnLine":40,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.messaging.netty.StormServerPipelineFactory.initChannel(org.apache.storm.shade.io.netty.channel.Channel):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `commonStats` last assigned on line 1209 could be null and is dereferenced at line 1212.","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java","tnLine":1212,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.ui.UIHelpers.getBoltAggStatsMap(org.apache.storm.generated.ComponentAggregateStats,java.lang.String):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `globalStreamId.get_componentId()` could be null and is dereferenced at line 336.","tnFile":"storm-client/src/jvm/org/apache/storm/streams/ProcessorBoltDelegate.java","tnLine":336,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.streams.ProcessorBoltDelegate.getStreamId(org.apache.storm.generated.GlobalStreamId):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void HdfsBlobStore.prepareInternal(Map,String,Configuration)` writes to field `this.aclHandler` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"external/storm-hdfs-blobstore/src/main/java/org/apache/storm/hdfs/blobstore/HdfsBlobStore.java","tnLine":167,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.hdfs.blobstore.HdfsBlobStore.prepareInternal(java.util.Map,java.lang.String,org.apache.hadoop.conf.Configuration):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getComponentCommon(componentId).get_streams()` could be null and is dereferenced at line 99.","tnFile":"storm-client/src/jvm/org/apache/storm/task/GeneralTopologyContext.java","tnLine":99,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.task.GeneralTopologyContext.getComponentStreams(java.lang.String):java.util.Set","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `common` last assigned on line 310 could be null and is dereferenced at line 312.","tnFile":"storm-client/src/jvm/org/apache/storm/daemon/StormCommon.java","tnLine":312,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.StormCommon.addMetricStreams(org.apache.storm.generated.StormTopology):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `allBatches` last assigned on line 129 could be null and is dereferenced at line 130.","tnFile":"storm-client/src/jvm/org/apache/storm/trident/testing/FeederBatchSpout.java","tnLine":130,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.trident.testing.FeederBatchSpout$FeederCoordinator.initializeTransaction(long,java.util.Map,java.util.Map):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `VersionInfoMojo.scmOut` last assigned on line 92 could be null and is dereferenced by call to `getSCMUri(...)` at line 94.","tnFile":"storm-buildtools/storm-maven-plugins/src/main/java/org/apache/storm/maven/plugin/versioninfo/VersionInfoMojo.java","tnLine":94,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.maven.plugin.versioninfo.VersionInfoMojo.execute():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `a.get_topology_id()` could be null and is dereferenced at line 192.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/supervisor/Slot.java","tnLine":192,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.supervisor.Slot.equivalent(org.apache.storm.generated.LocalAssignment,org.apache.storm.generated.LocalAssignment):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void PacemakerClient.gotMessage(HBMessage)` reads without synchronization from `this.messages`. Potentially races with write in method `PacemakerClient.reconnect()`.\n Reporting because this access may occur on a background thread.","tnFile":"storm-client/src/jvm/org/apache/storm/pacemaker/PacemakerClient.java","tnLine":217,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.pacemaker.PacemakerClient.gotMessage(org.apache.storm.generated.HBMessage):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `workerToResources` last assigned on line 1939 could be null and is dereferenced at line 1942.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":1942,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus.computeTopologyToSchedulerAssignment(java.util.Map,java.util.Map):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.apache.storm.LocalCluster$LocalTopology` acquired by call to `submitTopologyWithOpts(...)` at line 816 is not released after line 816.","tnFile":"storm-server/src/main/java/org/apache/storm/LocalCluster.java","tnLine":816,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.LocalCluster.submitTopologyWithOpts(java.lang.String,java.lang.String,java.lang.String,org.apache.storm.generated.StormTopology,org.apache.storm.generated.SubmitOptions):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 111 is not released after line 111.","tnFile":"sql/storm-sql-core/src/jvm/org/apache/storm/sql/StormSqlImpl.java","tnLine":111,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.sql.StormSqlImpl.packageTopology(java.nio.file.Path,org.apache.storm.sql.AbstractStreamsProcessor):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `TopologyInfo Nimbus.getTopologyInfo(String)` indirectly writes to field `common.inputs` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":3911,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus.getTopologyInfo(java.lang.String):org.apache.storm.generated.TopologyInfo","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.apache.storm.utils.JCQueue$QueueMetrics` acquired by call to `JCQueue(...)` at line 62 is not released after line 70.\n**Note**: potential exception at line 63","tnFile":"examples/storm-perf/src/main/java/org/apache/storm/perf/JCQueuePerfTest.java","tnLine":70,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.perf.JCQueuePerfTest.producerFwdConsumer(int):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void HdfsBlobStore.prepareInternal(Map,String,Configuration)` writes to field `this.conf` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"external/storm-hdfs-blobstore/src/main/java/org/apache/storm/hdfs/blobstore/HdfsBlobStore.java","tnLine":129,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.hdfs.blobstore.HdfsBlobStore.prepareInternal(java.util.Map,java.lang.String,org.apache.hadoop.conf.Configuration):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `assignmentEntry.getValue().get_node_host()` could be null and is dereferenced at line 1787.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":1787,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus.isHeartbeatsRecovered():boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `spoutSpecs` last assigned on line 1750 could be null and is dereferenced at line 1755.","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java","tnLine":1755,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.ui.UIHelpers.getVisualizationData(org.apache.storm.generated.Nimbus$Iface,java.lang.String,java.lang.String,boolean):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `oldComponentDebug` last assigned on line 621 could be null and is dereferenced at line 626.","tnFile":"storm-client/src/jvm/org/apache/storm/cluster/StormClusterStateImpl.java","tnLine":626,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.cluster.StormClusterStateImpl.updateStorm(java.lang.String,org.apache.storm.generated.StormBase):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void HiveWriter.flush(boolean)` reads without synchronization from `this.totalRecords`. Potentially races with write in method `HiveWriter.flushAndClose()`.\n Reporting because this access may occur on a background thread.","tnFile":"external/storm-hive/src/main/java/org/apache/storm/hive/common/HiveWriter.java","tnLine":175,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.hive.common.HiveWriter.flush(boolean):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void LocalCluster.waitForIdle(long)` indirectly reads without synchronization from container `utils.Time.THREAD_SLEEP_TIMES_NANOS` via call to `get`. Potentially races with write in method `LocalCluster.addSupervisor(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"storm-server/src/main/java/org/apache/storm/LocalCluster.java","tnLine":758,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.LocalCluster.waitForIdle(long):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.apache.storm.blobstore.BlobStore$BlobStoreFileInputStream` acquired by call to `BlobStore$BlobStoreFileInputStream(...)` at line 395 is not released after line 395.\n**Note**: potential exception at line 395","tnFile":"storm-server/src/main/java/org/apache/storm/blobstore/LocalFsBlobStore.java","tnLine":395,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.blobstore.LocalFsBlobStore.getBlob(java.lang.String,javax.security.auth.Subject):org.apache.storm.blobstore.InputStreamWithMeta","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `stats` last assigned on line 57 could be null and is dereferenced at line 58.","tnFile":"storm-client/src/jvm/org/apache/storm/testing/SpoutTracker.java","tnLine":58,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.testing.SpoutTracker.ack(java.lang.Object):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `spout.getValue().get_common()` could be null and is dereferenced at line 390.","tnFile":"examples/storm-loadgen/src/main/java/org/apache/storm/loadgen/CaptureLoad.java","tnLine":390,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.loadgen.CaptureLoad.getSpoutsResources(org.apache.storm.generated.StormTopology,java.util.Map):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `TopologyPageInfo Nimbus.getTopologyPageInfo(String,String,boolean)` indirectly mutates container `list` via call to `add` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":4101,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus.getTopologyPageInfo(java.lang.String,java.lang.String,boolean):org.apache.storm.generated.TopologyPageInfo","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `value` last assigned on line 970 could be null and is dereferenced at line 971.","tnFile":"storm-client/src/jvm/org/apache/storm/utils/Utils.java","tnLine":971,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.utils.Utils.redactValue(java.util.Map,java.lang.String):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Map ReadClusterState.readMyExecutors(String,String,Assignment)` mutates container `executorInfoList` via call to `add` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/supervisor/ReadClusterState.java","tnLine":288,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.supervisor.ReadClusterState.readMyExecutors(java.lang.String,java.lang.String,org.apache.storm.generated.Assignment):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `topology.get_spouts()` could be null and is dereferenced at line 214.","tnFile":"storm-client/src/jvm/org/apache/storm/serialization/SerializationFactory.java","tnLine":214,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.serialization.SerializationFactory$IdDictionary.<init>(org.apache.storm.generated.StormTopology)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `struct.output_fields` last accessed on line 499 could be null and is dereferenced at line 499.","tnFile":"storm-client/src/jvm/org/apache/storm/generated/StreamInfo.java","tnLine":499,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.generated.StreamInfo$StreamInfoTupleScheme.write(org.apache.storm.thrift.protocol.TProtocol,org.apache.storm.generated.StreamInfo):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `context.getThisSources()` could be null and is dereferenced at line 154.","tnFile":"storm-client/src/jvm/org/apache/storm/trident/planner/SubtopologyBolt.java","tnLine":154,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.trident.planner.SubtopologyBolt.getSourceOutputFields(org.apache.storm.task.TopologyContext,java.lang.String):org.apache.storm.tuple.Fields","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void CoordinatedBolt.execute(Tuple)` reads without synchronization from `this._tracked`. Potentially races with write in method `CoordinatedBolt.prepare(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"storm-client/src/jvm/org/apache/storm/coordination/CoordinatedBolt.java","tnLine":188,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.coordination.CoordinatedBolt.execute(org.apache.storm.tuple.Tuple):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `nodeInfo.get_port()` could be null and is dereferenced at line 413.","tnFile":"storm-client/src/jvm/org/apache/storm/daemon/worker/WorkerState.java","tnLine":413,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.worker.WorkerState.lambda$refreshConnections$1(java.util.Set,java.util.Map,java.util.Map):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `o1.get(\"uri\")` could be null and is dereferenced at line 379.","tnFile":"storm-server/src/main/java/org/apache/storm/scheduler/utils/ArtifactoryConfigLoader.java","tnLine":379,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.scheduler.utils.ArtifactoryConfigLoader$DirEntryCompare.compare(org.json.simple.JSONObject,org.json.simple.JSONObject):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `partialDeserializeLatestVersion(this,td)` could be null and is dereferenced at line 72.","tnFile":"storm-client/src/jvm/org/apache/storm/utils/LocalState.java","tnLine":72,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.utils.LocalState.deserializeLatestVersion():java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int HdfsBlobStore.getBlobReplication(String,Subject)` indirectly reads without synchronization from `this.localSubject`. Potentially races with write in method `HdfsBlobStore.prepareInternal(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"external/storm-hdfs-blobstore/src/main/java/org/apache/storm/hdfs/blobstore/HdfsBlobStore.java","tnLine":354,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.hdfs.blobstore.HdfsBlobStore.getBlobReplication(java.lang.String,javax.security.auth.Subject):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"INTERFACE_NOT_THREAD_SAFE","tnDesc":"Unprotected call to method `void Logger.debug(String)` of un-annotated interface `org.slf4j.Logger`. Consider annotating the class with `@ThreadSafe`, adding a lock, or using an interface that is known to be thread-safe.\n Reporting because a superclass `class com.github.benmanes.caffeine.cache.CacheLoader` is annotated `@ThreadSafe`.","tnFile":"external/storm-hbase/src/main/java/org/apache/storm/hbase/bolt/HBaseLookupBolt.java","tnLine":73,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.hbase.bolt.HBaseLookupBolt$1.load(java.lang.Object):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `cluster.getAssignmentById(topo.getId())` could be null and is dereferenced at line 141.","tnFile":"storm-server/src/main/java/org/apache/storm/scheduler/resource/strategies/scheduling/ConstraintSolverStrategy.java","tnLine":141,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.scheduler.resource.strategies.scheduling.ConstraintSolverStrategy.checkSpreadSchedulingValid(org.apache.storm.scheduler.Cluster,org.apache.storm.scheduler.TopologyDetails):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `execToPort` last assigned on line 826 could be null and is dereferenced at line 827.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":827,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus.auditAssignmentChanges(java.util.Map,java.util.HashMap):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.apache.storm.blobstore.BlobStore$BlobStoreFileOutputStream` acquired by call to `BlobStore$BlobStoreFileOutputStream(...)` at line 228 is not released after line 228.\n**Note**: potential exception at line 228","tnFile":"external/storm-hdfs-blobstore/src/main/java/org/apache/storm/hdfs/blobstore/HdfsBlobStore.java","tnLine":228,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.hdfs.blobstore.HdfsBlobStore.updateBlob(java.lang.String,javax.security.auth.Subject):org.apache.storm.blobstore.AtomicOutputStream","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `requestedResources` last assigned on line 387 could be null and is dereferenced by call to `couldFit(...)` at line 388.","tnFile":"storm-server/src/main/java/org/apache/storm/scheduler/resource/RAS_Node.java","tnLine":388,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.scheduler.resource.RAS_Node.couldEverFit(org.apache.storm.scheduler.ExecutorDetails,org.apache.storm.scheduler.TopologyDetails):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `resources` last assigned on line 215 could be null and is dereferenced at line 216.","tnFile":"storm-server/src/main/java/org/apache/storm/scheduler/resource/normalization/NormalizedResourceRequest.java","tnLine":216,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.scheduler.resource.normalization.NormalizedResourceRequest.add(org.apache.storm.generated.WorkerResources):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `m2` last assigned on line 344 could be null and is dereferenced at line 345.","tnFile":"storm-client/src/jvm/org/apache/storm/task/TopologyContext.java","tnLine":345,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.task.TopologyContext.registerMetric(java.lang.String,org.apache.storm.eventhubs.spout.EventHubSpout$3,int):org.apache.storm.metric.api.IMetric","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `AtomicOutputStream HdfsBlobStore.updateBlob(String,Subject)` reads without synchronization from `this.aclHandler`. Potentially races with write in method `HdfsBlobStore.prepareInternal(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"external/storm-hdfs-blobstore/src/main/java/org/apache/storm/hdfs/blobstore/HdfsBlobStore.java","tnLine":224,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.hdfs.blobstore.HdfsBlobStore.updateBlob(java.lang.String,javax.security.auth.Subject):org.apache.storm.blobstore.AtomicOutputStream","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `common` last assigned on line 454 could be null and is dereferenced by call to `getParallelismHint(...)` at line 455.","tnFile":"storm-client/src/jvm/org/apache/storm/daemon/StormCommon.java","tnLine":455,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.StormCommon.numStartExecutors(java.lang.Object):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `CgroupManager.rootCgroup.getChildren()` could be null and is dereferenced at line 277.","tnFile":"storm-server/src/main/java/org/apache/storm/container/cgroup/CgroupManager.java","tnLine":277,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.container.cgroup.CgroupManager.getRunningPids(java.lang.String):java.util.Set","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `clusterSummary.get_topologies()` could be null and is dereferenced at line 40.","tnFile":"storm-core/src/jvm/org/apache/storm/utils/Monitor.java","tnLine":40,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.utils.Monitor.getComponents(org.apache.storm.generated.Nimbus$Iface,java.lang.String):java.util.HashSet","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `parts` last assigned on line 86 could be null and is dereferenced at line 87.","tnFile":"examples/storm-starter/src/jvm/org/apache/storm/starter/bolt/SingleJoinBolt.java","tnLine":87,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.starter.bolt.SingleJoinBolt.execute(org.apache.storm.tuple.Tuple):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `struct.worker_heartbeats` last accessed on line 509 could be null and is dereferenced at line 509.","tnFile":"storm-client/src/jvm/org/apache/storm/generated/SupervisorWorkerHeartbeats.java","tnLine":509,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.generated.SupervisorWorkerHeartbeats$SupervisorWorkerHeartbeatsTupleScheme.write(org.apache.storm.thrift.protocol.TProtocol,org.apache.storm.generated.SupervisorWorkerHeartbeats):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `commonStats` last assigned on line 1276 could be null and is dereferenced at line 1277.","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java","tnLine":1277,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.ui.UIHelpers.getBoltOutputStats(java.lang.String,org.apache.storm.generated.ComponentAggregateStats):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `summary.get_topologies()` could be null and is dereferenced at line 44.","tnFile":"examples/storm-starter/src/jvm/org/apache/storm/starter/InOrderDeliveryTest.java","tnLine":44,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.starter.InOrderDeliveryTest.printMetrics(org.apache.storm.generated.Nimbus$Iface,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `req.get_request_id()` could be null and is dereferenced at line 197.","tnFile":"storm-client/src/jvm/org/apache/storm/drpc/DRPCSpout.java","tnLine":197,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.drpc.DRPCSpout.nextTuple():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `workerSet` last assigned on line 555 could be null and is dereferenced at line 556.","tnFile":"storm-server/src/main/java/org/apache/storm/stats/StatsUtil.java","tnLine":556,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.stats.StatsUtil.aggTopoExecStats(java.lang.String,boolean,java.util.HashMap,java.util.Map,java.lang.String):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getProperty(\"os.name\")` could be null and is dereferenced at line 362.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/supervisor/BasicContainer.java","tnLine":362,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.supervisor.BasicContainer.javaLibraryPath(java.lang.String,java.util.Map):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `topology.get_spouts()` could be null and is dereferenced at line 841.","tnFile":"storm-client/src/jvm/org/apache/storm/utils/Utils.java","tnLine":841,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.utils.Utils.getComponentCommon(org.apache.storm.generated.StormTopology,java.lang.String):org.apache.storm.generated.ComponentCommon","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void AbstractHdfsBolt.rotateOutputFile(Writer)` reads without synchronization from `this.writeLock`. Potentially races with write in method `AbstractHdfsBolt.prepare(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"external/storm-hdfs/src/main/java/org/apache/storm/hdfs/bolt/AbstractHdfsBolt.java","tnLine":76,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.hdfs.bolt.AbstractHdfsBolt.rotateOutputFile(org.apache.storm.hdfs.bolt.Writer):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.apache.storm.assignments.InMemoryAssignmentBackend` acquired by call to `mkStormClusterState(...)` at line 75 is not released after line 85.","tnFile":"storm-core/src/jvm/org/apache/storm/command/AdminCommands.java","tnLine":85,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.command.AdminCommands$RemoveCorruptTopologies.run(java.lang.String[],java.util.Map,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `ClusterSummary LocalCluster.getClusterInfo()` indirectly reads without synchronization from `daemon.StormCommon._instance`. Potentially races with write in method `LocalCluster.close()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"storm-server/src/main/java/org/apache/storm/LocalCluster.java","tnLine":543,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.LocalCluster.getClusterInfo():org.apache.storm.generated.ClusterSummary","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `NimbusBlobStore$NimbusKeyIterator.listBlobs.get_keys()` could be null and is dereferenced at line 262.","tnFile":"storm-client/src/jvm/org/apache/storm/blobstore/NimbusBlobStore.java","tnLine":262,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.blobstore.NimbusBlobStore$NimbusKeyIterator.next():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `LogWriter(...)` at line 45 is not released after line 53.","tnFile":"storm-client/src/jvm/org/apache/storm/LogWriter.java","tnLine":53,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.LogWriter.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `LoadAwareShuffleGrouping.sourceNodeInfo.get_node()` could be null and is dereferenced at line 260.","tnFile":"storm-client/src/jvm/org/apache/storm/grouping/LoadAwareShuffleGrouping.java","tnLine":260,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.grouping.LoadAwareShuffleGrouping.calculateScope(java.util.Map,java.util.Map,int):org.apache.storm.grouping.LoadAwareShuffleGrouping$Scope","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileInputStream` acquired by call to `FileInputStream(...)` at line 55 is not released after line 55.","tnFile":"flux/flux-examples/src/main/java/org/apache/storm/flux/examples/WordCountClient.java","tnLine":55,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.flux.examples.WordCountClient.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `common` last assigned on line 195 could be null and is dereferenced at line 196.","tnFile":"storm-client/src/jvm/org/apache/storm/daemon/StormCommon.java","tnLine":196,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.StormCommon.validateStructure(org.apache.storm.generated.StormTopology):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `struct.acl` last accessed on line 503 could be null and is dereferenced at line 503.","tnFile":"storm-client/src/jvm/org/apache/storm/generated/SettableBlobMeta.java","tnLine":503,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.generated.SettableBlobMeta$SettableBlobMetaTupleScheme.write(org.apache.storm.thrift.protocol.TProtocol,org.apache.storm.generated.SettableBlobMeta):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `summ.get_stats()` could be null and is dereferenced at line 781.","tnFile":"storm-server/src/main/java/org/apache/storm/stats/StatsUtil.java","tnLine":781,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.stats.StatsUtil.aggregateCommonStats(java.util.List):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `clusterSummary.get_supervisors()` could be null and is dereferenced at line 4994.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":4994,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus$ClusterSummaryMetricSet$7.transform(org.apache.storm.generated.ClusterSummary):java.lang.Integer","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `comp.get_inputs()` could be null and is dereferenced at line 189.","tnFile":"storm-server/src/main/java/org/apache/storm/scheduler/TopologyDetails.java","tnLine":189,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.scheduler.TopologyDetails.getInputsTo(org.apache.storm.generated.ComponentCommon):java.util.Set","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `action` last assigned on line 3296 could be null and is dereferenced at line 3300.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":3300,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus.setLogConfig(java.lang.String,org.apache.storm.generated.LogConfig):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void LocalCluster.advanceClusterTime(int,int)` indirectly reads without synchronization from container `utils.Time.THREAD_SLEEP_TIMES_NANOS` via call to `get`. Potentially races with write in method `LocalCluster.addSupervisor(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"storm-server/src/main/java/org/apache/storm/LocalCluster.java","tnLine":777,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.LocalCluster.advanceClusterTime(int,int):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `user` last assigned on line 316 could be null and is dereferenced by call to `isProcessAlive(...)` at line 321.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/supervisor/Container.java","tnLine":321,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.supervisor.Container.areAllProcessesDead():boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `componentCommon` last assigned on line 116 could be null and is dereferenced at line 117.","tnFile":"storm-core/src/jvm/org/apache/storm/utils/TopologySpoutLag.java","tnLine":117,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.utils.TopologySpoutLag.addLagResultForKafkaSpout(java.util.Map,java.lang.String,org.apache.storm.generated.SpoutSpec):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `allBatches` last assigned on line 171 could be null and is dereferenced at line 172.","tnFile":"storm-client/src/jvm/org/apache/storm/trident/testing/FeederBatchSpout.java","tnLine":172,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.trident.testing.FeederBatchSpout$FeederCoordinator.isReady(long):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `topology.get_bolts()` could be null and is dereferenced at line 41.","tnFile":"storm-client/src/jvm/org/apache/storm/utils/ThriftTopologyUtils.java","tnLine":41,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.utils.ThriftTopologyUtils.getComponentCommon(org.apache.storm.generated.StormTopology,java.lang.String):org.apache.storm.generated.ComponentCommon","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void HdfsBlobStore.setBlobMeta(String,SettableBlobMeta,Subject)` reads without synchronization from `this.conf`. Potentially races with write in method `HdfsBlobStore.prepareInternal(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"external/storm-hdfs-blobstore/src/main/java/org/apache/storm/hdfs/blobstore/HdfsBlobStore.java","tnLine":297,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.hdfs.blobstore.HdfsBlobStore.setBlobMeta(java.lang.String,org.apache.storm.generated.SettableBlobMeta,javax.security.auth.Subject):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `CommandExec$OutputBufferThread(...)` at line 35 is not released after line 48.","tnFile":"storm-buildtools/storm-maven-plugins/src/main/java/org/apache/storm/maven/plugin/util/CommandExec.java","tnLine":48,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.maven.plugin.util.CommandExec.run(java.util.List,java.util.ArrayList):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `stormBase(stormId,null)` could be null and is dereferenced at line 326.","tnFile":"storm-client/src/jvm/org/apache/storm/cluster/StormClusterStateImpl.java","tnLine":326,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.cluster.StormClusterStateImpl.syncRemoteIds(java.util.Map):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `clusterSummary.get_nimbuses()` could be null and is dereferenced at line 4960.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":4960,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus$ClusterSummaryMetricSet$2.transform(org.apache.storm.generated.ClusterSummary):java.lang.Long","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileInputStream` acquired by call to `BufferFileInputStream(...)` at line 477 is not released after line 497.","tnFile":"storm-client/src/jvm/org/apache/storm/StormSubmitter.java","tnLine":497,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.StormSubmitter.submitJarAs(java.util.Map,java.lang.String,org.apache.storm.StormSubmitter$ProgressListener,org.apache.storm.utils.NimbusClient):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `componentType(stormTopology,executorSummary.get_component_id())` could be null and is dereferenced at line 1657.","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java","tnLine":1657,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.ui.UIHelpers.getSpoutExecutors(java.util.List,org.apache.storm.generated.StormTopology):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.lang.Process` acquired by call to `exec(...)` at line 83 is not released after line 115.","tnFile":"storm-server/src/main/java/org/apache/storm/healthcheck/HealthChecker.java","tnLine":115,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.healthcheck.HealthChecker.processScript(java.util.Map,java.lang.String):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int HdfsBlobStore.getBlobReplication(String,Subject)` indirectly reads without synchronization from `this.hbs`. Potentially races with write in method `HdfsBlobStore.prepareInternal(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"external/storm-hdfs-blobstore/src/main/java/org/apache/storm/hdfs/blobstore/HdfsBlobStore.java","tnLine":356,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.hdfs.blobstore.HdfsBlobStore.getBlobReplication(java.lang.String,javax.security.auth.Subject):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getComponentCommon(comp)` could be null and is dereferenced at line 1067.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":1067,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus.normalizeTopology(java.util.Map,org.apache.storm.generated.StormTopology):org.apache.storm.generated.StormTopology","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `assignments.get_storm_assignment()` could be null and is dereferenced at line 58.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/supervisor/timer/SynchronizeAssignments.java","tnLine":58,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.supervisor.timer.SynchronizeAssignments.assignedAssignmentsToLocal(org.apache.storm.cluster.IStormClusterState,org.apache.storm.generated.SupervisorAssignments):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileInputStream` acquired by call to `FileInputStream(...)` at line 133 is not released after line 139.\n**Note**: potential exception at line 135","tnFile":"flux/flux-core/src/main/java/org/apache/storm/flux/parser/FluxParser.java","tnLine":139,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.flux.parser.FluxParser.parseProperties(java.lang.String,boolean):java.util.Properties","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getLong(conf.get(\"topology.bolt.wait.park.microsec\"))` could be null and is dereferenced at line 42.","tnFile":"storm-client/src/jvm/org/apache/storm/policy/WaitStrategyPark.java","tnLine":42,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.policy.WaitStrategyPark.prepare(java.util.HashMap,org.apache.storm.policy.IWaitStrategy$WAIT_SITUATION):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `stats` last assigned on line 64 could be null and is dereferenced at line 65.","tnFile":"storm-client/src/jvm/org/apache/storm/testing/SpoutTracker.java","tnLine":65,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.testing.SpoutTracker.fail(java.lang.Object):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getChildren()` could be null and is dereferenced at line 193.","tnFile":"storm-client/src/jvm/org/apache/storm/container/cgroup/CgroupCommon.java","tnLine":193,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.container.cgroup.CgroupCommon.free():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `new()` at line 79 is not released after line 81.","tnFile":"external/storm-hdfs/src/main/java/org/apache/storm/hdfs/trident/HdfsState.java","tnLine":81,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.hdfs.trident.HdfsState.readTxnRecord(org.apache.hadoop.fs.Path):org.apache.storm.hdfs.trident.HdfsState$TxnRecord","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.apache.storm.metric.internal.RateTracker` acquired by call to `JCQueue(...)` at line 84 is not released after line 91.","tnFile":"examples/storm-perf/src/main/java/org/apache/storm/perf/JCQueuePerfTest.java","tnLine":91,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.perf.JCQueuePerfTest.twoProducer1Consumer(int):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `info.assignment` last assigned on line 3419 could be null and is dereferenced at line 3420.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":3420,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus.getComponentPendingProfileActions(java.lang.String,java.lang.String,org.apache.storm.generated.ProfileAction):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `cluster.getAssignmentById(topo.getId())` could be null and is dereferenced at line 180.","tnFile":"storm-server/src/main/java/org/apache/storm/scheduler/resource/strategies/scheduling/ConstraintSolverStrategy.java","tnLine":180,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.scheduler.resource.strategies.scheduling.ConstraintSolverStrategy.checkResourcesCorrect(org.apache.storm.scheduler.Cluster,org.apache.storm.scheduler.TopologyDetails):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `clusterSummary.get_topologies()` could be null and is dereferenced at line 354.","tnFile":"examples/storm-loadgen/src/main/java/org/apache/storm/loadgen/CaptureLoad.java","tnLine":354,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.loadgen.CaptureLoad.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.apache.storm.utils.JCQueue$QueueMetrics` acquired by call to `JCQueue(...)` at line 110 is not released after line 118.\n**Note**: potential exception at line 111","tnFile":"examples/storm-perf/src/main/java/org/apache/storm/perf/JCQueuePerfTest.java","tnLine":118,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.perf.JCQueuePerfTest.oneProducer2Consumers(int):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `stats` last assigned on line 41 could be null and is dereferenced at line 42.","tnFile":"storm-client/src/jvm/org/apache/storm/testing/NonRichBoltTracker.java","tnLine":42,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.testing.NonRichBoltTracker.execute(org.apache.storm.tuple.Tuple):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `supervisorSummaries` last assigned on line 551 could be null and is dereferenced at line 555.","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java","tnLine":555,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.ui.UIHelpers.getClusterSummary(org.apache.storm.generated.ClusterSummary,java.lang.String,java.util.Map):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.apache.hadoop.io.SequenceFile$Reader` acquired by call to `new()` at line 496 is not released after line 503.","tnFile":"external/storm-hdfs/src/main/java/org/apache/storm/hdfs/trident/HdfsState.java","tnLine":503,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.hdfs.trident.HdfsState$SequenceFileOptions.doRecover(org.apache.hadoop.fs.Path,long):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `context.principal()` could be null and is dereferenced at line 92.","tnFile":"storm-client/src/jvm/org/apache/storm/security/auth/authorizer/SupervisorSimpleACLAuthorizer.java","tnLine":92,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.security.auth.authorizer.SupervisorSimpleACLAuthorizer.permit(org.apache.storm.security.auth.ReqContext,java.lang.String,java.util.Map):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `struct.keys` last accessed on line 504 could be null and is dereferenced at line 504.","tnFile":"storm-client/src/jvm/org/apache/storm/generated/ListBlobsResult.java","tnLine":504,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.generated.ListBlobsResult$ListBlobsResultTupleScheme.write(org.apache.storm.thrift.protocol.TProtocol,org.apache.storm.generated.ListBlobsResult):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `SupervisorPageInfo Nimbus.getSupervisorPageInfo(String,String,boolean)` indirectly writes to field `common.inputs` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":4264,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus.getSupervisorPageInfo(java.lang.String,java.lang.String,boolean):org.apache.storm.generated.SupervisorPageInfo","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Nimbus.submitTopologyWithOpts(String,String,String,StormTopology,SubmitOptions)` indirectly writes to field `common.inputs` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":3104,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus.submitTopologyWithOpts(java.lang.String,java.lang.String,java.lang.String,org.apache.storm.generated.StormTopology,org.apache.storm.generated.SubmitOptions):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.apache.storm.shade.org.apache.commons.io.input.ClassLoaderObjectInputStream` acquired by call to `new()` at line 540 is not released after line 543.","tnFile":"storm-client/src/jvm/org/apache/storm/utils/Utils.java","tnLine":543,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.utils.Utils.javaDeserialize(byte[],java.lang.Class):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `execToNodePort` last assigned on line 1906 could be null and is dereferenced at line 1907.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":1907,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus.computeSupervisorToDeadPorts(java.util.Map,java.util.HashMap,java.util.Map):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `struct.nodeInfo` last accessed on line 577 could be null and is dereferenced at line 577.","tnFile":"storm-client/src/jvm/org/apache/storm/generated/ProfileRequest.java","tnLine":577,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.generated.ProfileRequest$ProfileRequestTupleScheme.write(org.apache.storm.thrift.protocol.TProtocol,org.apache.storm.generated.ProfileRequest):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `componentAggregateStats.get_specific_stats()` could be null and is dereferenced at line 1184.","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java","tnLine":1184,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.ui.UIHelpers.getSpoutAggStatsMap(org.apache.storm.generated.ComponentAggregateStats,java.lang.String):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `ReadClusterState.<init>(Supervisor)` indirectly writes to field `tso.bits` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/supervisor/ReadClusterState.java","tnLine":103,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.supervisor.ReadClusterState.<init>(org.apache.storm.daemon.supervisor.Supervisor)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `splitSentence(input.getString(0))` could be null and is dereferenced at line 47.","tnFile":"examples/storm-perf/src/main/java/org/apache/storm/perf/bolt/SplitSentenceBolt.java","tnLine":47,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.perf.bolt.SplitSentenceBolt.execute(org.apache.storm.tuple.Tuple,org.apache.storm.topology.BasicOutputCollector):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `struct.assignments` last accessed on line 417 could be null and is dereferenced at line 417.","tnFile":"storm-client/src/jvm/org/apache/storm/generated/LSSupervisorAssignments.java","tnLine":417,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.generated.LSSupervisorAssignments$LSSupervisorAssignmentsTupleScheme.write(org.apache.storm.thrift.protocol.TProtocol,org.apache.storm.generated.LSSupervisorAssignments):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Context.prepare(Map)` writes to field `this.serverConnections` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"storm-client/src/jvm/org/apache/storm/messaging/netty/Context.java","tnLine":42,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.messaging.netty.Context.prepare(java.util.Map):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.springframework.context.support.ClassPathXmlApplicationContext` acquired by call to `new()` at line 61 is not released after line 63.","tnFile":"examples/storm-jms-examples/src/main/java/org/apache/storm/jms/example/SpringJmsProvider.java","tnLine":63,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.jms.example.SpringJmsProvider.<init>(java.lang.String,java.lang.String,java.lang.String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `TopologyPageInfo Nimbus.getTopologyPageInfo(String,String,boolean)` indirectly writes to field `common.inputs` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":4021,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus.getTopologyPageInfo(java.lang.String,java.lang.String,boolean):org.apache.storm.generated.TopologyPageInfo","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `cs.get_topologies()` could be null and is dereferenced at line 171.","tnFile":"examples/storm-perf/src/main/java/org/apache/storm/perf/utils/MetricsSample.java","tnLine":171,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.perf.utils.MetricsSample.getTopologySummary(org.apache.storm.generated.ClusterSummary,java.lang.String):org.apache.storm.generated.TopologySummary","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileInputStream` acquired by call to `FileInputStream(...)` at line 452 is not released after line 452.","tnFile":"storm-server/src/main/java/org/apache/storm/utils/ServerUtils.java","tnLine":452,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.utils.ServerUtils.unTarUsingJava(java.io.File,java.io.File,boolean,boolean):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `CgroupManager.conf.get(org.apache.storm.DaemonConfig.STORM_CGROUP_MEMORY_ENFORCEMENT_ENABLE)` could be null and is dereferenced at line 181.","tnFile":"storm-server/src/main/java/org/apache/storm/container/cgroup/CgroupManager.java","tnLine":181,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.container.cgroup.CgroupManager.reserveResourcesForWorker(java.lang.String,java.lang.Integer,java.lang.Integer):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `clusterSummary.get_topologies()` could be null and is dereferenced at line 113.","tnFile":"storm-core/src/jvm/org/apache/storm/utils/Monitor.java","tnLine":113,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.utils.Monitor.metrics(org.apache.storm.generated.Nimbus$Iface,long,org.apache.storm.utils.Monitor$MetricsState):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean WindowManager.onTrigger()` reads without synchronization from `this.evictionPolicy`. Potentially races with write in method `WindowManager.setEvictionPolicy(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"storm-client/src/jvm/org/apache/storm/windowing/WindowManager.java","tnLine":156,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.windowing.WindowManager.onTrigger():boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `AtomicOutputStream HdfsBlobStore.updateBlob(String,Subject)` indirectly reads without synchronization from `this.hbs`. Potentially races with write in method `HdfsBlobStore.prepareInternal(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"external/storm-hdfs-blobstore/src/main/java/org/apache/storm/hdfs/blobstore/HdfsBlobStore.java","tnLine":222,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.hdfs.blobstore.HdfsBlobStore.updateBlob(java.lang.String,javax.security.auth.Subject):org.apache.storm.blobstore.AtomicOutputStream","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void BasicContainer.createNewWorkerId()` reads without synchronization from `this._type`. Potentially races with write in method `BasicContainer.relaunch()`.\n Reporting because this access may occur on a background thread.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/supervisor/BasicContainer.java","tnLine":203,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.supervisor.BasicContainer.createNewWorkerId():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `spouts` last assigned on line 402 could be null and is dereferenced at line 407.","tnFile":"storm-server/src/main/java/org/apache/storm/Testing.java","tnLine":407,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.Testing.completeTopology(org.apache.storm.ILocalCluster,org.apache.storm.generated.StormTopology,org.apache.storm.testing.CompleteTopologyParam):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `TopologyInfo Nimbus.getTopologyInfoWithOpts(String,GetInfoOptions)` indirectly mutates container `list` via call to `add` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":3992,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus.getTopologyInfoWithOpts(java.lang.String,org.apache.storm.generated.GetInfoOptions):org.apache.storm.generated.TopologyInfo","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getState(AckFailMapTracker._failed)` could be null and is dereferenced at line 34.","tnFile":"storm-client/src/jvm/org/apache/storm/testing/AckFailMapTracker.java","tnLine":34,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.testing.AckFailMapTracker.isFailed(java.lang.Object):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `old.get_executor_node_port()` could be null and is dereferenced at line 946.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":946,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus.newlyAddedSlots(org.apache.storm.generated.Assignment,org.apache.storm.generated.Assignment):java.util.Set","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `topology.get_bolts()` could be null and is dereferenced at line 332.","tnFile":"storm-client/src/jvm/org/apache/storm/daemon/StormCommon.java","tnLine":332,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.StormCommon.eventLoggerInputs(org.apache.storm.generated.StormTopology):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `client` last assigned on line 78 could be null and is dereferenced at line 96.","tnFile":"storm-client/src/jvm/org/apache/storm/trident/drpc/ReturnResultsReducer.java","tnLine":96,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.trident.drpc.ReturnResultsReducer.complete(org.apache.storm.trident.drpc.ReturnResultsReducer$ReturnResultsState,org.apache.storm.trident.operation.TridentCollector):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List BasicContainer.substituteChildopts(Object,int)` indirectly reads without synchronization from `this._workerId`. Potentially races with write in method `BasicContainer.createNewWorkerId()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/supervisor/BasicContainer.java","tnLine":474,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.supervisor.BasicContainer.substituteChildopts(java.lang.Object,int):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `List Nimbus.getComponentPendingProfileActions(String,String,ProfileAction)` indirectly writes to field `common.inputs` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":3419,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus.getComponentPendingProfileActions(java.lang.String,java.lang.String,org.apache.storm.generated.ProfileAction):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getMapByKey(accData,wgtAvgKey)` could be null and is dereferenced at line 1575.","tnFile":"storm-server/src/main/java/org/apache/storm/stats/StatsUtil.java","tnLine":1575,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.stats.StatsUtil.computeWeightedAveragesPerWindow(java.util.Map,java.lang.String,java.lang.String):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `context.getThisSources()` could be null and is dereferenced at line 327.","tnFile":"storm-client/src/jvm/org/apache/storm/streams/ProcessorBoltDelegate.java","tnLine":327,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.streams.ProcessorBoltDelegate.getStreamInputTaskCount(org.apache.storm.task.TopologyContext,java.lang.String):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `context.getThisSources()` could be null and is dereferenced at line 53.","tnFile":"examples/storm-starter/src/jvm/org/apache/storm/starter/bolt/SingleJoinBolt.java","tnLine":53,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.starter.bolt.SingleJoinBolt.prepare(java.util.Map,org.apache.storm.task.TopologyContext,org.apache.storm.task.OutputCollector):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void BasicContainer.cleanUpForRestart()` reads without synchronization from `this._workerId`. Potentially races with write in method `BasicContainer.createNewWorkerId()`.\n Reporting because this access may occur on a background thread.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/supervisor/BasicContainer.java","tnLine":220,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.supervisor.BasicContainer.cleanUpForRestart():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `profileRequest.get_nodeInfo()` could be null and is dereferenced at line 382.","tnFile":"storm-client/src/jvm/org/apache/storm/cluster/StormClusterStateImpl.java","tnLine":382,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.cluster.StormClusterStateImpl.deleteTopologyProfileRequests(java.lang.String,org.apache.storm.generated.ProfileRequest):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `struct.spout_object` last accessed on line 473 could be null and is dereferenced at line 473.","tnFile":"storm-client/src/jvm/org/apache/storm/generated/SpoutSpec.java","tnLine":473,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.generated.SpoutSpec$SpoutSpecTupleScheme.write(org.apache.storm.thrift.protocol.TProtocol,org.apache.storm.generated.SpoutSpec):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void DRPCSpout.nextTuple()` reads without synchronization from `this._collector`. Potentially races with write in method `DRPCSpout.open(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"storm-client/src/jvm/org/apache/storm/drpc/DRPCSpout.java","tnLine":177,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.drpc.DRPCSpout.nextTuple():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `info.assignment.get_executor_node_port()` could be null and is dereferenced at line 3422.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":3422,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus.getComponentPendingProfileActions(java.lang.String,java.lang.String,org.apache.storm.generated.ProfileAction):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void DefaultClient.close()` reads without synchronization from `this.session`. Potentially races with write in method `DefaultClient.connect()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"external/storm-cassandra/src/main/java/org/apache/storm/cassandra/client/impl/DefaultClient.java","tnLine":105,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.cassandra.client.impl.DefaultClient.close():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean Nimbus.isWaiting()` indirectly reads without synchronization from container `utils.Time.THREAD_SLEEP_TIMES_NANOS` via call to `get`. Potentially races with write in method `Nimbus.submitTopologyWithOpts(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":4740,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus.isWaiting():boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `bolt2stats` last assigned on line 650 could be null and is dereferenced at line 652.","tnFile":"storm-server/src/main/java/org/apache/storm/stats/StatsUtil.java","tnLine":652,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.stats.StatsUtil.postAggregateTopoStats(java.util.Map,java.util.Map,java.util.HashMap,java.lang.String,org.apache.storm.cluster.IStormClusterState):org.apache.storm.generated.TopologyPageInfo","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean DefaultClient.isDisconnected()` reads without synchronization from `this.session`. Potentially races with write in method `DefaultClient.connect()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"external/storm-cassandra/src/main/java/org/apache/storm/cassandra/client/impl/DefaultClient.java","tnLine":95,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.cassandra.client.impl.DefaultClient.isDisconnected():boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Nimbus.submitTopologyWithOpts(String,String,String,StormTopology,SubmitOptions)` indirectly mutates container `defaultsConf` via call to `putAll` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":3060,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus.submitTopologyWithOpts(java.lang.String,java.lang.String,java.lang.String,org.apache.storm.generated.StormTopology,org.apache.storm.generated.SubmitOptions):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `struct.users` last accessed on line 732 could be null and is dereferenced at line 732.","tnFile":"storm-client/src/jvm/org/apache/storm/generated/LSTopoHistory.java","tnLine":732,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.generated.LSTopoHistory$LSTopoHistoryTupleScheme.write(org.apache.storm.thrift.protocol.TProtocol,org.apache.storm.generated.LSTopoHistory):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.apache.storm.blobstore.BlobStore$BlobStoreFileOutputStream` acquired by call to `BlobStore$BlobStoreFileOutputStream(...)` at line 386 is not released after line 395.\n**Note**: potential exception at line 387","tnFile":"external/storm-hdfs-blobstore/src/main/java/org/apache/storm/hdfs/blobstore/HdfsBlobStore.java","tnLine":395,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.hdfs.blobstore.HdfsBlobStore.writeMetadata(java.lang.String,org.apache.storm.generated.SettableBlobMeta):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `inputs` last assigned on line 149 could be null and is dereferenced at line 150.","tnFile":"storm-client/src/jvm/org/apache/storm/task/GeneralTopologyContext.java","tnLine":150,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.task.GeneralTopologyContext.getTargets(java.lang.String):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `new()` at line 811 is not released after line 816.\n**Note**: potential exception at line 813","tnFile":"storm-client/src/jvm/org/apache/storm/utils/Utils.java","tnLine":816,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.utils.Utils.readAndLogStream(java.lang.String,java.io.InputStream):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.lang.Process` acquired to `process` by call to `exec(...)` at line 83 is not released after line 116.\n**Note**: potential exception at line 84","tnFile":"storm-server/src/main/java/org/apache/storm/healthcheck/HealthChecker.java","tnLine":116,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.healthcheck.HealthChecker.processScript(java.util.Map,java.lang.String):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void PacemakerClient.reconnect()` writes to field `this.retryTimes` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"storm-client/src/jvm/org/apache/storm/pacemaker/PacemakerClient.java","tnLine":235,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.pacemaker.PacemakerClient.reconnect():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getState(FeederBatchSpout$FeederCoordinator.this$0._semaphoreId)` could be null and is dereferenced at line 161.","tnFile":"storm-client/src/jvm/org/apache/storm/trident/testing/FeederBatchSpout.java","tnLine":161,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.trident.testing.FeederBatchSpout$FeederCoordinator.success(long):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `HBMessage PacemakerClient.send(HBMessage)` reads without synchronization from `this.availableMessageSlots`. Potentially races with write in method `PacemakerClient.reconnect()`.\n Reporting because this access may occur on a background thread.","tnFile":"storm-client/src/jvm/org/apache/storm/pacemaker/PacemakerClient.java","tnLine":161,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.pacemaker.PacemakerClient.send(org.apache.storm.generated.HBMessage):org.apache.storm.generated.HBMessage","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `componentCommon` last assigned on line 135 could be null and is dereferenced at line 136.","tnFile":"storm-core/src/jvm/org/apache/storm/utils/TopologySpoutLag.java","tnLine":136,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.utils.TopologySpoutLag.getLagResultForKafka(java.lang.String,org.apache.storm.generated.SpoutSpec):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `m.get_data()` could be null and is dereferenced at line 71.","tnFile":"storm-client/src/jvm/org/apache/storm/pacemaker/codec/ThriftDecoder.java","tnLine":71,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.pacemaker.codec.ThriftDecoder.decode(org.apache.storm.shade.io.netty.channel.ChannelHandlerContext,org.apache.storm.shade.io.netty.buffer.ByteBuf,java.util.List):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `sleepMs` last assigned on line 51 could be null and is dereferenced at line 53.","tnFile":"examples/storm-perf/src/main/java/org/apache/storm/perf/LowThroughputTopo.java","tnLine":53,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.perf.LowThroughputTopo.getTopology(java.util.HashMap):org.apache.storm.generated.StormTopology","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `struct.metricList` could be null and is dereferenced at line 666.","tnFile":"storm-client/src/jvm/org/apache/storm/generated/WorkerMetrics.java","tnLine":666,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.generated.WorkerMetrics$WorkerMetricsTupleScheme.write(org.apache.storm.thrift.protocol.TProtocol,org.apache.storm.generated.WorkerMetrics):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `stat` last assigned on line 723 could be null and is dereferenced at line 724.","tnFile":"storm-server/src/main/java/org/apache/storm/stats/StatsUtil.java","tnLine":724,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.stats.StatsUtil.aggregateBoltStats(java.util.ArrayList,boolean):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `workerNormalizedResources` last assigned on line 160 could be null and is dereferenced at line 161.","tnFile":"storm-server/src/main/java/org/apache/storm/scheduler/resource/normalization/NormalizedResources.java","tnLine":161,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.scheduler.resource.normalization.NormalizedResources.remove(org.apache.storm.generated.WorkerResources):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `realPrincipal` last assigned on line 3478 could be null and is dereferenced at line 3492.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":3492,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.nimbus.Nimbus.uploadNewCredentials(java.lang.String,org.apache.storm.generated.Credentials):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void HdfsBlobStore.prepareInternal(Map,String,Configuration)` reads with synchronization from `this.localSubject`. Potentially races with unsynchronized write in method `HdfsBlobStore.prepareInternal(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"external/storm-hdfs-blobstore/src/main/java/org/apache/storm/hdfs/blobstore/HdfsBlobStore.java","tnLine":147,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.hdfs.blobstore.HdfsBlobStore.prepareInternal(java.util.Map,java.lang.String,org.apache.hadoop.conf.Configuration):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Map ReadClusterState.readAssignments(Map)` indirectly mutates container `executorInfoList` via call to `add` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/supervisor/ReadClusterState.java","tnLine":215,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.daemon.supervisor.ReadClusterState.readAssignments(java.util.Map):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `com.mongodb.MongoClient` acquired by call to `MongoMapState(...)` at line 152 is not released after line 170.","tnFile":"external/storm-mongodb/src/main/java/org/apache/storm/mongodb/trident/state/MongoMapState.java","tnLine":170,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.storm.mongodb.trident.state.MongoMapState$Factory.makeState(java.util.Map,org.apache.storm.task.IMetricsContext,int,int):org.apache.storm.trident.state.State","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}}],null,{"analysisLOC":null,"analysisBuildSys":"Maven []","analysisLang":null}]}],[{"tag":"ErrorProne_JDK8"},{"tag":"ToolSuccess","contents":[[{"tnType":"MissingOverride","tnDesc":"read implements method in TSerializable; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/SpoutSpec.java","tnLine":333,"tnColumn":15,"tnPatch":null,"tnCodeLine":"  public void read(org.apache.storm.thrift.protocol.TProtocol iprot) throws org.apache.storm.thrift.TException {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java","tnLine":2214,"tnColumn":37,"tnPatch":null,"tnCodeLine":"        String port = hostPort.split(\":\")[1];","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ClassCanBeStatic","tnDesc":"Inner class is non-static but does not reference enclosing class","tnFile":"external/storm-jms/src/main/java/org/apache/storm/jms/trident/TridentJmsSpout.java","tnLine":364,"tnColumn":13,"tnPatch":null,"tnCodeLine":"    private class JmsBatchCoordinator implements BatchCoordinator<JmsBatch> {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"external/storm-autocreds/src/main/java/org/apache/storm/hdfs/security/HdfsSecurityUtil.java","tnLine":56,"tnColumn":26,"tnPatch":null,"tnCodeLine":"                        !(((List)conf.get(TOPOLOGY_AUTO_CREDENTIALS)).contains(AutoTGT.class.getName())))) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"external/storm-eventhubs/src/main/java/org/apache/storm/eventhubs/spout/ZookeeperStateStore.java","tnLine":86,"tnColumn":31,"tnPatch":null,"tnCodeLine":"                String data = new String(bytes);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'LOG' is never read.","tnFile":"external/storm-hive/src/main/java/org/apache/storm/hive/bolt/mapper/DelimitedRecordHiveMapper.java","tnLine":34,"tnColumn":33,"tnPatch":null,"tnCodeLine":"    private static final Logger LOG = LoggerFactory.getLogger(DelimitedRecordHiveMapper.class);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"It is very rare for LinkedList to out-perform ArrayList or ArrayDeque. Avoid it unless you're willing to invest a lot of time into benchmarking. Caveat: LinkedList supports null elements, but ArrayDeque does not.","tnFile":"storm-server/src/main/java/org/apache/storm/scheduler/IsolationScheduler.java","tnLine":330,"tnColumn":16,"tnPatch":null,"tnCodeLine":"        return new LinkedList<HostAssignableSlots>(sortHostAssignSlots);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The local variable 'stream' is never read.","tnFile":"examples/storm-starter/src/jvm/org/apache/storm/starter/trident/TridentHBaseWindowingStoreTopology.java","tnLine":50,"tnColumn":16,"tnPatch":null,"tnCodeLine":"        Stream stream = topology.newStream(\"spout1\", spout).parallelismHint(16).each(new Fields(\"sentence\"),","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"InconsistentCapitalization","tnDesc":"Found the field 'userName' with the same name as the parameter 'username' but with different capitalization.","tnFile":"external/storm-eventhubs/src/main/java/org/apache/storm/eventhubs/spout/EventHubSpoutConfig.java","tnLine":93,"tnColumn":39,"tnPatch":null,"tnCodeLine":"    public EventHubSpoutConfig(String username, String password,","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"run implements method in ConfigurableTopology; expected @Override","tnFile":"examples/storm-starter/src/jvm/org/apache/storm/starter/ExclamationTopology.java","tnLine":36,"tnColumn":19,"tnPatch":null,"tnCodeLine":"    protected int run(String[] args) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"external/storm-eventhubs/src/main/java/org/apache/storm/eventhubs/bolt/DefaultEventDataFormat.java","tnLine":44,"tnColumn":38,"tnPatch":null,"tnCodeLine":"        return sb.toString().getBytes();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-client/src/jvm/org/apache/storm/generated/StormTopology.java","tnLine":937,"tnColumn":35,"tnPatch":null,"tnCodeLine":"    hashCode = hashCode * 8191 + ((is_set_worker_hooks()) ? 131071 : 524287);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"It is very rare for LinkedList to out-perform ArrayList or ArrayDeque. Avoid it unless you're willing to invest a lot of time into benchmarking. Caveat: LinkedList supports null elements, but ArrayDeque does not.","tnFile":"storm-server/src/main/java/org/apache/storm/scheduler/resource/strategies/scheduling/BaseResourceAwareStrategy.java","tnLine":635,"tnColumn":49,"tnPatch":null,"tnCodeLine":"        List<ObjectResources> objectResources = new LinkedList<>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The local variable 'op' is never read.","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/StormParserImpl.java","tnLine":3391,"tnColumn":23,"tnPatch":null,"tnCodeLine":"    final SqlOperator op;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The local variable 'id' is never read.","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/StormParserImpl.java","tnLine":375,"tnColumn":13,"tnPatch":null,"tnCodeLine":"    boolean id = false;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ImmutableEnumChecker","tnDesc":"enums should be immutable: 'StormBuiltInMethod' has field 'constructor' of type 'java.lang.reflect.Constructor', the declaration of type 'java.lang.reflect.Constructor' is not annotated with @com.google.errorprone.annotations.Immutable","tnFile":"sql/storm-sql-core/src/jvm/org/apache/storm/sql/compiler/RexNodeToJavaCodeCompiler.java","tnLine":201,"tnColumn":34,"tnPatch":null,"tnCodeLine":"        public final Constructor constructor;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"examples/storm-redis-examples/src/main/java/org/apache/storm/redis/trident/WordCountTridentRedisCluster.java","tnLine":53,"tnColumn":48,"tnPatch":null,"tnCodeLine":"            String[] host_port = hostPort.split(\":\");","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"CollectionIncompatibleType","tnDesc":"Argument 'Statement.EXECUTE_FAILED' should not be passed to this method; its type int is not compatible with its collection's type argument int[]","tnFile":"external/storm-jdbc/src/main/java/org/apache/storm/jdbc/common/JdbcClient.java","tnLine":76,"tnColumn":52,"tnPatch":null,"tnCodeLine":"                if (Arrays.asList(results).contains(Statement.EXECUTE_FAILED)) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/StormParserImplTokenManager.java","tnLine":14090,"tnColumn":8,"tnPatch":null,"tnCodeLine":"   if (((active1 &= old1)) == 0L)","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"It is very rare for LinkedList to out-perform ArrayList or ArrayDeque. Avoid it unless you're willing to invest a lot of time into benchmarking. Caveat: LinkedList supports null elements, but ArrayDeque does not.","tnFile":"examples/storm-loadgen/src/main/java/org/apache/storm/loadgen/LoadMetricsServer.java","tnLine":809,"tnColumn":58,"tnPatch":null,"tnCodeLine":"    private final LinkedList<Measurements> allCombined = new LinkedList<>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-server/src/main/java/org/apache/storm/scheduler/resource/User.java","tnLine":100,"tnColumn":56,"tnPatch":null,"tnCodeLine":"        return ((cpuResourcePoolUtilization) / 2.0) + ((memoryResourcePoolUtilization) / 2.0);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/drpc/DRPCServer.java","tnLine":105,"tnColumn":58,"tnPatch":null,"tnCodeLine":"            final Boolean disableHttpBinding = (Boolean) (conf.get(DaemonConfig.DRPC_DISABLE_HTTP_BINDING));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'LOG' is never read.","tnFile":"examples/storm-loadgen/src/main/java/org/apache/storm/loadgen/LoadBolt.java","tnLine":42,"tnColumn":33,"tnPatch":null,"tnCodeLine":"    private static final Logger LOG = LoggerFactory.getLogger(LoadBolt.class);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-server/src/main/java/org/apache/storm/container/cgroup/CgroupManager.java","tnLine":185,"tnColumn":25,"tnPatch":null,"tnCodeLine":"                        (Math.ceil(","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'assignment' is never read.","tnFile":"storm-server/src/main/java/org/apache/storm/scheduler/Cluster.java","tnLine":86,"tnColumn":37,"tnPatch":null,"tnCodeLine":"    private SchedulerAssignmentImpl assignment;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"external/storm-hbase/src/main/java/org/apache/storm/hbase/trident/state/HBaseMapState.java","tnLine":151,"tnColumn":67,"tnPatch":null,"tnCodeLine":"            LOG.info(\"Partition: {}, GET: {}\", this.partitionNum, new String(hbaseKey));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ThreadPriorityCheck","tnDesc":"Relying on the thread scheduler is discouraged; see Effective Java Item 72 (2nd edition) / 84 (3rd edition).","tnFile":"examples/storm-solr-examples/src/main/java/org/apache/storm/solr/spout/SolrJsonSpout.java","tnLine":51,"tnColumn":21,"tnPatch":null,"tnCodeLine":"        Thread.yield();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'conf' is never read.","tnFile":"storm-server/src/main/java/org/apache/storm/scheduler/utils/FileConfigLoader.java","tnLine":29,"tnColumn":33,"tnPatch":null,"tnCodeLine":"    private Map<String, Object> conf;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The parameter 'haystack' is never read.","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/logviewer/handler/LogviewerLogSearchHandler.java","tnLine":643,"tnColumn":72,"tnPatch":null,"tnCodeLine":"    private byte[] tryReadAhead(BufferedInputStream stream, ByteBuffer haystack, int offset, int fileLength, int bytesRead)","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/StormParserImplTokenManager.java","tnLine":9114,"tnColumn":8,"tnPatch":null,"tnCodeLine":"   if (((active1 &= old1)) == 0L)","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DoubleBraceInitialization","tnDesc":"Prefer collection factory methods or builders to the double-brace initialization pattern.","tnFile":"external/storm-kafka-monitor/src/main/java/org/apache/storm/kafka/monitor/KafkaOffsetLagUtil.java","tnLine":171,"tnColumn":16,"tnPatch":null,"tnCodeLine":"        return new ArrayList<TopicPartition>(1) {{","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"external/storm-redis/src/main/java/org/apache/storm/redis/trident/state/AbstractRedisMapState.java","tnLine":97,"tnColumn":74,"tnPatch":null,"tnCodeLine":"                result.add((T) getSerializer().deserialize(value.getBytes()));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ImmutableEnumChecker","tnDesc":"enums should be immutable: 'Units' has non-final field 'byteCount'","tnFile":"external/storm-hdfs/src/main/java/org/apache/storm/hdfs/bolt/rotation/FileSizeRotationPolicy.java","tnLine":71,"tnColumn":22,"tnPatch":null,"tnCodeLine":"        private long byteCount;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'LOG' is never read.","tnFile":"integration-test/src/main/java/org/apache/storm/st/topology/window/TumblingTimeCorrectness.java","tnLine":37,"tnColumn":33,"tnPatch":null,"tnCodeLine":"    private static final Logger LOG = LoggerFactory.getLogger(TumblingTimeCorrectness.class);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The local variable 'slowDriversStream' is never read.","tnFile":"examples/storm-starter/src/jvm/org/apache/storm/starter/trident/TridentMinMaxOfDevicesTopology.java","tnLine":84,"tnColumn":16,"tnPatch":null,"tnCodeLine":"        Stream slowDriversStream =","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingCasesInEnumSwitch","tnDesc":"Non-exhaustive switch; either add a default or handle the remaining cases: NONE","tnFile":"storm-buildtools/storm-maven-plugins/src/main/java/org/apache/storm/maven/plugin/versioninfo/VersionInfoMojo.java","tnLine":202,"tnColumn":9,"tnPatch":null,"tnCodeLine":"        switch (scm) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'metricsExec' is never read.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/supervisor/Slot.java","tnLine":78,"tnColumn":47,"tnPatch":null,"tnCodeLine":"    private final OnlyLatestExecutor<Integer> metricsExec;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"toString overrides method in Object; expected @Override","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/supervisor/Slot.java","tnLine":1172,"tnColumn":23,"tnPatch":null,"tnCodeLine":"        public String toString() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ClassCanBeStatic","tnDesc":"Inner class is non-static but does not reference enclosing class","tnFile":"external/storm-mqtt/src/main/java/org/apache/storm/mqtt/spout/MqttSpout.java","tnLine":243,"tnColumn":13,"tnPatch":null,"tnCodeLine":"    private class SubscribeCallback implements Callback<byte[]> {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"SynchronizeOnNonFinalField","tnDesc":"Synchronizing on non-final fields is not safe: if the field is ever updated, different threads may end up locking on different objects.","tnFile":"external/storm-hdfs/src/main/java/org/apache/storm/hdfs/bolt/AbstractHdfsBolt.java","tnLine":130,"tnColumn":22,"tnPatch":null,"tnCodeLine":"        synchronized (this.writeLock) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"read implements method in TSerializable; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/JavaObject.java","tnLine":354,"tnColumn":15,"tnPatch":null,"tnCodeLine":"  public void read(org.apache.storm.thrift.protocol.TProtocol iprot) throws org.apache.storm.thrift.TException {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"fieldForId implements method in TBase; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/NullStruct.java","tnLine":177,"tnColumn":18,"tnPatch":null,"tnCodeLine":"  public _Fields fieldForId(int fieldId) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-server/src/main/java/org/apache/storm/metricstore/rocksdb/RocksDbStore.java","tnLine":120,"tnColumn":14,"tnPatch":null,"tnCodeLine":"        if (!(config.containsKey(DaemonConfig.STORM_ROCKSDB_LOCATION))) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"parseSqlExpressionEof implements method in SqlAbstractParserImpl; expected @Override","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/StormParserImpl.java","tnLine":184,"tnColumn":20,"tnPatch":null,"tnCodeLine":"    public SqlNode parseSqlExpressionEof() throws Exception","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingCasesInEnumSwitch","tnDesc":"Non-exhaustive switch; either add a default or handle the remaining cases: NONE","tnFile":"storm-buildtools/storm-maven-plugins/src/main/java/org/apache/storm/maven/plugin/versioninfo/VersionInfoMojo.java","tnLine":225,"tnColumn":9,"tnPatch":null,"tnCodeLine":"        switch (scm) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/StormParserImplTokenManager.java","tnLine":14069,"tnColumn":8,"tnPatch":null,"tnCodeLine":"   if (((active1 &= old1)) == 0L)","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ImmutableEnumChecker","tnDesc":"enums should be immutable: 'TimeUnit' has non-final field 'milliSeconds'","tnFile":"external/storm-hdfs/src/main/java/org/apache/storm/hdfs/trident/rotation/TimedRotationPolicy.java","tnLine":87,"tnColumn":22,"tnPatch":null,"tnCodeLine":"        private long milliSeconds;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-server/src/main/java/org/apache/storm/stats/StatsUtil.java","tnLine":996,"tnColumn":37,"tnPatch":null,"tnCodeLine":"                (Map<String, Long>) (ClientStatsUtil.getMapByKey(beat, ACKED)).get(win)));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"sql/storm-sql-external/storm-sql-kafka/src/jvm/org/apache/storm/sql/kafka/KafkaDataSourcesProvider.java","tnLine":166,"tnColumn":38,"tnPatch":null,"tnCodeLine":"        String[] params = query.split(\"&\");","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"IntLongMath","tnDesc":"Expression of type int may overflow before being assigned to a long","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/supervisor/Slot.java","tnLine":667,"tnColumn":74,"tnPatch":null,"tnCodeLine":"            long hbAgeMs = (Time.currentTimeSecs() - hb.get_time_secs()) * 1000;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java","tnLine":1622,"tnColumn":49,"tnPatch":null,"tnCodeLine":"        Boolean disableLagMonitoring = (Boolean)(config.get(DaemonConfig.UI_DISABLE_SPOUT_LAG_MONITORING));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'LOG' is never read.","tnFile":"external/storm-mqtt/src/main/java/org/apache/storm/mqtt/common/MqttPublisher.java","tnLine":25,"tnColumn":33,"tnPatch":null,"tnCodeLine":"    private static final Logger LOG = LoggerFactory.getLogger(MqttPublisher.class);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"external/storm-hive/src/main/java/org/apache/storm/hive/bolt/mapper/DelimitedRecordHiveMapper.java","tnLine":105,"tnColumn":43,"tnPatch":null,"tnCodeLine":"        return builder.toString().getBytes();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The parameter 'topoId' is never read.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":1810,"tnColumn":57,"tnPatch":null,"tnCodeLine":"    private List<List<Integer>> computeExecutors(String topoId, StormBase base, Map<String, Object> topoConf,","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"external/storm-eventhubs/src/main/java/org/apache/storm/eventhubs/spout/StringEventDataScheme.java","tnLine":46,"tnColumn":27,"tnPatch":null,"tnCodeLine":"            messageData = new String(eventData.getBytes());","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingCasesInEnumSwitch","tnDesc":"Non-exhaustive switch; either add a default or handle the remaining cases: ACCEPT_ALL, ACCEPT_NONCURSOR, ACCEPT_QUERY, ACCEPT_NON_QUERY","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/StormParserImpl.java","tnLine":582,"tnColumn":9,"tnPatch":null,"tnCodeLine":"        switch (exprContext) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"sql/storm-sql-external/storm-sql-redis/src/jvm/org/apache/storm/sql/redis/RedisDataSourcesProvider.java","tnLine":211,"tnColumn":20,"tnPatch":null,"tnCodeLine":"            return new String(array);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"CompareToZero","tnDesc":"The result of #compareTo or #compare should only be compared to 0. It is an implementation detail whether a given type returns strictly the values {-1, 0, +1} or others.","tnFile":"external/storm-kinesis/src/main/java/org/apache/storm/kinesis/spout/KinesisRecordsManager.java","tnLine":205,"tnColumn":130,"tnPatch":null,"tnCodeLine":"                    if (commitSequenceNumberBound == null || (commitSequenceNumberBound.compareTo(smallestEmittedSequenceNumber) == 1)) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedMethod","tnDesc":"Private method 'threeProducer1Consumer' is never used.","tnFile":"examples/storm-perf/src/main/java/org/apache/storm/perf/JCToolsPerfTest.java","tnLine":66,"tnColumn":25,"tnPatch":null,"tnCodeLine":"    private static void threeProducer1Consumer() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The local variable 'file' is never read.","tnFile":"examples/storm-starter/src/jvm/org/apache/storm/starter/BlobStoreAPIWordCountTopology.java","tnLine":145,"tnColumn":14,"tnPatch":null,"tnCodeLine":"        File file = null;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"examples/storm-perf/src/main/java/org/apache/storm/perf/StrGenSpoutHdfsBoltTopo.java","tnLine":158,"tnColumn":95,"tnPatch":null,"tnCodeLine":"            return (tuple.getValueByField(fieldName).toString() + this.lineDelimiter).getBytes();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"It is very rare for LinkedList to out-perform ArrayList or ArrayDeque. Avoid it unless you're willing to invest a lot of time into benchmarking. Caveat: LinkedList supports null elements, but ArrayDeque does not.","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java","tnLine":139,"tnColumn":34,"tnPatch":null,"tnCodeLine":"        LinkedList<String> tmp = new LinkedList<>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"external/storm-mongodb/src/main/java/org/apache/storm/mongodb/common/MongoUtils.java","tnLine":36,"tnColumn":55,"tnPatch":null,"tnCodeLine":"                bos.write(String.valueOf(key).getBytes());","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"examples/storm-perf/src/main/java/org/apache/storm/perf/utils/BasicMetricsCollector.java","tnLine":78,"tnColumn":22,"tnPatch":null,"tnCodeLine":"        dataWriter = new PrintWriter(System.err);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"It is very rare for LinkedList to out-perform ArrayList or ArrayDeque. Avoid it unless you're willing to invest a lot of time into benchmarking. Caveat: LinkedList supports null elements, but ArrayDeque does not.","tnFile":"external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/KafkaSpout.java","tnLine":544,"tnColumn":58,"tnPatch":null,"tnCodeLine":"                        .collect(Collectors.toCollection(LinkedList::new)));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"getFieldName implements method in TFieldIdEnum; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/JavaObjectArg.java","tnLine":107,"tnColumn":29,"tnPatch":null,"tnCodeLine":"    public java.lang.String getFieldName() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"examples/storm-redis-examples/src/main/java/org/apache/storm/redis/trident/WordCountTridentRedisClusterMap.java","tnLine":52,"tnColumn":51,"tnPatch":null,"tnCodeLine":"        for (String hostPort : redisHostPort.split(\",\")) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"examples/storm-loadgen/src/main/java/org/apache/storm/loadgen/LoadMetricsServer.java","tnLine":840,"tnColumn":52,"tnPatch":null,"tnCodeLine":"                        String[] pair = param.split(\"=\");","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedMethod","tnDesc":"Private method 'jjCheckNAddStates' is never used.","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/StormParserImplTokenManager.java","tnLine":4193,"tnColumn":20,"tnPatch":null,"tnCodeLine":"private final void jjCheckNAddStates(int start)","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The local variable 'state' is never read.","tnFile":"examples/storm-hdfs-examples/src/main/java/org/apache/storm/hdfs/trident/TridentFileTopology.java","tnLine":75,"tnColumn":22,"tnPatch":null,"tnCodeLine":"        TridentState state = stream","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DoubleBraceInitialization","tnDesc":"Prefer collection factory methods or builders to the double-brace initialization pattern.","tnFile":"examples/storm-starter/src/jvm/org/apache/storm/starter/ReachTopology.java","tnLine":52,"tnColumn":59,"tnPatch":null,"tnCodeLine":"    public static Map<String, List<String>> TWEETERS_DB = new HashMap<String, List<String>>() {{","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"storm-submit-tools/src/main/java/org/apache/storm/submit/dependency/AetherUtils.java","tnLine":112,"tnColumn":42,"tnPatch":null,"tnCodeLine":"        String[] parts = repository.split(\"\\\\^\");","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ThreadPriorityCheck","tnDesc":"Relying on the thread scheduler is discouraged; see Effective Java Item 72 (2nd edition) / 84 (3rd edition).","tnFile":"examples/storm-elasticsearch-examples/src/main/java/org/apache/storm/elasticsearch/bolt/EsIndexTopology.java","tnLine":162,"tnColumn":25,"tnPatch":null,"tnCodeLine":"            Thread.yield();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ImmutableEnumChecker","tnDesc":"enums should be immutable: 'StormBuiltInMethod' has field 'method' of type 'java.lang.reflect.Method', the declaration of type 'java.lang.reflect.Method' is not annotated with @com.google.errorprone.annotations.Immutable","tnFile":"sql/storm-sql-core/src/jvm/org/apache/storm/sql/compiler/RexNodeToJavaCodeCompiler.java","tnLine":200,"tnColumn":29,"tnPatch":null,"tnCodeLine":"        public final Method method;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"storm-server/src/main/java/org/apache/storm/nimbus/AssignmentDistributionService.java","tnLine":121,"tnColumn":32,"tnPatch":null,"tnCodeLine":"            this.service.submit(new DistributeTask(this, i));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ClassNewInstance","tnDesc":"Class.newInstance() bypasses exception checking; prefer getDeclaredConstructor().newInstance()","tnFile":"external/storm-hdfs/src/main/java/org/apache/storm/hdfs/trident/HdfsState.java","tnLine":498,"tnColumn":73,"tnPatch":null,"tnCodeLine":"            Writable key = (Writable) this.format.keyClass().newInstance();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingCasesInEnumSwitch","tnDesc":"Non-exhaustive switch; either add a default or handle the remaining cases: NONE","tnFile":"storm-buildtools/storm-maven-plugins/src/main/java/org/apache/storm/maven/plugin/versioninfo/VersionInfoMojo.java","tnLine":177,"tnColumn":9,"tnPatch":null,"tnCodeLine":"        switch (scm) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The parameter 'offset' is never read.","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/logviewer/handler/LogviewerLogSearchHandler.java","tnLine":643,"tnColumn":86,"tnPatch":null,"tnCodeLine":"    private byte[] tryReadAhead(BufferedInputStream stream, ByteBuffer haystack, int offset, int fileLength, int bytesRead)","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ArrayAsKeyOfSetOrMap","tnDesc":"Arrays do not override equals() or hashCode, so comparisons will be done on reference equality only. If neither deduplication nor lookup are needed, consider using a List instead. Otherwise, use IdentityHashMap/Set, a Map from a library that handles object arrays, or an Iterable/List of pairs.","tnFile":"external/storm-redis/src/main/java/org/apache/storm/redis/state/RedisKeyValueState.java","tnLine":222,"tnColumn":49,"tnPatch":null,"tnCodeLine":"                Map<byte[], byte[]> keysToAdd = new HashMap<>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"getThriftFieldId implements method in TFieldIdEnum; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/SpoutSpec.java","tnLine":94,"tnColumn":18,"tnPatch":null,"tnCodeLine":"    public short getThriftFieldId() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/StormParserImplTokenManager.java","tnLine":4149,"tnColumn":8,"tnPatch":null,"tnCodeLine":"   if (((active1 &= old1)) == 0L)","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"fieldForId implements method in TBase; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/JavaObject.java","tnLine":350,"tnColumn":18,"tnPatch":null,"tnCodeLine":"  public _Fields fieldForId(int fieldId) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"RandomModInteger","tnDesc":"Use Random.nextInt(int).  Random.nextInt() % n can have negative results","tnFile":"examples/storm-opentsdb-examples/src/main/java/org/apache/storm/opentsdb/MetricGenBatchSpout.java","tnLine":63,"tnColumn":83,"tnPatch":null,"tnCodeLine":"                        Collections.singletonMap(\"loc.id\", new Random().nextInt() % 64 + \"\"))));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The local variable 'state' is never read.","tnFile":"examples/storm-hive-examples/src/main/java/org/apache/storm/hive/trident/TridentHiveTopology.java","tnLine":78,"tnColumn":22,"tnPatch":null,"tnCodeLine":"        TridentState state = stream.partitionPersist(factory, hiveFields, new HiveUpdater(), new Fields());","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The parameter 'path' is never read.","tnFile":"storm-server/src/main/java/org/apache/storm/pacemaker/Pacemaker.java","tnLine":107,"tnColumn":41,"tnPatch":null,"tnCodeLine":"    private HBMessage createPath(String path) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The local variable 'td' is never read.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":1882,"tnColumn":29,"tnPatch":null,"tnCodeLine":"            TopologyDetails td = topologies.getById(topoId);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"InconsistentCapitalization","tnDesc":"Found the field 'txnid' with the same name as the parameter 'txnId' but with different capitalization.","tnFile":"external/storm-hdfs/src/main/java/org/apache/storm/hdfs/trident/HdfsState.java","tnLine":544,"tnColumn":32,"tnPatch":null,"tnCodeLine":"        private TxnRecord(long txnId, String dataFilePath, long offset) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingCasesInEnumSwitch","tnDesc":"Non-exhaustive switch; either add a default or handle the remaining cases: ACCEPT_ALL, ACCEPT_NONCURSOR, ACCEPT_NON_QUERY, ACCEPT_SUB_QUERY, ACCEPT_CURSOR","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/StormParserImpl.java","tnLine":296,"tnColumn":5,"tnPatch":null,"tnCodeLine":"    switch (exprContext) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"storm-buildtools/maven-shade-clojure-transformer/src/main/java/org/apache/storm/maven/shade/clojure/ClojureTransformer.java","tnLine":69,"tnColumn":56,"tnPatch":null,"tnCodeLine":"            jarOut.write(this.entries.get(key).getBytes());","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"storm-server/src/main/java/org/apache/storm/localizer/LocalizedResource.java","tnLine":119,"tnColumn":57,"tnPatch":null,"tnCodeLine":"            try (BufferedReader br = new BufferedReader(new FileReader(versionFile.toFile()))) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The local variable 'j' is never read.","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/StormParserImplTokenManager.java","tnLine":4232,"tnColumn":8,"tnPatch":null,"tnCodeLine":"   int j, kind = 0x7fffffff;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'bolts' is never read.","tnFile":"flux/flux-core/src/main/java/org/apache/storm/flux/model/ExecutionContext.java","tnLine":46,"tnColumn":25,"tnPatch":null,"tnCodeLine":"    private List<IBolt> bolts;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ByteBufferBackingArray","tnDesc":"ByteBuffer.array() shouldn't be called unless ByteBuffer.arrayOffset() is used or if the ByteBuffer was initialized using ByteBuffer.wrap() or ByteBuffer.allocate().","tnFile":"storm-client/src/jvm/org/apache/storm/generated/Grouping.java","tnLine":646,"tnColumn":38,"tnPatch":null,"tnCodeLine":"    return b == null ? null : b.array();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"flux/flux-core/src/main/java/org/apache/storm/flux/model/TopologyDef.java","tnLine":268,"tnColumn":33,"tnPatch":null,"tnCodeLine":"        if (!isDslTopology() && ((hasSpouts || hasBolts || hasStreams))) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The local variable 'method' is never read.","tnFile":"flux/flux-core/src/main/java/org/apache/storm/flux/FluxBuilder.java","tnLine":368,"tnColumn":20,"tnPatch":null,"tnCodeLine":"            Method method = null;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/supervisor/Slot.java","tnLine":343,"tnColumn":35,"tnPatch":null,"tnCodeLine":"                rc.latch.countDown();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"deepCopy implements method in TBase; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/Grouping.java","tnLine":155,"tnColumn":19,"tnPatch":null,"tnCodeLine":"  public Grouping deepCopy() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"getScheme implements method in SchemeFactory; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/JavaObject.java","tnLine":497,"tnColumn":34,"tnPatch":null,"tnCodeLine":"    public JavaObjectTupleScheme getScheme() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"read implements method in TSerializable; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/GlobalStreamId.java","tnLine":333,"tnColumn":15,"tnPatch":null,"tnCodeLine":"  public void read(org.apache.storm.thrift.protocol.TProtocol iprot) throws org.apache.storm.thrift.TException {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"NonOverridingEquals","tnDesc":"equals method doesn't override Object.equals; if this is a type-specific helper for a method that does override Object.equals, either inline it into the callers or rename it to avoid ambiguity","tnFile":"storm-client/src/jvm/org/apache/storm/generated/SpoutSpec.java","tnLine":255,"tnColumn":18,"tnPatch":null,"tnCodeLine":"  public boolean equals(SpoutSpec that) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"external/storm-hbase/src/main/java/org/apache/storm/hbase/state/HBaseKeyValueStateIterator.java","tnLine":87,"tnColumn":21,"tnPatch":null,"tnCodeLine":"            return !(resultScanner.iterator().hasNext());","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"storm-buildtools/storm-maven-plugins/src/main/java/org/apache/storm/maven/plugin/util/CommandExec.java","tnLine":62,"tnColumn":41,"tnPatch":null,"tnCodeLine":"            reader = new BufferedReader(new InputStreamReader(is));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"write implements method in IScheme; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/JavaObject.java","tnLine":469,"tnColumn":17,"tnPatch":null,"tnCodeLine":"    public void write(org.apache.storm.thrift.protocol.TProtocol oprot, JavaObject struct) throws org.apache.storm.thrift.TException {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"getFieldName implements method in TFieldIdEnum; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/NullStruct.java","tnLine":89,"tnColumn":29,"tnPatch":null,"tnCodeLine":"    public java.lang.String getFieldName() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"CatchAndPrintStackTrace","tnDesc":"Logging or rethrowing exceptions should usually be preferred to catching and calling printStackTrace","tnFile":"storm-server/src/main/java/org/apache/storm/nimbus/NimbusHeartbeatsPressureTest.java","tnLine":101,"tnColumn":13,"tnPatch":null,"tnCodeLine":"            e.printStackTrace();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"external/storm-eventhubs/src/main/java/org/apache/storm/eventhubs/spout/EventDataScheme.java","tnLine":48,"tnColumn":27,"tnPatch":null,"tnCodeLine":"            messageData = new String(eventData.getBytes());","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/drpc/DRPCServer.java","tnLine":99,"tnColumn":54,"tnPatch":null,"tnCodeLine":"            final String httpsKeyPassword = (String) (conf.get(DaemonConfig.DRPC_HTTPS_KEY_PASSWORD));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The local variable 'sum' is never read.","tnFile":"examples/storm-loadgen/src/main/java/org/apache/storm/loadgen/ExecAndProcessLatencyEngine.java","tnLine":73,"tnColumn":18,"tnPatch":null,"tnCodeLine":"            long sum = 0;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'DEFAULT_USE_REDIS_CLUSTER' is never read.","tnFile":"sql/storm-sql-external/storm-sql-redis/src/jvm/org/apache/storm/sql/redis/RedisDataSourcesProvider.java","tnLine":62,"tnColumn":33,"tnPatch":null,"tnCodeLine":"    private static final String DEFAULT_USE_REDIS_CLUSTER = \"false\";","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/StormParserImplTokenManager.java","tnLine":4128,"tnColumn":8,"tnPatch":null,"tnCodeLine":"   if (((active1 &= old1)) == 0L)","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-client/src/jvm/org/apache/storm/generated/GlobalStreamId.java","tnLine":286,"tnColumn":35,"tnPatch":null,"tnCodeLine":"    hashCode = hashCode * 8191 + ((is_set_componentId()) ? 131071 : 524287);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"external/storm-hdfs/src/main/java/org/apache/storm/hdfs/trident/format/DelimitedRecordFormat.java","tnLine":76,"tnColumn":38,"tnPatch":null,"tnCodeLine":"        return sb.toString().getBytes();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The local variable 'stream' is never read.","tnFile":"examples/storm-starter/src/jvm/org/apache/storm/starter/trident/TridentWindowingInmemoryStoreTopology.java","tnLine":49,"tnColumn":16,"tnPatch":null,"tnCodeLine":"        Stream stream = topology.newStream(\"spout1\", spout).parallelismHint(16).each(new Fields(\"sentence\"),","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"CatchAndPrintStackTrace","tnDesc":"Logging or rethrowing exceptions should usually be preferred to catching and calling printStackTrace","tnFile":"examples/storm-hive-examples/src/main/java/org/apache/storm/hive/bolt/BucketTestHiveTopology.java","tnLine":163,"tnColumn":17,"tnPatch":null,"tnCodeLine":"                ex.printStackTrace();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"InconsistentCapitalization","tnDesc":"Found the field 'syncTimeout' with the same name as the parameter 'syncTimeOut' but with different capitalization.","tnFile":"external/storm-opentsdb/src/main/java/org/apache/storm/opentsdb/client/OpenTsdbClient.java","tnLine":65,"tnColumn":67,"tnPatch":null,"tnCodeLine":"    protected OpenTsdbClient(String urlString, boolean sync, long syncTimeOut, ResponseType responseType, boolean enableChunkedEncoding) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'primaryKeyField' is never read.","tnFile":"sql/storm-sql-external/storm-sql-redis/src/jvm/org/apache/storm/sql/redis/RedisDataSourcesProvider.java","tnLine":165,"tnColumn":33,"tnPatch":null,"tnCodeLine":"        private final FieldInfo primaryKeyField;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'conf' is never read.","tnFile":"external/storm-mqtt/src/main/java/org/apache/storm/mqtt/spout/MqttSpout.java","tnLine":51,"tnColumn":43,"tnPatch":null,"tnCodeLine":"    private transient Map<String, Object> conf;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-server/src/main/java/org/apache/storm/metricstore/rocksdb/RocksDbStore.java","tnLine":139,"tnColumn":14,"tnPatch":null,"tnCodeLine":"        if (!(config.containsKey(DaemonConfig.STORM_ROCKSDB_METADATA_STRING_CACHE_CAPACITY))) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"EqualsGetClass","tnDesc":"Overriding Object#equals in a non-final class by using getClass rather than instanceof breaks substitutability of subclasses.","tnFile":"external/storm-hdfs/src/main/java/org/apache/storm/hdfs/spout/AbstractFileReader.java","tnLine":40,"tnColumn":20,"tnPatch":null,"tnCodeLine":"    public boolean equals(Object o) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ClassCanBeStatic","tnDesc":"Inner class is non-static but does not reference enclosing class","tnFile":"external/storm-mqtt/src/main/java/org/apache/storm/mqtt/spout/MqttSpout.java","tnLine":257,"tnColumn":13,"tnPatch":null,"tnCodeLine":"    private class DisconnectCallback implements Callback<Void> {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"examples/storm-starter/src/jvm/org/apache/storm/starter/trident/TridentMinMaxOfVehiclesTopology.java","tnLine":147,"tnColumn":21,"tnPatch":null,"tnCodeLine":"                    (new Values(","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"write implements method in IScheme; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/GlobalStreamId.java","tnLine":437,"tnColumn":17,"tnPatch":null,"tnCodeLine":"    public void write(org.apache.storm.thrift.protocol.TProtocol oprot, GlobalStreamId struct) throws org.apache.storm.thrift.TException {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-client/src/jvm/org/apache/storm/generated/StormTopology.java","tnLine":957,"tnColumn":35,"tnPatch":null,"tnCodeLine":"    hashCode = hashCode * 8191 + ((is_set_component_to_shared_memory()) ? 131071 : 524287);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"parseSqlStmtEof implements method in SqlAbstractParserImpl; expected @Override","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/StormParserImpl.java","tnLine":189,"tnColumn":20,"tnPatch":null,"tnCodeLine":"    public SqlNode parseSqlStmtEof() throws Exception","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ClassNewInstance","tnDesc":"Class.newInstance() bypasses exception checking; prefer getDeclaredConstructor().newInstance()","tnFile":"sql/storm-sql-core/src/jvm/org/apache/storm/sql/planner/streams/StreamsPlanCreator.java","tnLine":92,"tnColumn":108,"tnPatch":null,"tnCodeLine":"        ExecutableExpression instance = (ExecutableExpression) classLoader.loadClass(className).newInstance();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIServer.java","tnLine":96,"tnColumn":55,"tnPatch":null,"tnCodeLine":"        final Boolean httpsNeedClientAuth = (Boolean) (conf.get(DaemonConfig.UI_HTTPS_NEED_CLIENT_AUTH));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"examples/storm-perf/src/main/java/org/apache/storm/perf/spout/WordGenSpout.java","tnLine":62,"tnColumn":56,"tnPatch":null,"tnCodeLine":"            BufferedReader reader = new BufferedReader(new InputStreamReader(input));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"external/storm-hbase/src/main/java/org/apache/storm/hbase/state/HBaseKeyValueState.java","tnLine":103,"tnColumn":60,"tnPatch":null,"tnCodeLine":"        this.txidNamespace = (namespace + \"$txid\").getBytes();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'LOG' is never read.","tnFile":"external/storm-opentsdb/src/main/java/org/apache/storm/opentsdb/bolt/TupleOpenTsdbDatapointMapper.java","tnLine":32,"tnColumn":33,"tnPatch":null,"tnCodeLine":"    private static final Logger LOG = LoggerFactory.getLogger(TupleOpenTsdbDatapointMapper.class);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"SynchronizeOnNonFinalField","tnDesc":"Synchronizing on non-final fields is not safe: if the field is ever updated, different threads may end up locking on different objects.","tnFile":"external/storm-hdfs/src/main/java/org/apache/storm/hdfs/bolt/AbstractHdfsBolt.java","tnLine":256,"tnColumn":22,"tnPatch":null,"tnCodeLine":"        synchronized (writeLock) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/logviewer/LogviewerServer.java","tnLine":73,"tnColumn":70,"tnPatch":null,"tnCodeLine":"            Map<String, String> filterParams = (Map<String, String>) (conf.get(filterParamKey));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The local variable 'success' is never read.","tnFile":"external/storm-hdfs/src/main/java/org/apache/storm/hdfs/common/rotation/MoveFileAction.java","tnLine":41,"tnColumn":17,"tnPatch":null,"tnCodeLine":"        boolean success = fileSystem.rename(filePath, destPath);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"external/storm-hbase/src/main/java/org/apache/storm/hbase/state/HBaseKeyValueState.java","tnLine":101,"tnColumn":59,"tnPatch":null,"tnCodeLine":"        this.keyNamespace = (namespace + \"$key:\").getBytes();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'LOG' is never read.","tnFile":"storm-server/src/main/java/org/apache/storm/scheduler/resource/normalization/NormalizedResourceOffer.java","tnLine":32,"tnColumn":33,"tnPatch":null,"tnCodeLine":"    private static final Logger LOG = LoggerFactory.getLogger(NormalizedResourceOffer.class);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"CatchAndPrintStackTrace","tnDesc":"Logging or rethrowing exceptions should usually be preferred to catching and calling printStackTrace","tnFile":"storm-server/src/main/java/org/apache/storm/nimbus/NimbusHeartbeatsPressureTest.java","tnLine":186,"tnColumn":17,"tnPatch":null,"tnCodeLine":"                e.printStackTrace();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-client/src/jvm/org/apache/storm/generated/StormTopology.java","tnLine":925,"tnColumn":35,"tnPatch":null,"tnCodeLine":"    hashCode = hashCode * 8191 + ((is_set_spouts()) ? 131071 : 524287);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"examples/storm-solr-examples/src/main/java/org/apache/storm/solr/spout/SolrJsonSpout.java","tnLine":72,"tnColumn":27,"tnPatch":null,"tnCodeLine":"        return new Values((new JsonSchema(suffix)).toJson());","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'NUMBER_FIELD' is never read.","tnFile":"integration-test/src/main/java/org/apache/storm/st/topology/window/SlidingWindowCorrectness.java","tnLine":36,"tnColumn":33,"tnPatch":null,"tnCodeLine":"    private static final String NUMBER_FIELD = \"number\";","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"StringBuffer performs synchronization that is usually unnecessary; prefer StringBuilder.","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/TokenMgrError.java","tnLine":41,"tnColumn":29,"tnPatch":null,"tnCodeLine":"      StringBuffer retval = new StringBuffer();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"equals overrides method in Object; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/JavaObjectArg.java","tnLine":552,"tnColumn":18,"tnPatch":null,"tnCodeLine":"  public boolean equals(java.lang.Object other) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"external/storm-hbase/src/main/java/org/apache/storm/hbase/common/Utils.java","tnLine":103,"tnColumn":43,"tnPatch":null,"tnCodeLine":"            return ((String) obj).getBytes();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"StringBuffer performs synchronization that is usually unnecessary; prefer StringBuilder.","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/StormParserImplTokenManager.java","tnLine":15370,"tnColumn":21,"tnPatch":null,"tnCodeLine":"            image = new StringBuffer();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field '_conf' is never read.","tnFile":"external/storm-hdfs-blobstore/src/main/java/org/apache/storm/hdfs/blobstore/HdfsClientBlobStore.java","tnLine":47,"tnColumn":17,"tnPatch":null,"tnCodeLine":"    private Map _conf;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ModifiedButNotUsed","tnDesc":"A collection or proto builder was created, but its values were never accessed.","tnFile":"external/storm-elasticsearch/src/main/java/org/apache/storm/elasticsearch/bolt/EsPercolateBolt.java","tnLine":82,"tnColumn":47,"tnPatch":null,"tnCodeLine":"            Map<String, String> indexParams = new HashMap<>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"storm-server/src/main/java/org/apache/storm/localizer/GoodToGo.java","tnLine":48,"tnColumn":28,"tnPatch":null,"tnCodeLine":"            latch.countDown();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The local variable 'xsp' is never read.","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/StormParserImpl.java","tnLine":20853,"tnColumn":11,"tnPatch":null,"tnCodeLine":"    Token xsp;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"getFieldValue implements method in TBase; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/SpoutSpec.java","tnLine":219,"tnColumn":27,"tnPatch":null,"tnCodeLine":"  public java.lang.Object getFieldValue(_Fields field) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'eCount' is never read.","tnFile":"examples/storm-perf/src/main/java/org/apache/storm/perf/bolt/DevNullBolt.java","tnLine":36,"tnColumn":17,"tnPatch":null,"tnCodeLine":"    private int eCount = 0;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"setTabSize implements method in SqlAbstractParserImpl; expected @Override","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/StormParserImpl.java","tnLine":152,"tnColumn":17,"tnPatch":null,"tnCodeLine":"    public void setTabSize(int tabSize)","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java","tnLine":2392,"tnColumn":58,"tnPatch":null,"tnCodeLine":"            nimbusSummaryMap.put(\"port\", nimbusSeed.split(\":\")[1]);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"Vector performs synchronization that is usually unnecessary; prefer ArrayList.","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/StormParserImpl.java","tnLine":22743,"tnColumn":44,"tnPatch":null,"tnCodeLine":"  private java.util.Vector jj_expentries = new java.util.Vector();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"deepCopy implements method in TBase; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/StormTopology.java","tnLine":299,"tnColumn":24,"tnPatch":null,"tnCodeLine":"  public StormTopology deepCopy() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"fieldForId implements method in TBase; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/Grouping.java","tnLine":554,"tnColumn":18,"tnPatch":null,"tnCodeLine":"  public _Fields fieldForId(int fieldId) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedMethod","tnDesc":"Private method 'checkAndThrowInterruptedException' is never used.","tnFile":"external/storm-hive/src/main/java/org/apache/storm/hive/common/HiveWriter.java","tnLine":89,"tnColumn":25,"tnPatch":null,"tnCodeLine":"    private static void checkAndThrowInterruptedException()","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"write implements method in TSerializable; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/StormTopology.java","tnLine":1088,"tnColumn":15,"tnPatch":null,"tnCodeLine":"  public void write(org.apache.storm.thrift.protocol.TProtocol oprot) throws org.apache.storm.thrift.TException {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/KafkaSpoutRetryExponentialBackoff.java","tnLine":305,"tnColumn":70,"tnPatch":null,"tnCodeLine":"                : currentTimeNanos + delayPeriod.lengthNanos * (long)(Math.pow(2, msgId.numFails() - 1));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"It is very rare for LinkedList to out-perform ArrayList or ArrayDeque. Avoid it unless you're willing to invest a lot of time into benchmarking. Caveat: LinkedList supports null elements, but ArrayDeque does not.","tnFile":"examples/storm-perf/src/main/java/org/apache/storm/perf/utils/BasicMetricsCollector.java","tnLine":204,"tnColumn":29,"tnPatch":null,"tnCodeLine":"        List<String> line = new LinkedList<String>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"fieldForId implements method in TBase; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/GlobalStreamId.java","tnLine":329,"tnColumn":18,"tnPatch":null,"tnCodeLine":"  public _Fields fieldForId(int fieldId) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"getThriftFieldId implements method in TFieldIdEnum; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/GlobalStreamId.java","tnLine":94,"tnColumn":18,"tnPatch":null,"tnCodeLine":"    public short getThriftFieldId() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"external/storm-autocreds/src/main/java/org/apache/storm/hdfs/security/HdfsSecurityUtil.java","tnLine":55,"tnColumn":19,"tnPatch":null,"tnCodeLine":"                (!(((List)conf.get(TOPOLOGY_AUTO_CREDENTIALS)).contains(AutoHDFS.class.getName())) &&","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"It is very rare for LinkedList to out-perform ArrayList or ArrayDeque. Avoid it unless you're willing to invest a lot of time into benchmarking. Caveat: LinkedList supports null elements, but ArrayDeque does not.","tnFile":"external/storm-kinesis/src/main/java/org/apache/storm/kinesis/spout/KinesisRecordsManager.java","tnLine":86,"tnColumn":60,"tnPatch":null,"tnCodeLine":"            toEmitPerShard.put(shards.get(i).getShardId(), new LinkedList<Record>());","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'conf' is never read.","tnFile":"external/storm-opentsdb/src/main/java/org/apache/storm/opentsdb/trident/OpenTsdbState.java","tnLine":42,"tnColumn":39,"tnPatch":null,"tnCodeLine":"    private final Map<String, Object> conf;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIServer.java","tnLine":91,"tnColumn":50,"tnPatch":null,"tnCodeLine":"        final String httpsKeyPassword = (String) (conf.get(DaemonConfig.UI_HTTPS_KEY_PASSWORD));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"CatchAndPrintStackTrace","tnDesc":"Logging or rethrowing exceptions should usually be preferred to catching and calling printStackTrace","tnFile":"storm-server/src/main/java/org/apache/storm/nimbus/NimbusHeartbeatsPressureTest.java","tnLine":90,"tnColumn":17,"tnPatch":null,"tnCodeLine":"                e.printStackTrace();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"getScheme implements method in SchemeFactory; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/NullStruct.java","tnLine":220,"tnColumn":37,"tnPatch":null,"tnCodeLine":"    public NullStructStandardScheme getScheme() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/drpc/DRPCServer.java","tnLine":104,"tnColumn":59,"tnPatch":null,"tnCodeLine":"            final Boolean httpsNeedClientAuth = (Boolean) (conf.get(DaemonConfig.DRPC_HTTPS_NEED_CLIENT_AUTH));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'writer' is never read.","tnFile":"external/storm-hdfs/src/main/java/org/apache/storm/hdfs/bolt/SequenceFileBolt.java","tnLine":41,"tnColumn":43,"tnPatch":null,"tnCodeLine":"    private transient SequenceFile.Writer writer;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"getMessage overrides method in Throwable; expected @Override","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/ParseException.java","tnLine":97,"tnColumn":17,"tnPatch":null,"tnCodeLine":"  public String getMessage() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'counts' is never read.","tnFile":"examples/storm-hdfs-examples/src/main/java/org/apache/storm/hdfs/bolt/SequenceFileTopology.java","tnLine":174,"tnColumn":39,"tnPatch":null,"tnCodeLine":"        private HashMap<String, Long> counts = null;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The parameter 'state' is never read.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":1122,"tnColumn":83,"tnPatch":null,"tnCodeLine":"    private static void rmBlobKey(BlobStore store, String key, IStormClusterState state) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"It is very rare for LinkedList to out-perform ArrayList or ArrayDeque. Avoid it unless you're willing to invest a lot of time into benchmarking. Caveat: LinkedList supports null elements, but ArrayDeque does not.","tnFile":"external/storm-solr/src/main/java/org/apache/storm/solr/schema/builder/RestJsonSchemaBuilderV2.java","tnLine":92,"tnColumn":30,"tnPatch":null,"tnCodeLine":"        List<Field> fields = new LinkedList<>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"InconsistentCapitalization","tnDesc":"Found the field 'userName' with the same name as the parameter 'username' but with different capitalization.","tnFile":"external/storm-eventhubs/src/main/java/org/apache/storm/eventhubs/spout/EventHubSpoutConfig.java","tnLine":64,"tnColumn":39,"tnPatch":null,"tnCodeLine":"    public EventHubSpoutConfig(String username, String password,","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"It is very rare for LinkedList to out-perform ArrayList or ArrayDeque. Avoid it unless you're willing to invest a lot of time into benchmarking. Caveat: LinkedList supports null elements, but ArrayDeque does not.","tnFile":"external/storm-mongodb/src/main/java/org/apache/storm/mongodb/bolt/MongoInsertBolt.java","tnLine":84,"tnColumn":31,"tnPatch":null,"tnCodeLine":"        List<Document> docs = new LinkedList<>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The local variable 'response' is never read.","tnFile":"examples/storm-loadgen/src/main/java/org/apache/storm/loadgen/HttpForwardingMetricsConsumer.java","tnLine":76,"tnColumn":17,"tnPatch":null,"tnCodeLine":"            int response = con.getResponseCode();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ImmutableEnumChecker","tnDesc":"enums should be immutable: 'Units' has non-final field 'byteCount'","tnFile":"external/storm-hdfs/src/main/java/org/apache/storm/hdfs/trident/rotation/FileSizeRotationPolicy.java","tnLine":76,"tnColumn":22,"tnPatch":null,"tnCodeLine":"        private long byteCount;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DoubleBraceInitialization","tnDesc":"Prefer collection factory methods or builders to the double-brace initialization pattern.","tnFile":"examples/storm-kafka-client-examples/src/main/java/org/apache/storm/kafka/bolt/KafkaProducerTopology.java","tnLine":66,"tnColumn":16,"tnPatch":null,"tnCodeLine":"        return new Properties() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"external/storm-hdfs/src/main/java/org/apache/storm/hdfs/trident/HdfsState.java","tnLine":82,"tnColumn":45,"tnPatch":null,"tnCodeLine":"                String[] fields = line.split(\",\");","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIServer.java","tnLine":89,"tnColumn":49,"tnPatch":null,"tnCodeLine":"        final String httpsKsPassword = (String) (conf.get(DaemonConfig.UI_HTTPS_KEYSTORE_PASSWORD));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"fieldForId implements method in TBase; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/StormTopology.java","tnLine":1080,"tnColumn":18,"tnPatch":null,"tnCodeLine":"  public _Fields fieldForId(int fieldId) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedMethod","tnDesc":"Private method 'ackingProducerSimulation' is never used.","tnFile":"examples/storm-perf/src/main/java/org/apache/storm/perf/JCQueuePerfTest.java","tnLine":47,"tnColumn":25,"tnPatch":null,"tnCodeLine":"    private static void ackingProducerSimulation() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The local variable 'keytab' is never read.","tnFile":"examples/storm-hive-examples/src/main/java/org/apache/storm/hive/trident/TridentHiveTopology.java","tnLine":96,"tnColumn":16,"tnPatch":null,"tnCodeLine":"        String keytab = null;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/supervisor/Container.java","tnLine":266,"tnColumn":53,"tnPatch":null,"tnCodeLine":"        try (BufferedReader in = new BufferedReader(new InputStreamReader(p.getInputStream()))) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'entityName' is never read.","tnFile":"external/storm-eventhubs/src/main/java/org/apache/storm/eventhubs/spout/EventHubReceiverImpl.java","tnLine":40,"tnColumn":26,"tnPatch":null,"tnCodeLine":"    private final String entityName;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ThreadPriorityCheck","tnDesc":"Relying on the thread scheduler is discouraged; see Effective Java Item 72 (2nd edition) / 84 (3rd edition).","tnFile":"examples/storm-redis-examples/src/main/java/org/apache/storm/redis/topology/WordSpout.java","tnLine":63,"tnColumn":21,"tnPatch":null,"tnCodeLine":"        Thread.yield();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"external/storm-hdfs/src/main/java/org/apache/storm/hdfs/spout/TextFileReader.java","tnLine":122,"tnColumn":50,"tnPatch":null,"tnCodeLine":"                    String[] parts = offset.split(\":\");","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JodaPlusMinusLong","tnDesc":"Use of JodaTime's type.plus(long) or type.minus(long) is not allowed (where <type> = {Duration,Instant,DateTime,DateMidnight}). Please use  type.plus(Duration.millis(long)) or type.minus(Duration.millis(long)) instead.","tnFile":"integration-test/src/main/java/org/apache/storm/st/utils/TimeUtil.java","tnLine":52,"tnColumn":30,"tnPatch":null,"tnCodeLine":"        return dateTime.minus(modValue).plusSeconds(sec);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ImmutableEnumChecker","tnDesc":"enums should be immutable: 'TimeUnit' has non-final field 'milliSeconds'","tnFile":"external/storm-hdfs/src/main/java/org/apache/storm/hdfs/bolt/rotation/TimedRotationPolicy.java","tnLine":71,"tnColumn":22,"tnPatch":null,"tnCodeLine":"        private long milliSeconds;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"setFieldValue implements method in TBase; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/NullStruct.java","tnLine":117,"tnColumn":15,"tnPatch":null,"tnCodeLine":"  public void setFieldValue(_Fields field, @org.apache.storm.thrift.annotation.Nullable java.lang.Object value) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DoubleBraceInitialization","tnDesc":"Prefer collection factory methods or builders to the double-brace initialization pattern.","tnFile":"examples/storm-starter/src/jvm/org/apache/storm/starter/ReachTopology.java","tnLine":58,"tnColumn":60,"tnPatch":null,"tnCodeLine":"    public static Map<String, List<String>> FOLLOWERS_DB = new HashMap<String, List<String>>() {{","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java","tnLine":339,"tnColumn":43,"tnPatch":null,"tnCodeLine":"        execService.scheduleWithFixedDelay(this::updateBlobs, 30, 30, TimeUnit.SECONDS);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedMethod","tnDesc":"Private method 'getTopologyErrors' is never used.","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java","tnLine":1424,"tnColumn":40,"tnPatch":null,"tnCodeLine":"    private static Map<String, Object> getTopologyErrors(List<ErrorInfo> errorInfoList,","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"examples/storm-starter/src/jvm/org/apache/storm/starter/BlobStoreAPIWordCountTopology.java","tnLine":135,"tnColumn":48,"tnPatch":null,"tnCodeLine":"        BufferedReader br = new BufferedReader(new FileReader(file));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'objectMapper' is never read.","tnFile":"sql/storm-sql-runtime/src/jvm/org/apache/storm/sql/runtime/datasource/socket/spout/SocketSpout.java","tnLine":63,"tnColumn":26,"tnPatch":null,"tnCodeLine":"    private ObjectMapper objectMapper;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"setIdentifierMaxLength implements method in SqlAbstractParserImpl; expected @Override","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/StormParserImpl.java","tnLine":174,"tnColumn":17,"tnPatch":null,"tnCodeLine":"    public void setIdentifierMaxLength(int identifierMaxLength)","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"CatchAndPrintStackTrace","tnDesc":"Logging or rethrowing exceptions should usually be preferred to catching and calling printStackTrace","tnFile":"examples/storm-mqtt-examples/src/main/java/org/apache/storm/mqtt/examples/MqttBrokerPublisher.java","tnLine":89,"tnColumn":21,"tnPatch":null,"tnCodeLine":"                    e.printStackTrace();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java","tnLine":2006,"tnColumn":20,"tnPatch":null,"tnCodeLine":"        } else if ((componentPageInfo.get_component_type().equals(ComponentType.SPOUT))) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"external/storm-solr/src/main/java/org/apache/storm/solr/schema/builder/RestJsonSchemaBuilder.java","tnLine":51,"tnColumn":27,"tnPatch":null,"tnCodeLine":"        Scanner scanner = new Scanner(url.openStream());","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ThreadPriorityCheck","tnDesc":"Relying on the thread scheduler is discouraged; see Effective Java Item 72 (2nd edition) / 84 (3rd edition).","tnFile":"examples/storm-solr-examples/src/main/java/org/apache/storm/solr/spout/SolrFieldsSpout.java","tnLine":60,"tnColumn":21,"tnPatch":null,"tnCodeLine":"        Thread.yield();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'userName' is never read.","tnFile":"external/storm-eventhubs/src/main/java/org/apache/storm/eventhubs/spout/EventHubSpoutConfig.java","tnLine":30,"tnColumn":26,"tnPatch":null,"tnCodeLine":"    private final String userName;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"StringBuffer performs synchronization that is usually unnecessary; prefer StringBuilder.","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/ParseException.java","tnLine":101,"tnColumn":29,"tnPatch":null,"tnCodeLine":"    StringBuffer expected = new StringBuffer();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedMethod","tnDesc":"Private method 'threeProducer1Consumer' is never used.","tnFile":"examples/storm-perf/src/main/java/org/apache/storm/perf/JCQueuePerfTest.java","tnLine":94,"tnColumn":25,"tnPatch":null,"tnCodeLine":"    private static void threeProducer1Consumer(int prodBatchSz) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'LOG' is never read.","tnFile":"external/storm-jdbc/src/main/java/org/apache/storm/jdbc/bolt/JdbcLookupBolt.java","tnLine":30,"tnColumn":33,"tnPatch":null,"tnCodeLine":"    private static final Logger LOG = LoggerFactory.getLogger(JdbcLookupBolt.class);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"getThriftFieldId implements method in TFieldIdEnum; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/NullStruct.java","tnLine":85,"tnColumn":18,"tnPatch":null,"tnCodeLine":"    public short getThriftFieldId() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ThreadPriorityCheck","tnDesc":"Relying on the thread scheduler is discouraged; see Effective Java Item 72 (2nd edition) / 84 (3rd edition).","tnFile":"examples/storm-mongodb-examples/src/main/java/org/apache/storm/mongodb/topology/WordSpout.java","tnLine":63,"tnColumn":21,"tnPatch":null,"tnCodeLine":"        Thread.yield();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ClassNewInstance","tnDesc":"Class.newInstance() bypasses exception checking; prefer getDeclaredConstructor().newInstance()","tnFile":"external/storm-hbase/src/main/java/org/apache/storm/hbase/state/HBaseKeyValueStateProvider.java","tnLine":134,"tnColumn":56,"tnPatch":null,"tnCodeLine":"            serializer = (Serializer) klass.newInstance();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"external/storm-eventhubs/src/main/java/org/apache/storm/eventhubs/spout/ZookeeperStateStore.java","tnLine":63,"tnColumn":37,"tnPatch":null,"tnCodeLine":"        byte[] bytes = data.getBytes();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"It is very rare for LinkedList to out-perform ArrayList or ArrayDeque. Avoid it unless you're willing to invest a lot of time into benchmarking. Caveat: LinkedList supports null elements, but ArrayDeque does not.","tnFile":"storm-server/src/main/java/org/apache/storm/scheduler/resource/strategies/scheduling/BaseResourceAwareStrategy.java","tnLine":515,"tnColumn":58,"tnPatch":null,"tnCodeLine":"            compToExecsToSchedule.put(component.getId(), new LinkedList<ExecutorDetails>());","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'LOG' is never read.","tnFile":"external/storm-hive/src/main/java/org/apache/storm/hive/bolt/mapper/JsonRecordHiveMapper.java","tnLine":34,"tnColumn":33,"tnPatch":null,"tnCodeLine":"    private static final Logger LOG = LoggerFactory.getLogger(JsonRecordHiveMapper.class);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/SimpleCharStream.java","tnLine":297,"tnColumn":30,"tnPatch":null,"tnCodeLine":"     this(encoding == null ? new java.io.InputStreamReader(dstream) : new java.io.InputStreamReader(dstream, encoding), startline, startcolumn, buffersize);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The parameter 'arg' is never read.","tnFile":"flux/flux-core/src/main/java/org/apache/storm/flux/FluxBuilder.java","tnLine":297,"tnColumn":79,"tnPatch":null,"tnCodeLine":"    private static Field findPublicField(Class clazz, String property, Object arg) throws NoSuchFieldException {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"getScheme implements method in SchemeFactory; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/StormTopology.java","tnLine":1228,"tnColumn":40,"tnPatch":null,"tnCodeLine":"    public StormTopologyStandardScheme getScheme() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java","tnLine":2186,"tnColumn":37,"tnPatch":null,"tnCodeLine":"        String host = hostPort.split(\":\")[0];","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'ackCount' is never read.","tnFile":"examples/storm-perf/src/main/java/org/apache/storm/perf/spout/ConstSpout.java","tnLine":38,"tnColumn":17,"tnPatch":null,"tnCodeLine":"    private int ackCount = 0;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"setConformance implements method in SqlAbstractParserImpl; expected @Override","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/StormParserImpl.java","tnLine":179,"tnColumn":17,"tnPatch":null,"tnCodeLine":"    public void setConformance(SqlConformance conformance)","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"It is very rare for LinkedList to out-perform ArrayList or ArrayDeque. Avoid it unless you're willing to invest a lot of time into benchmarking. Caveat: LinkedList supports null elements, but ArrayDeque does not.","tnFile":"storm-server/src/main/java/org/apache/storm/scheduler/SchedulerAssignmentImpl.java","tnLine":36,"tnColumn":89,"tnPatch":null,"tnCodeLine":"    private static Function<WorkerSlot, Collection<ExecutorDetails>> MAKE_LIST = (k) -> new LinkedList<>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'config' is never read.","tnFile":"flux/flux-core/src/main/java/org/apache/storm/flux/model/ExecutionContext.java","tnLine":37,"tnColumn":20,"tnPatch":null,"tnCodeLine":"    private Config config;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"examples/storm-hive-examples/src/main/java/org/apache/storm/hive/bolt/HiveTopologyPartitioned.java","tnLine":118,"tnColumn":51,"tnPatch":null,"tnCodeLine":"            String[] user = sentences[index].split(\",\");","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"StringBuffer performs synchronization that is usually unnecessary; prefer StringBuilder.","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/StormParserImplTokenManager.java","tnLine":15364,"tnColumn":21,"tnPatch":null,"tnCodeLine":"            image = new StringBuffer();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedMethod","tnDesc":"Private method 'oneProducer1Consumer' is never used.","tnFile":"examples/storm-perf/src/main/java/org/apache/storm/perf/JCQueuePerfTest.java","tnLine":73,"tnColumn":25,"tnPatch":null,"tnCodeLine":"    private static void oneProducer1Consumer(int prodBatchSz) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java","tnLine":2213,"tnColumn":37,"tnPatch":null,"tnCodeLine":"        String host = hostPort.split(\":\")[0];","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DoubleBraceInitialization","tnDesc":"Prefer collection factory methods or builders to the double-brace initialization pattern.","tnFile":"examples/storm-starter/src/jvm/org/apache/storm/starter/trident/TridentReach.java","tnLine":47,"tnColumn":60,"tnPatch":null,"tnCodeLine":"    public static Map<String, List<String>> FOLLOWERS_DB = new HashMap<String, List<String>>() {{","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ArrayToString","tnDesc":"Calling toString on an array does not provide useful information","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/ui/exceptionmappers/ExceptionMapperUtils.java","tnLine":43,"tnColumn":74,"tnPatch":null,"tnCodeLine":"            callback = String.valueOf(request.get().getParameterMap().get(StormApiResource.callbackParameterName));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"examples/storm-redis-examples/src/main/java/org/apache/storm/redis/trident/WordCountTridentRedisCluster.java","tnLine":52,"tnColumn":51,"tnPatch":null,"tnCodeLine":"        for (String hostPort : redisHostPort.split(\",\")) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"It is very rare for LinkedList to out-perform ArrayList or ArrayDeque. Avoid it unless you're willing to invest a lot of time into benchmarking. Caveat: LinkedList supports null elements, but ArrayDeque does not.","tnFile":"storm-server/src/main/java/org/apache/storm/scheduler/multitenant/DefaultPool.java","tnLine":57,"tnColumn":40,"tnPatch":null,"tnCodeLine":"        LinkedList<Node> sortedNodes = new LinkedList<>(_nodes);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"getFieldName implements method in TFieldIdEnum; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/GlobalStreamId.java","tnLine":98,"tnColumn":29,"tnPatch":null,"tnCodeLine":"    public java.lang.String getFieldName() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ThreadPriorityCheck","tnDesc":"Relying on the thread scheduler is discouraged; see Effective Java Item 72 (2nd edition) / 84 (3rd edition).","tnFile":"examples/storm-jdbc-examples/src/main/java/org/apache/storm/jdbc/spout/UserSpout.java","tnLine":65,"tnColumn":21,"tnPatch":null,"tnCodeLine":"        Thread.yield();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"storm-submit-tools/src/main/java/org/apache/storm/submit/dependency/AetherUtils.java","tnLine":64,"tnColumn":47,"tnPatch":null,"tnCodeLine":"        String[] parts = exclusionString.split(\":\");","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The local variable 'state' is never read.","tnFile":"examples/storm-hdfs-examples/src/main/java/org/apache/storm/hdfs/trident/TridentSequenceTopology.java","tnLine":72,"tnColumn":22,"tnPatch":null,"tnCodeLine":"        TridentState state = stream","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/drpc/DRPCServer.java","tnLine":101,"tnColumn":53,"tnPatch":null,"tnCodeLine":"            final String httpsTsPassword = (String) (conf.get(DaemonConfig.DRPC_HTTPS_TRUSTSTORE_PASSWORD));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"external/storm-hdfs/src/main/java/org/apache/storm/hdfs/spout/SequenceFileReader.java","tnLine":131,"tnColumn":71,"tnPatch":null,"tnCodeLine":"                    this.lastSyncPoint = Long.parseLong(parts[0].split(\"=\")[1]);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The parameter 'conf' is never read.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":1622,"tnColumn":53,"tnPatch":null,"tnCodeLine":"    private void setupStormCode(Map<String, Object> conf, String topoId, String tmpJarLocation,","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"NonOverridingEquals","tnDesc":"equals method doesn't override Object.equals; if this is a type-specific helper for a method that does override Object.equals, either inline it into the callers or rename it to avoid ambiguity","tnFile":"storm-client/src/jvm/org/apache/storm/generated/Grouping.java","tnLine":729,"tnColumn":18,"tnPatch":null,"tnCodeLine":"  public boolean equals(Grouping other) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"external/storm-redis/src/main/java/org/apache/storm/redis/trident/state/AbstractRedisMapState.java","tnLine":75,"tnColumn":26,"tnPatch":null,"tnCodeLine":"            String val = new String(getSerializer().serialize(vals.get(i)));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-client/src/jvm/org/apache/storm/generated/StormTopology.java","tnLine":953,"tnColumn":35,"tnPatch":null,"tnCodeLine":"    hashCode = hashCode * 8191 + ((is_set_jdk_version()) ? 131071 : 524287);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"EqualsGetClass","tnDesc":"Overriding Object#equals in a non-final class by using getClass rather than instanceof breaks substitutability of subclasses.","tnFile":"external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/trident/KafkaTridentSpoutTopicPartition.java","tnLine":49,"tnColumn":20,"tnPatch":null,"tnCodeLine":"    public boolean equals(Object o) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-client/src/jvm/org/apache/storm/generated/SpoutSpec.java","tnLine":286,"tnColumn":35,"tnPatch":null,"tnCodeLine":"    hashCode = hashCode * 8191 + ((is_set_spout_object()) ? 131071 : 524287);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ClassNewInstance","tnDesc":"Class.newInstance() bypasses exception checking; prefer getDeclaredConstructor().newInstance()","tnFile":"external/storm-hbase/src/main/java/org/apache/storm/hbase/state/HBaseKeyValueStateProvider.java","tnLine":121,"tnColumn":56,"tnPatch":null,"tnCodeLine":"            serializer = (Serializer) klass.newInstance();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ThreadLocalUsage","tnDesc":"ThreadLocals should be stored in static fields","tnFile":"examples/storm-loadgen/src/main/java/org/apache/storm/loadgen/HttpForwardingMetricsServer.java","tnLine":49,"tnColumn":47,"tnPatch":null,"tnCodeLine":"    ThreadLocal<KryoValuesDeserializer> des = new ThreadLocal<KryoValuesDeserializer>() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"external/storm-hbase/src/main/java/org/apache/storm/hbase/bolt/mapper/HBaseProjectionCriteria.java","tnLine":79,"tnColumn":54,"tnPatch":null,"tnCodeLine":"            this.columnFamily = columnFamily.getBytes();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The local variable 'j' is never read.","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/StormParserImplTokenManager.java","tnLine":14116,"tnColumn":8,"tnPatch":null,"tnCodeLine":"   int j, kind = 0x7fffffff;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-server/src/main/java/org/apache/storm/stats/StatsUtil.java","tnLine":952,"tnColumn":23,"tnPatch":null,"tnCodeLine":"                (Map) (ClientStatsUtil.getMapByKey(newStats, PROC_LATENCIES)).get(win),","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"external/storm-hbase/src/main/java/org/apache/storm/hbase/state/HBaseKeyValueState.java","tnLine":352,"tnColumn":35,"tnPatch":null,"tnCodeLine":"            lastId = Long.valueOf(new String(txId));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'LOG' is never read.","tnFile":"storm-server/src/main/java/org/apache/storm/utils/StormCommonInstaller.java","tnLine":23,"tnColumn":33,"tnPatch":null,"tnCodeLine":"    private static final Logger LOG = LoggerFactory.getLogger(StormCommonInstaller.class);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'collector' is never read.","tnFile":"external/storm-mqtt/src/main/java/org/apache/storm/mqtt/trident/MqttPublishFunction.java","tnLine":37,"tnColumn":39,"tnPatch":null,"tnCodeLine":"    private transient OutputCollector collector;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"sql/storm-sql-runtime/src/jvm/org/apache/storm/sql/runtime/datasource/socket/spout/SocketSpout.java","tnLine":131,"tnColumn":64,"tnPatch":null,"tnCodeLine":"        return scheme.deserialize(ByteBuffer.wrap(line.getBytes()));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/logviewer/LogviewerServer.java","tnLine":80,"tnColumn":49,"tnPatch":null,"tnCodeLine":"            final String httpsKsType = (String) (conf.get(DaemonConfig.LOGVIEWER_HTTPS_KEYSTORE_TYPE));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"deepCopy implements method in TBase; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/JavaObject.java","tnLine":144,"tnColumn":21,"tnPatch":null,"tnCodeLine":"  public JavaObject deepCopy() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"storm-server/src/main/java/org/apache/storm/pacemaker/Pacemaker.java","tnLine":151,"tnColumn":71,"tnPatch":null,"tnCodeLine":"                String[] replaceStr = key.replaceFirst(path, \"\").split(\"/\");","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"external/storm-jms/src/main/java/org/apache/storm/jms/trident/TridentJmsSpout.java","tnLine":65,"tnColumn":35,"tnPatch":null,"tnCodeLine":"        this.name = \"JmsSpout_\" + (nameIndex++);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"CatchAndPrintStackTrace","tnDesc":"Logging or rethrowing exceptions should usually be preferred to catching and calling printStackTrace","tnFile":"storm-server/src/main/java/org/apache/storm/nimbus/NimbusHeartbeatsPressureTest.java","tnLine":228,"tnColumn":17,"tnPatch":null,"tnCodeLine":"                e.printStackTrace();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"OperatorPrecedence","tnDesc":"Use grouping parenthesis to make the operator precedence explicit","tnFile":"flux/flux-core/src/main/java/org/apache/storm/flux/FluxBuilder.java","tnLine":700,"tnColumn":21,"tnPatch":null,"tnCodeLine":"                    && Number.class.isAssignableFrom(objectType)) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"InconsistentCapitalization","tnDesc":"Found the field 'userName' with the same name as the parameter 'username' but with different capitalization.","tnFile":"external/storm-eventhubs/src/main/java/org/apache/storm/eventhubs/spout/EventHubSpoutConfig.java","tnLine":82,"tnColumn":39,"tnPatch":null,"tnCodeLine":"    public EventHubSpoutConfig(String username, String password,","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"examples/storm-loadgen/src/main/java/org/apache/storm/loadgen/ExecAndProcessLatencyEngine.java","tnLine":112,"tnColumn":27,"tnPatch":null,"tnCodeLine":"            timer.schedule(() -> {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The local variable 'memGcChildopts' is never read.","tnFile":"storm-server/src/main/java/org/apache/storm/scheduler/Cluster.java","tnLine":213,"tnColumn":16,"tnPatch":null,"tnCodeLine":"        Double memGcChildopts = null;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'LOG' is never read.","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java","tnLine":115,"tnColumn":33,"tnPatch":null,"tnCodeLine":"    private static final Logger LOG = LoggerFactory.getLogger(UIHelpers.class);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedMethod","tnDesc":"Private method 'generateRecord' is never used.","tnFile":"external/storm-hive/src/main/java/org/apache/storm/hive/common/HiveWriter.java","tnLine":431,"tnColumn":20,"tnPatch":null,"tnCodeLine":"    private byte[] generateRecord(Tuple tuple) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'LOG' is never read.","tnFile":"integration-test/src/main/java/org/apache/storm/st/topology/window/SlidingWindowCorrectness.java","tnLine":35,"tnColumn":33,"tnPatch":null,"tnCodeLine":"    private static final Logger LOG = LoggerFactory.getLogger(SlidingWindowCorrectness.class);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The local variable 'uptime' is never read.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":2717,"tnColumn":13,"tnPatch":null,"tnCodeLine":"        int uptime = this.uptime.upTime();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ClassNewInstance","tnDesc":"Class.newInstance() bypasses exception checking; prefer getDeclaredConstructor().newInstance()","tnFile":"external/storm-hdfs/src/main/java/org/apache/storm/hdfs/trident/HdfsState.java","tnLine":499,"tnColumn":77,"tnPatch":null,"tnCodeLine":"            Writable value = (Writable) this.format.valueClass().newInstance();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"getScheme implements method in SchemeFactory; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/GlobalStreamId.java","tnLine":395,"tnColumn":41,"tnPatch":null,"tnCodeLine":"    public GlobalStreamIdStandardScheme getScheme() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-server/src/main/java/org/apache/storm/metricstore/rocksdb/RocksDbStore.java","tnLine":134,"tnColumn":18,"tnPatch":null,"tnCodeLine":"            if (!(new File(storePath).exists())) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"read implements method in IScheme; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/StormTopology.java","tnLine":1235,"tnColumn":17,"tnPatch":null,"tnCodeLine":"    public void read(org.apache.storm.thrift.protocol.TProtocol iprot, StormTopology struct) throws org.apache.storm.thrift.TException {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'streamUniquifier' is never read.","tnFile":"examples/storm-loadgen/src/main/java/org/apache/storm/loadgen/TopologyLoadConf.java","tnLine":81,"tnColumn":33,"tnPatch":null,"tnCodeLine":"    private final AtomicInteger streamUniquifier = new AtomicInteger(0);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"external/storm-hbase/src/main/java/org/apache/storm/hbase/state/HBaseKeyValueState.java","tnLine":257,"tnColumn":69,"tnPatch":null,"tnCodeLine":"            txIds.put(COMMIT_TXID_KEY, String.valueOf(txid).getBytes());","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'LOG' is never read.","tnFile":"storm-core/src/jvm/org/apache/storm/command/ListTopologies.java","tnLine":23,"tnColumn":33,"tnPatch":null,"tnCodeLine":"    private static final Logger LOG = LoggerFactory.getLogger(ListTopologies.class);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ClassCanBeStatic","tnDesc":"Inner class is non-static but does not reference enclosing class","tnFile":"storm-server/src/main/java/org/apache/storm/scheduler/IsolationScheduler.java","tnLine":400,"tnColumn":5,"tnPatch":null,"tnCodeLine":"    class HostAssignableSlots {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The local variable 'list' is never read.","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/StormParserImpl.java","tnLine":2424,"tnColumn":10,"tnPatch":null,"tnCodeLine":"    List list;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedMethod","tnDesc":"Private method 'oneProducer1Consumer' is never used.","tnFile":"examples/storm-perf/src/main/java/org/apache/storm/perf/JCToolsPerfTest.java","tnLine":47,"tnColumn":25,"tnPatch":null,"tnCodeLine":"    private static void oneProducer1Consumer() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The local variable 'startPos' is never read.","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/StormParserImpl.java","tnLine":2429,"tnColumn":18,"tnPatch":null,"tnCodeLine":"    SqlParserPos startPos;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"external/storm-hbase/src/main/java/org/apache/storm/hbase/state/HBaseKeyValueState.java","tnLine":291,"tnColumn":85,"tnPatch":null,"tnCodeLine":"                txIds.put(PREPARE_TXID_KEY, String.valueOf(lastCommittedId).getBytes());","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"IntLongMath","tnDesc":"Expression of type int may overflow before being assigned to a long","tnFile":"storm-core/src/jvm/org/apache/storm/utils/Monitor.java","tnLine":90,"tnColumn":33,"tnPatch":null,"tnCodeLine":"        long pollMs = _interval * 1000;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"It is very rare for LinkedList to out-perform ArrayList or ArrayDeque. Avoid it unless you're willing to invest a lot of time into benchmarking. Caveat: LinkedList supports null elements, but ArrayDeque does not.","tnFile":"sql/storm-sql-core/src/jvm/org/apache/storm/sql/javac/CompilingClassLoader.java","tnLine":142,"tnColumn":32,"tnPatch":null,"tnCodeLine":"        List<String> options = new LinkedList<>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DoubleBraceInitialization","tnDesc":"Prefer collection factory methods or builders to the double-brace initialization pattern.","tnFile":"storm-clojure/src/main/java/org/apache/storm/clojure/ClojureSpout.java","tnLine":62,"tnColumn":33,"tnPatch":null,"tnCodeLine":"            List<Object> args = new ArrayList<Object>() {{","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"write implements method in TSerializable; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/NullStruct.java","tnLine":185,"tnColumn":15,"tnPatch":null,"tnCodeLine":"  public void write(org.apache.storm.thrift.protocol.TProtocol oprot) throws org.apache.storm.thrift.TException {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"integration-test/src/main/java/org/apache/storm/ExclamationTopology.java","tnLine":99,"tnColumn":43,"tnPatch":null,"tnCodeLine":"      collector.emit(new Values(WORDS.get((currentIndex++) % WORDS.size())));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"TypeParameterUnusedInFormals","tnDesc":"Declaring a type parameter that is only used in the return type is a misuse of generics: operations on the type parameter are unchecked, it hides unsafe casts at invocations of the method, and it interacts badly with method overload resolution.","tnFile":"external/storm-kafka-migration/src/main/java/org/apache/storm/kafka/migration/MapUtil.java","tnLine":26,"tnColumn":25,"tnPatch":null,"tnCodeLine":"    public static <T> T getOrError(Map<String, Object> conf, String key) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"examples/storm-perf/src/main/java/org/apache/storm/perf/spout/FileReadSpout.java","tnLine":60,"tnColumn":56,"tnPatch":null,"tnCodeLine":"            BufferedReader reader = new BufferedReader(new InputStreamReader(input));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"SynchronizeOnNonFinalField","tnDesc":"Synchronizing on non-final fields is not safe: if the field is ever updated, different threads may end up locking on different objects.","tnFile":"external/storm-kafka-client/src/main/java/org/apache/storm/kafka/bolt/KafkaBolt.java","tnLine":154,"tnColumn":26,"tnPatch":null,"tnCodeLine":"            synchronized (collector) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"EqualsGetClass","tnDesc":"Overriding Object#equals in a non-final class by using getClass rather than instanceof breaks substitutability of subclasses.","tnFile":"external/storm-mqtt/src/main/java/org/apache/storm/mqtt/spout/AckableMessage.java","tnLine":49,"tnColumn":20,"tnPatch":null,"tnCodeLine":"    public boolean equals(Object obj) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'LOG' is never read.","tnFile":"integration-test/src/main/java/org/apache/storm/st/topology/window/TumblingWindowCorrectness.java","tnLine":35,"tnColumn":33,"tnPatch":null,"tnCodeLine":"    private static final Logger LOG = LoggerFactory.getLogger(TumblingWindowCorrectness.class);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"write implements method in TSerializable; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/JavaObject.java","tnLine":358,"tnColumn":15,"tnPatch":null,"tnCodeLine":"  public void write(org.apache.storm.thrift.protocol.TProtocol oprot) throws org.apache.storm.thrift.TException {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"InconsistentCapitalization","tnDesc":"Found the field 'bootStrapBrokers' with the same name as the parameter 'bootstrapBrokers' but with different capitalization.","tnFile":"external/storm-kafka-monitor/src/main/java/org/apache/storm/kafka/monitor/NewKafkaSpoutOffsetQuery.java","tnLine":32,"tnColumn":59,"tnPatch":null,"tnCodeLine":"    public NewKafkaSpoutOffsetQuery(String topics, String bootstrapBrokers, String consumerGroupId, String securityProtocol,","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"isSet implements method in TBase; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/GlobalStreamId.java","tnLine":232,"tnColumn":18,"tnPatch":null,"tnCodeLine":"  public boolean isSet(_Fields field) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"EqualsGetClass","tnDesc":"Overriding Object#equals in a non-final class by using getClass rather than instanceof breaks substitutability of subclasses.","tnFile":"external/storm-kafka-monitor/src/main/java/org/apache/storm/kafka/monitor/NewKafkaSpoutOffsetQuery.java","tnLine":73,"tnColumn":20,"tnPatch":null,"tnCodeLine":"    public boolean equals(Object o) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'LOG' is never read.","tnFile":"storm-server/src/main/java/org/apache/storm/nimbus/StrictTopologyValidator.java","tnLine":25,"tnColumn":33,"tnPatch":null,"tnCodeLine":"    private static final Logger LOG = LoggerFactory.getLogger(StrictTopologyValidator.class);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JodaPlusMinusLong","tnDesc":"Use of JodaTime's type.plus(long) or type.minus(long) is not allowed (where <type> = {Duration,Instant,DateTime,DateMidnight}). Please use  type.plus(Duration.millis(long)) or type.minus(Duration.millis(long)) instead.","tnFile":"integration-test/src/main/java/org/apache/storm/st/utils/TimeUtil.java","tnLine":47,"tnColumn":30,"tnPatch":null,"tnCodeLine":"        return dateTime.minus(modValue);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'LOG' is never read.","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/logviewer/utils/ResourceAuthorizer.java","tnLine":48,"tnColumn":33,"tnPatch":null,"tnCodeLine":"    private static final Logger LOG = LoggerFactory.getLogger(ResourceAuthorizer.class);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"storm-core/src/jvm/org/apache/storm/command/UploadCredentials.java","tnLine":59,"tnColumn":34,"tnPatch":null,"tnCodeLine":"            credentialProps.load(new FileReader(credentialFile));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"deepCopy implements method in TBase; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/NullStruct.java","tnLine":109,"tnColumn":21,"tnPatch":null,"tnCodeLine":"  public NullStruct deepCopy() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'STRING_FIELD' is never read.","tnFile":"integration-test/src/main/java/org/apache/storm/st/topology/window/TumblingWindowCorrectness.java","tnLine":37,"tnColumn":33,"tnPatch":null,"tnCodeLine":"    private static final String STRING_FIELD = \"numAsStr\";","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"It is very rare for LinkedList to out-perform ArrayList or ArrayDeque. Avoid it unless you're willing to invest a lot of time into benchmarking. Caveat: LinkedList supports null elements, but ArrayDeque does not.","tnFile":"storm-server/src/main/java/org/apache/storm/container/cgroup/CgroupManager.java","tnLine":111,"tnColumn":46,"tnPatch":null,"tnCodeLine":"        List<SubSystemType> subSystemTypes = new LinkedList<>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The local variable 'tme' is never read.","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/StormParserImpl.java","tnLine":323,"tnColumn":23,"tnPatch":null,"tnCodeLine":"        TokenMgrError tme = (TokenMgrError) ex;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"sql/storm-sql-runtime/src/jvm/org/apache/storm/sql/runtime/datasource/socket/spout/SocketSpout.java","tnLine":89,"tnColumn":37,"tnPatch":null,"tnCodeLine":"            in = new BufferedReader(new InputStreamReader(socket.getInputStream()));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"It is very rare for LinkedList to out-perform ArrayList or ArrayDeque. Avoid it unless you're willing to invest a lot of time into benchmarking. Caveat: LinkedList supports null elements, but ArrayDeque does not.","tnFile":"external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/KafkaSpout.java","tnLine":354,"tnColumn":35,"tnPatch":null,"tnCodeLine":"            waitingToEmit.put(tp, new LinkedList<>(consumerRecords.records(tp)));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"examples/storm-hive-examples/src/main/java/org/apache/storm/hive/bolt/HiveTopology.java","tnLine":117,"tnColumn":51,"tnPatch":null,"tnCodeLine":"            String[] user = sentences[index].split(\",\");","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"getThriftFieldId implements method in TFieldIdEnum; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/StormTopology.java","tnLine":134,"tnColumn":18,"tnPatch":null,"tnCodeLine":"    public short getThriftFieldId() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"InconsistentCapitalization","tnDesc":"Found the field 'userName' with the same name as the parameter 'username' but with different capitalization.","tnFile":"external/storm-eventhubs/src/main/java/org/apache/storm/eventhubs/spout/EventHubSpoutConfig.java","tnLine":52,"tnColumn":39,"tnPatch":null,"tnCodeLine":"    public EventHubSpoutConfig(String username, String password,","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/SimpleCharStream.java","tnLine":331,"tnColumn":32,"tnPatch":null,"tnCodeLine":"     ReInit(encoding == null ? new java.io.InputStreamReader(dstream) : new java.io.InputStreamReader(dstream, encoding), startline, startcolumn, buffersize);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/supervisor/Slot.java","tnLine":924,"tnColumn":47,"tnPatch":null,"tnCodeLine":"                            rc.latch.countDown(); //Ignore the future","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIServer.java","tnLine":92,"tnColumn":45,"tnPatch":null,"tnCodeLine":"        final String httpsTsPath = (String) (conf.get(DaemonConfig.UI_HTTPS_TRUSTSTORE_PATH));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"BoxedPrimitiveConstructor","tnDesc":"valueOf or autoboxing provides better time and space performance","tnFile":"storm-server/src/main/java/org/apache/storm/Testing.java","tnLine":588,"tnColumn":21,"tnPatch":null,"tnCodeLine":"                i = new Integer(0);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"external/storm-hbase/src/main/java/org/apache/storm/hbase/state/HBaseKeyValueState.java","tnLine":57,"tnColumn":62,"tnPatch":null,"tnCodeLine":"    private static byte[] COMMIT_TXID_KEY = \"commit\".getBytes();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'instanceId' is never read.","tnFile":"external/storm-eventhubs/src/main/java/org/apache/storm/eventhubs/spout/EventHubSpout.java","tnLine":39,"tnColumn":24,"tnPatch":null,"tnCodeLine":"    private final UUID instanceId;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-server/src/main/java/org/apache/storm/localizer/LocalizedResource.java","tnLine":118,"tnColumn":43,"tnPatch":null,"tnCodeLine":"        if (Files.exists(versionFile) && !(Files.isDirectory(versionFile))) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"examples/storm-loadgen/src/main/java/org/apache/storm/loadgen/TopologyLoadConf.java","tnLine":407,"tnColumn":39,"tnPatch":null,"tnCodeLine":"            for (String part: sv.split(\"\\\\s+\")) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"NarrowingCompoundAssignment","tnDesc":"Compound assignments from double to long hide lossy casts","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/supervisor/Container.java","tnLine":633,"tnColumn":17,"tnPatch":null,"tnCodeLine":"            ret += withUpdatedLimits.get_total_node_shared();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"write implements method in IScheme; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/NullStruct.java","tnLine":246,"tnColumn":17,"tnPatch":null,"tnCodeLine":"    public void write(org.apache.storm.thrift.protocol.TProtocol oprot, NullStruct struct) throws org.apache.storm.thrift.TException {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"external/storm-hbase/src/main/java/org/apache/storm/hbase/state/HBaseKeyValueState.java","tnLine":102,"tnColumn":66,"tnPatch":null,"tnCodeLine":"        this.prepareNamespace = (namespace + \"$prepare\").getBytes();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"StringBuffer performs synchronization that is usually unnecessary; prefer StringBuilder.","tnFile":"external/storm-hdfs/src/main/java/org/apache/storm/hdfs/spout/TextFileReader.java","tnLine":77,"tnColumn":27,"tnPatch":null,"tnCodeLine":"        StringBuffer sb = new StringBuffer(1000);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JavaLangClash","tnDesc":"org.apache.storm.opentsdb.client.ClientResponse.Details.Error clashes with java.lang.Error","tnFile":"external/storm-opentsdb/src/main/java/org/apache/storm/opentsdb/client/ClientResponse.java","tnLine":130,"tnColumn":23,"tnPatch":null,"tnCodeLine":"        public static class Error implements Serializable {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"external/storm-hdfs/src/main/java/org/apache/storm/hdfs/avro/FixedAvroSerializer.java","tnLine":45,"tnColumn":34,"tnPatch":null,"tnCodeLine":"            String fingerPrint = new String(Base64.decodeBase64(fp));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIServer.java","tnLine":88,"tnColumn":45,"tnPatch":null,"tnCodeLine":"        final String httpsKsPath = (String) (conf.get(DaemonConfig.UI_HTTPS_KEYSTORE_PATH));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedMethod","tnDesc":"Private method 'twoProducer1Consumer' is never used.","tnFile":"examples/storm-perf/src/main/java/org/apache/storm/perf/JCQueuePerfTest.java","tnLine":83,"tnColumn":25,"tnPatch":null,"tnCodeLine":"    private static void twoProducer1Consumer(int prodBatchSz) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-client/src/jvm/org/apache/storm/generated/StormTopology.java","tnLine":929,"tnColumn":35,"tnPatch":null,"tnCodeLine":"    hashCode = hashCode * 8191 + ((is_set_bolts()) ? 131071 : 524287);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"deepCopy implements method in TBase; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/SpoutSpec.java","tnLine":139,"tnColumn":20,"tnPatch":null,"tnCodeLine":"  public SpoutSpec deepCopy() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/logviewer/LogviewerServer.java","tnLine":78,"tnColumn":49,"tnPatch":null,"tnCodeLine":"            final String httpsKsPath = (String) (conf.get(DaemonConfig.LOGVIEWER_HTTPS_KEYSTORE_PATH));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The local variable 'slowDriversStream' is never read.","tnFile":"examples/storm-starter/src/jvm/org/apache/storm/starter/trident/TridentMinMaxOfVehiclesTopology.java","tnLine":61,"tnColumn":16,"tnPatch":null,"tnCodeLine":"        Stream slowDriversStream =","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/logviewer/LogviewerServer.java","tnLine":85,"tnColumn":59,"tnPatch":null,"tnCodeLine":"            final Boolean httpsWantClientAuth = (Boolean) (conf.get(DaemonConfig.LOGVIEWER_HTTPS_WANT_CLIENT_AUTH));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"external/storm-hbase/src/main/java/org/apache/storm/hbase/state/HBaseKeyValueState.java","tnLine":56,"tnColumn":56,"tnPatch":null,"tnCodeLine":"    public static byte[] STATE_QUALIFIER = \"s\".getBytes();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'LOG' is never read.","tnFile":"external/storm-hdfs/src/main/java/org/apache/storm/hdfs/trident/rotation/FileSizeRotationPolicy.java","tnLine":33,"tnColumn":33,"tnPatch":null,"tnCodeLine":"    private static final Logger LOG = LoggerFactory.getLogger(FileSizeRotationPolicy.class);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"storm-core/src/jvm/org/apache/storm/command/Blobstore.java","tnLine":331,"tnColumn":43,"tnPatch":null,"tnCodeLine":"            for (String part : value.split(\",\")) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The local variable 'interval' is never read.","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/StormParserImpl.java","tnLine":5088,"tnColumn":14,"tnPatch":null,"tnCodeLine":"    TimeUnit interval;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"getFieldValue implements method in TBase; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/NullStruct.java","tnLine":123,"tnColumn":27,"tnPatch":null,"tnCodeLine":"  public java.lang.Object getFieldValue(_Fields field) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MixedMutabilityReturnType","tnDesc":"This method returns both mutable and immutable collections or maps from different paths. This may be confusing for users of the method.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":2621,"tnColumn":26,"tnPatch":null,"tnCodeLine":"    private List<String> readTopologyHistory(String user, Collection<String> adminUsers) throws IOException {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"StringBuffer performs synchronization that is usually unnecessary; prefer StringBuilder.","tnFile":"examples/storm-starter/src/jvm/org/apache/storm/starter/tools/RankableObjectWithFields.java","tnLine":118,"tnColumn":28,"tnPatch":null,"tnCodeLine":"        StringBuffer buf = new StringBuffer();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"NonOverridingEquals","tnDesc":"equals method doesn't override Object.equals; if this is a type-specific helper for a method that does override Object.equals, either inline it into the callers or rename it to avoid ambiguity","tnFile":"storm-client/src/jvm/org/apache/storm/generated/JavaObject.java","tnLine":276,"tnColumn":18,"tnPatch":null,"tnCodeLine":"  public boolean equals(JavaObject that) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"examples/storm-mqtt-examples/src/main/java/org/apache/storm/mqtt/examples/CustomMessageMapper.java","tnLine":52,"tnColumn":36,"tnPatch":null,"tnCodeLine":"        String[] payloadElements = new String(message.getMessage()).split(\"/\");","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ClassNewInstance","tnDesc":"Class.newInstance() bypasses exception checking; prefer getDeclaredConstructor().newInstance()","tnFile":"storm-server/src/main/java/org/apache/storm/scheduler/blacklist/strategies/DefaultBlacklistStrategy.java","tnLine":169,"tnColumn":56,"tnPatch":null,"tnCodeLine":"            return Class.forName(className).newInstance();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"external/storm-hbase/src/main/java/org/apache/storm/hbase/state/HBaseKeyValueStateIterator.java","tnLine":63,"tnColumn":59,"tnPatch":null,"tnCodeLine":"        this.keyNamespace = (namespace + \"$key:\").getBytes();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"It is very rare for LinkedList to out-perform ArrayList or ArrayDeque. Avoid it unless you're willing to invest a lot of time into benchmarking. Caveat: LinkedList supports null elements, but ArrayDeque does not.","tnFile":"storm-server/src/main/java/org/apache/storm/scheduler/resource/RAS_Nodes.java","tnLine":74,"tnColumn":44,"tnPatch":null,"tnCodeLine":"                        .put(slot.getId(), new LinkedList<ExecutorDetails>());","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"external/storm-hbase/src/main/java/org/apache/storm/hbase/bolt/mapper/SimpleHBaseMapper.java","tnLine":56,"tnColumn":50,"tnPatch":null,"tnCodeLine":"        this.columnFamily = columnFamily.getBytes();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-client/src/jvm/org/apache/storm/generated/StormTopology.java","tnLine":949,"tnColumn":35,"tnPatch":null,"tnCodeLine":"    hashCode = hashCode * 8191 + ((is_set_storm_version()) ? 131071 : 524287);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The local variable 'shardIterator' is never read.","tnFile":"external/storm-kinesis/src/main/java/org/apache/storm/kinesis/spout/KinesisRecordsManager.java","tnLine":396,"tnColumn":16,"tnPatch":null,"tnCodeLine":"        String shardIterator = null;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"external/storm-hive/src/main/java/org/apache/storm/hive/bolt/mapper/JsonRecordHiveMapper.java","tnLine":118,"tnColumn":43,"tnPatch":null,"tnCodeLine":"        return obj.toJSONString().getBytes();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"It is very rare for LinkedList to out-perform ArrayList or ArrayDeque. Avoid it unless you're willing to invest a lot of time into benchmarking. Caveat: LinkedList supports null elements, but ArrayDeque does not.","tnFile":"storm-server/src/main/java/org/apache/storm/scheduler/resource/strategies/scheduling/BaseResourceAwareStrategy.java","tnLine":511,"tnColumn":48,"tnPatch":null,"tnCodeLine":"        List<ExecutorDetails> execsScheduled = new LinkedList<>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"BoxedPrimitiveConstructor","tnDesc":"valueOf or autoboxing provides better time and space performance","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/supervisor/Slot.java","tnLine":895,"tnColumn":26,"tnPatch":null,"tnCodeLine":"            Long lport = new Long(staticState.port);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"examples/storm-hive-examples/src/main/java/org/apache/storm/hive/bolt/BucketTestHiveTopology.java","tnLine":133,"tnColumn":46,"tnPatch":null,"tnCodeLine":"                this.br = new BufferedReader(new FileReader(new File(this","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'LOG' is never read.","tnFile":"storm-core/src/jvm/org/apache/storm/command/CLI.java","tnLine":68,"tnColumn":33,"tnPatch":null,"tnCodeLine":"    private static final Logger LOG = LoggerFactory.getLogger(CLI.class);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ThreadPriorityCheck","tnDesc":"Relying on the thread scheduler is discouraged; see Effective Java Item 72 (2nd edition) / 84 (3rd edition).","tnFile":"examples/storm-hdfs-examples/src/main/java/org/apache/storm/hdfs/bolt/SequenceFileTopology.java","tnLine":155,"tnColumn":25,"tnPatch":null,"tnCodeLine":"            Thread.yield();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/logviewer/LogviewerServer.java","tnLine":82,"tnColumn":49,"tnPatch":null,"tnCodeLine":"            final String httpsTsPath = (String) (conf.get(DaemonConfig.LOGVIEWER_HTTPS_TRUSTSTORE_PATH));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/logviewer/LogviewerServer.java","tnLine":67,"tnColumn":43,"tnPatch":null,"tnCodeLine":"            String filterClass = (String) (conf.get(DaemonConfig.LOGVIEWER_FILTER));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"write implements method in TSerializable; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/GlobalStreamId.java","tnLine":337,"tnColumn":15,"tnPatch":null,"tnCodeLine":"  public void write(org.apache.storm.thrift.protocol.TProtocol oprot) throws org.apache.storm.thrift.TException {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"setQuotedCasing implements method in SqlAbstractParserImpl; expected @Override","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/StormParserImpl.java","tnLine":164,"tnColumn":17,"tnPatch":null,"tnCodeLine":"    public void setQuotedCasing(Casing quotedCasing)","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"external/storm-hdfs/src/main/java/org/apache/storm/hdfs/bolt/format/DelimitedRecordFormat.java","tnLine":81,"tnColumn":38,"tnPatch":null,"tnCodeLine":"        return sb.toString().getBytes();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/drpc/DRPCServer.java","tnLine":98,"tnColumn":49,"tnPatch":null,"tnCodeLine":"            final String httpsKsType = (String) (conf.get(DaemonConfig.DRPC_HTTPS_KEYSTORE_TYPE));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'LOG' is never read.","tnFile":"examples/storm-perf/src/main/java/org/apache/storm/perf/bolt/DevNullBolt.java","tnLine":33,"tnColumn":43,"tnPatch":null,"tnCodeLine":"    private static final org.slf4j.Logger LOG = LoggerFactory.getLogger(DevNullBolt.class);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"external/storm-hive/src/main/java/org/apache/storm/hive/common/HiveUtils.java","tnLine":98,"tnColumn":16,"tnPatch":null,"tnCodeLine":"               (((List) conf.get(TOPOLOGY_AUTO_CREDENTIALS)).contains(AutoHive.class.getName()));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"examples/storm-perf/src/main/java/org/apache/storm/perf/spout/WordGenSpout.java","tnLine":66,"tnColumn":50,"tnPatch":null,"tnCodeLine":"                    for (String word : line.split(\"\\\\s+\"))","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"getMetadata implements method in SqlAbstractParserImpl; expected @Override","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/StormParserImpl.java","tnLine":141,"tnColumn":21,"tnPatch":null,"tnCodeLine":"    public Metadata getMetadata()","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"setFieldValue implements method in TBase; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/SpoutSpec.java","tnLine":197,"tnColumn":15,"tnPatch":null,"tnCodeLine":"  public void setFieldValue(_Fields field, @org.apache.storm.thrift.annotation.Nullable java.lang.Object value) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ClassCanBeStatic","tnDesc":"Inner class is non-static but does not reference enclosing class","tnFile":"external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/metrics/KafkaOffsetMetric.java","tnLine":133,"tnColumn":13,"tnPatch":null,"tnCodeLine":"    private class TopicMetrics {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"It is very rare for LinkedList to out-perform ArrayList or ArrayDeque. Avoid it unless you're willing to invest a lot of time into benchmarking. Caveat: LinkedList supports null elements, but ArrayDeque does not.","tnFile":"storm-server/src/main/java/org/apache/storm/blobstore/FileBlobStoreImpl.java","tnLine":172,"tnColumn":16,"tnPatch":null,"tnCodeLine":"        return new LinkedList<String>().iterator();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"It is very rare for LinkedList to out-perform ArrayList or ArrayDeque. Avoid it unless you're willing to invest a lot of time into benchmarking. Caveat: LinkedList supports null elements, but ArrayDeque does not.","tnFile":"storm-server/src/main/java/org/apache/storm/scheduler/multitenant/DefaultPool.java","tnLine":90,"tnColumn":40,"tnPatch":null,"tnCodeLine":"        LinkedList<Node> sortedNodes = new LinkedList<>(_nodes);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ModifiedButNotUsed","tnDesc":"A collection or proto builder was created, but its values were never accessed.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":4314,"tnColumn":59,"tnPatch":null,"tnCodeLine":"            Map<List<Long>, List<Object>> exec2NodePort = new HashMap<>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/logviewer/LogviewerServer.java","tnLine":83,"tnColumn":53,"tnPatch":null,"tnCodeLine":"            final String httpsTsPassword = (String) (conf.get(DaemonConfig.LOGVIEWER_HTTPS_TRUSTSTORE_PASSWORD));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"examples/storm-pmml-examples/src/main/java/org/apache/storm/pmml/RawInputFromCSVSpout.java","tnLine":70,"tnColumn":35,"tnPatch":null,"tnCodeLine":"        return new BufferedReader(new InputStreamReader(new FileInputStream(csv)));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"TypeParameterUnusedInFormals","tnDesc":"Declaring a type parameter that is only used in the return type is a misuse of generics: operations on the type parameter are unchecked, it hides unsafe casts at invocations of the method, and it interacts badly with method overload resolution.","tnFile":"storm-client/src/jvm/org/apache/storm/generated/NullStruct.java","tnLine":275,"tnColumn":71,"tnPatch":null,"tnCodeLine":"  private static <S extends org.apache.storm.thrift.scheme.IScheme> S scheme(org.apache.storm.thrift.protocol.TProtocol proto) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/logviewer/LogviewerServer.java","tnLine":79,"tnColumn":53,"tnPatch":null,"tnCodeLine":"            final String httpsKsPassword = (String) (conf.get(DaemonConfig.LOGVIEWER_HTTPS_KEYSTORE_PASSWORD));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The local variable 'clusterState' is never read.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":1625,"tnColumn":28,"tnPatch":null,"tnCodeLine":"        IStormClusterState clusterState = stormClusterState;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"setUnquotedCasing implements method in SqlAbstractParserImpl; expected @Override","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/StormParserImpl.java","tnLine":169,"tnColumn":17,"tnPatch":null,"tnCodeLine":"    public void setUnquotedCasing(Casing unquotedCasing)","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingCasesInEnumSwitch","tnDesc":"Non-exhaustive switch; either add a default or handle the remaining cases: ACCEPT_ALL, ACCEPT_NONCURSOR, ACCEPT_QUERY, ACCEPT_NON_QUERY","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/StormParserImpl.java","tnLine":629,"tnColumn":9,"tnPatch":null,"tnCodeLine":"        switch (exprContext) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'LOG' is never read.","tnFile":"integration-test/src/main/java/org/apache/storm/st/topology/window/SlidingTimeCorrectness.java","tnLine":37,"tnColumn":33,"tnPatch":null,"tnCodeLine":"    private static final Logger LOG = LoggerFactory.getLogger(SlidingTimeCorrectness.class);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The parameter 'path' is never read.","tnFile":"storm-server/src/main/java/org/apache/storm/pacemaker/Pacemaker.java","tnLine":138,"tnColumn":49,"tnPatch":null,"tnCodeLine":"    private HBMessage getAllPulseForPath(String path, boolean authenticated) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"deepCopy implements method in TBase; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/GlobalStreamId.java","tnLine":139,"tnColumn":25,"tnPatch":null,"tnCodeLine":"  public GlobalStreamId deepCopy() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The local variable 'kind' is never read.","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/StormParserImplTokenManager.java","tnLine":15216,"tnColumn":7,"tnPatch":null,"tnCodeLine":"  int kind;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/drpc/DRPCServer.java","tnLine":102,"tnColumn":49,"tnPatch":null,"tnCodeLine":"            final String httpsTsType = (String) (conf.get(DaemonConfig.DRPC_HTTPS_TRUSTSTORE_TYPE));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StreamResourceLeak","tnDesc":"Streams that encapsulate a closeable resource should be closed using try-with-resources","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/logviewer/utils/LogCleaner.java","tnLine":119,"tnColumn":30,"tnPatch":null,"tnCodeLine":"            return Files.walk(dir)","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"It is very rare for LinkedList to out-perform ArrayList or ArrayDeque. Avoid it unless you're willing to invest a lot of time into benchmarking. Caveat: LinkedList supports null elements, but ArrayDeque does not.","tnFile":"external/storm-solr/src/main/java/org/apache/storm/solr/schema/builder/RestJsonSchemaBuilderV2.java","tnLine":77,"tnColumn":38,"tnPatch":null,"tnCodeLine":"        List<FieldType> fieldTypes = new LinkedList<>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedMethod","tnDesc":"Private method 'setDefaultCollection' is never used.","tnFile":"external/storm-solr/src/main/java/org/apache/storm/solr/mapper/SolrFieldsMapper.java","tnLine":159,"tnColumn":22,"tnPatch":null,"tnCodeLine":"        private void setDefaultCollection(SolrClient solrClient) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"external/storm-redis/src/main/java/org/apache/storm/redis/bolt/RedisStoreBolt.java","tnLine":99,"tnColumn":49,"tnPatch":null,"tnCodeLine":"                    String[] array = value.split(\":\");","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"external/storm-hdfs/src/main/java/org/apache/storm/hdfs/spout/SequenceFileReader.java","tnLine":133,"tnColumn":71,"tnPatch":null,"tnCodeLine":"                    this.currentRecord = Long.parseLong(parts[2].split(\"=\")[1]);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"getThriftFieldId implements method in TFieldIdEnum; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/JavaObject.java","tnLine":94,"tnColumn":18,"tnPatch":null,"tnCodeLine":"    public short getThriftFieldId() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"run implements method in ConfigurableTopology; expected @Override","tnFile":"examples/storm-starter/src/jvm/org/apache/storm/starter/AnchoredWordCount.java","tnLine":35,"tnColumn":19,"tnPatch":null,"tnCodeLine":"    protected int run(String[] args) throws Exception {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'LOG' is never read.","tnFile":"flux/flux-examples/src/main/java/org/apache/storm/flux/examples/WordCounter.java","tnLine":42,"tnColumn":33,"tnPatch":null,"tnCodeLine":"    private static final Logger LOG = LoggerFactory.getLogger(WordCounter.class);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"getParser implements method in SqlParserImplFactory; expected @Override","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/StormParserImpl.java","tnLine":124,"tnColumn":38,"tnPatch":null,"tnCodeLine":"        public SqlAbstractParserImpl getParser(Reader stream) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The local variable 'nextStates' is never read.","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/StormParserImplTokenManager.java","tnLine":4227,"tnColumn":10,"tnPatch":null,"tnCodeLine":"   int[] nextStates;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"external/storm-hbase/src/main/java/org/apache/storm/hbase/bolt/HBaseLookupBolt.java","tnLine":79,"tnColumn":75,"tnPatch":null,"tnCodeLine":"                                        LOG.debug(\"Cache miss for key:\" + new String(rowKey));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'context' is never read.","tnFile":"examples/storm-opentsdb-examples/src/main/java/org/apache/storm/opentsdb/MetricGenSpout.java","tnLine":45,"tnColumn":29,"tnPatch":null,"tnCodeLine":"    private TopologyContext context;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/drpc/DRPCServer.java","tnLine":216,"tnColumn":35,"tnPatch":null,"tnCodeLine":"        return ((ServerConnector) (httpServer.getConnectors()[0])).getLocalPort();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"setFieldValue implements method in TBase; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/JavaObject.java","tnLine":218,"tnColumn":15,"tnPatch":null,"tnCodeLine":"  public void setFieldValue(_Fields field, @org.apache.storm.thrift.annotation.Nullable java.lang.Object value) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The parameter 'topology' is never read.","tnFile":"storm-server/src/main/java/org/apache/storm/stats/StatsUtil.java","tnLine":1996,"tnColumn":42,"tnPatch":null,"tnCodeLine":"        String topologyId, StormTopology topology, String compId, Map<String, Object> data) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIServer.java","tnLine":94,"tnColumn":45,"tnPatch":null,"tnCodeLine":"        final String httpsTsType = (String) (conf.get(DaemonConfig.UI_HTTPS_TRUSTSTORE_TYPE));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIServer.java","tnLine":90,"tnColumn":45,"tnPatch":null,"tnCodeLine":"        final String httpsKsType = (String) (conf.get(DaemonConfig.UI_HTTPS_KEYSTORE_TYPE));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"NonOverridingEquals","tnDesc":"equals method doesn't override Object.equals; if this is a type-specific helper for a method that does override Object.equals, either inline it into the callers or rename it to avoid ambiguity","tnFile":"storm-client/src/jvm/org/apache/storm/generated/StormTopology.java","tnLine":822,"tnColumn":18,"tnPatch":null,"tnCodeLine":"  public boolean equals(StormTopology that) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"StringBuffer performs synchronization that is usually unnecessary; prefer StringBuilder.","tnFile":"examples/storm-loadgen/src/main/java/org/apache/storm/loadgen/TopologyLoadConf.java","tnLine":406,"tnColumn":32,"tnPatch":null,"tnCodeLine":"            StringBuffer ret = new StringBuffer();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ImmutableEnumChecker","tnDesc":"enums should be immutable: 'StormBuiltInMethod' has field 'field' of type 'java.lang.reflect.Field', the declaration of type 'java.lang.reflect.Field' is not annotated with @com.google.errorprone.annotations.Immutable","tnFile":"sql/storm-sql-core/src/jvm/org/apache/storm/sql/compiler/RexNodeToJavaCodeCompiler.java","tnLine":202,"tnColumn":28,"tnPatch":null,"tnCodeLine":"        public final Field field;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"external/storm-hive/src/main/java/org/apache/storm/hive/common/HiveWriter.java","tnLine":437,"tnColumn":39,"tnPatch":null,"tnCodeLine":"        return buf.toString().getBytes();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DoubleBraceInitialization","tnDesc":"Prefer collection factory methods or builders to the double-brace initialization pattern.","tnFile":"storm-clojure/src/main/java/org/apache/storm/clojure/ClojureBolt.java","tnLine":63,"tnColumn":33,"tnPatch":null,"tnCodeLine":"            List<Object> args = new ArrayList<Object>() {{","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The local variable 'node' is never read.","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/StormParserImpl.java","tnLine":5350,"tnColumn":13,"tnPatch":null,"tnCodeLine":"    SqlNode node;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The local variable 'topoName' is never read.","tnFile":"examples/storm-hive-examples/src/main/java/org/apache/storm/hive/bolt/BucketTestHiveTopology.java","tnLine":94,"tnColumn":16,"tnPatch":null,"tnCodeLine":"        String topoName = TOPOLOGY_NAME;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"read implements method in TSerializable; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/StormTopology.java","tnLine":1084,"tnColumn":15,"tnPatch":null,"tnCodeLine":"  public void read(org.apache.storm.thrift.protocol.TProtocol iprot) throws org.apache.storm.thrift.TException {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"BadComparable","tnDesc":"Possible sign flip from narrowing conversion","tnFile":"external/storm-jms/src/main/java/org/apache/storm/jms/spout/JmsMessageID.java","tnLine":35,"tnColumn":16,"tnPatch":null,"tnCodeLine":"        return (int) (this.sequence - jmsMessageID.sequence);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The local variable 'state' is never read.","tnFile":"examples/storm-elasticsearch-examples/src/main/java/org/apache/storm/elasticsearch/trident/TridentEsTopology.java","tnLine":73,"tnColumn":22,"tnPatch":null,"tnCodeLine":"        TridentState state = stream.partitionPersist(factory,","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"external/storm-hbase/src/main/java/org/apache/storm/hbase/trident/state/HBaseMapState.java","tnLine":153,"tnColumn":83,"tnPatch":null,"tnCodeLine":"            get.addColumn(this.options.columnFamily.getBytes(), qualifier.getBytes());","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/logviewer/LogviewerServer.java","tnLine":87,"tnColumn":58,"tnPatch":null,"tnCodeLine":"            final Boolean disableHttpBinding = (Boolean) (conf.get(DaemonConfig.LOGVIEWER_DISABLE_HTTP_BINDING));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'timeToSendHeartBeat' is never read.","tnFile":"external/storm-hive/src/main/java/org/apache/storm/hive/trident/HiveState.java","tnLine":48,"tnColumn":27,"tnPatch":null,"tnCodeLine":"    private AtomicBoolean timeToSendHeartBeat = new AtomicBoolean(false);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'LOG' is never read.","tnFile":"external/storm-hdfs-blobstore/src/main/java/org/apache/storm/hdfs/blobstore/HdfsClientBlobStore.java","tnLine":45,"tnColumn":33,"tnPatch":null,"tnCodeLine":"    private static final Logger LOG = LoggerFactory.getLogger(HdfsClientBlobStore.class);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ClassCanBeStatic","tnDesc":"Inner class is non-static but does not reference enclosing class","tnFile":"examples/storm-perf/src/main/java/org/apache/storm/perf/JCQueuePerfTest.java","tnLine":248,"tnColumn":13,"tnPatch":null,"tnCodeLine":"    private class Handler implements JCQueue.Consumer {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"getFieldName implements method in TFieldIdEnum; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/StormTopology.java","tnLine":138,"tnColumn":29,"tnPatch":null,"tnCodeLine":"    public java.lang.String getFieldName() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"BoxedPrimitiveConstructor","tnDesc":"valueOf or autoboxing provides better time and space performance","tnFile":"external/storm-hdfs/src/main/java/org/apache/storm/hdfs/common/ModifTimeComparator.java","tnLine":23,"tnColumn":16,"tnPatch":null,"tnCodeLine":"        return new Long(o1.getModificationTime()).compareTo(o2.getModificationTime());","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The local variable 'topoName' is never read.","tnFile":"examples/storm-hive-examples/src/main/java/org/apache/storm/hive/trident/TridentHiveTopology.java","tnLine":95,"tnColumn":16,"tnPatch":null,"tnCodeLine":"        String topoName = \"tridentHiveTopology\";","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'ehReceiveTimeoutMs' is never read.","tnFile":"external/storm-eventhubs/src/main/java/org/apache/storm/eventhubs/spout/PartitionManager.java","tnLine":29,"tnColumn":23,"tnPatch":null,"tnCodeLine":"    private final int ehReceiveTimeoutMs = 5000;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"TypeParameterUnusedInFormals","tnDesc":"Declaring a type parameter that is only used in the return type is a misuse of generics: operations on the type parameter are unchecked, it hides unsafe casts at invocations of the method, and it interacts badly with method overload resolution.","tnFile":"storm-client/src/jvm/org/apache/storm/generated/GlobalStreamId.java","tnLine":482,"tnColumn":71,"tnPatch":null,"tnCodeLine":"  private static <S extends org.apache.storm.thrift.scheme.IScheme> S scheme(org.apache.storm.thrift.protocol.TProtocol proto) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"getFieldValue implements method in TBase; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/GlobalStreamId.java","tnLine":219,"tnColumn":27,"tnPatch":null,"tnCodeLine":"  public java.lang.Object getFieldValue(_Fields field) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"external/storm-mqtt/src/main/java/org/apache/storm/mqtt/mappers/StringMessageMapper.java","tnLine":27,"tnColumn":47,"tnPatch":null,"tnCodeLine":"        return new Values(message.getTopic(), new String(message.getMessage()));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"StringBuffer performs synchronization that is usually unnecessary; prefer StringBuilder.","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/StormParserImplTokenManager.java","tnLine":15392,"tnColumn":21,"tnPatch":null,"tnCodeLine":"            image = new StringBuffer();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ThreadPriorityCheck","tnDesc":"Relying on the thread scheduler is discouraged; see Effective Java Item 72 (2nd edition) / 84 (3rd edition).","tnFile":"examples/storm-hive-examples/src/main/java/org/apache/storm/hive/bolt/HiveTopology.java","tnLine":132,"tnColumn":25,"tnPatch":null,"tnCodeLine":"            Thread.yield();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"getThriftFieldId implements method in TFieldIdEnum; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/Grouping.java","tnLine":111,"tnColumn":18,"tnPatch":null,"tnCodeLine":"    public short getThriftFieldId() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The parameter 'port' is never read.","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/drpc/DRPCServer.java","tnLine":80,"tnColumn":99,"tnPatch":null,"tnCodeLine":"    private static ThriftServer mkInvokeServer(final DistributedRPCInvocations.Iface service, int port, Map<String, Object> conf) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/supervisor/Container.java","tnLine":297,"tnColumn":53,"tnPatch":null,"tnCodeLine":"        try (BufferedReader in = new BufferedReader(new InputStreamReader(p.getInputStream()))) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The parameter 'yaml' is never read.","tnFile":"flux/flux-core/src/main/java/org/apache/storm/flux/parser/FluxParser.java","tnLine":200,"tnColumn":53,"tnPatch":null,"tnCodeLine":"    private static TopologyDef processIncludes(Yaml yaml, TopologyDef topologyDef, Properties properties, boolean envSub)","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"It is very rare for LinkedList to out-perform ArrayList or ArrayDeque. Avoid it unless you're willing to invest a lot of time into benchmarking. Caveat: LinkedList supports null elements, but ArrayDeque does not.","tnFile":"external/storm-rocketmq/src/main/java/org/apache/storm/rocketmq/trident/state/RocketMqState.java","tnLine":106,"tnColumn":34,"tnPatch":null,"tnCodeLine":"        List<Message> messages = new LinkedList<>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"It is very rare for LinkedList to out-perform ArrayList or ArrayDeque. Avoid it unless you're willing to invest a lot of time into benchmarking. Caveat: LinkedList supports null elements, but ArrayDeque does not.","tnFile":"storm-server/src/main/java/org/apache/storm/scheduler/multitenant/DefaultPool.java","tnLine":178,"tnColumn":42,"tnPatch":null,"tnCodeLine":"                LinkedList<Node> nodes = new LinkedList<>(_nodes);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'counts' is never read.","tnFile":"examples/storm-hdfs-examples/src/main/java/org/apache/storm/hdfs/bolt/HdfsFileTopology.java","tnLine":166,"tnColumn":39,"tnPatch":null,"tnCodeLine":"        private HashMap<String, Long> counts = null;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"BoxedPrimitiveConstructor","tnDesc":"valueOf or autoboxing provides better time and space performance","tnFile":"storm-server/src/main/java/org/apache/storm/stats/StatsUtil.java","tnLine":1300,"tnColumn":43,"tnPatch":null,"tnCodeLine":"                                counter = new Long(0);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"It is very rare for LinkedList to out-perform ArrayList or ArrayDeque. Avoid it unless you're willing to invest a lot of time into benchmarking. Caveat: LinkedList supports null elements, but ArrayDeque does not.","tnFile":"storm-server/src/main/java/org/apache/storm/scheduler/multitenant/NodePool.java","tnLine":225,"tnColumn":22,"tnPatch":null,"tnCodeLine":"            _slots = new LinkedList<>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"It is very rare for LinkedList to out-perform ArrayList or ArrayDeque. Avoid it unless you're willing to invest a lot of time into benchmarking. Caveat: LinkedList supports null elements, but ArrayDeque does not.","tnFile":"storm-server/src/main/java/org/apache/storm/scheduler/multitenant/DefaultPool.java","tnLine":109,"tnColumn":40,"tnPatch":null,"tnCodeLine":"        LinkedList<Node> sortedNodes = new LinkedList<>(_nodes);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-server/src/main/java/org/apache/storm/stats/StatsUtil.java","tnLine":953,"tnColumn":23,"tnPatch":null,"tnCodeLine":"                (Map) (ClientStatsUtil.getMapByKey(newStats, EXECUTED)).get(win)));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'LOG' is never read.","tnFile":"storm-server/src/main/java/org/apache/storm/scheduler/SchedulerAssignmentImpl.java","tnLine":35,"tnColumn":33,"tnPatch":null,"tnCodeLine":"    private static final Logger LOG = LoggerFactory.getLogger(SchedulerAssignmentImpl.class);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIServer.java","tnLine":97,"tnColumn":54,"tnPatch":null,"tnCodeLine":"        final Boolean disableHttpBinding = (Boolean) (conf.get(DaemonConfig.UI_DISABLE_HTTP_BINDING));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The local variable 'mOut' is never read.","tnFile":"external/storm-hdfs-blobstore/src/main/java/org/apache/storm/hdfs/blobstore/HdfsBlobStore.java","tnLine":305,"tnColumn":35,"tnPatch":null,"tnCodeLine":"        BlobStoreFileOutputStream mOut = null;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedMethod","tnDesc":"Private method 'verifyParentWithReadWriteTopoChildren' is never used.","tnFile":"storm-server/src/main/java/org/apache/storm/zookeeper/AclEnforcement.java","tnLine":262,"tnColumn":25,"tnPatch":null,"tnCodeLine":"    private static void verifyParentWithReadWriteTopoChildren(CuratorFramework zk, ACL superUserAcl, String path,","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'numPartitions' is never read.","tnFile":"external/storm-hbase/src/main/java/org/apache/storm/hbase/trident/state/HBaseState.java","tnLine":48,"tnColumn":17,"tnPatch":null,"tnCodeLine":"    private int numPartitions;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The local variable 'x' is never read.","tnFile":"examples/storm-perf/src/main/java/org/apache/storm/perf/JCQueuePerfTest.java","tnLine":239,"tnColumn":21,"tnPatch":null,"tnCodeLine":"                int x = spoutInQ.consume(handler);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"external/storm-hbase/src/main/java/org/apache/storm/hbase/trident/mapper/SimpleTridentHBaseMapper.java","tnLine":77,"tnColumn":66,"tnPatch":null,"tnCodeLine":"                cols.addCounter(this.columnFamily, field.getBytes(), toLong(tuple.getValueByField(field)));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The local variable 'clazz' is never read.","tnFile":"flux/flux-core/src/main/java/org/apache/storm/flux/FluxBuilder.java","tnLine":475,"tnColumn":19,"tnPatch":null,"tnCodeLine":"            Class clazz = Class.forName(def.getClassName());","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"BoxedPrimitiveConstructor","tnDesc":"valueOf or autoboxing provides better time and space performance","tnFile":"storm-server/src/main/java/org/apache/storm/nimbus/LeaderListenerCallback.java","tnLine":206,"tnColumn":62,"tnPatch":null,"tnCodeLine":"                byte[] blobContent = IOUtils.readFully(blob, new Long(blob.getFileLength()).intValue());","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedMethod","tnDesc":"Private method 'getResourceNameForResourceIndex' is never used.","tnFile":"storm-server/src/main/java/org/apache/storm/scheduler/resource/normalization/NormalizedResources.java","tnLine":236,"tnColumn":20,"tnPatch":null,"tnCodeLine":"    private String getResourceNameForResourceIndex(int resourceIndex) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"CompareToZero","tnDesc":"The result of #compareTo or #compare should only be compared to 0. It is an implementation detail whether a given type returns strictly the values {-1, 0, +1} or others.","tnFile":"external/storm-kinesis/src/main/java/org/apache/storm/kinesis/spout/KinesisRecordsManager.java","tnLine":213,"tnColumn":120,"tnPatch":null,"tnCodeLine":"                    if (commitSequenceNumberBound == null || (commitSequenceNumberBound.compareTo(ackedSequenceNumber) == 1)) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'LOG' is never read.","tnFile":"examples/storm-loadgen/src/main/java/org/apache/storm/loadgen/LoadMetricsServer.java","tnLine":68,"tnColumn":33,"tnPatch":null,"tnCodeLine":"    private static final Logger LOG = LoggerFactory.getLogger(LoadMetricsServer.class);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ClassNewInstance","tnDesc":"Class.newInstance() bypasses exception checking; prefer getDeclaredConstructor().newInstance()","tnFile":"external/storm-redis/src/main/java/org/apache/storm/redis/state/RedisKeyValueStateProvider.java","tnLine":96,"tnColumn":56,"tnPatch":null,"tnCodeLine":"            serializer = (Serializer) klass.newInstance();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"examples/storm-starter/src/jvm/org/apache/storm/starter/FastWordCountTopology.java","tnLine":168,"tnColumn":46,"tnPatch":null,"tnCodeLine":"            for (String word : sentence.split(\"\\\\s+\")) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-server/src/main/java/org/apache/storm/stats/StatsUtil.java","tnLine":995,"tnColumn":39,"tnPatch":null,"tnCodeLine":"                (Map<String, Double>) (ClientStatsUtil.getMapByKey(beat, COMP_LATENCIES)).get(win),","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"StringBuffer performs synchronization that is usually unnecessary; prefer StringBuilder.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/supervisor/Slot.java","tnLine":1173,"tnColumn":31,"tnPatch":null,"tnCodeLine":"            StringBuffer sb = new StringBuffer();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"NonOverridingEquals","tnDesc":"equals method doesn't override Object.equals; if this is a type-specific helper for a method that does override Object.equals, either inline it into the callers or rename it to avoid ambiguity","tnFile":"storm-client/src/jvm/org/apache/storm/generated/GlobalStreamId.java","tnLine":255,"tnColumn":18,"tnPatch":null,"tnCodeLine":"  public boolean equals(GlobalStreamId that) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"TypeParameterUnusedInFormals","tnDesc":"Declaring a type parameter that is only used in the return type is a misuse of generics: operations on the type parameter are unchecked, it hides unsafe casts at invocations of the method, and it interacts badly with method overload resolution.","tnFile":"storm-client/src/jvm/org/apache/storm/generated/StormTopology.java","tnLine":1835,"tnColumn":71,"tnPatch":null,"tnCodeLine":"  private static <S extends org.apache.storm.thrift.scheme.IScheme> S scheme(org.apache.storm.thrift.protocol.TProtocol proto) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"read implements method in IScheme; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/NullStruct.java","tnLine":227,"tnColumn":17,"tnPatch":null,"tnCodeLine":"    public void read(org.apache.storm.thrift.protocol.TProtocol iprot, NullStruct struct) throws org.apache.storm.thrift.TException {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"getFieldName implements method in TFieldIdEnum; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/JavaObject.java","tnLine":98,"tnColumn":29,"tnPatch":null,"tnCodeLine":"    public java.lang.String getFieldName() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"examples/storm-mqtt-examples/src/main/java/org/apache/storm/mqtt/examples/MqttBrokerPublisher.java","tnLine":113,"tnColumn":37,"tnPatch":null,"tnCodeLine":"                    payload.getBytes(),","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"external/storm-hdfs/src/main/java/org/apache/storm/hdfs/spout/TextFileReader.java","tnLine":124,"tnColumn":68,"tnPatch":null,"tnCodeLine":"                    this.lineNumber = Long.parseLong(parts[1].split(\"=\")[1]);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"NonOverridingEquals","tnDesc":"equals method doesn't override Object.equals; if this is a type-specific helper for a method that does override Object.equals, either inline it into the callers or rename it to avoid ambiguity","tnFile":"storm-client/src/jvm/org/apache/storm/generated/JavaObjectArg.java","tnLine":560,"tnColumn":18,"tnPatch":null,"tnCodeLine":"  public boolean equals(JavaObjectArg other) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedMethod","tnDesc":"Private method 'getBlobStore' is never used.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":1508,"tnColumn":23,"tnPatch":null,"tnCodeLine":"    private BlobStore getBlobStore() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'receiveTimeoutMs' is never read.","tnFile":"external/storm-eventhubs/src/main/java/org/apache/storm/eventhubs/trident/TridentPartitionManager.java","tnLine":35,"tnColumn":23,"tnPatch":null,"tnCodeLine":"    private final int receiveTimeoutMs = 5000;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StreamResourceLeak","tnDesc":"Streams that encapsulate a closeable resource should be closed using try-with-resources","tnFile":"storm-server/src/main/java/org/apache/storm/localizer/LocalizedResource.java","tnLine":142,"tnColumn":26,"tnPatch":null,"tnCodeLine":"        return Files.list(userCacheDir).map((p) -> p.getFileName().toString()).collect(Collectors.toList());","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ClassCanBeStatic","tnDesc":"Inner class is non-static but does not reference enclosing class","tnFile":"storm-server/src/main/java/org/apache/storm/scheduler/IsolationScheduler.java","tnLine":375,"tnColumn":5,"tnPatch":null,"tnCodeLine":"    class AssignmentInfo {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The local variable 'withPos' is never read.","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/StormParserImpl.java","tnLine":3033,"tnColumn":18,"tnPatch":null,"tnCodeLine":"    SqlParserPos withPos;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"setFieldValue implements method in TBase; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/GlobalStreamId.java","tnLine":197,"tnColumn":15,"tnPatch":null,"tnCodeLine":"  public void setFieldValue(_Fields field, @org.apache.storm.thrift.annotation.Nullable java.lang.Object value) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FloatCast","tnDesc":"Use parentheses to make the precedence explicit","tnFile":"examples/storm-loadgen/src/main/java/org/apache/storm/loadgen/OutputStreamEngine.java","tnLine":74,"tnColumn":26,"tnPatch":null,"tnCodeLine":"            periodNano = (long)NANO_PER_SEC * 10;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"external/storm-hbase/src/main/java/org/apache/storm/hbase/trident/state/HBaseMapState.java","tnLine":183,"tnColumn":77,"tnPatch":null,"tnCodeLine":"                     new Object[]{ this.partitionNum, new String(hbaseKey), new String(this.serializer.serialize(values.get(i))) });","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/logviewer/LogviewerServer.java","tnLine":86,"tnColumn":59,"tnPatch":null,"tnCodeLine":"            final Boolean httpsNeedClientAuth = (Boolean) (conf.get(DaemonConfig.LOGVIEWER_HTTPS_NEED_CLIENT_AUTH));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"external/storm-hdfs/src/main/java/org/apache/storm/hdfs/spout/FileLock.java","tnLine":129,"tnColumn":52,"tnPatch":null,"tnCodeLine":"        BufferedReader reader = new BufferedReader(new InputStreamReader(in));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-client/src/jvm/org/apache/storm/generated/JavaObject.java","tnLine":311,"tnColumn":35,"tnPatch":null,"tnCodeLine":"    hashCode = hashCode * 8191 + ((is_set_args_list()) ? 131071 : 524287);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'LOG' is never read.","tnFile":"external/storm-hbase/src/main/java/org/apache/storm/hbase/bolt/mapper/SimpleHBaseMapper.java","tnLine":28,"tnColumn":33,"tnPatch":null,"tnCodeLine":"    private static final Logger LOG = LoggerFactory.getLogger(SimpleHBaseMapper.class);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"getFieldValue implements method in TBase; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/StormTopology.java","tnLine":746,"tnColumn":27,"tnPatch":null,"tnCodeLine":"  public java.lang.Object getFieldValue(_Fields field) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'LOG' is never read.","tnFile":"examples/storm-mqtt-examples/src/main/java/org/apache/storm/mqtt/examples/CustomMessageMapper.java","tnLine":37,"tnColumn":33,"tnPatch":null,"tnCodeLine":"    private static final Logger LOG = LoggerFactory.getLogger(","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'map' is never read.","tnFile":"external/storm-mongodb/src/main/java/org/apache/storm/mongodb/trident/state/MongoState.java","tnLine":48,"tnColumn":33,"tnPatch":null,"tnCodeLine":"    private Map<String, Object> map;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-client/src/jvm/org/apache/storm/generated/StormTopology.java","tnLine":961,"tnColumn":35,"tnPatch":null,"tnCodeLine":"    hashCode = hashCode * 8191 + ((is_set_shared_memory()) ? 131071 : 524287);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The local variable 'pos' is never read.","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/StormParserImpl.java","tnLine":3073,"tnColumn":18,"tnPatch":null,"tnCodeLine":"    SqlParserPos pos;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"getMessage overrides method in Throwable; expected @Override","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/TokenMgrError.java","tnLine":114,"tnColumn":18,"tnPatch":null,"tnCodeLine":"   public String getMessage() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"examples/storm-starter/src/jvm/org/apache/storm/starter/BlobStoreAPIWordCountTopology.java","tnLine":88,"tnColumn":66,"tnPatch":null,"tnCodeLine":"        blobOutputStream.write(readFile(file).toString().getBytes());","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedMethod","tnDesc":"Private method 'printTimeCostArray' is never used.","tnFile":"storm-server/src/main/java/org/apache/storm/nimbus/NimbusHeartbeatsPressureTest.java","tnLine":126,"tnColumn":25,"tnPatch":null,"tnCodeLine":"    private static void printTimeCostArray(Double[] array) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"TypeParameterUnusedInFormals","tnDesc":"Declaring a type parameter that is only used in the return type is a misuse of generics: operations on the type parameter are unchecked, it hides unsafe casts at invocations of the method, and it interacts badly with method overload resolution.","tnFile":"storm-client/src/jvm/org/apache/storm/generated/JavaObject.java","tnLine":537,"tnColumn":71,"tnPatch":null,"tnCodeLine":"  private static <S extends org.apache.storm.thrift.scheme.IScheme> S scheme(org.apache.storm.thrift.protocol.TProtocol proto) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"EqualsHashCode","tnDesc":"Classes that override equals should also override hashCode.","tnFile":"storm-server/src/main/java/org/apache/storm/metricstore/Metric.java","tnLine":87,"tnColumn":20,"tnPatch":null,"tnCodeLine":"    public boolean equals(Object other) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"external/storm-hbase/src/main/java/org/apache/storm/hbase/trident/mapper/SimpleTridentHBaseMapper.java","tnLine":55,"tnColumn":50,"tnPatch":null,"tnCodeLine":"        this.columnFamily = columnFamily.getBytes();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The local variable 'pos' is never read.","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/StormParserImpl.java","tnLine":2626,"tnColumn":18,"tnPatch":null,"tnCodeLine":"    SqlParserPos pos;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"external/storm-hdfs/src/main/java/org/apache/storm/hdfs/trident/HdfsState.java","tnLine":136,"tnColumn":53,"tnPatch":null,"tnCodeLine":"             BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(out))) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/drpc/DRPCServer.java","tnLine":90,"tnColumn":43,"tnPatch":null,"tnCodeLine":"            String filterClass = (String) (conf.get(DaemonConfig.DRPC_HTTP_FILTER));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'NUMBER_FIELD' is never read.","tnFile":"integration-test/src/main/java/org/apache/storm/st/topology/window/TumblingWindowCorrectness.java","tnLine":36,"tnColumn":33,"tnPatch":null,"tnCodeLine":"    private static final String NUMBER_FIELD = \"number\";","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ClassNewInstance","tnDesc":"Class.newInstance() bypasses exception checking; prefer getDeclaredConstructor().newInstance()","tnFile":"storm-server/src/main/java/org/apache/storm/metric/ClusterMetricsConsumerExecutor.java","tnLine":39,"tnColumn":101,"tnPatch":null,"tnCodeLine":"            metricsConsumer = (IClusterMetricsConsumer) Class.forName(consumerClassName).newInstance();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"BoxedPrimitiveConstructor","tnDesc":"valueOf or autoboxing provides better time and space performance","tnFile":"external/storm-jdbc/src/main/java/org/apache/storm/jdbc/common/Util.java","tnLine":24,"tnColumn":27,"tnPatch":null,"tnCodeLine":"            Integer val = new Integer(sqlType);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"examples/storm-loadgen/src/main/java/org/apache/storm/loadgen/GenLoad.java","tnLine":175,"tnColumn":60,"tnPatch":null,"tnCodeLine":"                    String [] parts = stringImbalance.split(\":\");","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"external/storm-hbase/src/main/java/org/apache/storm/hbase/trident/state/HBaseMapState.java","tnLine":186,"tnColumn":61,"tnPatch":null,"tnCodeLine":"            put.addColumn(this.options.columnFamily.getBytes(),","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java","tnLine":341,"tnColumn":40,"tnPatch":null,"tnCodeLine":"        execService.scheduleAtFixedRate(this::cleanup, cacheCleanupPeriod, cacheCleanupPeriod, TimeUnit.MILLISECONDS);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"getFieldName implements method in TFieldIdEnum; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/Grouping.java","tnLine":115,"tnColumn":29,"tnPatch":null,"tnCodeLine":"    public java.lang.String getFieldName() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The local variable 'func' is never read.","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/StormParserImpl.java","tnLine":5490,"tnColumn":13,"tnPatch":null,"tnCodeLine":"    SqlCall func;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"examples/storm-mqtt-examples/src/main/java/org/apache/storm/mqtt/examples/CustomMessageMapper.java","tnLine":52,"tnColumn":74,"tnPatch":null,"tnCodeLine":"        String[] payloadElements = new String(message.getMessage()).split(\"/\");","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"external/storm-hbase/src/main/java/org/apache/storm/hbase/trident/state/HBaseMapState.java","tnLine":153,"tnColumn":61,"tnPatch":null,"tnCodeLine":"            get.addColumn(this.options.columnFamily.getBytes(), qualifier.getBytes());","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"InconsistentCapitalization","tnDesc":"Found the field 'userName' with the same name as the parameter 'username' but with different capitalization.","tnFile":"external/storm-eventhubs/src/main/java/org/apache/storm/eventhubs/spout/EventHubSpoutConfig.java","tnLine":72,"tnColumn":39,"tnPatch":null,"tnCodeLine":"    public EventHubSpoutConfig(String username, String password,","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-client/src/jvm/org/apache/storm/generated/StormTopology.java","tnLine":933,"tnColumn":35,"tnPatch":null,"tnCodeLine":"    hashCode = hashCode * 8191 + ((is_set_state_spouts()) ? 131071 : 524287);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"external/storm-hive/src/main/java/org/apache/storm/hive/bolt/mapper/DelimitedRecordHiveMapper.java","tnLine":131,"tnColumn":43,"tnPatch":null,"tnCodeLine":"        return builder.toString().getBytes();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-server/src/main/java/org/apache/storm/metricstore/rocksdb/RocksDbStore.java","tnLine":124,"tnColumn":14,"tnPatch":null,"tnCodeLine":"        if (!(config.containsKey(DaemonConfig.STORM_ROCKSDB_CREATE_IF_MISSING))) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"It is very rare for LinkedList to out-perform ArrayList or ArrayDeque. Avoid it unless you're willing to invest a lot of time into benchmarking. Caveat: LinkedList supports null elements, but ArrayDeque does not.","tnFile":"external/storm-hbase/src/main/java/org/apache/storm/hbase/bolt/HBaseBolt.java","tnLine":48,"tnColumn":31,"tnPatch":null,"tnCodeLine":"        this.batchMutations = new LinkedList<>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"CatchAndPrintStackTrace","tnDesc":"Logging or rethrowing exceptions should usually be preferred to catching and calling printStackTrace","tnFile":"storm-server/src/main/java/org/apache/storm/blobstore/LocalFsBlobStore.java","tnLine":110,"tnColumn":13,"tnPatch":null,"tnCodeLine":"            e.printStackTrace();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ClassNewInstance","tnDesc":"Class.newInstance() bypasses exception checking; prefer getDeclaredConstructor().newInstance()","tnFile":"flux/flux-core/src/main/java/org/apache/storm/flux/FluxBuilder.java","tnLine":388,"tnColumn":36,"tnPatch":null,"tnCodeLine":"            obj = clazz.newInstance();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-client/src/jvm/org/apache/storm/security/auth/ReqContext.java","tnLine":131,"tnColumn":28,"tnPatch":null,"tnCodeLine":"        return (Principal) (princs.toArray()[0]);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"getFieldName implements method in TFieldIdEnum; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/SpoutSpec.java","tnLine":98,"tnColumn":29,"tnPatch":null,"tnCodeLine":"    public java.lang.String getFieldName() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"It is very rare for LinkedList to out-perform ArrayList or ArrayDeque. Avoid it unless you're willing to invest a lot of time into benchmarking. Caveat: LinkedList supports null elements, but ArrayDeque does not.","tnFile":"storm-server/src/main/java/org/apache/storm/scheduler/resource/RAS_Node.java","tnLine":120,"tnColumn":38,"tnPatch":null,"tnCodeLine":"        Collection<WorkerSlot> ret = new LinkedList<>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The local variable 'principal' is never read.","tnFile":"examples/storm-hive-examples/src/main/java/org/apache/storm/hive/trident/TridentHiveTopology.java","tnLine":97,"tnColumn":16,"tnPatch":null,"tnCodeLine":"        String principal = null;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"It is very rare for LinkedList to out-perform ArrayList or ArrayDeque. Avoid it unless you're willing to invest a lot of time into benchmarking. Caveat: LinkedList supports null elements, but ArrayDeque does not.","tnFile":"storm-server/src/main/java/org/apache/storm/scheduler/resource/RAS_Node.java","tnLine":149,"tnColumn":34,"tnPatch":null,"tnCodeLine":"        Collection<String> ret = new LinkedList<>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"external/storm-hdfs/src/main/java/org/apache/storm/hdfs/trident/HdfsState.java","tnLine":79,"tnColumn":56,"tnPatch":null,"tnCodeLine":"            BufferedReader reader = new BufferedReader(new InputStreamReader(inputStream));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"sql/storm-sql-runtime/src/jvm/org/apache/storm/sql/runtime/datasource/socket/bolt/SocketBolt.java","tnLine":70,"tnColumn":46,"tnPatch":null,"tnCodeLine":"            this.writer = new BufferedWriter(new OutputStreamWriter(socket.getOutputStream()));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"getScheme implements method in SchemeFactory; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/GlobalStreamId.java","tnLine":458,"tnColumn":38,"tnPatch":null,"tnCodeLine":"    public GlobalStreamIdTupleScheme getScheme() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'LOG' is never read.","tnFile":"storm-server/src/main/java/org/apache/storm/metricstore/Metric.java","tnLine":25,"tnColumn":33,"tnPatch":null,"tnCodeLine":"    private static final Logger LOG = LoggerFactory.getLogger(Metric.class);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/SimpleCharStream.java","tnLine":303,"tnColumn":11,"tnPatch":null,"tnCodeLine":"     this(new java.io.InputStreamReader(dstream), startline, startcolumn, buffersize);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"EqualsGetClass","tnDesc":"Overriding Object#equals in a non-final class by using getClass rather than instanceof breaks substitutability of subclasses.","tnFile":"integration-test/src/main/java/org/apache/storm/st/topology/window/data/TimeData.java","tnLine":87,"tnColumn":20,"tnPatch":null,"tnCodeLine":"    public boolean equals(Object o) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"CatchAndPrintStackTrace","tnDesc":"Logging or rethrowing exceptions should usually be preferred to catching and calling printStackTrace","tnFile":"examples/storm-hive-examples/src/main/java/org/apache/storm/hive/bolt/BucketTestHiveTopology.java","tnLine":136,"tnColumn":17,"tnPatch":null,"tnCodeLine":"                ex.printStackTrace();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ClassNewInstance","tnDesc":"Class.newInstance() bypasses exception checking; prefer getDeclaredConstructor().newInstance()","tnFile":"external/storm-redis/src/main/java/org/apache/storm/redis/state/RedisKeyValueStateProvider.java","tnLine":83,"tnColumn":56,"tnPatch":null,"tnCodeLine":"            serializer = (Serializer) klass.newInstance();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java","tnLine":2397,"tnColumn":84,"tnPatch":null,"tnCodeLine":"            nimbusSummaryMap.put(\"nimbusLogLink\", getNimbusLogLink(nimbusSeed.split(\":\")[0], config));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"deepCopy implements method in TBase; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/JavaObjectArg.java","tnLine":142,"tnColumn":24,"tnPatch":null,"tnCodeLine":"  public JavaObjectArg deepCopy() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"NonOverridingEquals","tnDesc":"equals method doesn't override Object.equals; if this is a type-specific helper for a method that does override Object.equals, either inline it into the callers or rename it to avoid ambiguity","tnFile":"storm-client/src/jvm/org/apache/storm/generated/NullStruct.java","tnLine":149,"tnColumn":18,"tnPatch":null,"tnCodeLine":"  public boolean equals(NullStruct that) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"ReInit implements method in SqlAbstractParserImpl; expected @Override","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/StormParserImpl.java","tnLine":22644,"tnColumn":15,"tnPatch":null,"tnCodeLine":"  public void ReInit(java.io.Reader stream) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'LOG' is never read.","tnFile":"examples/storm-starter/src/jvm/org/apache/storm/starter/bolt/RollingCountAggBolt.java","tnLine":31,"tnColumn":33,"tnPatch":null,"tnCodeLine":"    private static final Logger LOG = Logger.getLogger(RollingCountAggBolt.class);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"It is very rare for LinkedList to out-perform ArrayList or ArrayDeque. Avoid it unless you're willing to invest a lot of time into benchmarking. Caveat: LinkedList supports null elements, but ArrayDeque does not.","tnFile":"storm-server/src/main/java/org/apache/storm/scheduler/resource/RAS_Node.java","tnLine":321,"tnColumn":55,"tnPatch":null,"tnCodeLine":"            .computeIfAbsent(target.getId(), (tid) -> new LinkedList<>())","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"CatchAndPrintStackTrace","tnDesc":"Logging or rethrowing exceptions should usually be preferred to catching and calling printStackTrace","tnFile":"examples/storm-mqtt-examples/src/main/java/org/apache/storm/mqtt/examples/MqttBrokerPublisher.java","tnLine":65,"tnColumn":21,"tnPatch":null,"tnCodeLine":"                    e.printStackTrace();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"switchTo implements method in SqlAbstractParserImpl; expected @Override","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/StormParserImpl.java","tnLine":157,"tnColumn":17,"tnPatch":null,"tnCodeLine":"    public void switchTo(String stateName)","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-client/src/jvm/org/apache/storm/generated/StormTopology.java","tnLine":945,"tnColumn":35,"tnPatch":null,"tnCodeLine":"    hashCode = hashCode * 8191 + ((is_set_dependency_artifacts()) ? 131071 : 524287);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"external/storm-autocreds/src/main/java/org/apache/storm/common/AbstractHadoopAutoCreds.java","tnLine":56,"tnColumn":82,"tnPatch":null,"tnCodeLine":"                DatatypeConverter.printBase64Binary(\"dummy place holder\".getBytes()));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"InconsistentCapitalization","tnDesc":"Found the field 'eventData' with the same name as the parameter 'eventdata' but with different capitalization.","tnFile":"external/storm-eventhubs/src/main/java/org/apache/storm/eventhubs/spout/EventDataWrap.java","tnLine":27,"tnColumn":36,"tnPatch":null,"tnCodeLine":"    public EventDataWrap(EventData eventdata, MessageId messageId) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingCasesInEnumSwitch","tnDesc":"Non-exhaustive switch; either add a default or handle the remaining cases: ACCEPT_ALL, ACCEPT_NONCURSOR, ACCEPT_QUERY","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/StormParserImpl.java","tnLine":286,"tnColumn":5,"tnPatch":null,"tnCodeLine":"    switch (exprContext) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"CatchAndPrintStackTrace","tnDesc":"Logging or rethrowing exceptions should usually be preferred to catching and calling printStackTrace","tnFile":"external/storm-redis/src/main/java/org/apache/storm/redis/common/container/JedisClusterContainer.java","tnLine":60,"tnColumn":13,"tnPatch":null,"tnCodeLine":"            e.printStackTrace();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"external/storm-hbase/src/main/java/org/apache/storm/hbase/trident/state/HBaseMapState.java","tnLine":187,"tnColumn":39,"tnPatch":null,"tnCodeLine":"                    qualifier.getBytes(),","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"It is very rare for LinkedList to out-perform ArrayList or ArrayDeque. Avoid it unless you're willing to invest a lot of time into benchmarking. Caveat: LinkedList supports null elements, but ArrayDeque does not.","tnFile":"external/storm-solr/src/main/java/org/apache/storm/solr/mapper/SolrFieldsMapper.java","tnLine":58,"tnColumn":40,"tnPatch":null,"tnCodeLine":"        List<SolrInputDocument> docs = new LinkedList<>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'sequence' is never read.","tnFile":"sql/storm-sql-core/src/jvm/org/apache/storm/sql/planner/StormRelUtils.java","tnLine":27,"tnColumn":40,"tnPatch":null,"tnCodeLine":"    private static final AtomicInteger sequence = new AtomicInteger(0);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'LOG' is never read.","tnFile":"storm-server/src/main/java/org/apache/storm/scheduler/resource/SchedulingResult.java","tnLine":23,"tnColumn":33,"tnPatch":null,"tnCodeLine":"    private static final Logger LOG = LoggerFactory.getLogger(SchedulingResult.class);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedMethod","tnDesc":"Private method 'readStormTopology' is never used.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":755,"tnColumn":34,"tnPatch":null,"tnCodeLine":"    private static StormTopology readStormTopology(String topoId, TopoCache tc) throws KeyNotFoundException, AuthorizationException,","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/logviewer/LogviewerServer.java","tnLine":69,"tnColumn":40,"tnPatch":null,"tnCodeLine":"                filterClass = (String) (conf.get(DaemonConfig.UI_FILTER));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ByteBufferBackingArray","tnDesc":"ByteBuffer.array() shouldn't be called unless ByteBuffer.arrayOffset() is used or if the ByteBuffer was initialized using ByteBuffer.wrap() or ByteBuffer.allocate().","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/logviewer/handler/LogviewerLogSearchHandler.java","tnLine":588,"tnColumn":46,"tnPatch":null,"tnCodeLine":"        byte[] haystackBytes = haystack.array();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DoubleBraceInitialization","tnDesc":"Prefer collection factory methods or builders to the double-brace initialization pattern.","tnFile":"examples/storm-starter/src/jvm/org/apache/storm/starter/trident/TridentReach.java","tnLine":41,"tnColumn":59,"tnPatch":null,"tnCodeLine":"    public static Map<String, List<String>> TWEETERS_DB = new HashMap<String, List<String>>() {{","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"external/storm-hbase/src/main/java/org/apache/storm/hbase/state/HBaseKeyValueState.java","tnLine":58,"tnColumn":64,"tnPatch":null,"tnCodeLine":"    private static byte[] PREPARE_TXID_KEY = \"prepare\".getBytes();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIServer.java","tnLine":93,"tnColumn":49,"tnPatch":null,"tnCodeLine":"        final String httpsTsPassword = (String) (conf.get(DaemonConfig.UI_HTTPS_TRUSTSTORE_PASSWORD));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"isSet implements method in TBase; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/SpoutSpec.java","tnLine":232,"tnColumn":18,"tnPatch":null,"tnCodeLine":"  public boolean isSet(_Fields field) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FloatCast","tnDesc":"Use parentheses to make the precedence explicit","tnFile":"examples/storm-loadgen/src/main/java/org/apache/storm/loadgen/OutputStreamEngine.java","tnLine":32,"tnColumn":56,"tnPatch":null,"tnCodeLine":"    private static final long UPDATE_RATE_PERIOD_NS = ((long)NANO_PER_SEC * 2);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The local variable 'nextStates' is never read.","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/StormParserImplTokenManager.java","tnLine":14111,"tnColumn":10,"tnPatch":null,"tnCodeLine":"   int[] nextStates;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"examples/storm-redis-examples/src/main/java/org/apache/storm/redis/trident/WordCountTridentRedisClusterMap.java","tnLine":53,"tnColumn":48,"tnPatch":null,"tnCodeLine":"            String[] host_port = hostPort.split(\":\");","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/SimpleCharStream.java","tnLine":337,"tnColumn":13,"tnPatch":null,"tnCodeLine":"     ReInit(new java.io.InputStreamReader(dstream), startline, startcolumn, buffersize);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"Stack is a nonstandard class that predates the Java Collections Framework; prefer ArrayDeque. Note that the Stack methods push/pop/peek correspond to the Deque methods addFirst/removeFirst/peekFirst.","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/logviewer/utils/DirectoryCleaner.java","tnLine":136,"tnColumn":53,"tnPatch":null,"tnCodeLine":"                Stack<Pair<Path, FileTime>> stack = new Stack<>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"It is very rare for LinkedList to out-perform ArrayList or ArrayDeque. Avoid it unless you're willing to invest a lot of time into benchmarking. Caveat: LinkedList supports null elements, but ArrayDeque does not.","tnFile":"sql/storm-sql-runtime/src/jvm/org/apache/storm/sql/runtime/utils/Utils.java","tnLine":35,"tnColumn":29,"tnPatch":null,"tnCodeLine":"        List<String> list = new LinkedList<>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"processWorkerMetrics implements method in Iface; expected @Override","tnFile":"storm-server/src/main/java/org/apache/storm/LocalCluster.java","tnLine":1030,"tnColumn":17,"tnPatch":null,"tnCodeLine":"    public void processWorkerMetrics(WorkerMetrics metrics) throws TException {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"external/storm-hbase/src/main/java/org/apache/storm/hbase/trident/mapper/SimpleTridentHBaseMapMapper.java","tnLine":37,"tnColumn":55,"tnPatch":null,"tnCodeLine":"                bos.write(String.valueOf(key).getBytes());","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"LogicalAssignment","tnDesc":"Assignment where a boolean expression was expected; use == if this assignment wasn't expected or add parentheses for clarity.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java","tnLine":844,"tnColumn":28,"tnPatch":null,"tnCodeLine":"            if (anyChanged = !difference.areEqual()) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ArrayAsKeyOfSetOrMap","tnDesc":"Arrays do not override equals() or hashCode, so comparisons will be done on reference equality only. If neither deduplication nor lookup are needed, consider using a List instead. Otherwise, use IdentityHashMap/Set, a Map from a library that handles object arrays, or an Iterable/List of pairs.","tnFile":"examples/storm-redis-examples/src/main/java/org/apache/storm/redis/tools/Base64ToBinaryStateMigrationUtil.java","tnLine":100,"tnColumn":41,"tnPatch":null,"tnCodeLine":"        Map<byte[], byte[]> binaryMap = new HashMap<>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"external/storm-hbase/src/main/java/org/apache/storm/hbase/trident/state/HBaseMapState.java","tnLine":183,"tnColumn":55,"tnPatch":null,"tnCodeLine":"                     new Object[]{ this.partitionNum, new String(hbaseKey), new String(this.serializer.serialize(values.get(i))) });","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ClassNewInstance","tnDesc":"Class.newInstance() bypasses exception checking; prefer getDeclaredConstructor().newInstance()","tnFile":"sql/storm-sql-core/src/jvm/org/apache/storm/sql/planner/streams/StreamsPlanCreator.java","tnLine":102,"tnColumn":108,"tnPatch":null,"tnCodeLine":"        ExecutableExpression instance = (ExecutableExpression) classLoader.loadClass(className).newInstance();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"examples/storm-mqtt-examples/src/main/java/org/apache/storm/mqtt/examples/CustomMessageMapper.java","tnLine":51,"tnColumn":45,"tnPatch":null,"tnCodeLine":"        String[] topicElements = topic.split(\"/\");","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"read implements method in TSerializable; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/NullStruct.java","tnLine":181,"tnColumn":15,"tnPatch":null,"tnCodeLine":"  public void read(org.apache.storm.thrift.protocol.TProtocol iprot) throws org.apache.storm.thrift.TException {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StreamResourceLeak","tnDesc":"Streams that encapsulate a closeable resource should be closed using try-with-resources","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/logviewer/utils/DirectoryCleaner.java","tnLine":72,"tnColumn":44,"tnPatch":null,"tnCodeLine":"            return Files.newDirectoryStream(dir);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"external/storm-hbase/src/main/java/org/apache/storm/hbase/trident/state/HBaseMapState.java","tnLine":163,"tnColumn":104,"tnPatch":null,"tnCodeLine":"                byte[] value = result.getValue(this.options.columnFamily.getBytes(), qualifier.getBytes());","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"external/storm-hbase/src/main/java/org/apache/storm/hbase/bolt/mapper/HBaseProjectionCriteria.java","tnLine":40,"tnColumn":54,"tnPatch":null,"tnCodeLine":"        this.columnFamilies.add(columnFamily.getBytes());","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ByteBufferBackingArray","tnDesc":"ByteBuffer.array() shouldn't be called unless ByteBuffer.arrayOffset() is used or if the ByteBuffer was initialized using ByteBuffer.wrap() or ByteBuffer.allocate().","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/logviewer/handler/LogviewerLogSearchHandler.java","tnLine":525,"tnColumn":54,"tnPatch":null,"tnCodeLine":"            int offset = offsetOfBytes(haystack.array(), needle, bufOffset);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"read implements method in IScheme; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/GlobalStreamId.java","tnLine":402,"tnColumn":17,"tnPatch":null,"tnCodeLine":"    public void read(org.apache.storm.thrift.protocol.TProtocol iprot, GlobalStreamId struct) throws org.apache.storm.thrift.TException {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"storm-server/src/main/java/org/apache/storm/nimbus/NimbusHeartbeatsPressureTest.java","tnLine":79,"tnColumn":27,"tnPatch":null,"tnCodeLine":"            service.submit(new HeartbeatSendTask(i, THREAD_SUBMIT_NUM));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The local variable 'topologies' is never read.","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java","tnLine":775,"tnColumn":31,"tnPatch":null,"tnCodeLine":"        List<TopologySummary> topologies = null;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"storm-server/src/main/java/org/apache/storm/metricstore/rocksdb/RocksDbValue.java","tnLine":72,"tnColumn":39,"tnPatch":null,"tnCodeLine":"        bb.put(metadataString.getBytes());","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/StormParserImpl.java","tnLine":22760,"tnColumn":33,"tnPatch":null,"tnCodeLine":"        int[] oldentry = (int[])(e.nextElement());","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"examples/storm-starter/src/jvm/org/apache/storm/starter/AnchoredWordCount.java","tnLine":102,"tnColumn":46,"tnPatch":null,"tnCodeLine":"            for (String word : sentence.split(\"\\\\s+\")) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"CatchAndPrintStackTrace","tnDesc":"Logging or rethrowing exceptions should usually be preferred to catching and calling printStackTrace","tnFile":"external/storm-redis/src/main/java/org/apache/storm/redis/common/container/RedisClusterContainer.java","tnLine":67,"tnColumn":13,"tnPatch":null,"tnCodeLine":"            e.printStackTrace();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/drpc/DRPCServer.java","tnLine":97,"tnColumn":53,"tnPatch":null,"tnCodeLine":"            final String httpsKsPassword = (String) (conf.get(DaemonConfig.DRPC_HTTPS_KEYSTORE_PASSWORD));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedMethod","tnDesc":"Private method 'oneProducer2Consumers' is never used.","tnFile":"examples/storm-perf/src/main/java/org/apache/storm/perf/JCToolsPerfTest.java","tnLine":78,"tnColumn":25,"tnPatch":null,"tnCodeLine":"    private static void oneProducer2Consumers() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"external/storm-hbase/src/main/java/org/apache/storm/hbase/trident/mapper/SimpleTridentHBaseMapper.java","tnLine":72,"tnColumn":65,"tnPatch":null,"tnCodeLine":"                cols.addColumn(this.columnFamily, field.getBytes(), toBytes(tuple.getValueByField(field)));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The local variable 'nextStates' is never read.","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/StormParserImplTokenManager.java","tnLine":9156,"tnColumn":10,"tnPatch":null,"tnCodeLine":"   int[] nextStates;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/logviewer/LogviewerServer.java","tnLine":84,"tnColumn":49,"tnPatch":null,"tnCodeLine":"            final String httpsTsType = (String) (conf.get(DaemonConfig.LOGVIEWER_HTTPS_TRUSTSTORE_TYPE));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"StringBuffer performs synchronization that is usually unnecessary; prefer StringBuilder.","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/ParseException.java","tnLine":148,"tnColumn":29,"tnPatch":null,"tnCodeLine":"      StringBuffer retval = new StringBuffer();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"EqualsGetClass","tnDesc":"Overriding Object#equals in a non-final class by using getClass rather than instanceof breaks substitutability of subclasses.","tnFile":"external/storm-kinesis/src/main/java/org/apache/storm/kinesis/spout/KinesisMessageId.java","tnLine":54,"tnColumn":20,"tnPatch":null,"tnCodeLine":"    public boolean equals (Object o) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MixedMutabilityReturnType","tnDesc":"This method returns both mutable and immutable collections or maps from different paths. This may be confusing for users of the method.","tnFile":"storm-server/src/main/java/org/apache/storm/scheduler/resource/strategies/scheduling/BaseResourceAwareStrategy.java","tnLine":216,"tnColumn":28,"tnPatch":null,"tnCodeLine":"    protected List<String> makeHostToNodeIds(List<String> hosts) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The local variable 'shardIterator' is never read.","tnFile":"external/storm-kinesis/src/main/java/org/apache/storm/kinesis/spout/KinesisRecordsManager.java","tnLine":410,"tnColumn":16,"tnPatch":null,"tnCodeLine":"        String shardIterator = null;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'fields' is never read.","tnFile":"sql/storm-sql-runtime/src/jvm/org/apache/storm/sql/runtime/serde/csv/CsvSerializer.java","tnLine":40,"tnColumn":32,"tnPatch":null,"tnCodeLine":"    private final List<String> fields; //reserved for future","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"examples/storm-loadgen/src/main/java/org/apache/storm/loadgen/TopologyLoadConf.java","tnLine":137,"tnColumn":34,"tnPatch":null,"tnCodeLine":"        try (FileWriter writer = new FileWriter(file)) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-client/src/jvm/org/apache/storm/generated/GlobalStreamId.java","tnLine":290,"tnColumn":35,"tnPatch":null,"tnCodeLine":"    hashCode = hashCode * 8191 + ((is_set_streamId()) ? 131071 : 524287);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ClassNewInstance","tnDesc":"Class.newInstance() bypasses exception checking; prefer getDeclaredConstructor().newInstance()","tnFile":"external/storm-rocketmq/src/main/java/org/apache/storm/rocketmq/RocketMqUtils.java","tnLine":54,"tnColumn":47,"tnPatch":null,"tnCodeLine":"            scheme = (Scheme)clazz.newInstance();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"normalizeException implements method in SqlAbstractParserImpl; expected @Override","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/StormParserImpl.java","tnLine":129,"tnColumn":30,"tnPatch":null,"tnCodeLine":"    public SqlParseException normalizeException(Throwable ex)","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The local variable 'pos' is never read.","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/StormParserImpl.java","tnLine":1744,"tnColumn":18,"tnPatch":null,"tnCodeLine":"    SqlParserPos pos;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"fieldForId implements method in TBase; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/SpoutSpec.java","tnLine":329,"tnColumn":18,"tnPatch":null,"tnCodeLine":"  public _Fields fieldForId(int fieldId) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"external/storm-hbase/src/main/java/org/apache/storm/hbase/state/HBaseKeyValueState.java","tnLine":239,"tnColumn":70,"tnPatch":null,"tnCodeLine":"            txIds.put(PREPARE_TXID_KEY, String.valueOf(txid).getBytes());","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"storm-server/src/main/java/org/apache/storm/container/cgroup/CgroupManager.java","tnLine":62,"tnColumn":53,"tnPatch":null,"tnCodeLine":"        try (BufferedReader in = new BufferedReader(new FileReader(\"/proc/meminfo\"))) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"examples/storm-starter/src/jvm/org/apache/storm/starter/trident/TridentMapExample.java","tnLine":55,"tnColumn":56,"tnPatch":null,"tnCodeLine":"            for (String word : input.getString(0).split(\" \")) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ArgumentSelectionDefectChecker","tnDesc":"The following arguments may have been swapped: 'component' for formal parameter 'action', 'action' for formal parameter 'spct', 'spct' for formal parameter 'component'. Either add clarifying `/* paramName= */` comments, or swap the arguments if that is what was intended","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/ui/resources/StormApiResource.java","tnLine":546,"tnColumn":57,"tnPatch":null,"tnCodeLine":"                    UIHelpers.putTopologyDebugActionSpct(","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'partitionIndex' is never read.","tnFile":"external/storm-hbase/src/main/java/org/apache/storm/hbase/trident/state/HBaseState.java","tnLine":49,"tnColumn":17,"tnPatch":null,"tnCodeLine":"    private int partitionIndex;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"storm-server/src/main/java/org/apache/storm/localizer/LocalizedResource.java","tnLine":371,"tnColumn":48,"tnPatch":null,"tnCodeLine":"                            new BufferedWriter(new FileWriter(versionFilePath.toFile(), false)))) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"setFieldValue implements method in TBase; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/StormTopology.java","tnLine":660,"tnColumn":15,"tnPatch":null,"tnCodeLine":"  public void setFieldValue(_Fields field, @org.apache.storm.thrift.annotation.Nullable java.lang.Object value) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-server/src/main/java/org/apache/storm/stats/StatsUtil.java","tnLine":951,"tnColumn":23,"tnPatch":null,"tnCodeLine":"                (Map) (ClientStatsUtil.getMapByKey(newStats, EXEC_LATENCIES)).get(win),","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"It is very rare for LinkedList to out-perform ArrayList or ArrayDeque. Avoid it unless you're willing to invest a lot of time into benchmarking. Caveat: LinkedList supports null elements, but ArrayDeque does not.","tnFile":"examples/storm-starter/src/jvm/org/apache/storm/starter/BlobStoreAPIWordCountTopology.java","tnLine":75,"tnColumn":36,"tnPatch":null,"tnCodeLine":"        List<AccessControl> acls = new LinkedList<AccessControl>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The local variable 'list2' is never read.","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/StormParserImpl.java","tnLine":3390,"tnColumn":23,"tnPatch":null,"tnCodeLine":"    final SqlNodeList list2;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ByteBufferBackingArray","tnDesc":"ByteBuffer.array() shouldn't be called unless ByteBuffer.arrayOffset() is used or if the ByteBuffer was initialized using ByteBuffer.wrap() or ByteBuffer.allocate().","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/logviewer/handler/LogviewerLogSearchHandler.java","tnLine":546,"tnColumn":67,"tnPatch":null,"tnCodeLine":"                newBeforeBytes = Arrays.copyOfRange(haystack.array(), beforeStrFromOffset, beforeStrToOffset);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StreamResourceLeak","tnDesc":"Streams that encapsulate a closeable resource should be closed using try-with-resources","tnFile":"storm-server/src/main/java/org/apache/storm/localizer/LocalizedResource.java","tnLine":172,"tnColumn":26,"tnPatch":null,"tnCodeLine":"        return Files.list(dir)","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"external/storm-hive/src/main/java/org/apache/storm/hive/bolt/mapper/JsonRecordHiveMapper.java","tnLine":93,"tnColumn":43,"tnPatch":null,"tnCodeLine":"        return obj.toJSONString().getBytes();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"examples/storm-starter/src/jvm/org/apache/storm/starter/LambdaTopology.java","tnLine":45,"tnColumn":68,"tnPatch":null,"tnCodeLine":"            String[] parts = tuple.getStringByField(\"lambda\").split(\"\\\\-\");","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/drpc/DRPCServer.java","tnLine":100,"tnColumn":49,"tnPatch":null,"tnCodeLine":"            final String httpsTsPath = (String) (conf.get(DaemonConfig.DRPC_HTTPS_TRUSTSTORE_PATH));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/drpc/DRPCServer.java","tnLine":96,"tnColumn":49,"tnPatch":null,"tnCodeLine":"            final String httpsKsPath = (String) (conf.get(DaemonConfig.DRPC_HTTPS_KEYSTORE_PATH));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The local variable 'j' is never read.","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/StormParserImplTokenManager.java","tnLine":9161,"tnColumn":8,"tnPatch":null,"tnCodeLine":"   int j, kind = 0x7fffffff;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"external/storm-hbase/src/main/java/org/apache/storm/hbase/state/HBaseKeyValueState.java","tnLine":99,"tnColumn":50,"tnPatch":null,"tnCodeLine":"        this.columnFamily = columnFamily.getBytes();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'STRING_FIELD' is never read.","tnFile":"integration-test/src/main/java/org/apache/storm/st/topology/window/SlidingWindowCorrectness.java","tnLine":37,"tnColumn":33,"tnPatch":null,"tnCodeLine":"    private static final String STRING_FIELD = \"numAsStr\";","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ByteBufferBackingArray","tnDesc":"ByteBuffer.array() shouldn't be called unless ByteBuffer.arrayOffset() is used or if the ByteBuffer was initialized using ByteBuffer.wrap() or ByteBuffer.allocate().","tnFile":"storm-client/src/jvm/org/apache/storm/generated/JavaObjectArg.java","tnLine":488,"tnColumn":38,"tnPatch":null,"tnCodeLine":"    return b == null ? null : b.array();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"SynchronizeOnNonFinalField","tnDesc":"Synchronizing on non-final fields is not safe: if the field is ever updated, different threads may end up locking on different objects.","tnFile":"external/storm-hdfs/src/main/java/org/apache/storm/hdfs/bolt/AbstractHdfsBolt.java","tnLine":76,"tnColumn":22,"tnPatch":null,"tnCodeLine":"        synchronized (this.writeLock) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-client/src/jvm/org/apache/storm/generated/JavaObject.java","tnLine":307,"tnColumn":35,"tnPatch":null,"tnCodeLine":"    hashCode = hashCode * 8191 + ((is_set_full_class_name()) ? 131071 : 524287);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'LOG' is never read.","tnFile":"external/storm-jdbc/src/main/java/org/apache/storm/jdbc/bolt/JdbcInsertBolt.java","tnLine":36,"tnColumn":33,"tnPatch":null,"tnCodeLine":"    private static final Logger LOG = LoggerFactory.getLogger(JdbcInsertBolt.class);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"StringBuffer performs synchronization that is usually unnecessary; prefer StringBuilder.","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/StormParserImplTokenManager.java","tnLine":15385,"tnColumn":21,"tnPatch":null,"tnCodeLine":"            image = new StringBuffer();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"CatchAndPrintStackTrace","tnDesc":"Logging or rethrowing exceptions should usually be preferred to catching and calling printStackTrace","tnFile":"examples/storm-perf/src/main/java/org/apache/storm/perf/utils/Helper.java","tnLine":84,"tnColumn":21,"tnPatch":null,"tnCodeLine":"                    e.printStackTrace();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java","tnLine":2188,"tnColumn":37,"tnPatch":null,"tnCodeLine":"        String port = hostPort.split(\":\")[1];","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"EqualsGetClass","tnDesc":"Overriding Object#equals in a non-final class by using getClass rather than instanceof breaks substitutability of subclasses.","tnFile":"external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/KafkaSpoutMessageId.java","tnLine":102,"tnColumn":20,"tnPatch":null,"tnCodeLine":"    public boolean equals(Object o) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/supervisor/Slot.java","tnLine":403,"tnColumn":35,"tnPatch":null,"tnCodeLine":"                rc.latch.countDown();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/logviewer/handler/LogviewerProfileHandler.java","tnLine":113,"tnColumn":40,"tnPatch":null,"tnCodeLine":"        String portStr = hostPort.split(\":\")[1];","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StreamResourceLeak","tnDesc":"Streams that encapsulate a closeable resource should be closed using try-with-resources","tnFile":"storm-server/src/main/java/org/apache/storm/localizer/LocallyCachedBlob.java","tnLine":183,"tnColumn":30,"tnPatch":null,"tnCodeLine":"            return Files.walk(p)","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ByteBufferBackingArray","tnDesc":"ByteBuffer.array() shouldn't be called unless ByteBuffer.arrayOffset() is used or if the ByteBuffer was initialized using ByteBuffer.wrap() or ByteBuffer.allocate().","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/logviewer/handler/LogviewerLogSearchHandler.java","tnLine":564,"tnColumn":36,"tnPatch":null,"tnCodeLine":"        byte[] bufArray = buf.array();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"external/storm-hdfs/src/main/java/org/apache/storm/hdfs/spout/TextFileReader.java","tnLine":123,"tnColumn":68,"tnPatch":null,"tnCodeLine":"                    this.charOffset = Long.parseLong(parts[0].split(\"=\")[1]);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"It is very rare for LinkedList to out-perform ArrayList or ArrayDeque. Avoid it unless you're willing to invest a lot of time into benchmarking. Caveat: LinkedList supports null elements, but ArrayDeque does not.","tnFile":"external/storm-hdfs/src/main/java/org/apache/storm/hdfs/bolt/AbstractHdfsBolt.java","tnLine":71,"tnColumn":38,"tnPatch":null,"tnCodeLine":"    private List<Tuple> tupleBatch = new LinkedList<>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedMethod","tnDesc":"Private method 'forceCloseLockFile' is never used.","tnFile":"external/storm-hdfs/src/main/java/org/apache/storm/hdfs/spout/FileLock.java","tnLine":276,"tnColumn":18,"tnPatch":null,"tnCodeLine":"    private void forceCloseLockFile() throws IOException {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"examples/storm-loadgen/src/main/java/org/apache/storm/loadgen/TopologyLoadConf.java","tnLine":91,"tnColumn":71,"tnPatch":null,"tnCodeLine":"        Map<String, Object> yamlConf = (Map<String, Object>)yaml.load(new FileReader(file));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"external/storm-hbase/src/main/java/org/apache/storm/hbase/state/HBaseKeyValueStateIterator.java","tnLine":64,"tnColumn":56,"tnPatch":null,"tnCodeLine":"        this.cursorKey = (namespace + \"$key:\").getBytes();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"external/storm-hdfs/src/main/java/org/apache/storm/hdfs/avro/FixedAvroSerializer.java","tnLine":39,"tnColumn":52,"tnPatch":null,"tnCodeLine":"        BufferedReader reader = new BufferedReader(new InputStreamReader(in));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'fields' is never read.","tnFile":"sql/storm-sql-runtime/src/jvm/org/apache/storm/sql/runtime/serde/tsv/TsvSerializer.java","tnLine":33,"tnColumn":32,"tnPatch":null,"tnCodeLine":"    private final List<String> fields; //reserved for future","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"read implements method in IScheme; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/JavaObject.java","tnLine":423,"tnColumn":17,"tnPatch":null,"tnCodeLine":"    public void read(org.apache.storm.thrift.protocol.TProtocol iprot, JavaObject struct) throws org.apache.storm.thrift.TException {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'errorReporter' is never read.","tnFile":"examples/storm-loadgen/src/main/java/org/apache/storm/loadgen/HttpForwardingMetricsConsumer.java","tnLine":49,"tnColumn":38,"tnPatch":null,"tnCodeLine":"    private transient IErrorReporter errorReporter;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"isSet implements method in TBase; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/JavaObject.java","tnLine":253,"tnColumn":18,"tnPatch":null,"tnCodeLine":"  public boolean isSet(_Fields field) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ThreadPriorityCheck","tnDesc":"Relying on the thread scheduler is discouraged; see Effective Java Item 72 (2nd edition) / 84 (3rd edition).","tnFile":"examples/storm-hbase-examples/src/main/java/org/apache/storm/hbase/topology/WordSpout.java","tnLine":57,"tnColumn":21,"tnPatch":null,"tnCodeLine":"        Thread.yield();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"external/storm-hdfs/src/main/java/org/apache/storm/hdfs/spout/SequenceFileReader.java","tnLine":132,"tnColumn":78,"tnPatch":null,"tnCodeLine":"                    this.recordsSinceLastSync = Long.parseLong(parts[1].split(\"=\")[1]);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"getScheme implements method in SchemeFactory; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/NullStruct.java","tnLine":257,"tnColumn":34,"tnPatch":null,"tnCodeLine":"    public NullStructTupleScheme getScheme() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"It is very rare for LinkedList to out-perform ArrayList or ArrayDeque. Avoid it unless you're willing to invest a lot of time into benchmarking. Caveat: LinkedList supports null elements, but ArrayDeque does not.","tnFile":"external/storm-solr/src/main/java/org/apache/storm/solr/schema/builder/RestJsonSchemaBuilderV2.java","tnLine":103,"tnColumn":38,"tnPatch":null,"tnCodeLine":"        List<CopyField> copyFields = new LinkedList<>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'LOG' is never read.","tnFile":"external/storm-hdfs/src/main/java/org/apache/storm/hdfs/bolt/rotation/FileSizeRotationPolicy.java","tnLine":33,"tnColumn":33,"tnPatch":null,"tnCodeLine":"    private static final Logger LOG = LoggerFactory.getLogger(FileSizeRotationPolicy.class);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"equals overrides method in Object; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/Grouping.java","tnLine":721,"tnColumn":18,"tnPatch":null,"tnCodeLine":"  public boolean equals(java.lang.Object other) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"storm-server/src/main/java/org/apache/storm/LocalCluster.java","tnLine":381,"tnColumn":53,"tnPatch":null,"tnCodeLine":"                String[] hostPort = zkOverride.split(\":\");","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java","tnLine":2391,"tnColumn":58,"tnPatch":null,"tnCodeLine":"            nimbusSummaryMap.put(\"host\", nimbusSeed.split(\":\")[0]);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/logviewer/handler/LogviewerProfileHandler.java","tnLine":81,"tnColumn":40,"tnPatch":null,"tnCodeLine":"        String portStr = hostPort.split(\":\")[1];","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"InconsistentCapitalization","tnDesc":"Found the field 'eventTime' with the same name as the parameter 'eventtime' but with different capitalization.","tnFile":"external/storm-hdfs/src/main/java/org/apache/storm/hdfs/spout/FileLock.java","tnLine":294,"tnColumn":30,"tnPatch":null,"tnCodeLine":"        public LogEntry(long eventtime, String componentID, String fileOffset) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"EqualsGetClass","tnDesc":"Overriding Object#equals in a non-final class by using getClass rather than instanceof breaks substitutability of subclasses.","tnFile":"external/storm-kafka-monitor/src/main/java/org/apache/storm/kafka/monitor/KafkaOffsetLagResult.java","tnLine":73,"tnColumn":20,"tnPatch":null,"tnCodeLine":"    public boolean equals(Object o) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"external/storm-hbase/src/main/java/org/apache/storm/hbase/bolt/mapper/HBaseProjectionCriteria.java","tnLine":80,"tnColumn":48,"tnPatch":null,"tnCodeLine":"            this.qualifier = qualifier.getBytes();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"getPos implements method in SqlAbstractParserImpl; expected @Override","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/StormParserImpl.java","tnLine":273,"tnColumn":26,"tnPatch":null,"tnCodeLine":"  protected SqlParserPos getPos() throws ParseException {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"isSet implements method in TBase; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/NullStruct.java","tnLine":130,"tnColumn":18,"tnPatch":null,"tnCodeLine":"  public boolean isSet(_Fields field) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"external/storm-kafka-monitor/src/main/java/org/apache/storm/kafka/monitor/KafkaOffsetLagUtil.java","tnLine":146,"tnColumn":75,"tnPatch":null,"tnCodeLine":"            for (String topic : newKafkaSpoutOffsetQuery.getTopics().split(\",\")) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"external/storm-hdfs/src/main/java/org/apache/storm/hdfs/spout/SequenceFileReader.java","tnLine":130,"tnColumn":50,"tnPatch":null,"tnCodeLine":"                    String[] parts = offset.split(\":\");","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/ui/filters/HeaderResponseServletFilter.java","tnLine":58,"tnColumn":13,"tnPatch":null,"tnCodeLine":"        if ((httpRequest.getPathInfo()).equals(\"/index.html\")) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"HashtableContains","tnDesc":"contains() is a legacy method that is equivalent to containsValue()","tnFile":"sql/storm-sql-external/storm-sql-mongodb/src/jvm/org/apache/storm/sql/mongodb/MongoDataSourcesProvider.java","tnLine":74,"tnColumn":31,"tnPatch":null,"tnCodeLine":"            if (props.contains(VALUE_SERIALIZED_FIELD)) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"fieldForId implements method in TBase; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/JavaObjectArg.java","tnLine":427,"tnColumn":18,"tnPatch":null,"tnCodeLine":"  public _Fields fieldForId(int fieldId) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"external/storm-mqtt/src/main/java/org/apache/storm/mqtt/spout/MqttSpout.java","tnLine":212,"tnColumn":79,"tnPatch":null,"tnCodeLine":"        LOG.debug(\"Received message: topic={}, payload={}\", topic.toString(), new String(payload.toByteArray()));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'LOG' is never read.","tnFile":"external/storm-jdbc/src/main/java/org/apache/storm/jdbc/bolt/AbstractJdbcBolt.java","tnLine":28,"tnColumn":33,"tnPatch":null,"tnCodeLine":"    private static final Logger LOG = LoggerFactory.getLogger(","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/drpc/DRPCServer.java","tnLine":103,"tnColumn":59,"tnPatch":null,"tnCodeLine":"            final Boolean httpsWantClientAuth = (Boolean) (conf.get(DaemonConfig.DRPC_HTTPS_WANT_CLIENT_AUTH));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"external/storm-hbase/src/main/java/org/apache/storm/hbase/bolt/mapper/SimpleHBaseMapper.java","tnLine":82,"tnColumn":66,"tnPatch":null,"tnCodeLine":"                cols.addCounter(this.columnFamily, field.getBytes(), toLong(tuple.getValueByField(field)));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"HashtableContains","tnDesc":"contains() is a legacy method that is equivalent to containsValue()","tnFile":"sql/storm-sql-external/storm-sql-mongodb/src/jvm/org/apache/storm/sql/mongodb/MongoDataSourcesProvider.java","tnLine":76,"tnColumn":38,"tnPatch":null,"tnCodeLine":"            } else if (props.contains(TRIDENT_VALUE_SERIALIZED_FIELD)) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"examples/storm-starter/src/jvm/org/apache/storm/starter/BlobStoreAPIWordCountTopology.java","tnLine":162,"tnColumn":25,"tnPatch":null,"tnCodeLine":"        FileWriter fw = new FileWriter(file, false);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-client/src/jvm/org/apache/storm/generated/StormTopology.java","tnLine":941,"tnColumn":35,"tnPatch":null,"tnCodeLine":"    hashCode = hashCode * 8191 + ((is_set_dependency_jars()) ? 131071 : 524287);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedMethod","tnDesc":"Private method 'producerFwdConsumer' is never used.","tnFile":"examples/storm-perf/src/main/java/org/apache/storm/perf/JCQueuePerfTest.java","tnLine":59,"tnColumn":25,"tnPatch":null,"tnCodeLine":"    private static void producerFwdConsumer(int prodBatchSz) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'map' is never read.","tnFile":"external/storm-mongodb/src/main/java/org/apache/storm/mongodb/trident/state/MongoMapState.java","tnLine":71,"tnColumn":33,"tnPatch":null,"tnCodeLine":"    private Map<String, Object> map;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The local variable 'node' is never read.","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/StormParserImpl.java","tnLine":5376,"tnColumn":13,"tnPatch":null,"tnCodeLine":"    SqlNode node;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'shards' is never read.","tnFile":"external/storm-elasticsearch/src/main/java/org/apache/storm/elasticsearch/response/PercolateResponse.java","tnLine":37,"tnColumn":20,"tnPatch":null,"tnCodeLine":"    private Shards shards;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"examples/storm-loadgen/src/main/java/org/apache/storm/loadgen/LoadMetricsServer.java","tnLine":839,"tnColumn":58,"tnPatch":null,"tnCodeLine":"                    for (String param : queryString.split(\"&\")) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"getThriftFieldId implements method in TFieldIdEnum; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/JavaObjectArg.java","tnLine":103,"tnColumn":18,"tnPatch":null,"tnCodeLine":"    public short getThriftFieldId() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"write implements method in IScheme; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/StormTopology.java","tnLine":1438,"tnColumn":17,"tnPatch":null,"tnCodeLine":"    public void write(org.apache.storm.thrift.protocol.TProtocol oprot, StormTopology struct) throws org.apache.storm.thrift.TException {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"storm-server/src/main/java/org/apache/storm/localizer/LocalizedResource.java","tnLine":285,"tnColumn":32,"tnPatch":null,"tnCodeLine":"            new BufferedWriter(new FileWriter(localVersionFile.toFile(), false)))) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'password' is never read.","tnFile":"external/storm-eventhubs/src/main/java/org/apache/storm/eventhubs/spout/EventHubSpoutConfig.java","tnLine":31,"tnColumn":26,"tnPatch":null,"tnCodeLine":"    private final String password;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"toString overrides method in Object; expected @Override","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/Token.java","tnLine":56,"tnColumn":17,"tnPatch":null,"tnCodeLine":"  public String toString()","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-client/src/jvm/org/apache/storm/generated/SpoutSpec.java","tnLine":290,"tnColumn":35,"tnPatch":null,"tnCodeLine":"    hashCode = hashCode * 8191 + ((is_set_common()) ? 131071 : 524287);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"getScheme implements method in SchemeFactory; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/StormTopology.java","tnLine":1581,"tnColumn":37,"tnPatch":null,"tnCodeLine":"    public StormTopologyTupleScheme getScheme() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ArraysAsListPrimitiveArray","tnDesc":"Arrays.asList does not autobox primitive arrays, as one might expect.","tnFile":"external/storm-jdbc/src/main/java/org/apache/storm/jdbc/common/JdbcClient.java","tnLine":76,"tnColumn":34,"tnPatch":null,"tnCodeLine":"                if (Arrays.asList(results).contains(Statement.EXECUTE_FAILED)) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'LOG' is never read.","tnFile":"storm-server/src/main/java/org/apache/storm/metricstore/rocksdb/RocksDbKey.java","tnLine":48,"tnColumn":33,"tnPatch":null,"tnCodeLine":"    private static final Logger LOG = LoggerFactory.getLogger(RocksDbKey.class);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"IntLongMath","tnDesc":"Expression of type int may overflow before being assigned to a long","tnFile":"storm-server/src/main/java/org/apache/storm/daemon/supervisor/Slot.java","tnLine":745,"tnColumn":73,"tnPatch":null,"tnCodeLine":"        long timeDiffMs = (Time.currentTimeSecs() - hb.get_time_secs()) * 1000;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/logviewer/LogviewerServer.java","tnLine":81,"tnColumn":54,"tnPatch":null,"tnCodeLine":"            final String httpsKeyPassword = (String) (conf.get(DaemonConfig.LOGVIEWER_HTTPS_KEY_PASSWORD));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"It is very rare for LinkedList to out-perform ArrayList or ArrayDeque. Avoid it unless you're willing to invest a lot of time into benchmarking. Caveat: LinkedList supports null elements, but ArrayDeque does not.","tnFile":"storm-server/src/main/java/org/apache/storm/scheduler/resource/strategies/priority/DefaultSchedulingPriorityStrategy.java","tnLine":65,"tnColumn":59,"tnPatch":null,"tnCodeLine":"        protected final LinkedList<TopologyDetails> tds = new LinkedList<>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'LOG' is never read.","tnFile":"external/storm-hbase/src/main/java/org/apache/storm/hbase/trident/mapper/SimpleTridentHBaseMapper.java","tnLine":28,"tnColumn":33,"tnPatch":null,"tnCodeLine":"    private static final Logger LOG = LoggerFactory.getLogger(SimpleTridentHBaseMapper.class);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"examples/storm-starter/src/jvm/org/apache/storm/starter/BlobStoreAPIWordCountTopology.java","tnLine":79,"tnColumn":60,"tnPatch":null,"tnCodeLine":"        blobStream.write(readFile(file).toString().getBytes());","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"storm-server/src/main/java/org/apache/storm/metricstore/rocksdb/RocksDbValue.java","tnLine":100,"tnColumn":16,"tnPatch":null,"tnCodeLine":"        return new String(this.value, 9, this.value.length - 9);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"external/storm-hbase/src/main/java/org/apache/storm/hbase/bolt/mapper/SimpleHBaseMapper.java","tnLine":77,"tnColumn":65,"tnPatch":null,"tnCodeLine":"                cols.addColumn(this.columnFamily, field.getBytes(), toBytes(tuple.getValueByField(field)));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"sql/storm-sql-core/target/generated-sources/org/apache/storm/sql/parser/impl/StormParserImplTokenManager.java","tnLine":9135,"tnColumn":8,"tnPatch":null,"tnCodeLine":"   if (((active1 &= old1)) == 0L)","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"isSet implements method in TBase; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/StormTopology.java","tnLine":783,"tnColumn":18,"tnPatch":null,"tnCodeLine":"  public boolean isSet(_Fields field) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"examples/storm-starter/src/jvm/org/apache/storm/starter/trident/TridentWordCount.java","tnLine":77,"tnColumn":46,"tnPatch":null,"tnCodeLine":"            for (String word : sentence.split(\" \")) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ThreadPriorityCheck","tnDesc":"Relying on the thread scheduler is discouraged; see Effective Java Item 72 (2nd edition) / 84 (3rd edition).","tnFile":"external/storm-mqtt/src/main/java/org/apache/storm/mqtt/spout/MqttSpout.java","tnLine":164,"tnColumn":25,"tnPatch":null,"tnCodeLine":"            Thread.yield();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-server/src/main/java/org/apache/storm/scheduler/resource/User.java","tnLine":100,"tnColumn":17,"tnPatch":null,"tnCodeLine":"        return ((cpuResourcePoolUtilization) / 2.0) + ((memoryResourcePoolUtilization) / 2.0);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"getFieldValue implements method in TBase; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/JavaObject.java","tnLine":240,"tnColumn":27,"tnPatch":null,"tnCodeLine":"  public java.lang.Object getFieldValue(_Fields field) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"examples/storm-perf/src/main/java/org/apache/storm/perf/KafkaClientHdfsTopo.java","tnLine":170,"tnColumn":95,"tnPatch":null,"tnCodeLine":"            return (tuple.getValueByField(fieldName).toString() + this.lineDelimiter).getBytes();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedMethod","tnDesc":"Private method 'twoProducer1Consumer' is never used.","tnFile":"examples/storm-perf/src/main/java/org/apache/storm/perf/JCToolsPerfTest.java","tnLine":56,"tnColumn":25,"tnPatch":null,"tnCodeLine":"    private static void twoProducer1Consumer() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"sql/storm-sql-runtime/src/jvm/org/apache/storm/sql/runtime/datasource/socket/bolt/SocketBolt.java","tnLine":81,"tnColumn":23,"tnPatch":null,"tnCodeLine":"        String data = new String(array);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'compontents' is never read.","tnFile":"flux/flux-core/src/main/java/org/apache/storm/flux/model/ExecutionContext.java","tnLine":40,"tnColumn":26,"tnPatch":null,"tnCodeLine":"    private List<Object> compontents;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"external/storm-hbase/src/main/java/org/apache/storm/hbase/trident/state/HBaseMapState.java","tnLine":163,"tnColumn":82,"tnPatch":null,"tnCodeLine":"                byte[] value = result.getValue(this.options.columnFamily.getBytes(), qualifier.getBytes());","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIServer.java","tnLine":95,"tnColumn":55,"tnPatch":null,"tnCodeLine":"        final Boolean httpsWantClientAuth = (Boolean) (conf.get(DaemonConfig.UI_HTTPS_WANT_CLIENT_AUTH));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ThreadPriorityCheck","tnDesc":"Relying on the thread scheduler is discouraged; see Effective Java Item 72 (2nd edition) / 84 (3rd edition).","tnFile":"examples/storm-hdfs-examples/src/main/java/org/apache/storm/hdfs/bolt/HdfsFileTopology.java","tnLine":149,"tnColumn":25,"tnPatch":null,"tnCodeLine":"            Thread.yield();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"getScheme implements method in SchemeFactory; expected @Override","tnFile":"storm-client/src/jvm/org/apache/storm/generated/JavaObject.java","tnLine":416,"tnColumn":37,"tnPatch":null,"tnCodeLine":"    public JavaObjectStandardScheme getScheme() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'kerberosEnabled' is never read.","tnFile":"external/storm-hive/src/main/java/org/apache/storm/hive/trident/HiveState.java","tnLine":51,"tnColumn":21,"tnPatch":null,"tnCodeLine":"    private Boolean kerberosEnabled = false;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"It is very rare for LinkedList to out-perform ArrayList or ArrayDeque. Avoid it unless you're willing to invest a lot of time into benchmarking. Caveat: LinkedList supports null elements, but ArrayDeque does not.","tnFile":"external/storm-rocketmq/src/main/java/org/apache/storm/rocketmq/bolt/RocketMqBolt.java","tnLine":83,"tnColumn":25,"tnPatch":null,"tnCodeLine":"        this.messages = new LinkedList<>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"examples/storm-starter/src/jvm/org/apache/storm/starter/trident/TridentMinMaxOfDevicesTopology.java","tnLine":168,"tnColumn":21,"tnPatch":null,"tnCodeLine":"                    (new Values(","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/drpc/DRPCServer.java","tnLine":92,"tnColumn":70,"tnPatch":null,"tnCodeLine":"            Map<String, String> filterParams = (Map<String, String>) (conf.get(DaemonConfig.DRPC_HTTP_FILTER_PARAMS));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"RandomModInteger","tnDesc":"Use Random.nextInt(int).  Random.nextInt() % n can have negative results","tnFile":"examples/storm-opentsdb-examples/src/main/java/org/apache/storm/opentsdb/MetricGenSpout.java","tnLine":70,"tnColumn":75,"tnPatch":null,"tnCodeLine":"                Collections.singletonMap(\"loc.id\", new Random().nextInt() % 64 + \"\")));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedMethod","tnDesc":"Private method 'oneProducer2Consumers' is never used.","tnFile":"examples/storm-perf/src/main/java/org/apache/storm/perf/JCQueuePerfTest.java","tnLine":107,"tnColumn":25,"tnPatch":null,"tnCodeLine":"    private static void oneProducer2Consumers(int prodBatchSz) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'conf' is never read.","tnFile":"examples/storm-opentsdb-examples/src/main/java/org/apache/storm/opentsdb/MetricGenSpout.java","tnLine":44,"tnColumn":33,"tnPatch":null,"tnCodeLine":"    private Map<String, Object> conf;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The parameter 'window' is never read.","tnFile":"storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java","tnLine":1515,"tnColumn":100,"tnPatch":null,"tnCodeLine":"    private static Map<String,Object> unpackTopologyInfo(TopologyPageInfo topologyPageInfo, String window, Map<String,Object> config) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"examples/storm-loadgen/src/main/java/org/apache/storm/loadgen/ThroughputVsLatency.java","tnLine":110,"tnColumn":49,"tnPatch":null,"tnCodeLine":"                for (String word: sentence.split(\"\\\\s+\")) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}}],null,{"analysisLOC":null,"analysisBuildSys":"Maven []","analysisLang":null}]}]],"debugLog":"\",\\\"/root/.m2/repository/org/yaml/snakeyaml/1.11/snakeyaml-1.11.jar\\\",\\\"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar\\\",\\\"/root/.m2/repository/javax/xml/bind/jaxb-api/2.3.0/jaxb-api-2.3.0.jar\\\",\\\"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.9.8/jackson-databind-2.9.8.jar\\\",\\\"/root/.m2/repository/org/apache/logging/log4j/log4j-slf4j-impl/2.11.2/log4j-slf4j-impl-2.11.2.jar\\\",\\\"/root/.m2/repository/com/esotericsoftware/kryo/3.0.3/kryo-3.0.3.jar\\\",\\\"/root/.m2/repository/org/junit/vintage/junit-vintage-engine/5.3.2/junit-vintage-engine-5.3.2.jar\\\"],\\\"output_dir\\\":\\\"/tmp/analyzing-75240f0a1c9c942d/examples/storm-elasticsearch-examples/target/classes\\\",\\\"jdk\\\":\\\"JDK1.8\\\"},{\\\"arguments\\\":[],\\\"files\\\":[\\\"/tmp/analyzing-75240f0a1c9c942d/examples/storm-mqtt-examples/src/main/java/org/apache/storm/mqtt/examples/package-info.java\\\",\\\"/tmp/analyzing-75240f0a1c9c942d/examples/storm-mqtt-examples/src/main/java/org/apache/storm/mqtt/examples/MqttBrokerPublisher.java\\\",\\\"/tmp/analyzing-75240f0a1c9c942d/examples/storm-mqtt-examples/src/main/java/org/apache/storm/mqtt/examples/CustomMessageMapper.java\\\"],\\\"classpath\\\":[\\\"/root/.m2/repository/org/apache/activemq/activemq-openwire-legacy/5.15.8/activemq-openwire-legacy-5.15.8.jar\\\",\\\"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0.jar\\\",\\\"/root/.m2/repository/org/junit/platform/junit-platform-engine/1.3.2/junit-platform-engine-1.3.2.jar\\\",\\\"/root/.m2/repository/org/fusesource/mqtt-client/mqtt-client/1.14/mqtt-client-1.14.jar\\\",\\\"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.9.8/jackson-core-2.9.8.jar\\\",\\\"/root/.m2/repository/org/slf4j/log4j-over-slf4j/1.7.26/log4j-over-slf4j-1.7.26.jar\\\",\\\"/root/.m2/repository/org/objenesis/objenesis/2.1/objenesis-2.1.jar\\\",\\\"/tmp/analyzing-75240f0a1c9c942d/storm-multilang/ruby/target/multilang-ruby-2.0.1-SNAPSHOT.jar\\\",\\\"/root/.m2/repository/commons-net/commons-net/3.6/commons-net-3.6.jar\\\",\\\"/root/.m2/repository/org/apache/activemq/activemq-broker/5.15.8/activemq-broker-5.15.8.jar\\\",\\\"/root/.m2/repository/org/fusesource/hawtdispatch/hawtdispatch-transport/1.22/hawtdispatch-transport-1.22.jar\\\",\\\"/root/.m2/repository/org/apache/logging/log4j/log4j-api/2.11.2/log4j-api-2.11.2.jar\\\",\\\"/root/.m2/repository/org/apache/geronimo/specs/geronimo-jms_1.1_spec/1.1.1/geronimo-jms_1.1_spec-1.1.1.jar\\\",\\\"/root/.m2/repository/org/ow2/asm/asm/5.0.3/asm-5.0.3.jar\\\",\\\"/root/.m2/repository/org/apache/activemq/activemq-client/5.15.8/activemq-client-5.15.8.jar\\\",\\\"/tmp/analyzing-75240f0a1c9c942d/storm-multilang/python/target/multilang-python-2.0.1-SNAPSHOT.jar\\\",\\\"/root/.m2/repository/io/dropwizard/metrics/metrics-graphite/3.2.6/metrics-graphite-3.2.6.jar\\\",\\\"/root/.m2/repository/io/dropwizard/metrics/metrics-core/3.2.6/metrics-core-3.2.6.jar\\\",\\\"/root/.m2/repository/org/opentest4j/opentest4j/1.1.1/opentest4j-1.1.1.jar\\\",\\\"/root/.m2/repository/commons-cli/commons-cli/1.4/commons-cli-1.4.jar\\\",\\\"/root/.m2/repository/com/google/guava/guava/16.0.1/guava-16.0.1.jar\\\",\\\"/tmp/analyzing-75240f0a1c9c942d/flux/flux-core/target/flux-core-2.0.1-SNAPSHOT.jar\\\",\\\"/root/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.3.2/junit-jupiter-api-5.3.2.jar\\\",\\\"/root/.m2/repository/org/junit/platform/junit-platform-commons/1.3.2/junit-platform-commons-1.3.2.jar\\\",\\\"/root/.m2/repository/org/apache/logging/log4j/log4j-core/2.11.2/log4j-core-2.11.2.jar\\\",\\\"/tmp/analyzing-75240f0a1c9c942d/storm-client/target/storm-client-2.0.1-SNAPSHOT.jar\\\",\\\"/root/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.3.2/junit-jupiter-engine-5.3.2.jar\\\",\\\"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar\\\",\\\"/root/.m2/repository/org/apache/geronimo/specs/geronimo-j2ee-management_1.1_spec/1.0.1/geronimo-j2ee-management_1.1_spec-1.0.1.jar\\\",\\\"/tmp/analyzing-75240f0a1c9c942d/storm-multilang/javascript/target/multilang-javascript-2.0.1-SNAPSHOT.jar\\\",\\\"/root/.m2/repository/org/apache/activemq/activemq-kahadb-store/5.15.8/activemq-kahadb-store-5.15.8.jar\\\",\\\"/root/.m2/repository/com/esotericsoftware/minlog/1.3.0/minlog-1.3.0.jar\\\",\\\"/tmp/analyzing-75240f0a1c9c942d/storm-shaded-deps/target/storm-shaded-deps-2.0.1-SNAPSHOT.jar\\\",\\\"/tmp/analyzing-75240f0a1c9c942d/external/storm-mqtt/target/storm-mqtt-2.0.1-SNAPSHOT.jar\\\",\\\"/tmp/analyzing-75240f0a1c9c942d/flux/flux-wrappers/target/flux-wrappers-2.0.1-SNAPSHOT.jar\\\",\\\"/root/.m2/repository/javax/annotation/javax.annotation-api/1.3.2/javax.annotation-api-1.3.2.jar\\\",\\\"/root/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar\\\",\\\"/root/.m2/repository/org/fusesource/hawtdispatch/hawtdispatch/1.22/hawtdispatch-1.22.jar\\\",\\\"/root/.m2/repository/org/apache/activemq/protobuf/activemq-protobuf/1.1/activemq-protobuf-1.1.jar\\\",\\\"/root/.m2/repository/org/fusesource/hawtbuf/hawtbuf/1.11/hawtbuf-1.11.jar\\\",\\\"/root/.m2/repository/commons-lang/commons-lang/2.6/commons-lang-2.6.jar\\\",\\\"/root/.m2/repository/com/esotericsoftware/reflectasm/1.10.1/reflectasm-1.10.1.jar\\\",\\\"/root/.m2/repository/org/apache/activemq/activemq-mqtt/5.15.8/activemq-mqtt-5.15.8.jar\\\",\\\"/root/.m2/repository/org/slf4j/slf4j-api/1.7.26/slf4j-api-1.7.26.jar\\\",\\\"/root/.m2/repository/org/yaml/snakeyaml/1.11/snakeyaml-1.11.jar\\\",\\\"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar\\\",\\\"/root/.m2/repository/javax/xml/bind/jaxb-api/2.3.0/jaxb-api-2.3.0.jar\\\",\\\"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.9.8/jackson-databind-2.9.8.jar\\\",\\\"/root/.m2/repository/org/apache/logging/log4j/log4j-slf4j-impl/2.11.2/log4j-slf4j-impl-2.11.2.jar\\\",\\\"/root/.m2/repository/com/esotericsoftware/kryo/3.0.3/kryo-3.0.3.jar\\\",\\\"/root/.m2/repository/org/junit/vintage/junit-vintage-engine/5.3.2/junit-vintage-engine-5.3.2.jar\\\"],\\\"output_dir\\\":\\\"/tmp/analyzing-75240f0a1c9c942d/examples/storm-mqtt-examples/target/classes\\\",\\\"jdk\\\":\\\"JDK1.8\\\"},{\\\"arguments\\\":[],\\\"files\\\":[\\\"/tmp/analyzing-75240f0a1c9c942d/examples/storm-pmml-examples/src/main/java/org/apache/storm/pmml/RawInputFromCSVSpout.java\\\",\\\"/tmp/analyzing-75240f0a1c9c942d/examples/storm-pmml-examples/src/main/java/org/apache/storm/pmml/JpmmlRunnerTestTopology.java\\\"],\\\"classpath\\\":[\\\"/root/.m2/repository/com/sun/xml/bind/jaxb-impl/2.2.6/jaxb-impl-2.2.6.jar\\\",\\\"/root/.m2/repository/com/google/guava/guava/16.0.1/guava-16.0.1.jar\\\",\\\"/root/.m2/repository/org/junit/platform/junit-platform-engine/1.3.2/junit-platform-engine-1.3.2.jar\\\",\\\"/root/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.3.2/junit-jupiter-api-5.3.2.jar\\\",\\\"/root/.m2/repository/org/junit/platform/junit-platform-commons/1.3.2/junit-platform-commons-1.3.2.jar\\\",\\\"/root/.m2/repository/org/apache/logging/log4j/log4j-core/2.11.2/log4j-core-2.11.2.jar\\\",\\\"/tmp/analyzing-75240f0a1c9c942d/storm-client/target/storm-client-2.0.1-SNAPSHOT.jar\\\",\\\"/root/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.3.2/junit-jupiter-engine-5.3.2.jar\\\",\\\"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar\\\",\\\"/root/.m2/repository/org/slf4j/log4j-over-slf4j/1.7.26/log4j-over-slf4j-1.7.26.jar\\\",\\\"/root/.m2/repository/com/esotericsoftware/minlog/1.3.0/minlog-1.3.0.jar\\\",\\\"/tmp/analyzing-75240f0a1c9c942d/storm-shaded-deps/target/storm-shaded-deps-2.0.1-SNAPSHOT.jar\\\",\\\"/root/.m2/repository/org/objenesis/objenesis/2.1/objenesis-2.1.jar\\\",\\\"/root/.m2/repository/org/jpmml/pmml-schema/1.0.22/pmml-schema-1.0.22.jar\\\",\\\"/root/.m2/repository/org/jpmml/pmml-manager/1.0.22/pmml-manager-1.0.22.jar\\\",\\\"/root/.m2/repository/org/apache/logging/log4j/log4j-api/2.11.2/log4j-api-2.11.2.jar\\\",\\\"/root/.m2/repository/javax/annotation/javax.annotation-api/1.3.2/javax.annotation-api-1.3.2.jar\\\",\\\"/root/.m2/repository/org/ow2/asm/asm/5.0.3/asm-5.0.3.jar\\\",\\\"/root/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar\\\",\\\"/root/.m2/repository/org/apache/commons/commons-math3/3.2/commons-math3-3.2.jar\\\",\\\"/root/.m2/repository/org/jpmml/pmml-evaluator/1.0.22/pmml-evaluator-1.0.22.jar\\\",\\\"/root/.m2/repository/io/dropwizard/metrics/metrics-graphite/3.2.6/metrics-graphite-3.2.6.jar\\\",\\\"/root/.m2/repository/com/esotericsoftware/reflectasm/1.10.1/reflectasm-1.10.1.jar\\\",\\\"/root/.m2/repository/io/dropwizard/metrics/metrics-core/3.2.6/metrics-core-3.2.6.jar\\\",\\\"/root/.m2/repository/joda-time/joda-time/2.3/joda-time-2.3.jar\\\",\\\"/root/.m2/repository/org/slf4j/slf4j-api/1.7.26/slf4j-api-1.7.26.jar\\\",\\\"/root/.m2/repository/org/jpmml/pmml-model/1.0.22/pmml-model-1.0.22.jar\\\",\\\"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar\\\",\\\"/root/.m2/repository/javax/xml/bind/jaxb-api/2.3.0/jaxb-api-2.3.0.jar\\\",\\\"/root/.m2/repository/org/apache/commons/commons-compress/1.18/commons-compress-1.18.jar\\\",\\\"/root/.m2/repository/org/opentest4j/opentest4j/1.1.1/opentest4j-1.1.1.jar\\\",\\\"/tmp/analyzing-75240f0a1c9c942d/external/storm-pmml/target/storm-pmml-2.0.1-SNAPSHOT.jar\\\",\\\"/root/.m2/repository/org/apache/logging/log4j/log4j-slf4j-impl/2.11.2/log4j-slf4j-impl-2.11.2.jar\\\",\\\"/root/.m2/repository/com/esotericsoftware/kryo/3.0.3/kryo-3.0.3.jar\\\",\\\"/root/.m2/repository/org/junit/vintage/junit-vintage-engine/5.3.2/junit-vintage-engine-5.3.2.jar\\\"],\\\"output_dir\\\":\\\"/tmp/analyzing-75240f0a1c9c942d/examples/storm-pmml-examples/target/classes\\\",\\\"jdk\\\":\\\"JDK1.8\\\"},{\\\"arguments\\\":[],\\\"files\\\":[\\\"/tmp/analyzing-75240f0a1c9c942d/examples/storm-jms-examples/src/main/java/org/apache/storm/jms/example/SpringJmsProvider.java\\\",\\\"/tmp/analyzing-75240f0a1c9c942d/examples/storm-jms-examples/src/main/java/org/apache/storm/jms/example/GenericBolt.java\\\",\\\"/tmp/analyzing-75240f0a1c9c942d/examples/storm-jms-examples/src/main/java/org/apache/storm/jms/example/ExampleJmsTopology.java\\\",\\\"/tmp/analyzing-75240f0a1c9c942d/examples/storm-jms-examples/src/main/java/org/apache/storm/jms/example/JsonTupleProducer.java\\\"],\\\"classpath\\\":[\\\"/root/.m2/repository/org/springframework/spring-context/5.1.5.RELEASE/spring-context-5.1.5.RELEASE.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-expression/5.1.5.RELEASE/spring-expression-5.1.5.RELEASE.jar\\\",\\\"/root/.m2/repository/org/apache/xbean/xbean-spring/4.8/xbean-spring-4.8.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-aop/5.1.5.RELEASE/spring-aop-5.1.5.RELEASE.jar\\\",\\\"/root/.m2/repository/org/junit/platform/junit-platform-engine/1.3.2/junit-platform-engine-1.3.2.jar\\\",\\\"/root/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.3.2/junit-jupiter-api-5.3.2.jar\\\",\\\"/root/.m2/repository/org/junit/platform/junit-platform-commons/1.3.2/junit-platform-commons-1.3.2.jar\\\",\\\"/root/.m2/repository/org/apache/logging/log4j/log4j-core/2.11.2/log4j-core-2.11.2.jar\\\",\\\"/tmp/analyzing-75240f0a1c9c942d/storm-client/target/storm-client-2.0.1-SNAPSHOT.jar\\\",\\\"/root/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.3.2/junit-jupiter-engine-5.3.2.jar\\\",\\\"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar\\\",\\\"/root/.m2/repository/org/slf4j/log4j-over-slf4j/1.7.26/log4j-over-slf4j-1.7.26.jar\\\",\\\"/root/.m2/repository/org/apache/geronimo/specs/geronimo-j2ee-management_1.1_spec/1.0.1/geronimo-j2ee-management_1.1_spec-1.0.1.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-core/5.1.5.RELEASE/spring-core-5.1.5.RELEASE.jar\\\",\\\"/root/.m2/repository/com/esotericsoftware/minlog/1.3.0/minlog-1.3.0.jar\\\",\\\"/tmp/analyzing-75240f0a1c9c942d/storm-shaded-deps/target/storm-shaded-deps-2.0.1-SNAPSHOT.jar\\\",\\\"/root/.m2/repository/org/objenesis/objenesis/2.1/objenesis-2.1.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-tx/5.1.5.RELEASE/spring-tx-5.1.5.RELEASE.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-messaging/5.1.5.RELEASE/spring-messaging-5.1.5.RELEASE.jar\\\",\\\"/tmp/analyzing-75240f0a1c9c942d/external/storm-jms/target/storm-jms-2.0.1-SNAPSHOT.jar\\\",\\\"/root/.m2/repository/org/apache/logging/log4j/log4j-api/2.11.2/log4j-api-2.11.2.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-jms/5.1.5.RELEASE/spring-jms-5.1.5.RELEASE.jar\\\",\\\"/root/.m2/repository/org/apache/geronimo/specs/geronimo-jms_1.1_spec/1.1.1/geronimo-jms_1.1_spec-1.1.1.jar\\\",\\\"/root/.m2/repository/javax/annotation/javax.annotation-api/1.3.2/javax.annotation-api-1.3.2.jar\\\",\\\"/root/.m2/repository/org/ow2/asm/asm/5.0.3/asm-5.0.3.jar\\\",\\\"/root/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar\\\",\\\"/root/.m2/repository/org/apache/activemq/activemq-client/5.15.8/activemq-client-5.15.8.jar\\\",\\\"/root/.m2/repository/org/fusesource/hawtbuf/hawtbuf/1.11/hawtbuf-1.11.jar\\\",\\\"/root/.m2/repository/io/dropwizard/metrics/metrics-graphite/3.2.6/metrics-graphite-3.2.6.jar\\\",\\\"/root/.m2/repository/com/esotericsoftware/reflectasm/1.10.1/reflectasm-1.10.1.jar\\\",\\\"/root/.m2/repository/io/dropwizard/metrics/metrics-core/3.2.6/metrics-core-3.2.6.jar\\\",\\\"/root/.m2/repository/org/slf4j/slf4j-api/1.7.26/slf4j-api-1.7.26.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-jcl/5.1.5.RELEASE/spring-jcl-5.1.5.RELEASE.jar\\\",\\\"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar\\\",\\\"/root/.m2/repository/commons-logging/commons-logging/1.0.3/commons-logging-1.0.3.jar\\\",\\\"/root/.m2/repository/javax/xml/bind/jaxb-api/2.3.0/jaxb-api-2.3.0.jar\\\",\\\"/root/.m2/repository/org/opentest4j/opentest4j/1.1.1/opentest4j-1.1.1.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-beans/5.1.5.RELEASE/spring-beans-5.1.5.RELEASE.jar\\\",\\\"/root/.m2/repository/org/apache/logging/log4j/log4j-slf4j-impl/2.11.2/log4j-slf4j-impl-2.11.2.jar\\\",\\\"/root/.m2/repository/com/esotericsoftware/kryo/3.0.3/kryo-3.0.3.jar\\\",\\\"/root/.m2/repository/org/junit/vintage/junit-vintage-engine/5.3.2/junit-vintage-engine-5.3.2.jar\\\"],\\\"output_dir\\\":\\\"/tmp/analyzing-75240f0a1c9c942d/examples/storm-jms-examples/target/classes\\\",\\\"jdk\\\":\\\"JDK1.8\\\"},{\\\"arguments\\\":[],\\\"files\\\":[\\\"/tmp/analyzing-75240f0a1c9c942d/examples/storm-rocketmq-examples/src/main/java/org/apache/storm/rocketmq/topology/WordCountTopology.java\\\",\\\"/tmp/analyzing-75240f0a1c9c942d/examples/storm-rocketmq-examples/src/main/java/org/apache/storm/rocketmq/trident/WordCountTrident.java\\\",\\\"/tmp/analyzing-75240f0a1c9c942d/examples/storm-rocketmq-examples/src/main/java/org/apache/storm/rocketmq/topology/WordCounter.java\\\"],\\\"classpath\\\":[\\\"/root/.m2/repository/io/netty/netty-all/4.1.30.Final/netty-all-4.1.30.Final.jar\\\",\\\"/root/.m2/repository/com/google/errorprone/error_prone_annotations/2.2.0/error_prone_annotations-2.2.0.jar\\\",\\\"/root/.m2/repository/org/apache/rocketmq/rocketmq-common/4.2.0/rocketmq-common-4.2.0.jar\\\",\\\"/root/.m2/repository/org/junit/platform/junit-platform-engine/1.3.2/junit-platform-engine-1.3.2.jar\\\",\\\"/root/.m2/repository/org/apache/rocketmq/rocketmq-client/4.2.0/rocketmq-client-4.2.0.jar\\\",\\\"/root/.m2/repository/org/codehaus/mojo/animal-sniffer-annotations/1.17/animal-sniffer-annotations-1.17.jar\\\",\\\"/root/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.3.2/junit-jupiter-api-5.3.2.jar\\\",\\\"/root/.m2/repository/org/junit/platform/junit-platform-commons/1.3.2/junit-platform-commons-1.3.2.jar\\\",\\\"/root/.m2/repository/org/apache/logging/log4j/log4j-core/2.11.2/log4j-core-2.11.2.jar\\\",\\\"/tmp/analyzing-75240f0a1c9c942d/storm-client/target/storm-client-2.0.1-SNAPSHOT.jar\\\",\\\"/root/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.3.2/junit-jupiter-engine-5.3.2.jar\\\",\\\"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar\\\",\\\"/root/.m2/repository/org/slf4j/log4j-over-slf4j/1.7.26/log4j-over-slf4j-1.7.26.jar\\\",\\\"/root/.m2/repository/com/esotericsoftware/minlog/1.3.0/minlog-1.3.0.jar\\\",\\\"/root/.m2/repository/com/alibaba/fastjson/1.2.29/fastjson-1.2.29.jar\\\",\\\"/tmp/analyzing-75240f0a1c9c942d/storm-shaded-deps/target/storm-shaded-deps-2.0.1-SNAPSHOT.jar\\\",\\\"/root/.m2/repository/org/objenesis/objenesis/2.1/objenesis-2.1.jar\\\",\\\"/root/.m2/repository/com/google/guava/guava/27.0.1-jre/guava-27.0.1-jre.jar\\\",\\\"/root/.m2/repository/org/apache/logging/log4j/log4j-api/2.11.2/log4j-api-2.11.2.jar\\\",\\\"/root/.m2/repository/javax/annotation/javax.annotation-api/1.3.2/javax.annotation-api-1.3.2.jar\\\",\\\"/root/.m2/repository/org/ow2/asm/asm/5.0.3/asm-5.0.3.jar\\\",\\\"/tmp/analyzing-75240f0a1c9c942d/external/storm-rocketmq/target/storm-rocketmq-2.0.1-SNAPSHOT.jar\\\",\\\"/root/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar\\\",\\\"/root/.m2/repository/com/google/j2objc/j2objc-annotations/1.1/j2objc-annotations-1.1.jar\\\",\\\"/root/.m2/repository/org/apache/commons/commons-lang3/3.4/commons-lang3-3.4.jar\\\",\\\"/root/.m2/repository/org/apache/rocketmq/rocketmq-remoting/4.2.0/rocketmq-remoting-4.2.0.jar\\\",\\\"/root/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar\\\",\\\"/root/.m2/repository/io/dropwizard/metrics/metrics-graphite/3.2.6/metrics-graphite-3.2.6.jar\\\",\\\"/root/.m2/repository/commons-lang/commons-lang/2.6/commons-lang-2.6.jar\\\",\\\"/root/.m2/repository/com/esotericsoftware/reflectasm/1.10.1/reflectasm-1.10.1.jar\\\",\\\"/root/.m2/repository/io/dropwizard/metrics/metrics-core/3.2.6/metrics-core-3.2.6.jar\\\",\\\"/root/.m2/repository/org/slf4j/slf4j-api/1.7.26/slf4j-api-1.7.26.jar\\\",\\\"/root/.m2/repository/org/checkerframework/checker-qual/2.5.2/checker-qual-2.5.2.jar\\\",\\\"/root/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar\\\",\\\"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar\\\",\\\"/root/.m2/repository/javax/xml/bind/jaxb-api/2.3.0/jaxb-api-2.3.0.jar\\\",\\\"/root/.m2/repository/org/opentest4j/opentest4j/1.1.1/opentest4j-1.1.1.jar\\\",\\\"/root/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar\\\",\\\"/root/.m2/repository/org/apache/logging/log4j/log4j-slf4j-impl/2.11.2/log4j-slf4j-impl-2.11.2.jar\\\",\\\"/root/.m2/repository/com/esotericsoftware/kryo/3.0.3/kryo-3.0.3.jar\\\",\\\"/root/.m2/repository/org/junit/vintage/junit-vintage-engine/5.3.2/junit-vintage-engine-5.3.2.jar\\\"],\\\"output_dir\\\":\\\"/tmp/analyzing-75240f0a1c9c942d/examples/storm-rocketmq-examples/target/classes\\\",\\\"jdk\\\":\\\"JDK1.8\\\"},{\\\"arguments\\\":[],\\\"files\\\":[\\\"/tmp/analyzing-75240f0a1c9c942d/examples/storm-perf/src/main/java/org/apache/storm/perf/utils/Helper.java\\\",\\\"/tmp/analyzing-75240f0a1c9c942d/examples/storm-perf/src/main/java/org/apache/storm/perf/bolt/CountBolt.java\\\",\\\"/tmp/analyzing-75240f0a1c9c942d/examples/storm-perf/src/main/java/org/apache/storm/perf/JCToolsPerfTest.java\\\",\\\"/tmp/analyzing-75240f0a1c9c942d/examples/storm-perf/src/main/java/org/apache/storm/perf/spout/WordGenSpout.java\\\",\\\"/tmp/analyzing-75240f0a1c9c942d/examples/storm-perf/src/main/java/org/apache/storm/perf/KafkaClientSpoutNullBoltTopo.java\\\",\\\"/tmp/analyzing-75240f0a1c9c942d/examples/storm-perf/src/main/java/org/apache/storm/perf/spout/FileReadSpout.java\\\",\\\"/tmp/analyzing-75240f0a1c9c942d/examples/storm-perf/src/main/java/org/apache/storm/perf/ConstSpoutIdBoltNullBoltTopo.java\\\",\\\"/tmp/analyzing-75240f0a1c9c942d/examples/storm-perf/src/main/java/org/apache/storm/perf/spout/ConstSpout.java\\\",\\\"/tmp/analyzing-75240f0a1c9c942d/examples/storm-perf/src/main/java/org/apache/storm/perf/spout/StringGenSpout.java\\\",\\\"/tmp/analyzing-75240f0a1c9c942d/examples/storm-perf/src/main/java/org/apache/storm/perf/FileReadWordCountTopo.java\\\",\\\"/tmp/analyzing-75240f0a1c9c942d/examples/storm-perf/src/main/java/org/apache/storm/perf/BackPressureTopo.java\\\",\\\"/tmp/analyzing-75240f0a1c9c942d/examples/storm-perf/src/main/java/org/apache/storm/perf/HdfsSpoutNullBoltTopo.java\\\",\\\"/tmp/analyzing-75240f0a1c9c942d/examples/storm-perf/src/main/java/org/apache/storm/perf/bolt/SplitSentenceBolt.java\\\",\\\"/tmp/analyzing-75240f0a1c9c942d/examples/storm-perf/src/main/java/org/apache/storm/perf/bolt/DevNullBolt.java\\\",\\\"/tmp/analyzing-75240f0a1c9c942d/examples/storm-perf/src/main/java/org/apache/storm/perf/ConstSpoutNullBoltTopo.java\\\",\\\"/tmp/analyzing-75240f0a1c9c942d/examples/storm-perf/src/main/java/org/apache/storm/perf/LowThroughputTopo.java\\\",\\\"/tmp/analyzing-75240f0a1c9c942d/examples/storm-perf/src/main/java/org/apache/storm/perf/SimplifiedWordCountTopo.java\\\",\\\"/tmp/analyzing-75240f0a1c9c942d/examples/storm-perf/src/main/java/org/apache/storm/perf/utils/BasicMetricsCollector.java\\\",\\\"/tmp/analyzing-75240f0a1c9c942d/examples/storm-perf/src/main/java/org/apache/storm/perf/StrGenSpoutHdfsBoltTopo.java\\\",\\\"/tmp/analyzing-75240f0a1c9c942d/examples/storm-perf/src/main/java/org/apache/storm/perf/ThroughputMeter.java\\\",\\\"/tmp/analyzing-75240f0a1c9c942d/examples/storm-perf/src/main/java/org/apache/storm/perf/utils/IdentityBolt.java\\\",\\\"/tmp/analyzing-75240f0a1c9c942d/examples/storm-perf/src/main/java/org/apache/storm/perf/ConstSpoutOnlyTopo.java\\\",\\\"/tmp/analyzing-75240f0a1c9c942d/examples/storm-perf/src/main/java/org/apache/storm/perf/utils/MetricsSample.java\\\",\\\"/tmp/analyzing-75240f0a1c9c942d/examples/storm-perf/src/main/java/org/apache/storm/perf/JCQueuePerfTest.java\\\",\\\"/tmp/analyzing-75240f0a1c9c942d/examples/storm-perf/src/main/java/org/apache/storm/perf/KafkaClientHdfsTopo.java\\\",\\\"/tmp/analyzing-75240f0a1c9c942d/examples/storm-perf/src/main/java/org/apache/storm/perf/bolt/IdBolt.java\\\"],\\\"classpath\\\":[\\\"/root/.m2/repository/com/squareup/okio/okio/1.4.0/okio-1.4.0.jar\\\",\\\"/root/.m2/repository/org/eclipse/jetty/jetty-security/9.3.25.v20180904/jetty-security-9.3.25.v20180904.jar\\\",\\\"/root/.m2/repository/com/jcraft/jsch/0.1.54/jsch-0.1.54.jar\\\",\\\"/root/.m2/repository/org/apache/curator/curator-test/2.13.0/curator-test-2.13.0.jar\\\",\\\"/root/.m2/repository/org/eclipse/jetty/jetty-server/9.4.14.v20181114/jetty-server-9.4.14.v20181114.jar\\\",\\\"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0.jar\\\",\\\"/root/.m2/repository/org/junit/platform/junit-platform-engine/1.3.2/junit-platform-engine-1.3.2.jar\\\",\\\"/root/.m2/repository/org/apache/hadoop/hadoop-mapreduce-client-common/2.8.5/hadoop-mapreduce-client-common-2.8.5.jar\\\",\\\"/root/.m2/repository/org/apache/hive/hive-service-rpc/2.3.4/hive-service-rpc-2.3.4.jar\\\",\\\"/root/.m2/repository/org/codehaus/mojo/animal-sniffer-annotations/1.17/animal-sniffer-annotations-1.17.jar\\\",\\\"/root/.m2/repository/org/apache/hadoop/hadoop-hdfs/2.8.5/hadoop-hdfs-2.8.5.jar\\\",\\\"/root/.m2/repository/org/objenesis/objenesis/2.1/objenesis-2.1.jar\\\",\\\"/root/.m2/repository/com/lmax/disruptor/3.3.6/disruptor-3.3.6.jar\\\",\\\"/root/.m2/repository/com/google/inject/guice/3.0/guice-3.0.jar\\\",\\\"/root/.m2/repository/org/apache/calcite/calcite-druid/1.10.0/calcite-druid-1.10.0.jar\\\",\\\"/root/.m2/repository/com/sun/jersey/jersey-client/1.9/jersey-client-1.9.jar\\\",\\\"/root/.m2/repository/org/apache/hive/hive-llap-common/2.3.4/hive-llap-common-2.3.4.jar\\\",\\\"/root/.m2/repository/org/apache/hadoop/hadoop-yarn-server-resourcemanager/2.8.5/hadoop-yarn-server-resourcemanager-2.8.5.jar\\\",\\\"/root/.m2/repository/commons-net/commons-net/3.1/commons-net-3.1.jar\\\",\\\"/root/.m2/repository/com/github/stephenc/jcip/jcip-annotations/1.0-1/jcip-annotations-1.0-1.jar\\\",\\\"/root/.m2/repository/org/mortbay/jetty/jetty-util/6.1.26/jetty-util-6.1.26.jar\\\",\\\"/root/.m2/repository/org/apache/hbase/hbase-client/2.1.3/hbase-client-2.1.3.jar\\\",\\\"/root/.m2/repository/org/apache/ant/ant/1.9.1/ant-1.9.1.jar\\\",\\\"/root/.m2/repository/commons-io/commons-io/2.6/commons-io-2.6.jar\\\",\\\"/root/.m2/repository/org/apache/commons/commons-math3/3.1.1/commons-math3-3.1.1.jar\\\",\\\"/root/.m2/repository/org/apache/httpcomponents/httpclient/4.5.6/httpclient-4.5.6.jar\\\",\\\"/root/.m2/repository/org/javassist/javassist/3.18.1-GA/javassist-3.18.1-GA.jar\\\",\\\"/root/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar\\\",\\\"/root/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar\\\",\\\"/root/.m2/repository/org/apache/twill/twill-discovery-core/0.6.0-incubating/twill-discovery-core-0.6.0-incubating.jar\\\",\\\"/root/.m2/repository/com/google/inject/extensions/guice-assistedinject/3.0/guice-assistedinject-3.0.jar\\\",\\\"/root/.m2/repository/org/apache/hadoop/hadoop-yarn-registry/2.8.5/hadoop-yarn-registry-2.8.5.jar\\\",\\\"/root/.m2/repository/org/apache/hbase/hbase-hadoop-compat/2.1.3/hbase-hadoop-compat-2.1.3.jar\\\",\\\"/root/.m2/repository/org/apache/hive/hive-llap-client/2.3.4/hive-llap-client-2.3.4.jar\\\",\\\"/root/.m2/repository/javax/jms/jms/1.1/jms-1.1.jar\\\",\\\"/root/.m2/repository/org/apache/geronimo/specs/geronimo-jta_1.1_spec/1.1.1/geronimo-jta_1.1_spec-1.1.1.jar\\\",\\\"/root/.m2/repository/org/apache/orc/orc-core/1.3.3/orc-core-1.3.3.jar\\\",\\\"/root/.m2/repository/io/netty/netty-all/4.1.30.Final/netty-all-4.1.30.Final.jar\\\",\\\"/root/.m2/repository/com/sun/jersey/jersey-server/1.9/jersey-server-1.9.jar\\\",\\\"/root/.m2/repository/org/apache/hadoop/hadoop-common/2.8.5/hadoop-common-2.8.5.jar\\\",\\\"/root/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.1/osgi-resource-locator-1.0.1.jar\\\",\\\"/root/.m2/repository/org/apache/calcite/avatica/avatica/1.8.0/avatica-1.8.0.jar\\\",\\\"/root/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.3.2/junit-jupiter-api-5.3.2.jar\\\",\\\"/root/.m2/repository/org/apache/zookeeper/zookeeper/3.4.6/zookeeper-3.4.6-tests.jar\\\",\\\"/root/.m2/repository/commons-configuration/commons-configuration/1.6/commons-configuration-1.6.jar\\\",\\\"/root/.m2/repository/org/apache/thrift/libfb303/0.9.3/libfb303-0.9.3.jar\\\",\\\"/root/.m2/repository/org/apache/twill/twill-zookeeper/0.6.0-incubating/twill-zookeeper-0.6.0-incubating.jar\\\",\\\"/root/.m2/repository/com/google/code/gson/gson/2.2.4/gson-2.2.4.jar\\\",\\\"/root/.m2/repository/org/apache/hadoop/hadoop-mapreduce-client-shuffle/2.8.5/hadoop-mapreduce-client-shuffle-2.8.5.jar\\\",\\\"/root/.m2/repository/org/apache/hbase/thirdparty/hbase-shaded-miscellaneous/2.1.0/hbase-shaded-miscellaneous-2.1.0.jar\\\",\\\"/root/.m2/repository/co/cask/tephra/tephra-hbase-compat-1.0/0.6.0/tephra-hbase-compat-1.0-0.6.0.jar\\\",\\\"/root/.m2/repository/commons-digester/commons-digester/1.8/commons-digester-1.8.jar\\\",\\\"/tmp/analyzing-75240f0a1c9c942d/external/storm-kafka-client/target/storm-kafka-client-2.0.1-SNAPSHOT.jar\\\",\\\"/root/.m2/repository/org/apache/hive/hcatalog/hive-webhcat-java-client/2.3.4/hive-webhcat-java-client-2.3.4.jar\\\",\\\"/root/.m2/repository/org/apache/hbase/hbase-replication/2.1.3/hbase-replication-2.1.3.jar\\\",\\\"/root/.m2/repository/org/jruby/joni/joni/2.1.11/joni-2.1.11.jar\\\",\\\"/root/.m2/repository/javax/annotation/javax.annotation-api/1.3.2/javax.annotation-api-1.3.2.jar\\\",\\\"/root/.m2/repository/org/apache/httpcomponents/httpcore/4.4.10/httpcore-4.4.10.jar\\\",\\\"/root/.m2/repository/javax/servlet/jsp/javax.servlet.jsp-api/2.3.1/javax.servlet.jsp-api-2.3.1.jar\\\",\\\"/root/.m2/repository/com/sun/jersey/contribs/jersey-guice/1.9/jersey-guice-1.9.jar\\\",\\\"/root/.m2/repository/com/squareup/okhttp/okhttp/2.4.0/okhttp-2.4.0.jar\\\",\\\"/root/.m2/repository/org/apache/hadoop/hadoop-archives/2.8.5/hadoop-archives-2.8.5.jar\\\",\\\"/root/.m2/repository/org/antlr/antlr-runtime/3.5.2/antlr-runtime-3.5.2.jar\\\",\\\"/root/.m2/repository/org/apache/hbase/hbase-http/2.1.3/hbase-http-2.1.3.jar\\\",\\\"/root/.m2/repository/net/sf/opencsv/opencsv/2.3/opencsv-2.3.jar\\\",\\\"/root/.m2/repository/org/slf4j/slf4j-api/1.7.26/slf4j-api-1.7.26.jar\\\",\\\"/root/.m2/repository/org/checkerframework/checker-qual/2.5.2/checker-qual-2.5.2.jar\\\",\\\"/root/.m2/repository/javax/servlet/jsp-api/2.0/jsp-api-2.0.jar\\\",\\\"/root/.m2/repository/org/yaml/snakeyaml/1.11/snakeyaml-1.11.jar\\\",\\\"/root/.m2/repository/org/apache/hadoop/hadoop-yarn-server-common/2.8.5/hadoop-yarn-server-common-2.8.5.jar\\\",\\\"/root/.m2/repository/org/apache/hive/hive-storage-api/2.4.0/hive-storage-api-2.4.0.jar\\\",\\\"/root/.m2/repository/net/sf/jpam/jpam/1.1/jpam-1.1.jar\\\",\\\"/root/.m2/repository/oro/oro/2.0.8/oro-2.0.8.jar\\\",\\\"/root/.m2/repository/org/apache/zookeeper/zookeeper/3.4.14/zookeeper-3.4.14.jar\\\",\\\"/root/.m2/repository/org/apache/hive/hive-cli/2.3.4/hive-cli-2.3.4.jar\\\",\\\"/root/.m2/repository/org/codehaus/groovy/groovy-all/2.4.4/groovy-all-2.4.4.jar\\\",\\\"/root/.m2/repository/org/slf4j/log4j-over-slf4j/1.7.26/log4j-over-slf4j-1.7.26.jar\\\",\\\"/root/.m2/repository/com/thoughtworks/paranamer/paranamer/2.3/paranamer-2.3.jar\\\",\\\"/root/.m2/repository/asm/asm-tree/3.1/asm-tree-3.1.jar\\\",\\\"/root/.m2/repository/net/java/dev/jets3t/jets3t/0.9.0/jets3t-0.9.0.jar\\\",\\\"/root/.m2/repository/org/apache/hive/hive-llap-server/2.3.4/hive-llap-server-2.3.4.jar\\\",\\\"/root/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.27/jersey-container-servlet-core-2.27.jar\\\",\\\"/root/.m2/repository/org/eclipse/jetty/orbit/javax.servlet/3.0.0.v201112011016/javax.servlet-3.0.0.v201112011016.jar\\\",\\\"/root/.m2/repository/org/apache/commons/commons-lang3/3.6/commons-lang3-3.6.jar\\\",\\\"/root/.m2/repository/asm/asm/3.1/asm-3.1.jar\\\",\\\"/root/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar\\\",\\\"/root/.m2/repository/org/apache/hbase/hbase-server/2.1.3/hbase-server-2.1.3.jar\\\",\\\"/root/.m2/repository/io/dropwizard/metrics/metrics-core/3.2.6/metrics-core-3.2.6.jar\\\",\\\"/root/.m2/repository/org/eclipse/jetty/jetty-util-ajax/9.3.25.v20180904/jetty-util-ajax-9.3.25.v20180904.jar\\\",\\\"/root/.m2/repository/org/apache/hadoop/hadoop-yarn-client/2.8.5/hadoop-yarn-client-2.8.5.jar\\\",\\\"/root/.m2/repository/com/tdunning/json/1.8/json-1.8.jar\\\",\\\"/root/.m2/repository/org/apache/hive/shims/hive-shims-0.23/2.3.4/hive-shims-0.23-2.3.4.jar\\\",\\\"/root/.m2/repository/org/apache/parquet/parquet-hadoop-bundle/1.8.1/parquet-hadoop-bundle-1.8.1.jar\\\",\\\"/root/.m2/repository/org/apache/hive/hcatalog/hive-hcatalog-server-extensions/2.3.4/hive-hcatalog-server-extensions-2.3.4.jar\\\",\\\"/root/.m2/repository/org/opentest4j/opentest4j/1.1.1/opentest4j-1.1.1.jar\\\",\\\"/root/.m2/repository/com/google/code/findbugs/jsr305/3.0.0/jsr305-3.0.0.jar\\\",\\\"/root/.m2/repository/org/glassfish/jersey/core/jersey-server/2.27/jersey-server-2.27.jar\\\",\\\"/root/.m2/repository/com/jolbox/bonecp/0.8.0.RELEASE/bonecp-0.8.0.RELEASE.jar\\\",\\\"/root/.m2/repository/com/google/protobuf/protobuf-java/2.5.0/protobuf-java-2.5.0.jar\\\",\\\"/root/.m2/repository/commons-cli/commons-cli/1.4/commons-cli-1.4.jar\\\",\\\"/root/.m2/repository/org/glassfish/jersey/core/jersey-client/2.27/jersey-client-2.27.jar\\\",\\\"/root/.m2/repository/org/jamon/jamon-runtime/2.4.1/jamon-runtime-2.4.1.jar\\\",\\\"/root/.m2/repository/org/apache/hadoop/hadoop-mapreduce-client-core/2.8.5/hadoop-mapreduce-client-core-2.8.5.jar\\\",\\\"/root/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar\\\",\\\"/root/.m2/repository/javolution/javolution/5.5.1/javolution-5.5.1.jar\\\",\\\"/root/.m2/repository/org/apache/logging/log4j/log4j-1.2-api/2.11.2/log4j-1.2-api-2.11.2.jar\\\",\\\"/root/.m2/repository/org/apache/hadoop/hadoop-mapreduce-client-jobclient/2.8.5/hadoop-mapreduce-client-jobclient-2.8.5.jar\\\",\\\"/root/.m2/repository/org/apache/logging/log4j/log4j-core/2.11.2/log4j-core-2.11.2.jar\\\",\\\"/root/.m2/repository/xml-apis/xml-apis/1.3.04/xml-apis-1.3.04.jar\\\",\\\"/tmp/analyzing-75240f0a1c9c942d/storm-client/target/storm-client-2.0.1-SNAPSHOT.jar\\\",\\\"/root/.m2/repository/com/zaxxer/HikariCP/2.5.1/HikariCP-2.5.1.jar\\\",\\\"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar\\\",\\\"/root/.m2/repository/org/apache/hive/hive-serde/2.3.4/hive-serde-2.3.4.jar\\\",\\\"/root/.m2/repository/org/apache/twill/twill-core/0.6.0-incubating/twill-core-0.6.0-incubating.jar\\\",\\\"/tmp/analyzing-75240f0a1c9c942d/storm-shaded-deps/target/storm-shaded-deps-2.0.1-SNAPSHOT.jar\\\",\\\"/root/.m2/repository/com/sun/jersey/jersey-core/1.9/jersey-core-1.9.jar\\\",\\\"/root/.m2/repository/org/apache/hbase/hbase-metrics/2.1.3/hbase-metrics-2.1.3.jar\\\",\\\"/root/.m2/repository/org/apache/hive/hive-shims/2.3.4/hive-shims-2.3.4.jar\\\",\\\"/root/.m2/repository/co/cask/tephra/tephra-api/0.6.0/tephra-api-0.6.0.jar\\\",\\\"/root/.m2/repository/org/apache/hadoop/hadoop-annotations/2.8.5/hadoop-annotations-2.8.5.jar\\\",\\\"/root/.m2/repository/com/beust/jcommander/1.30/jcommander-1.30.jar\\\",\\\"/root/.m2/repository/com/google/guava/guava/27.0.1-jre/guava-27.0.1-jre.jar\\\",\\\"/root/.m2/repository/org/codehaus/jackson/jackson-xc/1.8.3/jackson-xc-1.8.3.jar\\\",\\\"/root/.m2/repository/javax/transaction/transaction-api/1.1/transaction-api-1.1.jar\\\",\\\"/root/.m2/repository/org/apache/curator/curator-recipes/4.2.0/curator-recipes-4.2.0.jar\\\",\\\"/root/.m2/repository/io/airlift/aircompressor/0.3/aircompressor-0.3.jar\\\",\\\"/root/.m2/repository/org/apache/hive/hive-common/2.3.4/hive-common-2.3.4.jar\\\",\\\"/root/.m2/repository/io/confluent/kafka-schema-registry-client/1.0/kafka-schema-registry-client-1.0.jar\\\",\\\"/root/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar\\\",\\\"/root/.m2/repository/joda-time/joda-time/2.3/joda-time-2.3.jar\\\",\\\"/root/.m2/repository/commons-el/commons-el/1.0/commons-el-1.0.jar\\\",\\\"/root/.m2/repository/javax/validation/validation-api/1.1.0.Final/validation-api-1.1.0.Final.jar\\\",\\\"/root/.m2/repository/org/apache/hbase/hbase-zookeeper/2.1.3/hbase-zookeeper-2.1.3.jar\\\",\\\"/root/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar\\\",\\\"/root/.m2/repository/commons-httpclient/commons-httpclient/3.0.1/commons-httpclient-3.0.1.jar\\\",\\\"/root/.m2/repository/javax/xml/bind/jaxb-api/2.3.0/jaxb-api-2.3.0.jar\\\",\\\"/root/.m2/repository/org/apache/hadoop/hadoop-auth/2.8.5/hadoop-auth-2.8.5.jar\\\",\\\"/root/.m2/repository/io/dropwizard/metrics/metrics-jvm/3.1.0/metrics-jvm-3.1.0.jar\\\",\\\"/root/.m2/repository/org/glassfish/jersey/core/jersey-common/2.27/jersey-common-2.27.jar\\\",\\\"/root/.m2/repository/com/nimbusds/nimbus-jose-jwt/4.41.1/nimbus-jose-jwt-4.41.1.jar\\\",\\\"/root/.m2/repository/org/glassfish/web/javax.servlet.jsp/2.3.2/javax.servlet.jsp-2.3.2.jar\\\",\\\"/root/.m2/repository/org/apache/hbase/hbase-protocol-shaded/2.1.3/hbase-protocol-shaded-2.1.3.jar\\\",\\\"/root/.m2/repository/ant/ant/1.6.5/ant-1.6.5.jar\\\",\\\"/root/.m2/repository/com/github/stephenc/findbugs/findbugs-annotations/1.3.9-1/findbugs-annotations-1.3.9-1.jar\\\",\\\"/root/.m2/repository/javax/ws/rs/javax.ws.rs-api/2.0.1/javax.ws.rs-api-2.0.1.jar\\\",\\\"/root/.m2/repository/org/apache/twill/twill-common/0.6.0-incubating/twill-common-0.6.0-incubating.jar\\\",\\\"/root/.m2/repository/net/minidev/accessors-smart/1.2/accessors-smart-1.2.jar\\\",\\\"/root/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar\\\",\\\"/root/.m2/repository/asm/asm-commons/3.1/asm-commons-3.1.jar\\\",\\\"/root/.m2/repository/org/antlr/ST4/4.0.4/ST4-4.0.4.jar\\\",\\\"/root/.m2/repository/commons-beanutils/commons-beanutils-core/1.8.0/commons-beanutils-core-1.8.0.jar\\\",\\\"/root/.m2/repository/org/apache/hadoop/hadoop-hdfs-client/2.8.5/hadoop-hdfs-client-2.8.5.jar\\\",\\\"/root/.m2/repository/jline/jline/0.9.94/jline-0.9.94.jar\\\",\\\"/root/.m2/repository/org/apache/commons/commons-crypto/1.0.0/commons-crypto-1.0.0.jar\\\",\\\"/root/.m2/repository/javax/servlet/javax.servlet-api/3.1.0/javax.servlet-api-3.1.0.jar\\\",\\\"/root/.m2/repository/com/google/inject/extensions/guice-servlet/3.0/guice-servlet-3.0.jar\\\",\\\"/root/.m2/repository/org/fusesource/leveldbjni/leveldbjni-all/1.8/leveldbjni-all-1.8.jar\\\",\\\"/root/.m2/repository/org/apache/logging/log4j/log4j-api/2.11.2/log4j-api-2.11.2.jar\\\",\\\"/root/.m2/repository/org/apache/curator/apache-curator/2.7.1/apache-curator-2.7.1.pom\\\",\\\"/root/.m2/repository/org/apache/avro/avro/1.7.4/avro-1.7.4.jar\\\",\\\"/root/.m2/repository/org/ow2/asm/asm/5.0.3/asm-5.0.3.jar\\\",\\\"/root/.m2/repository/org/eclipse/jetty/aggregate/jetty-all/7.6.0.v20120127/jetty-all-7.6.0.v20120127.jar\\\",\\\"/root/.m2/repository/javax/servlet/jsp/jsp-api/2.1/jsp-api-2.1.jar\\\",\\\"/root/.m2/repository/org/apache/geronimo/specs/geronimo-annotation_1.0_spec/1.1.1/geronimo-annotation_1.0_spec-1.1.1.jar\\\",\\\"/root/.m2/repository/org/apache/hive/hcatalog/hive-hcatalog-core/2.3.4/hive-hcatalog-core-2.3.4.jar\\\",\\\"/root/.m2/repository/org/datanucleus/datanucleus-core/4.1.17/datanucleus-core-4.1.17.jar\\\",\\\"/root/.m2/repository/org/eclipse/jetty/jetty-util/9.4.14.v20181114/jetty-util-9.4.14.v20181114.jar\\\",\\\"/tmp/analyzing-75240f0a1c9c942d/external/storm-hdfs/target/storm-hdfs-2.0.1-SNAPSHOT.jar\\\",\\\"/root/.m2/repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb-impl-2.2.3-1.jar\\\",\\\"/root/.m2/repository/org/apache/hbase/hbase-protocol/2.1.3/hbase-protocol-2.1.3.jar\\\",\\\"/root/.m2/repository/org/apache/geronimo/specs/geronimo-jaspic_1.0_spec/1.0/geronimo-jaspic_1.0_spec-1.0.jar\\\",\\\"/root/.m2/repository/org/eclipse/jetty/jetty-http/9.3.25.v20180904/jetty-http-9.3.25.v20180904.jar\\\",\\\"/root/.m2/repository/javax/mail/mail/1.4.1/mail-1.4.1.jar\\\",\\\"/root/.m2/repository/org/apache/commons/commons-compress/1.18/commons-compress-1.18.jar\\\",\\\"/root/.m2/repository/org/apache/ant/ant-launcher/1.9.1/ant-launcher-1.9.1.jar\\\",\\\"/root/.m2/repository/org/apache/hadoop/hadoop-yarn-api/2.8.5/hadoop-yarn-api-2.8.5.jar\\\",\\\"/root/.m2/repository/com/github/joshelser/dropwizard-metrics-hadoop-metrics2-reporter/0.1.2/dropwizard-metrics-hadoop-metrics2-reporter-0.1.2.jar\\\",\\\"/root/.m2/repository/tomcat/jasper-runtime/5.5.23/jasper-runtime-5.5.23.jar\\\",\\\"/root/.m2/repository/org/apache/yetus/audience-annotations/0.5.0/audience-annotations-0.5.0.jar\\\",\\\"/root/.m2/repository/org/codehaus/jettison/jettison/1.1/jettison-1.1.jar\\\",\\\"/root/.m2/repository/com/jamesmurty/utils/java-xmlbuilder/0.4/java-xmlbuilder-0.4.jar\\\",\\\"/root/.m2/repository/org/apache/hive/hive-llap-tez/2.3.4/hive-llap-tez-2.3.4.jar\\\",\\\"/root/.m2/repository/org/apache/curator/curator-client/4.2.0/curator-client-4.2.0.jar\\\",\\\"/root/.m2/repository/org/apache/kafka/kafka-clients/0.11.0.3/kafka-clients-0.11.0.3.jar\\\",\\\"/root/.m2/repository/it/unimi/dsi/fastutil/6.5.6/fastutil-6.5.6.jar\\\",\\\"/root/.m2/repository/org/apache/hadoop/hadoop-yarn-common/2.8.5/hadoop-yarn-common-2.8.5.jar\\\",\\\"/root/.m2/repository/org/apache/hive/shims/hive-shims-scheduler/2.3.4/hive-shims-scheduler-2.3.4.jar\\\",\\\"/root/.m2/repository/org/eclipse/jetty/jetty-servlet/9.4.14.v20181114/jetty-servlet-9.4.14.v20181114.jar\\\",\\\"/root/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar\\\",\\\"/root/.m2/repository/co/cask/tephra/tephra-core/0.6.0/tephra-core-0.6.0.jar\\\",\\\"/root/.m2/repository/org/apache/hive/hive-exec/2.3.4/hive-exec-2.3.4.jar\\\",\\\"/root/.m2/repository/org/eclipse/jetty/jetty-xml/9.3.25.v20180904/jetty-xml-9.3.25.v20180904.jar\\\",\\\"/root/.m2/repository/org/apache/hadoop/hadoop-mapreduce-client-app/2.8.5/hadoop-mapreduce-client-app-2.8.5.jar\\\",\\\"/root/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar\\\",\\\"/root/.m2/repository/org/apache/hive/hive-service/2.3.4/hive-service-2.3.4.jar\\\",\\\"/root/.m2/repository/org/apache/calcite/avatica/avatica-metrics/1.8.0/avatica-metrics-1.8.0.jar\\\",\\\"/root/.m2/repository/commons-pool/commons-pool/1.5.4/commons-pool-1.5.4.jar\\\",\\\"/root/.m2/repository/org/apache/hbase/thirdparty/hbase-shaded-netty/2.1.0/hbase-shaded-netty-2.1.0.jar\\\",\\\"/root/.m2/repository/org/apache/hive/hcatalog/hive-hcatalog-streaming/2.3.4/hive-hcatalog-streaming-2.3.4.jar\\\",\\\"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.9.8/jackson-databind-2.9.8.jar\\\",\\\"/root/.m2/repository/com/esotericsoftware/kryo/3.0.3/kryo-3.0.3.jar\\\",\\\"/root/.m2/repository/org/eclipse/jetty/jetty-webapp/9.3.25.v20180904/jetty-webapp-9.3.25.v20180904.jar\\\",\\\"/root/.m2/repository/org/apache/hadoop/hadoop-client/2.8.5/hadoop-client-2.8.5.jar\\\",\\\"/root/.m2/repository/org/apache/thrift/libthrift/0.12.0/libthrift-0.12.0.jar\\\",\\\"/root/.m2/repository/stax/stax-api/1.0.1/stax-api-1.0.1.jar\\\",\\\"/root/.m2/repository/com/google/errorprone/error_prone_annotations/2.2.0/error_prone_annotations-2.2.0.jar\\\",\\\"/root/.m2/repository/org/apache/twill/twill-api/0.6.0-incubating/twill-api-0.6.0-incubating.jar\\\",\\\"/root/.m2/repository/javax/activation/activation/1.1.1/activation-1.1.1.jar\\\",\\\"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.9.8/jackson-core-2.9.8.jar\\\",\\\"/root/.m2/repository/org/mortbay/jetty/jetty-sslengine/6.1.26/jetty-sslengine-6.1.26.jar\\\",\\\"/tmp/analyzing-75240f0a1c9c942d/external/storm-autocreds/target/storm-autocreds-2.0.1-SNAPSHOT.jar\\\",\\\"/root/.m2/repository/org/apache/hadoop/hadoop-yarn-server-applicationhistoryservice/2.8.5/hadoop-yarn-server-applicationhistoryservice-2.8.5.jar\\\",\\\"/root/.m2/repository/tomcat/jasper-compiler/5.5.23/jasper-compiler-5.5.23.jar\\\",\\\"/root/.m2/repository/commons-collections/commons-collections/3.2.2/commons-collections-3.2.2.jar\\\",\\\"/root/.m2/repository/io/netty/netty/3.6.2.Final/netty-3.6.2.Final.jar\\\",\\\"/root/.m2/repository/org/apache/hbase/hbase-common/2.1.3/hbase-common-2.1.3.jar\\\",\\\"/root/.m2/repository/org/apache/derby/derby/10.10.2.0/derby-10.10.2.0.jar\\\",\\\"/root/.m2/repository/org/apache/slider/slider-core/0.90.2-incubating/slider-core-0.90.2-incubating.jar\\\",\\\"/root/.m2/repository/org/apache/hive/hive-metastore/2.3.4/hive-metastore-2.3.4.jar\\\",\\\"/root/.m2/repository/org/apache/hbase/hbase-metrics-api/2.1.3/hbase-metrics-api-2.1.3.jar\\\",\\\"/root/.m2/repository/org/apache/ivy/ivy/2.4.0/ivy-2.4.0.jar\\\",\\\"/root/.m2/repository/com/google/j2objc/j2objc-annotations/1.1/j2objc-annotations-1.1.jar\\\",\\\"/root/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.27/jersey-media-jaxb-2.27.jar\\\",\\\"/root/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar\\\",\\\"/root/.m2/repository/org/apache/curator/curator-framework/4.2.0/curator-framework-4.2.0.jar\\\",\\\"/root/.m2/repository/io/dropwizard/metrics/metrics-graphite/3.2.6/metrics-graphite-3.2.6.jar\\\",\\\"/root/.m2/repository/net/minidev/json-smart/2.3/json-smart-2.3.jar\\\",\\\"/root/.m2/repository/org/apache/hive/hive-llap-common/2.3.4/hive-llap-common-2.3.4-tests.jar\\\",\\\"/root/.m2/repository/org/apache/calcite/calcite-linq4j/1.10.0/calcite-linq4j-1.10.0.jar\\\",\\\"/root/.m2/repository/org/apache/twill/twill-discovery-api/0.6.0-incubating/twill-discovery-api-0.6.0-incubating.jar\\\",\\\"/root/.m2/repository/org/apache/htrace/htrace-core4/4.0.1-incubating/htrace-core4-4.0.1-incubating.jar\\\",\\\"/root/.m2/repository/org/apache/hbase/thirdparty/hbase-shaded-protobuf/2.1.0/hbase-shaded-protobuf-2.1.0.jar\\\",\\\"/root/.m2/repository/commons-logging/commons-logging/1.1.3/commons-logging-1.1.3.jar\\\",\\\"/root/.m2/repository/org/apache/hive/hive-vector-code-gen/2.3.4/hive-vector-code-gen-2.3.4.jar\\\",\\\"/root/.m2/repository/org/apache/hbase/hbase-hadoop2-compat/2.1.3/hbase-hadoop2-compat-2.1.3.jar\\\",\\\"/root/.m2/repository/org/apache/hadoop/hadoop-yarn-server-web-proxy/2.8.5/hadoop-yarn-server-web-proxy-2.8.5.jar\\\",\\\"/root/.m2/repository/org/apache/velocity/velocity/1.5/velocity-1.5.jar\\\",\\\"/root/.m2/repository/org/jctools/jctools-core/2.0.1/jctools-core-2.0.1.jar\\\",\\\"/root/.m2/repository/org/apache/logging/log4j/log4j-web/2.11.2/log4j-web-2.11.2.jar\\\",\\\"/root/.m2/repository/org/apache/hive/shims/hive-shims-common/2.3.4/hive-shims-common-2.3.4.jar\\\",\\\"/root/.m2/repository/org/jruby/jcodings/jcodings/1.0.18/jcodings-1.0.18.jar\\\",\\\"/root/.m2/repository/org/xerial/snappy/snappy-java/1.1.2.6/snappy-java-1.1.2.6.jar\\\",\\\"/root/.m2/repository/org/junit/platform/junit-platform-commons/1.3.2/junit-platform-commons-1.3.2.jar\\\",\\\"/root/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.3.2/junit-jupiter-engine-5.3.2.jar\\\",\\\"/root/.m2/repository/xerces/xercesImpl/2.9.1/xercesImpl-2.9.1.jar\\\",\\\"/root/.m2/repository/xmlenc/xmlenc/0.52/xmlenc-0.52.jar\\\",\\\"/root/.m2/repository/org/datanucleus/datanucleus-rdbms/4.1.19/datanucleus-rdbms-4.1.19.jar\\\",\\\"/root/.m2/repository/com/esotericsoftware/minlog/1.3.0/minlog-1.3.0.jar\\\",\\\"/root/.m2/repository/org/codehaus/jackson/jackson-jaxrs/1.8.3/jackson-jaxrs-1.8.3.jar\\\",\\\"/root/.m2/repository/commons-dbcp/commons-dbcp/1.4/commons-dbcp-1.4.jar\\\",\\\"/root/.m2/repository/org/eclipse/jetty/jetty-io/9.4.14.v20181114/jetty-io-9.4.14.v20181114.jar\\\",\\\"/root/.m2/repository/com/sun/jersey/jersey-json/1.9/jersey-json-1.9.jar\\\",\\\"/root/.m2/repository/org/apache/hbase/hbase-annotations/2.1.3/hbase-annotations-2.1.3.jar\\\",\\\"/root/.m2/repository/io/confluent/kafka-avro-serializer/1.0/kafka-avro-serializer-1.0.jar\\\",\\\"/root/.m2/repository/javax/transaction/jta/1.1/jta-1.1.jar\\\",\\\"/root/.m2/repository/org/datanucleus/javax.jdo/3.2.0-m3/javax.jdo-3.2.0-m3.jar\\\",\\\"/root/.m2/repository/javax/jdo/jdo-api/3.0.1/jdo-api-3.0.1.jar\\\",\\\"/root/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar\\\",\\\"/root/.m2/repository/org/datanucleus/datanucleus-api-jdo/4.2.4/datanucleus-api-jdo-4.2.4.jar\\\",\\\"/root/.m2/repository/commons-lang/commons-lang/2.6/commons-lang-2.6.jar\\\",\\\"/root/.m2/repository/org/apache/hbase/hbase-procedure/2.1.3/hbase-procedure-2.1.3.jar\\\",\\\"/root/.m2/repository/net/jpountz/lz4/lz4/1.3.0/lz4-1.3.0.jar\\\",\\\"/root/.m2/repository/com/esotericsoftware/reflectasm/1.10.1/reflectasm-1.10.1.jar\\\",\\\"/root/.m2/repository/org/glassfish/javax.el/3.0.1-b11/javax.el-3.0.1-b11.jar\\\",\\\"/root/.m2/repository/org/mortbay/jetty/jetty/6.1.26/jetty-6.1.26.jar\\\",\\\"/root/.m2/repository/commons-daemon/commons-daemon/1.0.13/commons-daemon-1.0.13.jar\\\",\\\"/root/.m2/repository/io/dropwizard/metrics/metrics-json/3.1.0/metrics-json-3.1.0.jar\\\",\\\"/root/.m2/repository/org/glassfish/hk2/external/javax.inject/2.5.0-b42/javax.inject-2.5.0-b42.jar\\\",\\\"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar\\\",\\\"/root/.m2/repository/org/apache/logging/log4j/log4j-slf4j-impl/2.11.2/log4j-slf4j-impl-2.11.2.jar\\\",\\\"/root/.m2/repository/org/junit/vintage/junit-vintage-engine/5.3.2/junit-vintage-engine-5.3.2.jar\\\"],\\\"output_dir\\\":\\\"/tmp/analyzing-75240f0a1c9c942d/examples/storm-perf/target/classes\\\",\\\"jdk\\\":\\\"JDK1.8\\\"}]\"\n[DEBUG] [20/Jun/2019:13:28:32 +0000] [()] Done generating compilation database.\n[DEBUG] [20/Jun/2019:13:28:32 +0000] [()] Trying to autodetect the build system based on files present in the repository.\n[DEBUG] [20/Jun/2019:13:28:32 +0000] [()] Errorprone JDK1.8 and jceJDK \"JDK1.8\" are compatible.\n[DEBUG] [20/Jun/2019:16:16:43 +0000] [()] Tool completed with 484 but only reporting up to 1200.\n[DEBUG] [20/Jun/2019:17:17:09 +0000] [()] Per file run failed on entry \n    ( JavaCompEntry\n        { jceJDK = \"JDK1.8\"\n        , jceClasspath =\n            [ \"/root/.m2/repository/org/apache/thrift/libthrift/0.12.0/libthrift-0.12.0.jar\"\n            , \"/root/.m2/repository/com/lmax/disruptor/3.0.1/disruptor-3.0.1.jar\"\n            , \"/root/.m2/repository/org/junit/platform/junit-platform-engine/1.3.2/junit-platform-engine-1.3.2.jar\"\n            , \"/root/.m2/repository/com/github/jnr/jnr-ffi/2.0.7/jnr-ffi-2.0.7.jar\"\n            , \"/root/.m2/repository/org/ow2/asm/asm-util/5.0.3/asm-util-5.0.3.jar\"\n            , \"/root/.m2/repository/org/slf4j/log4j-over-slf4j/1.7.26/log4j-over-slf4j-1.7.26.jar\"\n            , \"/root/.m2/repository/org/ow2/asm/asm-commons/5.0.3/asm-commons-5.0.3.jar\"\n            , \"/root/.m2/repository/jline/jline/0.9.94/jline-0.9.94.jar\"\n            , \"/root/.m2/repository/org/apache/httpcomponents/httpcore/4.4.1/httpcore-4.4.1.jar\"\n            , \"/root/.m2/repository/io/netty/netty-handler/4.1.30.Final/netty-handler-4.1.30.Final.jar\"\n            , \"/root/.m2/repository/javax/servlet/javax.servlet-api/3.1.0/javax.servlet-api-3.1.0.jar\"\n            , \"/root/.m2/repository/commons-collections/commons-collections/3.2.2/commons-collections-3.2.2.jar\"\n            , \"/root/.m2/repository/com/github/jnr/jffi/1.2.10/jffi-1.2.10.jar\"\n            , \"/root/.m2/repository/org/hamcrest/java-hamcrest/2.0.0.0/java-hamcrest-2.0.0.0.jar\"\n            , \"/root/.m2/repository/com/datastax/cassandra/cassandra-driver-mapping/3.1.2/cassandra-driver-mapping-3.1.2.jar\"\n            , \"/root/.m2/repository/org/apache/logging/log4j/log4j-api/2.11.2/log4j-api-2.11.2.jar\"\n            , \"/root/.m2/repository/net/bytebuddy/byte-buddy/1.8.10/byte-buddy-1.8.10.jar\"\n            , \"/root/.m2/repository/org/ow2/asm/asm/5.0.3/asm-5.0.3.jar\"\n            , \"/root/.m2/repository/org/mockito/mockito-core/2.19.0/mockito-core-2.19.0.jar\"\n            , \"/root/.m2/repository/org/apache/commons/commons-math3/3.2/commons-math3-3.2.jar\"\n            , \"/root/.m2/repository/com/github/jnr/jnr-constants/0.9.0/jnr-constants-0.9.0.jar\"\n            , \"/root/.m2/repository/net/jpountz/lz4/lz4/1.2.0/lz4-1.2.0.jar\"\n            , \"/root/.m2/repository/org/apache/commons/commons-lang3/3.3/commons-lang3-3.3.jar\"\n            , \"/root/.m2/repository/io/dropwizard/metrics/metrics-graphite/3.2.6/metrics-graphite-3.2.6.jar\"\n            , \"/root/.m2/repository/ch/qos/logback/logback-core/1.1.2/logback-core-1.1.2.jar\"\n            , \"/root/.m2/repository/io/dropwizard/metrics/metrics-core/3.2.6/metrics-core-3.2.6.jar\"\n            , \"/root/.m2/repository/com/yammer/metrics/metrics-core/2.2.0/metrics-core-2.2.0.jar\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/storm-server/target/storm-server-2.0.1-SNAPSHOT.jar\"\n            , \"/root/.m2/repository/io/netty/netty-common/4.1.30.Final/netty-common-4.1.30.Final.jar\"\n            , \"/root/.m2/repository/org/antlr/antlr/3.5.2/antlr-3.5.2.jar\"\n            , \"/root/.m2/repository/commons-io/commons-io/2.6/commons-io-2.6.jar\"\n            , \"/root/.m2/repository/org/apache/httpcomponents/httpclient/4.5.6/httpclient-4.5.6.jar\"\n            , \"/root/.m2/repository/com/addthis/metrics/reporter-config/2.1.0/reporter-config-2.1.0.jar\"\n            , \"/root/.m2/repository/org/ow2/asm/asm-analysis/5.0.3/asm-analysis-5.0.3.jar\"\n            , \"/root/.m2/repository/com/ning/compress-lzf/0.8.4/compress-lzf-0.8.4.jar\"\n            , \"/root/.m2/repository/io/netty/netty-resolver/4.1.30.Final/netty-resolver-4.1.30.Final.jar\"\n            , \"/root/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar\"\n            , \"/root/.m2/repository/org/apache/commons/commons-compress/1.18/commons-compress-1.18.jar\"\n            , \"/root/.m2/repository/org/opentest4j/opentest4j/1.1.1/opentest4j-1.1.1.jar\"\n            , \"/root/.m2/repository/org/ow2/asm/asm-tree/5.0.3/asm-tree-5.0.3.jar\"\n            , \"/root/.m2/repository/commons-cli/commons-cli/1.4/commons-cli-1.4.jar\"\n            , \"/root/.m2/repository/com/thinkaurelius/thrift/thrift-server/0.3.7/thrift-server-0.3.7.jar\"\n            , \"/root/.m2/repository/com/github/jbellis/jamm/0.3.0/jamm-0.3.0.jar\"\n            , \"/root/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.9.2/jackson-core-asl-1.9.2.jar\"\n            , \"/root/.m2/repository/io/netty/netty-all/4.1.30.Final/netty-all-4.1.30.Final.jar\"\n            , \"/root/.m2/repository/com/google/guava/guava/16.0.1/guava-16.0.1.jar\"\n            , \"/root/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.3.2/junit-jupiter-api-5.3.2.jar\"\n            , \"/root/.m2/repository/io/netty/netty-codec/4.1.30.Final/netty-codec-4.1.30.Final.jar\"\n            , \"/root/.m2/repository/org/junit/platform/junit-platform-commons/1.3.2/junit-platform-commons-1.3.2.jar\"\n            , \"/root/.m2/repository/net/sf/supercsv/super-csv/2.1.0/super-csv-2.1.0.jar\"\n            , \"/root/.m2/repository/org/apache/logging/log4j/log4j-core/2.11.2/log4j-core-2.11.2.jar\"\n            , \"/root/.m2/repository/com/datastax/cassandra/cassandra-driver-core/3.1.2/cassandra-driver-core-3.1.2.jar\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/storm-client/target/storm-client-2.0.1-SNAPSHOT.jar\"\n            , \"/root/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.3.2/junit-jupiter-engine-5.3.2.jar\"\n            , \"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar\"\n            , \"/root/.m2/repository/org/antlr/ST4/4.0.8/ST4-4.0.8.jar\"\n            , \"/root/.m2/repository/io/netty/netty-transport/4.1.30.Final/netty-transport-4.1.30.Final.jar\"\n            , \"/root/.m2/repository/com/esotericsoftware/minlog/1.3.0/minlog-1.3.0.jar\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/storm-shaded-deps/target/storm-shaded-deps-2.0.1-SNAPSHOT.jar\"\n            , \"/root/.m2/repository/com/googlecode/concurrentlinkedhashmap/concurrentlinkedhashmap-lru/1.3/concurrentlinkedhashmap-lru-1.3.jar\"\n            , \"/root/.m2/repository/com/github/jnr/jffi/1.2.10/jffi-1.2.10-native.jar\"\n            , \"/root/.m2/repository/org/rocksdb/rocksdbjni/5.8.6/rocksdbjni-5.8.6.jar\"\n            , \"/root/.m2/repository/ch/qos/logback/logback-classic/1.1.2/logback-classic-1.1.2.jar\"\n            , \"/root/.m2/repository/io/netty/netty-buffer/4.1.30.Final/netty-buffer-4.1.30.Final.jar\"\n            , \"/root/.m2/repository/org/jboss/logging/jboss-logging/3.1.0.CR2/jboss-logging-3.1.0.CR2.jar\"\n            , \"/root/.m2/repository/org/apache/cassandra/cassandra-all/2.1.7/cassandra-all-2.1.7.jar\"\n            , \"/root/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.9.2/jackson-mapper-asl-1.9.2.jar\"\n            , \"/root/.m2/repository/javax/annotation/javax.annotation-api/1.3.2/javax.annotation-api-1.3.2.jar\"\n            , \"/root/.m2/repository/javax/validation/validation-api/1.0.0.GA/validation-api-1.0.0.GA.jar\"\n            , \"/root/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar\"\n            , \"/root/.m2/repository/com/googlecode/json-simple/json-simple/1.1/json-simple-1.1.jar\"\n            , \"/root/.m2/repository/it/unimi/dsi/fastutil/6.5.7/fastutil-6.5.7.jar\"\n            , \"/root/.m2/repository/org/antlr/antlr-runtime/3.5.2/antlr-runtime-3.5.2.jar\"\n            , \"/root/.m2/repository/com/boundary/high-scale-lib/1.0.6/high-scale-lib-1.0.6.jar\"\n            , \"/root/.m2/repository/commons-lang/commons-lang/2.6/commons-lang-2.6.jar\"\n            , \"/root/.m2/repository/net/bytebuddy/byte-buddy-agent/1.8.10/byte-buddy-agent-1.8.10.jar\"\n            , \"/root/.m2/repository/com/esotericsoftware/reflectasm/1.10.1/reflectasm-1.10.1.jar\"\n            , \"/root/.m2/repository/org/xerial/snappy/snappy-java/1.0.5/snappy-java-1.0.5.jar\"\n            , \"/root/.m2/repository/org/objenesis/objenesis/2.6/objenesis-2.6.jar\"\n            , \"/root/.m2/repository/com/github/jnr/jnr-x86asm/1.0.2/jnr-x86asm-1.0.2.jar\"\n            , \"/root/.m2/repository/com/github/jnr/jnr-posix/3.0.27/jnr-posix-3.0.27.jar\"\n            , \"/root/.m2/repository/org/apache/cassandra/cassandra-thrift/2.1.7/cassandra-thrift-2.1.7.jar\"\n            , \"/root/.m2/repository/org/hibernate/hibernate-validator/4.3.0.Final/hibernate-validator-4.3.0.Final.jar\"\n            , \"/root/.m2/repository/com/clearspring/analytics/stream/2.5.2/stream-2.5.2.jar\"\n            , \"/root/.m2/repository/org/yaml/snakeyaml/1.11/snakeyaml-1.11.jar\"\n            , \"/root/.m2/repository/org/slf4j/slf4j-api/1.7.6/slf4j-api-1.7.6.jar\"\n            , \"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar\"\n            , \"/root/.m2/repository/net/java/dev/jna/jna/4.0.0/jna-4.0.0.jar\"\n            , \"/root/.m2/repository/javax/xml/bind/jaxb-api/2.3.0/jaxb-api-2.3.0.jar\"\n            , \"/root/.m2/repository/org/mindrot/jbcrypt/0.3m/jbcrypt-0.3m.jar\"\n            , \"/root/.m2/repository/org/apache/commons/commons-exec/1.3/commons-exec-1.3.jar\"\n            , \"/root/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar\"\n            , \"/root/.m2/repository/org/apache/logging/log4j/log4j-slf4j-impl/2.11.2/log4j-slf4j-impl-2.11.2.jar\"\n            , \"/root/.m2/repository/com/esotericsoftware/kryo/3.0.3/kryo-3.0.3.jar\"\n            , \"/root/.m2/repository/org/junit/vintage/junit-vintage-engine/5.3.2/junit-vintage-engine-5.3.2.jar\"\n            ]\n        , jceArguments = []\n        , jceInputFiles =\n            [ \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/query/builder/SimpleCQLStatementMapperBuilder.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/trident/state/MapStateFactoryBuilder.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/bolt/PairStatementTuple.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/executor/impl/BatchAsyncResultHandler.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/query/Column.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/query/impl/PreparedStatementBinder.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/bolt/BatchCassandraWriterBolt.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/BaseExecutionResultHandler.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/query/impl/RoutingKeyGenerator.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/trident/state/CassandraStateFactory.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/trident/state/SerializedStateMapper.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/query/impl/BoundCQLStatementTupleMapper.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/client/CassandraConf.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/ExecutionResultHandler.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/query/impl/BatchCQLStatementTupleMapper.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/trident/state/TransactionalTupleStateMapper.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/query/selector/FieldSelector.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/executor/AsyncExecutor.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/executor/ExecutionResultCollector.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/executor/impl/SingleAsyncResultHandler.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/query/builder/BoundCQLStatementMapperBuilder.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/query/ObjectMapperOperation.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/client/ClusterFactory.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/trident/state/OpaqueTupleStateMapper.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/executor/AsyncResultHandler.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/query/impl/SimpleCQLStatementMapper.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/context/WorkerCtx.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/Murmur3StreamGrouping.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/trident/state/CassandraMapStateFactory.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/query/AyncCQLResultSetValuesMapper.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/trident/state/TridentResultSetValuesMapper.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/trident/state/StateMapper.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/executor/AsyncExecutorProvider.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/CassandraContext.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/DynamicStatementBuilder.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/bolt/BaseCassandraBolt.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/executor/AsyncResultSetHandler.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/query/CQLResultSetValuesMapper.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/context/BeanFactory.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/trident/state/CassandraQuery.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/trident/state/SimpleStateMapper.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/trident/state/TridentAyncCQLResultSetValuesMapper.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/trident/state/SimpleTuple.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/client/SimpleClientProvider.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/trident/state/CassandraStateUpdater.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/query/builder/ObjectMapperCqlStatementMapperBuilder.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/bolt/GroupingBatchBuilder.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/bolt/PairBatchStatementTuples.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/trident/state/CassandraBackingMap.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/trident/state/CassandraState.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/query/BaseCQLStatementTupleMapper.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/query/CQLStatementTupleMapper.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/client/impl/DefaultClient.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/context/BaseBeanFactory.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/query/CQLStatementBuilder.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/bolt/CassandraWriterBolt.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/query/impl/ObjectMapperCqlStatementMapper.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/client/SimpleClient.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/trident/state/NonTransactionalTupleStateMapper.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/query/ContextQuery.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/query/CqlMapper.java\"\n            , \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/AbstractExecutionResultHandler.java\"\n            ]\n        , jceOutputDir =\n            \"/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/target/classes\"\n        }\n    , SolverError\n        { solverName = \"error-prone\"\n        , renderError =\n            \"Capture:\\n-----\\nCall Stack: \\n------Execution Failed:\\n/tmp/analyzing-75240f0a1c9c942d/external/storm-cassandra/src/main/java/org/apache/storm/cassandra/client/CassandraConf.java:300: error: cannot find symbol\\n        return Objects.toStringHelper(this)\\n                      ^\\n  symbol:   method toStringHelper(CassandraConf)\\n  location: class Objects\\nwarning: unknown enum constant Level.FULL\\n  reason: class file for com.google.j2objc.annotations.ReflectionSupport$Level not found\\nNote: Some input files use unchecked or unsafe operations.\\nNote: Recompile with -Xlint:unchecked for details.\\n1 error\\n1 warning\\n\"\n        }\n    )\n[DEBUG] [20/Jun/2019:17:29:33 +0000] [()] Tool completed with 673 but only reporting up to 1200.\n[DEBUG] [20/Jun/2019:17:29:33 +0000] [()] All tools complete for commit \"master\"\n[DEBUG] [20/Jun/2019:17:29:42 +0000] [()] Analysis has completed.\n"}}
