{"tag":"AnalysisSuccess","contents":{"requestedTools":null,"toolResults":[[{"tag":"Infer"},{"tag":"ToolSuccess","contents":[[{"tnType":"UNSAFE_GUARDED_BY_ACCESS","tnDesc":"The field `com.google.common.cache.LocalCache$Segment.accessQueue` is annotated with `@GuardedBy(\"com.google.common.cache.LocalCache$Segment.this\")`, but the lock `com.google.common.cache.LocalCache$Segment.this` is not held during the access to the field at line 3233. Since the current method is non-private, it can be called from outside the current class without synchronization. Consider wrapping the access in a `synchronized(com.google.common.cache.LocalCache$Segment.this)` block or making the method private.","tnFile":"guava/src/com/google/common/cache/LocalCache.java","tnLine":3233,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.cache.LocalCache$Segment.removeValueFromChain(com.google.common.cache.ReferenceEntry,com.google.common.cache.ReferenceEntry,java.lang.Object,int,java.lang.Object,com.google.common.cache.LocalCache$ValueReference,com.google.common.cache.RemovalCause):com.google.common.cache.ReferenceEntry","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `StandardTable$ColumnMap$ColumnMapEntrySet.this$1.get(columnKey)` could be null and is dereferenced at line 902.","tnFile":"guava/src/com/google/common/collect/StandardTable.java","tnLine":902,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.collect.StandardTable$ColumnMap$ColumnMapEntrySet.contains(java.lang.Object):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void MapMakerInternalMap$Segment.initTable(AtomicReferenceArray)` reads without synchronization from `this.threshold`. Potentially races with write in method `MapMakerInternalMap$Segment.put(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"guava/src/com/google/common/collect/MapMakerInternalMap.java","tnLine":1240,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.collect.MapMakerInternalMap$Segment.initTable(java.util.concurrent.atomic.AtomicReferenceArray):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void LocalCache$Segment.expireEntries(long)` indirectly writes to field `this.modCount` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"guava/src/com/google/common/cache/LocalCache.java","tnLine":2590,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.cache.LocalCache$Segment.expireEntries(long):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void LocalCache$Segment.setValue(ReferenceEntry,Object,Object,long)` indirectly writes to field `this.totalWeight` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"guava/src/com/google/common/cache/LocalCache.java","tnLine":2016,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.cache.LocalCache$Segment.setValue(com.google.common.cache.ReferenceEntry,java.lang.Object,java.lang.Object,long):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"UNSAFE_GUARDED_BY_ACCESS","tnDesc":"The field `com.google.common.util.concurrent.ServiceManager$ServiceManagerState.states` is annotated with `@GuardedBy(\"monitor\")`, but the lock `monitor` is not held during the access to the field at line 722. Since the current method is non-private, it can be called from outside the current class without synchronization. Consider wrapping the access in a `synchronized(monitor)` block or making the method private.","tnFile":"guava/src/com/google/common/util/concurrent/ServiceManager.java","tnLine":722,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.util.concurrent.ServiceManager$ServiceManagerState.transitionService(com.google.common.util.concurrent.Service,com.google.common.util.concurrent.Service$State,com.google.common.util.concurrent.Service$State):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Monitor.waitForUninterruptibly(Monitor$Guard)` indirectly writes to field `pred.next` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"guava/src/com/google/common/util/concurrent/Monitor.java","tnLine":873,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.util.concurrent.Monitor.waitForUninterruptibly(com.google.common.util.concurrent.Monitor$Guard):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void CollectionSpliteratorTester.testSpliteratorNotImmutable_CollectionAllowsRemove()` reads with synchronization from `this.collection`. Potentially races with unsynchronized write in method `CollectionSpliteratorTester.testSpliteratorNullable()`.\n Reporting because this access may occur on a background thread.","tnFile":"guava-testlib/src/com/google/common/collect/testing/testers/CollectionSpliteratorTester.java","tnLine":81,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.collect.testing.testers.CollectionSpliteratorTester.testSpliteratorNotImmutable_CollectionAllowsRemove():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void LocalCache$Segment.enqueueNotification(Object,int,Object,int,RemovalCause)` writes to field `this.totalWeight` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"guava/src/com/google/common/cache/LocalCache.java","tnLine":2606,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.cache.LocalCache$Segment.enqueueNotification(java.lang.Object,int,java.lang.Object,int,com.google.common.cache.RemovalCause):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `com.google.common.io.AppendableWriter` acquired by call to `asWriter(...)` at line 77 is not released after line 77.\n**Note**: potential exception at line 77","tnFile":"guava/src/com/google/common/io/CharStreams.java","tnLine":77,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.io.CharStreams.copy(java.io.InputStreamReader,java.io.Writer):long","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void CollectionSpliteratorTester.testSpliteratorUnknownOrder()` reads with synchronization from `this.collection`. Potentially races with unsynchronized write in method `CollectionSpliteratorTester.testSpliteratorNullable()`.\n Reporting because this access may occur on a background thread.","tnFile":"guava-testlib/src/com/google/common/collect/testing/testers/CollectionSpliteratorTester.java","tnLine":49,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.collect.testing.testers.CollectionSpliteratorTester.testSpliteratorUnknownOrder():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"UNSAFE_GUARDED_BY_ACCESS","tnDesc":"The field `com.google.common.util.concurrent.SequentialExecutor.workerRunningState` is annotated with `@GuardedBy(\"queue\")`, but the lock `queue` is not held during the access to the field at line 154. Since the current method is non-private, it can be called from outside the current class without synchronization. Consider wrapping the access in a `synchronized(queue)` block or making the method private.","tnFile":"guava/src/com/google/common/util/concurrent/SequentialExecutor.java","tnLine":154,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.util.concurrent.SequentialExecutor.execute(java.lang.Runnable):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileInputStream` acquired by call to `openStream()` at line 347 is not released after line 352.","tnFile":"guava/src/com/google/common/io/ByteSource.java","tnLine":352,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.io.ByteSource.contentEquals(com.google.common.io.Files$FileByteSource):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `loadingFuture` last assigned on line 2287 could be null and is dereferenced at line 2288.","tnFile":"guava/src/com/google/common/cache/LocalCache.java","tnLine":2288,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.cache.LocalCache$Segment.loadAsync(java.lang.Object,int,com.google.common.cache.LocalCache$LoadingValueReference,com.google.common.cache.CacheLoader):com.google.common.util.concurrent.ListenableFuture","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `boolean CycleDetectingLockFactory$CycleDetectingReentrantReadLock.tryLock()` indirectly mutates container `node.allowedPriorLocks` via call to `put` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"guava/src/com/google/common/util/concurrent/CycleDetectingLockFactory.java","tnLine":883,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantReadLock.tryLock():boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"UNSAFE_GUARDED_BY_ACCESS","tnDesc":"The field `com.google.common.util.concurrent.ServiceManager$ServiceManagerState.startupTimers` is annotated with `@GuardedBy(\"monitor\")`, but the lock `monitor` is not held during the access to the field at line 644. Since the current method is non-private, it can be called from outside the current class without synchronization. Consider wrapping the access in a `synchronized(monitor)` block or making the method private.","tnFile":"guava/src/com/google/common/util/concurrent/ServiceManager.java","tnLine":644,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.util.concurrent.ServiceManager$ServiceManagerState.startupTimes():com.google.common.collect.ImmutableMap","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `boolean CycleDetectingLockFactory$CycleDetectingReentrantReadLock.tryLock(long,TimeUnit)` indirectly mutates container `node.allowedPriorLocks` via call to `put` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"guava/src/com/google/common/util/concurrent/CycleDetectingLockFactory.java","tnLine":893,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantReadLock.tryLock(long,java.util.concurrent.TimeUnit):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `in` last assigned on line 144 could be null and is dereferenced at line 145.","tnFile":"guava/src/com/google/common/io/ByteSource.java","tnLine":145,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.io.ByteSource.isEmpty():boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"UNSAFE_GUARDED_BY_ACCESS","tnDesc":"The field `com.google.common.cache.LocalCache$Segment.accessQueue` is annotated with `@GuardedBy(\"com.google.common.cache.LocalCache$Segment.this\")`, but the lock `com.google.common.cache.LocalCache$Segment.this` is not held during the access to the field at line 2565. Since the current method is non-private, it can be called from outside the current class without synchronization. Consider wrapping the access in a `synchronized(com.google.common.cache.LocalCache$Segment.this)` block or making the method private.","tnFile":"guava/src/com/google/common/cache/LocalCache.java","tnLine":2565,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.cache.LocalCache$Segment.drainRecencyQueue():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `long CountingInputStream.getCount()` reads without synchronization from `this.count`. Potentially races with write in method `CountingInputStream.reset()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"guava/src/com/google/common/io/CountingInputStream.java","tnLine":49,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.io.CountingInputStream.getCount():long","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileInputStream` acquired by call to `openStream()` at line 348 is not released after line 352.","tnFile":"guava/src/com/google/common/io/ByteSource.java","tnLine":352,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.io.ByteSource.contentEquals(com.google.common.io.Files$FileByteSource):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"UNSAFE_GUARDED_BY_ACCESS","tnDesc":"The field `com.google.common.cache.LocalCache$Segment.accessQueue` is annotated with `@GuardedBy(\"com.google.common.cache.LocalCache$Segment.this\")`, but the lock `com.google.common.cache.LocalCache$Segment.this` is not held during the access to the field at line 3271. Since the current method is non-private, it can be called from outside the current class without synchronization. Consider wrapping the access in a `synchronized(com.google.common.cache.LocalCache$Segment.this)` block or making the method private.","tnFile":"guava/src/com/google/common/cache/LocalCache.java","tnLine":3271,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.cache.LocalCache$Segment.removeCollectedEntry(com.google.common.cache.ReferenceEntry):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"UNSAFE_GUARDED_BY_ACCESS","tnDesc":"The field `com.google.common.util.concurrent.Monitor$Guard.waiterCount` is annotated with `@GuardedBy(\"monitor.lock\")`, but the lock `monitor.lock` is not held during the access to the field at line 1020. Since the current method is non-private, it can be called from outside the current class without synchronization. Consider wrapping the access in a `synchronized(monitor.lock)` block or making the method private.","tnFile":"guava/src/com/google/common/util/concurrent/Monitor.java","tnLine":1020,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.util.concurrent.Monitor.getWaitQueueLength(com.google.common.util.concurrent.Monitor$Guard):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void CycleDetectingLockFactory$CycleDetectingReentrantLock.lock()` indirectly mutates container `node.allowedPriorLocks` via call to `put` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"guava/src/com/google/common/util/concurrent/CycleDetectingLockFactory.java","tnLine":760,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock.lock():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `boolean MapMakerInternalMap$Segment.removeTableEntryForTesting(MapMakerInternalMap$InternalEntry)` indirectly writes to field `this.modCount` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"guava/src/com/google/common/collect/MapMakerInternalMap.java","tnLine":1317,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.collect.MapMakerInternalMap$Segment.removeTableEntryForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void MapMakerInternalMap$Segment.initTable(AtomicReferenceArray)` writes to field `this.threshold` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"guava/src/com/google/common/collect/MapMakerInternalMap.java","tnLine":1239,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.collect.MapMakerInternalMap$Segment.initTable(java.util.concurrent.atomic.AtomicReferenceArray):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"UNSAFE_GUARDED_BY_ACCESS","tnDesc":"The field `com.google.common.util.concurrent.ServiceManager$ServiceManagerState.startupTimers` is annotated with `@GuardedBy(\"monitor\")`, but the lock `monitor` is not held during the access to the field at line 702. Since the current method is non-private, it can be called from outside the current class without synchronization. Consider wrapping the access in a `synchronized(monitor)` block or making the method private.","tnFile":"guava/src/com/google/common/util/concurrent/ServiceManager.java","tnLine":702,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.util.concurrent.ServiceManager$ServiceManagerState.transitionService(com.google.common.util.concurrent.Service,com.google.common.util.concurrent.Service$State,com.google.common.util.concurrent.Service$State):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `out` last assigned on line 97 could be null and is dereferenced at line 98.","tnFile":"guava/src/com/google/common/io/CharSink.java","tnLine":98,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.io.CharSink.write(java.lang.CharSequence):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void CollectionSpliteratorTester.testSpliteratorNotImmutable_CollectionAllowsAdd()` reads with synchronization from `this.collection`. Potentially races with unsynchronized write in method `CollectionSpliteratorTester.testSpliteratorNullable()`.\n Reporting because this access may occur on a background thread.","tnFile":"guava-testlib/src/com/google/common/collect/testing/testers/CollectionSpliteratorTester.java","tnLine":73,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.collect.testing.testers.CollectionSpliteratorTester.testSpliteratorNotImmutable_CollectionAllowsAdd():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"UNSAFE_GUARDED_BY_ACCESS","tnDesc":"The field `com.google.common.cache.LocalCache$Segment.accessQueue` is annotated with `@GuardedBy(\"com.google.common.cache.LocalCache$Segment.this\")`, but the lock `com.google.common.cache.LocalCache$Segment.this` is not held during the access to the field at line 2649. Since the current method is non-private, it can be called from outside the current class without synchronization. Consider wrapping the access in a `synchronized(com.google.common.cache.LocalCache$Segment.this)` block or making the method private.","tnFile":"guava/src/com/google/common/cache/LocalCache.java","tnLine":2649,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.cache.LocalCache$Segment.getNextEvictable():com.google.common.cache.ReferenceEntry","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `new()` at line 177 is not released after line 177.","tnFile":"guava/src/com/google/common/io/LittleEndianDataInputStream.java","tnLine":177,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.io.LittleEndianDataInputStream.readUTF():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void CycleDetectingLockFactory$CycleDetectingReentrantReadLock.lockInterruptibly()` indirectly mutates container `node.allowedPriorLocks` via call to `put` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"guava/src/com/google/common/util/concurrent/CycleDetectingLockFactory.java","tnLine":873,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantReadLock.lockInterruptibly():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired by call to `openBufferedStream()` at line 499 is not released after line 499.","tnFile":"guava/src/com/google/common/io/ByteSource.java","tnLine":499,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.io.ByteSource$SlicedByteSource.openBufferedStream():java.io.InputStream","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `long ByteStreams$LimitedInputStream.skip(long)` writes to field `this.left` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"guava/src/com/google/common/io/ByteStreams.java","tnLine":754,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.io.ByteStreams$LimitedInputStream.skip(long):long","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void CollectionSpliteratorTester.testSpliteratorNullable()` reads with synchronization from `this.collection`. Potentially races with unsynchronized write in method `CollectionSpliteratorTester.testSpliteratorNullable()`.\n Reporting because this access may occur on a background thread.","tnFile":"guava-testlib/src/com/google/common/collect/testing/testers/CollectionSpliteratorTester.java","tnLine":65,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.collect.testing.testers.CollectionSpliteratorTester.testSpliteratorNullable():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int ByteStreams$LimitedInputStream.read(byte[],int,int)` reads without synchronization from `this.left`. Potentially races with write in method `ByteStreams$LimitedInputStream.reset()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"guava/src/com/google/common/io/ByteStreams.java","tnLine":725,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.io.ByteStreams$LimitedInputStream.read(byte[],int,int):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void LocalCache$Segment.removeCollectedEntry(ReferenceEntry)` indirectly writes to field `this.totalWeight` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"guava/src/com/google/common/cache/LocalCache.java","tnLine":3264,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.cache.LocalCache$Segment.removeCollectedEntry(com.google.common.cache.ReferenceEntry):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"UNSAFE_GUARDED_BY_ACCESS","tnDesc":"The field `com.google.common.cache.LocalCache$Segment.accessQueue` is annotated with `@GuardedBy(\"com.google.common.cache.LocalCache$Segment.this\")`, but the lock `com.google.common.cache.LocalCache$Segment.this` is not held during the access to the field at line 2594. Since the current method is non-private, it can be called from outside the current class without synchronization. Consider wrapping the access in a `synchronized(com.google.common.cache.LocalCache$Segment.this)` block or making the method private.","tnFile":"guava/src/com/google/common/cache/LocalCache.java","tnLine":2594,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.cache.LocalCache$Segment.expireEntries(long):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"UNSAFE_GUARDED_BY_ACCESS","tnDesc":"The field `com.google.common.cache.LocalCache$Segment.writeQueue` is annotated with `@GuardedBy(\"com.google.common.cache.LocalCache$Segment.this\")`, but the lock `com.google.common.cache.LocalCache$Segment.this` is not held during the access to the field at line 2547. Since the current method is non-private, it can be called from outside the current class without synchronization. Consider wrapping the access in a `synchronized(com.google.common.cache.LocalCache$Segment.this)` block or making the method private.","tnFile":"guava/src/com/google/common/cache/LocalCache.java","tnLine":2547,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.cache.LocalCache$Segment.recordWrite(com.google.common.cache.ReferenceEntry,int,long):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `com.google.common.hash.Funnels$SinkAsStream` acquired by call to `asOutputStream(...)` at line 329 is not released after line 329.","tnFile":"guava/src/com/google/common/io/ByteSource.java","tnLine":329,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.io.ByteSource.hash(com.google.common.hash.HashFunction):com.google.common.hash.HashCode","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `boolean CycleDetectingLockFactory$CycleDetectingReentrantLock.tryLock()` indirectly mutates container `node.allowedPriorLocks` via call to `put` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"guava/src/com/google/common/util/concurrent/CycleDetectingLockFactory.java","tnLine":780,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock.tryLock():boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"UNSAFE_GUARDED_BY_ACCESS","tnDesc":"The field `com.google.common.util.concurrent.ServiceManager$ServiceManagerState.servicesByState` is annotated with `@GuardedBy(\"monitor\")`, but the lock `monitor` is not held during the access to the field at line 615. Since the current method is non-private, it can be called from outside the current class without synchronization. Consider wrapping the access in a `synchronized(monitor)` block or making the method private.","tnFile":"guava/src/com/google/common/util/concurrent/ServiceManager.java","tnLine":615,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.util.concurrent.ServiceManager$ServiceManagerState.awaitStopped(long,java.util.concurrent.TimeUnit):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"UNSAFE_GUARDED_BY_ACCESS","tnDesc":"The field `com.google.common.util.concurrent.ServiceManager$ServiceManagerState.startupTimers` is annotated with `@GuardedBy(\"monitor\")`, but the lock `monitor` is not held during the access to the field at line 541. Since the current method is non-private, it can be called from outside the current class without synchronization. Consider wrapping the access in a `synchronized(monitor)` block or making the method private.","tnFile":"guava/src/com/google/common/util/concurrent/ServiceManager.java","tnLine":541,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.util.concurrent.ServiceManager$ServiceManagerState.tryStartTiming(com.google.common.util.concurrent.Service):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `boolean CycleDetectingLockFactory$CycleDetectingReentrantWriteLock.tryLock()` indirectly mutates container `node.allowedPriorLocks` via call to `put` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"guava/src/com/google/common/util/concurrent/CycleDetectingLockFactory.java","tnLine":942,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantWriteLock.tryLock():boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void SequentialExecutor.execute(Runnable)` reads without synchronization from `this.workerRunningState`. Potentially races with write in method `SequentialExecutor.execute(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"guava/src/com/google/common/util/concurrent/SequentialExecutor.java","tnLine":154,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.util.concurrent.SequentialExecutor.execute(java.lang.Runnable):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `ReferenceEntry LocalCache$Segment.removeValueFromChain(ReferenceEntry,ReferenceEntry,Object,int,Object,LocalCache$ValueReference,RemovalCause)` indirectly writes to field `this.totalWeight` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"guava/src/com/google/common/cache/LocalCache.java","tnLine":3231,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.cache.LocalCache$Segment.removeValueFromChain(com.google.common.cache.ReferenceEntry,com.google.common.cache.ReferenceEntry,java.lang.Object,int,java.lang.Object,com.google.common.cache.LocalCache$ValueReference,com.google.common.cache.RemovalCause):com.google.common.cache.ReferenceEntry","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Monitor.waitFor(Monitor$Guard)` indirectly writes to field `pred.next` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"guava/src/com/google/common/util/concurrent/Monitor.java","tnLine":826,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.util.concurrent.Monitor.waitFor(com.google.common.util.concurrent.Monitor$Guard):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object Suppliers$NonSerializableMemoizingSupplier.get()` reads without synchronization from `this.value`. Potentially races with write in method `Suppliers$NonSerializableMemoizingSupplier.get()`.\n Reporting because this access may occur on a background thread.","tnFile":"guava/src/com/google/common/base/Suppliers.java","tnLine":176,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.base.Suppliers$NonSerializableMemoizingSupplier.get():java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"UNSAFE_GUARDED_BY_ACCESS","tnDesc":"The field `com.google.common.util.concurrent.ServiceManager$ServiceManagerState.startupTimers` is annotated with `@GuardedBy(\"monitor\")`, but the lock `monitor` is not held during the access to the field at line 646. Since the current method is non-private, it can be called from outside the current class without synchronization. Consider wrapping the access in a `synchronized(monitor)` block or making the method private.","tnFile":"guava/src/com/google/common/util/concurrent/ServiceManager.java","tnLine":646,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.util.concurrent.ServiceManager$ServiceManagerState.startupTimes():com.google.common.collect.ImmutableMap","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `long CountingInputStream.skip(long)` writes to field `this.count` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"guava/src/com/google/common/io/CountingInputStream.java","tnLine":73,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.io.CountingInputStream.skip(long):long","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"UNSAFE_GUARDED_BY_ACCESS","tnDesc":"The field `com.google.common.util.concurrent.ServiceManager$ServiceManagerState.states` is annotated with `@GuardedBy(\"monitor\")`, but the lock `monitor` is not held during the access to the field at line 516. Since the current method is non-private, it can be called from outside the current class without synchronization. Consider wrapping the access in a `synchronized(monitor)` block or making the method private.","tnFile":"guava/src/com/google/common/util/concurrent/ServiceManager.java","tnLine":516,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.util.concurrent.ServiceManager$ServiceManagerState$StoppedGuard.isSatisfied():boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `ReferenceEntry LocalCache$Segment.removeEntryFromChain(ReferenceEntry,ReferenceEntry)` indirectly writes to field `this.totalWeight` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"guava/src/com/google/common/cache/LocalCache.java","tnLine":3254,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.cache.LocalCache$Segment.removeEntryFromChain(com.google.common.cache.ReferenceEntry,com.google.common.cache.ReferenceEntry):com.google.common.cache.ReferenceEntry","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `out` last assigned on line 101 could be null and is dereferenced at line 102.","tnFile":"guava/src/com/google/common/io/ByteSink.java","tnLine":102,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.io.ByteSink.write(byte[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void LocalCache$Segment.expand()` writes to field `this.threshold` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"guava/src/com/google/common/cache/LocalCache.java","tnLine":2865,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.cache.LocalCache$Segment.expand():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `newDataInput(...)` at line 670 is not released after line 670.","tnFile":"guava/src/com/google/common/net/InetAddresses.java","tnLine":670,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.net.InetAddresses.getTeredoInfo(java.net.Inet6Address):com.google.common.net.InetAddresses$TeredoInfo","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `int ByteStreams$LimitedInputStream.read()` writes to field `this.left` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"guava/src/com/google/common/io/ByteStreams.java","tnLine":718,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.io.ByteStreams$LimitedInputStream.read():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void LocalCache$Segment.initTable(AtomicReferenceArray)` writes to field `this.threshold` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"guava/src/com/google/common/cache/LocalCache.java","tnLine":1970,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.cache.LocalCache$Segment.initTable(java.util.concurrent.atomic.AtomicReferenceArray):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `in` last assigned on line 285 could be null and is dereferenced by call to `toByteArray(...)` at line 288.","tnFile":"guava/src/com/google/common/io/ByteSource.java","tnLine":288,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.io.ByteSource.read():byte[]","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void CollectionSpliteratorTester.testSpliteratorKnownOrder()` reads with synchronization from `this.collection`. Potentially races with unsynchronized write in method `CollectionSpliteratorTester.testSpliteratorNullable()`.\n Reporting because this access may occur on a background thread.","tnFile":"guava-testlib/src/com/google/common/collect/testing/testers/CollectionSpliteratorTester.java","tnLine":56,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.collect.testing.testers.CollectionSpliteratorTester.testSpliteratorKnownOrder():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"UNSAFE_GUARDED_BY_ACCESS","tnDesc":"The field `com.google.common.util.concurrent.ServiceManager$ServiceManagerState.states` is annotated with `@GuardedBy(\"monitor\")`, but the lock `monitor` is not held during the access to the field at line 497. Since the current method is non-private, it can be called from outside the current class without synchronization. Consider wrapping the access in a `synchronized(monitor)` block or making the method private.","tnFile":"guava/src/com/google/common/util/concurrent/ServiceManager.java","tnLine":497,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.util.concurrent.ServiceManager$ServiceManagerState$AwaitHealthGuard.isSatisfied():boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `newDataInput(...)` at line 667 is not released after line 667.","tnFile":"guava/src/com/google/common/net/InetAddresses.java","tnLine":667,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.net.InetAddresses.getTeredoInfo(java.net.Inet6Address):com.google.common.net.InetAddresses$TeredoInfo","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"UNSAFE_GUARDED_BY_ACCESS","tnDesc":"The field `com.google.common.util.concurrent.ServiceManager$ServiceManagerState.servicesByState` is annotated with `@GuardedBy(\"monitor\")`, but the lock `monitor` is not held during the access to the field at line 697. Since the current method is non-private, it can be called from outside the current class without synchronization. Consider wrapping the access in a `synchronized(monitor)` block or making the method private.","tnFile":"guava/src/com/google/common/util/concurrent/ServiceManager.java","tnLine":697,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.util.concurrent.ServiceManager$ServiceManagerState.transitionService(com.google.common.util.concurrent.Service,com.google.common.util.concurrent.Service$State,com.google.common.util.concurrent.Service$State):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"UNSAFE_GUARDED_BY_ACCESS","tnDesc":"The field `com.google.common.cache.LocalCache$Segment.accessQueue` is annotated with `@GuardedBy(\"com.google.common.cache.LocalCache$Segment.this\")`, but the lock `com.google.common.cache.LocalCache$Segment.this` is not held during the access to the field at line 2564. Since the current method is non-private, it can be called from outside the current class without synchronization. Consider wrapping the access in a `synchronized(com.google.common.cache.LocalCache$Segment.this)` block or making the method private.","tnFile":"guava/src/com/google/common/cache/LocalCache.java","tnLine":2564,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.cache.LocalCache$Segment.drainRecencyQueue():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `int CountingInputStream.read()` writes to field `this.count` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"guava/src/com/google/common/io/CountingInputStream.java","tnLine":56,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.io.CountingInputStream.read():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"UNSAFE_GUARDED_BY_ACCESS","tnDesc":"The field `com.google.common.util.concurrent.ServiceManager$ServiceManagerState.ready` is annotated with `@GuardedBy(\"monitor\")`, but the lock `monitor` is not held during the access to the field at line 559. Since the current method is non-private, it can be called from outside the current class without synchronization. Consider wrapping the access in a `synchronized(monitor)` block or making the method private.","tnFile":"guava/src/com/google/common/util/concurrent/ServiceManager.java","tnLine":559,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.util.concurrent.ServiceManager$ServiceManagerState.markReady():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"UNSAFE_GUARDED_BY_ACCESS","tnDesc":"The field `com.google.common.util.concurrent.ServiceManager$ServiceManagerState.transitioned` is annotated with `@GuardedBy(\"monitor\")`, but the lock `monitor` is not held during the access to the field at line 686. Since the current method is non-private, it can be called from outside the current class without synchronization. Consider wrapping the access in a `synchronized(monitor)` block or making the method private.","tnFile":"guava/src/com/google/common/util/concurrent/ServiceManager.java","tnLine":686,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.util.concurrent.ServiceManager$ServiceManagerState.transitionService(com.google.common.util.concurrent.Service,com.google.common.util.concurrent.Service$State,com.google.common.util.concurrent.Service$State):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `boolean Monitor.waitForUninterruptibly(Monitor$Guard,long,TimeUnit)` indirectly writes to field `pred.next` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"guava/src/com/google/common/util/concurrent/Monitor.java","tnLine":909,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.util.concurrent.Monitor.waitForUninterruptibly(com.google.common.util.concurrent.Monitor$Guard,long,java.util.concurrent.TimeUnit):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"UNSAFE_GUARDED_BY_ACCESS","tnDesc":"The field `com.google.common.cache.LocalCache$Segment.totalWeight` is annotated with `@GuardedBy(\"com.google.common.cache.LocalCache$Segment.this\")`, but the lock `com.google.common.cache.LocalCache$Segment.this` is not held during the access to the field at line 2538. Since the current method is non-private, it can be called from outside the current class without synchronization. Consider wrapping the access in a `synchronized(com.google.common.cache.LocalCache$Segment.this)` block or making the method private.","tnFile":"guava/src/com/google/common/cache/LocalCache.java","tnLine":2538,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.cache.LocalCache$Segment.recordWrite(com.google.common.cache.ReferenceEntry,int,long):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `boolean Monitor.waitFor(Monitor$Guard,long,TimeUnit)` indirectly writes to field `pred.next` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"guava/src/com/google/common/util/concurrent/Monitor.java","tnLine":861,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.util.concurrent.Monitor.waitFor(com.google.common.util.concurrent.Monitor$Guard,long,java.util.concurrent.TimeUnit):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int ByteStreams$LimitedInputStream.available()` reads without synchronization from `this.left`. Potentially races with write in method `ByteStreams$LimitedInputStream.reset()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"guava/src/com/google/common/io/ByteStreams.java","tnLine":700,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.io.ByteStreams$LimitedInputStream.available():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `reader` last assigned on line 410 could be null and is dereferenced at line 411.","tnFile":"guava/src/com/google/common/io/CharSource.java","tnLine":411,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.io.CharSource.isEmpty():boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `reader` last assigned on line 207 could be null and is dereferenced by call to `countBySkipping(...)` at line 208.","tnFile":"guava/src/com/google/common/io/CharSource.java","tnLine":208,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.io.CharSource.length():long","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"UNSAFE_GUARDED_BY_ACCESS","tnDesc":"The field `com.google.common.util.concurrent.ServiceManager$ServiceManagerState.ready` is annotated with `@GuardedBy(\"monitor\")`, but the lock `monitor` is not held during the access to the field at line 687. Since the current method is non-private, it can be called from outside the current class without synchronization. Consider wrapping the access in a `synchronized(monitor)` block or making the method private.","tnFile":"guava/src/com/google/common/util/concurrent/ServiceManager.java","tnLine":687,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.util.concurrent.ServiceManager$ServiceManagerState.transitionService(com.google.common.util.concurrent.Service,com.google.common.util.concurrent.Service$State,com.google.common.util.concurrent.Service$State):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `openStream()` at line 268 is not released after line 269.","tnFile":"guava/src/com/google/common/io/ByteSource.java","tnLine":269,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.io.ByteSource.copyTo(com.google.common.io.Files$FileByteSink):long","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `boolean Monitor.waitForUninterruptibly(Monitor$Guard,Duration)` indirectly writes to field `pred.next` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"guava/src/com/google/common/util/concurrent/Monitor.java","tnLine":885,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.util.concurrent.Monitor.waitForUninterruptibly(com.google.common.util.concurrent.Monitor$Guard,java.time.Duration):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `boolean CycleDetectingLockFactory$CycleDetectingReentrantLock.tryLock(long,TimeUnit)` indirectly mutates container `node.allowedPriorLocks` via call to `put` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"guava/src/com/google/common/util/concurrent/CycleDetectingLockFactory.java","tnLine":790,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock.tryLock(long,java.util.concurrent.TimeUnit):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object Suppliers$MemoizingSupplier.get()` reads without synchronization from `this.value`. Potentially races with write in method `Suppliers$MemoizingSupplier.get()`.\n Reporting because this access may occur on a background thread.","tnFile":"guava/src/com/google/common/base/Suppliers.java","tnLine":136,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.base.Suppliers$MemoizingSupplier.get():java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `String Suppliers$NonSerializableMemoizingSupplier.toString()` reads without synchronization from `this.value`. Potentially races with write in method `Suppliers$NonSerializableMemoizingSupplier.get()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"guava/src/com/google/common/base/Suppliers.java","tnLine":182,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.base.Suppliers$NonSerializableMemoizingSupplier.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `boolean MapMakerInternalMap$Segment.removeEntryForTesting(MapMakerInternalMap$InternalEntry)` writes to field `this.modCount` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"guava/src/com/google/common/collect/MapMakerInternalMap.java","tnLine":1919,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.collect.MapMakerInternalMap$Segment.removeEntryForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.net.URLClassLoader` acquired by call to `newLoader(...)` at line 293 is not released after line 294.","tnFile":"guava/src/com/google/common/base/FinalizableReferenceQueue.java","tnLine":294,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.base.FinalizableReferenceQueue$DecoupledLoader.loadFinalizer():java.lang.Class","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int ByteStreams$LimitedInputStream.read()` reads without synchronization from `this.left`. Potentially races with write in method `ByteStreams$LimitedInputStream.reset()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"guava/src/com/google/common/io/ByteStreams.java","tnLine":712,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.io.ByteStreams$LimitedInputStream.read():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"UNSAFE_GUARDED_BY_ACCESS","tnDesc":"The field `com.google.common.cache.LocalCache$Segment.writeQueue` is annotated with `@GuardedBy(\"com.google.common.cache.LocalCache$Segment.this\")`, but the lock `com.google.common.cache.LocalCache$Segment.this` is not held during the access to the field at line 3232. Since the current method is non-private, it can be called from outside the current class without synchronization. Consider wrapping the access in a `synchronized(com.google.common.cache.LocalCache$Segment.this)` block or making the method private.","tnFile":"guava/src/com/google/common/cache/LocalCache.java","tnLine":3232,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.cache.LocalCache$Segment.removeValueFromChain(com.google.common.cache.ReferenceEntry,com.google.common.cache.ReferenceEntry,java.lang.Object,int,java.lang.Object,com.google.common.cache.LocalCache$ValueReference,com.google.common.cache.RemovalCause):com.google.common.cache.ReferenceEntry","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `long ByteStreams$LimitedInputStream.skip(long)` reads without synchronization from `this.left`. Potentially races with write in method `ByteStreams$LimitedInputStream.reset()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"guava/src/com/google/common/io/ByteStreams.java","tnLine":752,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.io.ByteStreams$LimitedInputStream.skip(long):long","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `loadingFuture` last assigned on line 2278 could be null and is dereferenced by call to `getAndRecordStats(...)` at line 2279.","tnFile":"guava/src/com/google/common/cache/LocalCache.java","tnLine":2279,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.cache.LocalCache$Segment.loadSync(java.lang.Object,int,com.google.common.cache.LocalCache$LoadingValueReference,com.google.common.cache.CacheLoader):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `openStream()` at line 359 is not released after line 360.","tnFile":"guava/src/com/google/common/io/CharSource.java","tnLine":360,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.io.CharSource.readLines(com.google.common.io.Files$1):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `String Suppliers$MemoizingSupplier.toString()` reads without synchronization from `this.value`. Potentially races with write in method `Suppliers$MemoizingSupplier.get()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"guava/src/com/google/common/base/Suppliers.java","tnLine":141,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.base.Suppliers$MemoizingSupplier.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"UNSAFE_GUARDED_BY_ACCESS","tnDesc":"The field `com.google.common.cache.LocalCache$Segment.totalWeight` is annotated with `@GuardedBy(\"com.google.common.cache.LocalCache$Segment.this\")`, but the lock `com.google.common.cache.LocalCache$Segment.this` is not held during the access to the field at line 2638. Since the current method is non-private, it can be called from outside the current class without synchronization. Consider wrapping the access in a `synchronized(com.google.common.cache.LocalCache$Segment.this)` block or making the method private.","tnFile":"guava/src/com/google/common/cache/LocalCache.java","tnLine":2638,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.cache.LocalCache$Segment.evictEntries(com.google.common.cache.ReferenceEntry):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"UNSAFE_GUARDED_BY_ACCESS","tnDesc":"The field `com.google.common.util.concurrent.ServiceManager$ServiceManagerState.transitioned` is annotated with `@GuardedBy(\"monitor\")`, but the lock `monitor` is not held during the access to the field at line 557. Since the current method is non-private, it can be called from outside the current class without synchronization. Consider wrapping the access in a `synchronized(monitor)` block or making the method private.","tnFile":"guava/src/com/google/common/util/concurrent/ServiceManager.java","tnLine":557,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.util.concurrent.ServiceManager$ServiceManagerState.markReady():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void LocalCache$Segment.evictEntries(ReferenceEntry)` indirectly writes to field `this.modCount` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"guava/src/com/google/common/cache/LocalCache.java","tnLine":2633,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.cache.LocalCache$Segment.evictEntries(com.google.common.cache.ReferenceEntry):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"UNSAFE_GUARDED_BY_ACCESS","tnDesc":"The field `com.google.common.cache.LocalCache$Segment.writeQueue` is annotated with `@GuardedBy(\"com.google.common.cache.LocalCache$Segment.this\")`, but the lock `com.google.common.cache.LocalCache$Segment.this` is not held during the access to the field at line 2589. Since the current method is non-private, it can be called from outside the current class without synchronization. Consider wrapping the access in a `synchronized(com.google.common.cache.LocalCache$Segment.this)` block or making the method private.","tnFile":"guava/src/com/google/common/cache/LocalCache.java","tnLine":2589,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.cache.LocalCache$Segment.expireEntries(long):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"UNSAFE_GUARDED_BY_ACCESS","tnDesc":"The field `com.google.common.util.concurrent.ServiceManager$ServiceManagerState.states` is annotated with `@GuardedBy(\"monitor\")`, but the lock `monitor` is not held during the access to the field at line 499. Since the current method is non-private, it can be called from outside the current class without synchronization. Consider wrapping the access in a `synchronized(monitor)` block or making the method private.","tnFile":"guava/src/com/google/common/util/concurrent/ServiceManager.java","tnLine":499,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.util.concurrent.ServiceManager$ServiceManagerState$AwaitHealthGuard.isSatisfied():boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `boolean Monitor.waitFor(Monitor$Guard,Duration)` indirectly writes to field `pred.next` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"guava/src/com/google/common/util/concurrent/Monitor.java","tnLine":839,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.util.concurrent.Monitor.waitFor(com.google.common.util.concurrent.Monitor$Guard,java.time.Duration):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void CollectionSpliteratorTester.testSpliteratorNullable()` indirectly writes to field `array.[_]` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"guava-testlib/src/com/google/common/collect/testing/testers/CollectionSpliteratorTester.java","tnLine":63,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.collect.testing.testers.CollectionSpliteratorTester.testSpliteratorNullable():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired to `din` by call to `new()` at line 592 is not released after line 606.\n**Note**: potential exception at line 596","tnFile":"guava/src/com/google/common/hash/BloomFilter.java","tnLine":606,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.hash.BloomFilter.readFrom(java.io.InputStream,com.google.common.hash.Funnel):com.google.common.hash.BloomFilter","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileInputStream` acquired by call to `openStream()` at line 267 is not released after line 270.\n**Note**: potential exception at line 268","tnFile":"guava/src/com/google/common/io/ByteSource.java","tnLine":270,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.io.ByteSource.copyTo(com.google.common.io.Files$FileByteSink):long","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `int ByteStreams$LimitedInputStream.read(byte[],int,int)` writes to field `this.left` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"guava/src/com/google/common/io/ByteStreams.java","tnLine":732,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.io.ByteStreams$LimitedInputStream.read(byte[],int,int):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"UNSAFE_GUARDED_BY_ACCESS","tnDesc":"The field `com.google.common.cache.LocalCache$Segment.writeQueue` is annotated with `@GuardedBy(\"com.google.common.cache.LocalCache$Segment.this\")`, but the lock `com.google.common.cache.LocalCache$Segment.this` is not held during the access to the field at line 3270. Since the current method is non-private, it can be called from outside the current class without synchronization. Consider wrapping the access in a `synchronized(com.google.common.cache.LocalCache$Segment.this)` block or making the method private.","tnFile":"guava/src/com/google/common/cache/LocalCache.java","tnLine":3270,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.cache.LocalCache$Segment.removeCollectedEntry(com.google.common.cache.ReferenceEntry):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"UNSAFE_GUARDED_BY_ACCESS","tnDesc":"The field `com.google.common.cache.LocalCache$Segment.accessQueue` is annotated with `@GuardedBy(\"com.google.common.cache.LocalCache$Segment.this\")`, but the lock `com.google.common.cache.LocalCache$Segment.this` is not held during the access to the field at line 2527. Since the current method is non-private, it can be called from outside the current class without synchronization. Consider wrapping the access in a `synchronized(com.google.common.cache.LocalCache$Segment.this)` block or making the method private.","tnFile":"guava/src/com/google/common/cache/LocalCache.java","tnLine":2527,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.cache.LocalCache$Segment.recordLockedRead(com.google.common.cache.ReferenceEntry,long):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"UNSAFE_GUARDED_BY_ACCESS","tnDesc":"The field `com.google.common.cache.LocalCache$Segment.totalWeight` is annotated with `@GuardedBy(\"com.google.common.cache.LocalCache$Segment.this\")`, but the lock `com.google.common.cache.LocalCache$Segment.this` is not held during the access to the field at line 2606. Since the current method is non-private, it can be called from outside the current class without synchronization. Consider wrapping the access in a `synchronized(com.google.common.cache.LocalCache$Segment.this)` block or making the method private.","tnFile":"guava/src/com/google/common/cache/LocalCache.java","tnLine":2606,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.cache.LocalCache$Segment.enqueueNotification(java.lang.Object,int,java.lang.Object,int,com.google.common.cache.RemovalCause):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void MapMakerInternalMap$Segment.expand()` writes to field `this.threshold` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"guava/src/com/google/common/collect/MapMakerInternalMap.java","tnLine":1550,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.collect.MapMakerInternalMap$Segment.expand():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void LocalCache$Segment.recordWrite(ReferenceEntry,int,long)` writes to field `this.totalWeight` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"guava/src/com/google/common/cache/LocalCache.java","tnLine":2538,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.cache.LocalCache$Segment.recordWrite(com.google.common.cache.ReferenceEntry,int,long):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"UNSAFE_GUARDED_BY_ACCESS","tnDesc":"The field `com.google.common.util.concurrent.ServiceManager$ServiceManagerState.states` is annotated with `@GuardedBy(\"monitor\")`, but the lock `monitor` is not held during the access to the field at line 498. Since the current method is non-private, it can be called from outside the current class without synchronization. Consider wrapping the access in a `synchronized(monitor)` block or making the method private.","tnFile":"guava/src/com/google/common/util/concurrent/ServiceManager.java","tnLine":498,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.util.concurrent.ServiceManager$ServiceManagerState$AwaitHealthGuard.isSatisfied():boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void CycleDetectingLockFactory$CycleDetectingReentrantLock.lockInterruptibly()` indirectly mutates container `node.allowedPriorLocks` via call to `put` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"guava/src/com/google/common/util/concurrent/CycleDetectingLockFactory.java","tnLine":770,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock.lockInterruptibly():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `openStream()` at line 239 is not released after line 240.\n**Note**: potential exception at line 240","tnFile":"guava/src/com/google/common/io/CharSource.java","tnLine":240,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.io.CharSource.copyTo(java.io.Writer):long","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void CycleDetectingLockFactory$CycleDetectingReentrantWriteLock.lockInterruptibly()` indirectly mutates container `node.allowedPriorLocks` via call to `put` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"guava/src/com/google/common/util/concurrent/CycleDetectingLockFactory.java","tnLine":932,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantWriteLock.lockInterruptibly():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void CycleDetectingLockFactory$CycleDetectingReentrantWriteLock.lock()` indirectly mutates container `node.allowedPriorLocks` via call to `put` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"guava/src/com/google/common/util/concurrent/CycleDetectingLockFactory.java","tnLine":922,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantWriteLock.lock():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"UNSAFE_GUARDED_BY_ACCESS","tnDesc":"The field `com.google.common.util.concurrent.ServiceManager$ServiceManagerState.servicesByState` is annotated with `@GuardedBy(\"monitor\")`, but the lock `monitor` is not held during the access to the field at line 692. Since the current method is non-private, it can be called from outside the current class without synchronization. Consider wrapping the access in a `synchronized(monitor)` block or making the method private.","tnFile":"guava/src/com/google/common/util/concurrent/ServiceManager.java","tnLine":692,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.util.concurrent.ServiceManager$ServiceManagerState.transitionService(com.google.common.util.concurrent.Service,com.google.common.util.concurrent.Service$State,com.google.common.util.concurrent.Service$State):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `newDataInput(...)` at line 890 is not released after line 890.","tnFile":"guava/src/com/google/common/net/InetAddresses.java","tnLine":890,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.net.InetAddresses.coerceToInteger(java.net.InetAddress):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `int CountingInputStream.read(byte[],int,int)` writes to field `this.count` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"guava/src/com/google/common/io/CountingInputStream.java","tnLine":65,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.io.CountingInputStream.read(byte[],int,int):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"UNSAFE_GUARDED_BY_ACCESS","tnDesc":"The field `com.google.common.util.concurrent.ServiceManager$ServiceManagerState.servicesByState` is annotated with `@GuardedBy(\"monitor\")`, but the lock `monitor` is not held during the access to the field at line 629. Since the current method is non-private, it can be called from outside the current class without synchronization. Consider wrapping the access in a `synchronized(monitor)` block or making the method private.","tnFile":"guava/src/com/google/common/util/concurrent/ServiceManager.java","tnLine":629,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.util.concurrent.ServiceManager$ServiceManagerState.servicesByState():com.google.common.collect.ImmutableMultimap","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void LocalCache$Segment.expand()` indirectly writes to field `this.totalWeight` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"guava/src/com/google/common/cache/LocalCache.java","tnLine":2903,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.cache.LocalCache$Segment.expand():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void CycleDetectingLockFactory$CycleDetectingReentrantReadLock.lock()` indirectly mutates container `node.allowedPriorLocks` via call to `put` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"guava/src/com/google/common/util/concurrent/CycleDetectingLockFactory.java","tnLine":863,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantReadLock.lock():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"UNSAFE_GUARDED_BY_ACCESS","tnDesc":"The field `com.google.common.cache.LocalCache$Segment.accessQueue` is annotated with `@GuardedBy(\"com.google.common.cache.LocalCache$Segment.this\")`, but the lock `com.google.common.cache.LocalCache$Segment.this` is not held during the access to the field at line 2546. Since the current method is non-private, it can be called from outside the current class without synchronization. Consider wrapping the access in a `synchronized(com.google.common.cache.LocalCache$Segment.this)` block or making the method private.","tnFile":"guava/src/com/google/common/cache/LocalCache.java","tnLine":2546,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.cache.LocalCache$Segment.recordWrite(com.google.common.cache.ReferenceEntry,int,long):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired to `transfer` by call to `FileOutputStream(...)` at line 202 is not released after line 211.\n**Note**: potential exception at line 204","tnFile":"guava/src/com/google/common/io/FileBackedOutputStream.java","tnLine":211,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.io.FileBackedOutputStream.update(int):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileInputStream` acquired by call to `openStream()` at line 347 is not released after line 355.","tnFile":"guava/src/com/google/common/io/ByteSource.java","tnLine":355,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.io.ByteSource.contentEquals(com.google.common.io.Files$FileByteSource):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileInputStream` acquired by call to `openStream()` at line 154 is not released after line 155.","tnFile":"guava/src/com/google/common/io/Files.java","tnLine":155,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.io.Files$FileByteSource.read():byte[]","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Monitor.leave()` indirectly reads without synchronization from `this.activeGuards`. Potentially races with write in method `Monitor.waitForUninterruptibly(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"guava/src/com/google/common/util/concurrent/Monitor.java","tnLine":932,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.util.concurrent.Monitor.leave():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getOrInitSeenExceptions()` could be null and is dereferenced by call to `addCausalChain(...)` at line 184.","tnFile":"guava/src/com/google/common/util/concurrent/AggregateFuture.java","tnLine":184,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.util.concurrent.AggregateFuture$RunningState.handleException(java.lang.IllegalStateException):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"UNSAFE_GUARDED_BY_ACCESS","tnDesc":"The field `com.google.common.util.concurrent.ServiceManager$ServiceManagerState.servicesByState` is annotated with `@GuardedBy(\"monitor\")`, but the lock `monitor` is not held during the access to the field at line 595. Since the current method is non-private, it can be called from outside the current class without synchronization. Consider wrapping the access in a `synchronized(monitor)` block or making the method private.","tnFile":"guava/src/com/google/common/util/concurrent/ServiceManager.java","tnLine":595,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.util.concurrent.ServiceManager$ServiceManagerState.awaitHealthy(long,java.util.concurrent.TimeUnit):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void LocalCache$Segment.initTable(AtomicReferenceArray)` reads without synchronization from `this.threshold`. Potentially races with write in method `LocalCache$Segment.storeLoadedValue(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"guava/src/com/google/common/cache/LocalCache.java","tnLine":1971,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.cache.LocalCache$Segment.initTable(java.util.concurrent.atomic.AtomicReferenceArray):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `boolean CycleDetectingLockFactory$CycleDetectingReentrantWriteLock.tryLock(long,TimeUnit)` indirectly mutates container `node.allowedPriorLocks` via call to `put` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"guava/src/com/google/common/util/concurrent/CycleDetectingLockFactory.java","tnLine":952,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantWriteLock.tryLock(long,java.util.concurrent.TimeUnit):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `upperBound` last assigned on line 504 could be null and is dereferenced by call to `typeName(...)` at line 505.","tnFile":"guava/src/com/google/common/reflect/Types.java","tnLine":505,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.reflect.Types$WildcardTypeImpl.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `writer` last assigned on line 648 could be null and is dereferenced at line 649.","tnFile":"guava/src/com/google/common/io/CharSource.java","tnLine":649,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.google.common.io.CharSource$StringCharSource.copyTo(com.google.common.io.CharSink):long","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}}],null,{"analysisLOC":null,"analysisBuildSys":"Maven []","analysisLang":null}]}],[{"tag":"ErrorProne_JDK8"},{"tag":"ToolSuccess","contents":[[{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/testers/ListEqualsTester.java","tnLine":36,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"guava-gwt/target/classes/com/google/common/math/LongMath.java","tnLine":589,"tnColumn":28,"tnPatch":null,"tnCodeLine":"    checkNoOverflow(a >= 0 | b != Long.MIN_VALUE, \"checkedMultiply\", a, b);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"Finally","tnDesc":"If you return or throw from a finally, then values returned or thrown from the try-catch block will be ignored. Consider using try-with-resources instead.","tnFile":"guava/src/com/google/common/io/FileBackedOutputStream.java","tnLine":157,"tnColumn":11,"tnPatch":null,"tnCodeLine":"          throw new IOException(\"Could not delete: \" + deleteMe);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"OperatorPrecedence","tnDesc":"Use grouping parenthesis to make the operator precedence explicit","tnFile":"guava/src/com/google/common/io/BaseEncoding.java","tnLine":933,"tnColumn":87,"tnPatch":null,"tnCodeLine":"        int chunk = (bytes[i++] & 0xFF) << 16 | (bytes[i++] & 0xFF) << 8 | bytes[i++] & 0xFF;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"guava/src/com/google/common/math/IntMath.java","tnLine":605,"tnColumn":41,"tnPatch":null,"tnCodeLine":"            if (-FLOOR_SQRT_MAX_INT > b | b > FLOOR_SQRT_MAX_INT) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ThreadPriorityCheck","tnDesc":"Relying on the thread scheduler is discouraged; see Effective Java Item 72 (2nd edition) / 84 (3rd edition).","tnFile":"guava/src/com/google/common/util/concurrent/ThreadFactoryBuilder.java","tnLine":171,"tnColumn":29,"tnPatch":null,"tnCodeLine":"          thread.setPriority(priority);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/testers/MapRemoveTester.java","tnLine":45,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"OperatorPrecedence","tnDesc":"Use grouping parenthesis to make the operator precedence explicit","tnFile":"guava/src/com/google/common/math/LongMath.java","tnLine":742,"tnColumn":53,"tnPatch":null,"tnCodeLine":"    long limit = Long.MAX_VALUE + ((b >>> Long.SIZE - 1) & (k & 1));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UndefinedEquals","tnDesc":"Multimap does not have well-defined equals behavior.","tnFile":"guava-testlib/src/com/google/common/collect/testing/google/MultimapEntriesTester.java","tnLine":97,"tnColumn":17,"tnPatch":null,"tnCodeLine":"    assertEquals(getSubjectGenerator().create(Helpers.mapEntry(k0(), v0())), multimap());","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UndefinedEquals","tnDesc":"Multimap does not have well-defined equals behavior.","tnFile":"guava-gwt/target/classes/com/google/common/collect/Synchronized.java","tnLine":746,"tnColumn":33,"tnPatch":null,"tnCodeLine":"        return delegate().equals(o);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/testers/CollectionToArrayTester.java","tnLine":43,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/google/MultimapKeySetTester.java","tnLine":38,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ReferenceEquality","tnDesc":"Comparison using reference equality instead of value equality","tnFile":"guava-gwt/target/classes/com/google/common/collect/Range.java","tnLine":638,"tnColumn":19,"tnPatch":null,"tnCodeLine":"    return (lower == lowerBound && upper == upperBound) ? this : create(lower, upper);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"guava-gwt/target/classes/com/google/common/math/IntMath.java","tnLine":521,"tnColumn":54,"tnPatch":null,"tnCodeLine":"            checkNoOverflow(-FLOOR_SQRT_MAX_INT <= b & b <= FLOOR_SQRT_MAX_INT, \"checkedPow\", b, k);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"SortedSet was replaced by NavigableSet in Java 6.","tnFile":"guava/src/com/google/common/collect/ForwardingSortedSet.java","tnLine":55,"tnColumn":17,"tnPatch":null,"tnCodeLine":"public abstract class ForwardingSortedSet<E> extends ForwardingSet<E> implements SortedSet<E> {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/testers/ListHashCodeTester.java","tnLine":31,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"It is very rare for LinkedList to out-perform ArrayList or ArrayDeque. Avoid it unless you're willing to invest a lot of time into benchmarking. Caveat: LinkedList supports null elements, but ArrayDeque does not.","tnFile":"guava-testlib/src/com/google/common/collect/testing/TestsForQueuesInJavaUtil.java","tnLine":110,"tnColumn":39,"tnPatch":null,"tnCodeLine":"                Queue<String> queue = new LinkedList<>(MinimalCollection.of(elements));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The parameter 'stream' is never read.","tnFile":"guava/src/com/google/common/collect/ImmutableAsList.java","tnLine":76,"tnColumn":45,"tnPatch":null,"tnCodeLine":"  private void readObject(ObjectInputStream stream) throws InvalidObjectException {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/google/MultimapGetTester.java","tnLine":44,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ReferenceEquality","tnDesc":"Comparison using reference equality instead of value equality","tnFile":"guava/src/com/google/common/collect/Range.java","tnLine":389,"tnColumn":23,"tnPatch":null,"tnCodeLine":"    return upperBound != Cut.aboveAll();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"guava/src/com/google/common/util/concurrent/Monitor.java","tnLine":897,"tnColumn":35,"tnPatch":null,"tnCodeLine":"    if (!((guard.monitor == this) & lock.isHeldByCurrentThread())) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"guava/src/com/google/common/math/LongMath.java","tnLine":426,"tnColumn":61,"tnPatch":null,"tnCodeLine":"          increment = (mode == HALF_UP | (mode == HALF_EVEN & (div & 1) != 0));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ReferenceEquality","tnDesc":"Comparison using reference equality instead of value equality","tnFile":"guava-gwt/target/classes/com/google/common/collect/LinkedHashMultimap.java","tnLine":526,"tnColumn":26,"tnPatch":null,"tnCodeLine":"        return nextEntry != multimapHeaderEntry;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"SortedSet was replaced by NavigableSet in Java 6.","tnFile":"guava-gwt/target/classes/com/google/common/collect/Maps.java","tnLine":3746,"tnColumn":10,"tnPatch":null,"tnCodeLine":"  static class SortedKeySet<K, V> extends KeySet<K, V> implements SortedSet<K> {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingFail","tnDesc":"Not calling fail() when expecting an exception masks bugs","tnFile":"guava-testlib/src/com/google/common/util/concurrent/testing/AbstractListenableFutureTest.java","tnLine":134,"tnColumn":19,"tnPatch":null,"tnCodeLine":"                  future.get();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/google/MultimapAsMapGetTester.java","tnLine":42,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"guava-gwt/target/classes/com/google/common/math/IntMath.java","tnLine":361,"tnColumn":62,"tnPatch":null,"tnCodeLine":"          increment = (mode == HALF_UP || (mode == HALF_EVEN & (div & 1) != 0));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/testers/ListAddAtIndexTester.java","tnLine":44,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/testers/MapCreationTester.java","tnLine":46,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ImmutableEnumChecker","tnDesc":"enums should be immutable: 'CollectionFeature' has field 'implied' of type 'java.util.Set<com.google.common.collect.testing.features.Feature<? super java.util.Collection>>', 'Set' is mutable","tnFile":"guava-testlib/src/com/google/common/collect/testing/features/CollectionFeature.java","tnLine":109,"tnColumn":50,"tnPatch":null,"tnCodeLine":"  private final Set<Feature<? super Collection>> implied;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/google/ListMultimapPutAllTester.java","tnLine":33,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/testers/MapContainsKeyTester.java","tnLine":37,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ImmutableEnumChecker","tnDesc":"enums should be immutable: 'CollectionSize' has field 'implied' of type 'java.util.Set<com.google.common.collect.testing.features.Feature<? super java.util.Collection>>', 'Set' is mutable","tnFile":"guava-testlib/src/com/google/common/collect/testing/features/CollectionSize.java","tnLine":61,"tnColumn":50,"tnPatch":null,"tnCodeLine":"  private final Set<Feature<? super Collection>> implied;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"guava/src/com/google/common/math/DoubleMath.java","tnLine":185,"tnColumn":38,"tnPatch":null,"tnCodeLine":"    if (MIN_LONG_AS_DOUBLE - x < 1.0 & x < MAX_LONG_AS_DOUBLE_PLUS_ONE) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"SynchronizeOnNonFinalField","tnDesc":"Synchronizing on non-final fields is not safe: if the field is ever updated, different threads may end up locking on different objects.","tnFile":"guava-testlib/src/com/google/common/collect/testing/testers/CollectionStreamTester.java","tnLine":52,"tnColumn":18,"tnPatch":null,"tnCodeLine":"    synchronized (collection) { // to allow Collections.synchronized* tests to pass","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ReferenceEquality","tnDesc":"Comparison using reference equality instead of value equality","tnFile":"guava/src/com/google/common/collect/Range.java","tnLine":355,"tnColumn":23,"tnPatch":null,"tnCodeLine":"        || lowerBound == Cut.<C>aboveAll()","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"guava/src/com/google/common/util/concurrent/AggregateFuture.java","tnLine":190,"tnColumn":53,"tnPatch":null,"tnCodeLine":"          | (allMustSucceed & !completedWithFailure & firstTimeSeeingThisException)) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ImmutableEnumChecker","tnDesc":"enums should be immutable: 'MultimapFeature' has field 'implied' of type 'java.util.Set<com.google.common.collect.testing.features.Feature<? super com.google.common.collect.Multimap>>', 'Set' is mutable","tnFile":"guava-testlib/src/com/google/common/collect/testing/google/MultimapFeature.java","tnLine":40,"tnColumn":48,"tnPatch":null,"tnCodeLine":"  private final Set<Feature<? super Multimap>> implied;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/testers/ListCreationTester.java","tnLine":36,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/google/MultisetSerializationTester.java","tnLine":35,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"guava-gwt/target/classes/com/google/common/math/IntMath.java","tnLine":94,"tnColumn":18,"tnPatch":null,"tnCodeLine":"    return x > 0 & (x & (x - 1)) == 0;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/testers/MapPutIfAbsentTester.java","tnLine":38,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/testers/MapContainsValueTester.java","tnLine":38,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UndefinedEquals","tnDesc":"Collection does not have well-defined equals behavior.","tnFile":"guava-gwt/target/classes/com/google/common/collect/AbstractMapBasedMultimap.java","tnLine":401,"tnColumn":29,"tnPatch":null,"tnCodeLine":"      return delegate.equals(object);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/testers/CollectionCreationTester.java","tnLine":39,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"WaitNotInLoop","tnDesc":"Because of spurious wakeups, await(long,java.util.concurrent.TimeUnit) must always be called in a loop","tnFile":"guava/src/com/google/common/util/concurrent/ForwardingCondition.java","tnLine":32,"tnColumn":28,"tnPatch":null,"tnCodeLine":"    return delegate().await(time, unit);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/google/MultisetIteratorTester.java","tnLine":40,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"guava/src/com/google/common/collect/GeneralRange.java","tnLine":157,"tnColumn":20,"tnPatch":null,"tnCodeLine":"    return cmp < 0 | (cmp == 0 & getLowerBoundType() == OPEN);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ReferenceEquality","tnDesc":"Comparison using reference equality instead of value equality","tnFile":"guava-gwt/target/classes/com/google/common/collect/Range.java","tnLine":638,"tnColumn":42,"tnPatch":null,"tnCodeLine":"    return (lower == lowerBound && upper == upperBound) ? this : create(lower, upper);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/google/BiMapEntrySetTester.java","tnLine":32,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/testers/AbstractListTester.java","tnLine":32,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"guava/src/com/google/common/util/concurrent/AggregateFuture.java","tnLine":251,"tnColumn":26,"tnPatch":null,"tnCodeLine":"      if (collectsValues & !allMustSucceed) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/google/SortedSetMultimapGetTester.java","tnLine":29,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"SortedMap was replaced by NavigableMap in Java 6.","tnFile":"guava/src/com/google/common/collect/Synchronized.java","tnLine":1237,"tnColumn":10,"tnPatch":null,"tnCodeLine":"  static class SynchronizedSortedMap<K, V> extends SynchronizedMap<K, V>","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"guava/src/com/google/common/math/LongMath.java","tnLine":97,"tnColumn":18,"tnPatch":null,"tnCodeLine":"    return x > 0 & (x & (x - 1)) == 0;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"guava-gwt/target/classes/com/google/common/math/LongMath.java","tnLine":604,"tnColumn":17,"tnPatch":null,"tnCodeLine":"    if (b >= -2 & b <= 2) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ImmutableEnumChecker","tnDesc":"enums should be immutable: 'ListFeature' has field 'implied' of type 'java.util.Set<com.google.common.collect.testing.features.Feature<? super java.util.List>>', 'Set' is mutable","tnFile":"guava-testlib/src/com/google/common/collect/testing/features/ListFeature.java","tnLine":49,"tnColumn":44,"tnPatch":null,"tnCodeLine":"  private final Set<Feature<? super List>> implied;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"SynchronizeOnNonFinalField","tnDesc":"Synchronizing on non-final fields is not safe: if the field is ever updated, different threads may end up locking on different objects.","tnFile":"guava-testlib/src/com/google/common/collect/testing/testers/CollectionStreamTester.java","tnLine":58,"tnColumn":18,"tnPatch":null,"tnCodeLine":"    synchronized (collection) { // to allow Collections.synchronized* tests to pass","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ReferenceEquality","tnDesc":"Comparison using reference equality instead of value equality","tnFile":"guava/src/com/google/common/collect/TreeRangeSet.java","tnLine":527,"tnColumn":71,"tnPatch":null,"tnCodeLine":"          && (!positiveItr.hasNext() || positiveItr.peek().lowerBound != Cut.<C>belowAll())) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"It is very rare for LinkedList to out-perform ArrayList or ArrayDeque. Avoid it unless you're willing to invest a lot of time into benchmarking. Caveat: LinkedList supports null elements, but ArrayDeque does not.","tnFile":"guava/src/com/google/common/collect/MultimapBuilder.java","tnLine":208,"tnColumn":14,"tnPatch":null,"tnCodeLine":"      return new LinkedList<>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"WaitNotInLoop","tnDesc":"Because of spurious wakeups, await() must always be called in a loop","tnFile":"guava/src/com/google/common/util/concurrent/ForwardingCondition.java","tnLine":27,"tnColumn":21,"tnPatch":null,"tnCodeLine":"    delegate().await();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/google/AbstractListMultimapTester.java","tnLine":31,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/google/BiMapClearTester.java","tnLine":32,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"guava/src/com/google/common/math/LongMath.java","tnLine":652,"tnColumn":21,"tnPatch":null,"tnCodeLine":"    if ((a ^ b) < 0 | (a ^ naiveSum) >= 0) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"WaitNotInLoop","tnDesc":"Because of spurious wakeups, awaitUntil(java.util.Date) must always be called in a loop","tnFile":"guava/src/com/google/common/util/concurrent/ForwardingCondition.java","tnLine":47,"tnColumn":33,"tnPatch":null,"tnCodeLine":"    return delegate().awaitUntil(deadline);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ReferenceEquality","tnDesc":"Comparison using reference equality instead of value equality","tnFile":"guava/src/com/google/common/collect/TreeRangeSet.java","tnLine":584,"tnColumn":44,"tnPatch":null,"tnCodeLine":"            (positiveItr.peek().upperBound == Cut.<C>aboveAll())","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"guava/src/com/google/common/math/DoubleMath.java","tnLine":258,"tnColumn":34,"tnPatch":null,"tnCodeLine":"        increment = exponent < 0 & !isPowerOfTwo(x);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"AssertionFailureIgnored","tnDesc":"This assertion throws an AssertionError if it fails, which will be caught by an enclosing try block.","tnFile":"guava-testlib/src/com/google/common/util/concurrent/testing/AbstractListenableFutureTest.java","tnLine":80,"tnColumn":29,"tnPatch":null,"tnCodeLine":"                  assertSame(Boolean.TRUE, future.get());","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"SortedSet was replaced by NavigableSet in Java 6.","tnFile":"guava/src/com/google/common/collect/Synchronized.java","tnLine":291,"tnColumn":10,"tnPatch":null,"tnCodeLine":"  static class SynchronizedSortedSet<E> extends SynchronizedSet<E> implements SortedSet<E> {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"SortedSet was replaced by NavigableSet in Java 6.","tnFile":"guava/src/com/google/common/collect/Maps.java","tnLine":3746,"tnColumn":10,"tnPatch":null,"tnCodeLine":"  static class SortedKeySet<K, V> extends KeySet<K, V> implements SortedSet<K> {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/google/SortedSetMultimapAsMapTester.java","tnLine":36,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"guava-gwt/target/classes/com/google/common/math/LongMath.java","tnLine":426,"tnColumn":61,"tnPatch":null,"tnCodeLine":"          increment = (mode == HALF_UP | (mode == HALF_EVEN & (div & 1) != 0));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"guava/src/com/google/common/math/LongMath.java","tnLine":670,"tnColumn":22,"tnPatch":null,"tnCodeLine":"    if ((a ^ b) >= 0 | (a ^ naiveDifference) >= 0) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"SortedSet was replaced by NavigableSet in Java 6.","tnFile":"guava/src/com/google/common/collect/SortedMultisets.java","tnLine":43,"tnColumn":10,"tnPatch":null,"tnCodeLine":"  static class ElementSet<E> extends Multisets.ElementSet<E> implements SortedSet<E> {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"SortedMap was replaced by NavigableMap in Java 6.","tnFile":"guava/src/com/google/common/collect/Maps.java","tnLine":2963,"tnColumn":18,"tnPatch":null,"tnCodeLine":"  private static class FilteredEntrySortedMap<K, V> extends FilteredEntryMap<K, V>","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedNestedClass","tnDesc":"This nested class is unused, and can be removed.","tnFile":"guava/src/com/google/common/collect/FluentIterable.java","tnLine":845,"tnColumn":18,"tnPatch":null,"tnCodeLine":"  private static class FromIterableFunction<E> implements Function<Iterable<E>, FluentIterable<E>> {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"guava/src/com/google/common/math/IntMath.java","tnLine":521,"tnColumn":54,"tnPatch":null,"tnCodeLine":"            checkNoOverflow(-FLOOR_SQRT_MAX_INT <= b & b <= FLOOR_SQRT_MAX_INT, \"checkedPow\", b, k);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UndefinedEquals","tnDesc":"Collection does not have well-defined equals behavior.","tnFile":"guava-gwt/target/classes/com/google/common/collect/FilteredEntryMultimap.java","tnLine":310,"tnColumn":52,"tnPatch":null,"tnCodeLine":"              if (!collection.isEmpty() && c.equals(collection)) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"OperatorPrecedence","tnDesc":"Use grouping parenthesis to make the operator precedence explicit","tnFile":"guava-gwt/target/classes/com/google/common/math/LongMath.java","tnLine":742,"tnColumn":53,"tnPatch":null,"tnCodeLine":"    long limit = Long.MAX_VALUE + ((b >>> Long.SIZE - 1) & (k & 1));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"guava-gwt/target/classes/com/google/common/math/IntMath.java","tnLine":605,"tnColumn":41,"tnPatch":null,"tnCodeLine":"            if (-FLOOR_SQRT_MAX_INT > b | b > FLOOR_SQRT_MAX_INT) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ReferenceEquality","tnDesc":"Comparison using reference equality instead of value equality","tnFile":"guava-gwt/target/classes/com/google/common/collect/Range.java","tnLine":356,"tnColumn":23,"tnPatch":null,"tnCodeLine":"        || upperBound == Cut.<C>belowAll()) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"guava-gwt/target/classes/com/google/common/math/LongMath.java","tnLine":718,"tnColumn":17,"tnPatch":null,"tnCodeLine":"    if (b >= -2 & b <= 2) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/google/MultisetCountTester.java","tnLine":41,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"guava-gwt/target/classes/com/google/common/math/LongMath.java","tnLine":652,"tnColumn":21,"tnPatch":null,"tnCodeLine":"    if ((a ^ b) < 0 | (a ^ naiveSum) >= 0) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/testers/AbstractSetTester.java","tnLine":26,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/testers/MapComputeTester.java","tnLine":39,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"It is very rare for LinkedList to out-perform ArrayList or ArrayDeque. Avoid it unless you're willing to invest a lot of time into benchmarking. Caveat: LinkedList supports null elements, but ArrayDeque does not.","tnFile":"guava-gwt/target/classes/com/google/common/collect/MultimapBuilder.java","tnLine":208,"tnColumn":14,"tnPatch":null,"tnCodeLine":"      return new LinkedList<>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"SortedMap was replaced by NavigableMap in Java 6.","tnFile":"guava-gwt/target/classes/com/google/common/collect/ForwardingSortedMap.java","tnLine":54,"tnColumn":17,"tnPatch":null,"tnCodeLine":"public abstract class ForwardingSortedMap<K, V> extends ForwardingMap<K, V>","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"WaitNotInLoop","tnDesc":"Because of spurious wakeups, awaitUninterruptibly() must always be called in a loop","tnFile":"guava/src/com/google/common/util/concurrent/ForwardingCondition.java","tnLine":37,"tnColumn":36,"tnPatch":null,"tnCodeLine":"    delegate().awaitUninterruptibly();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/testers/MapRemoveEntryTester.java","tnLine":38,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/testers/MapToStringTester.java","tnLine":42,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"CatchAndPrintStackTrace","tnDesc":"Logging or rethrowing exceptions should usually be preferred to catching and calling printStackTrace","tnFile":"guava/src/com/google/common/io/FileBackedOutputStream.java","tnLine":105,"tnColumn":17,"tnPatch":null,"tnCodeLine":"                t.printStackTrace(System.err);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/google/MultimapValuesTester.java","tnLine":39,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"guava/src/com/google/common/math/LongMath.java","tnLine":755,"tnColumn":42,"tnPatch":null,"tnCodeLine":"            if (-FLOOR_SQRT_MAX_LONG > b | b > FLOOR_SQRT_MAX_LONG) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"IntLongMath","tnDesc":"Expression of type int may overflow before being assigned to a long","tnFile":"guava/src/com/google/common/hash/Murmur3_32HashFunction.java","tnLine":407,"tnColumn":46,"tnPatch":null,"tnCodeLine":"    return (((0xF << 6) | (c >>> 6)) & 0xFF) | ((0x80 | (0x3F & c)) << 8);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/google/MultimapEntriesTester.java","tnLine":45,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/testers/CollectionRemoveAllTester.java","tnLine":46,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UndefinedEquals","tnDesc":"Collection does not have well-defined equals behavior.","tnFile":"guava-gwt/target/classes/com/google/common/base/Predicates.java","tnLine":566,"tnColumn":29,"tnPatch":null,"tnCodeLine":"        return target.equals(that.target);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/testers/MapEqualsTester.java","tnLine":40,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"SortedMap was replaced by NavigableMap in Java 6.","tnFile":"guava-gwt/target/classes/com/google/common/collect/AbstractMapBasedMultimap.java","tnLine":1436,"tnColumn":11,"tnPatch":null,"tnCodeLine":"  private class SortedAsMap extends AsMap implements SortedMap<K, Collection<V>> {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/google/MultimapAsMapTester.java","tnLine":49,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UndefinedEquals","tnDesc":"Collection does not have well-defined equals behavior.","tnFile":"guava/src/com/google/common/collect/AbstractMapBasedMultimap.java","tnLine":401,"tnColumn":29,"tnPatch":null,"tnCodeLine":"      return delegate.equals(object);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnsynchronizedOverridesSynchronized","tnDesc":"Unsynchronized method reset overrides synchronized method in FilterInputStream","tnFile":"guava/src/com/google/common/hash/HashingInputStream.java","tnLine":94,"tnColumn":15,"tnPatch":null,"tnCodeLine":"  public void reset() throws IOException {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ReferenceEquality","tnDesc":"Comparison using reference equality instead of value equality","tnFile":"guava/src/com/google/common/collect/TreeRangeSet.java","tnLine":540,"tnColumn":48,"tnPatch":null,"tnCodeLine":"              || nextComplementRangeLowerBound == Cut.<C>aboveAll()) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"guava/src/com/google/common/util/concurrent/AggregateFuture.java","tnLine":64,"tnColumn":25,"tnPatch":null,"tnCodeLine":"      if (isCancelled() & futures != null) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/testers/ConcurrentMapRemoveTester.java","tnLine":38,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"OperatorPrecedence","tnDesc":"Use grouping parenthesis to make the operator precedence explicit","tnFile":"guava-gwt/target/classes/com/google/common/math/IntMath.java","tnLine":592,"tnColumn":58,"tnPatch":null,"tnCodeLine":"    int limit = Integer.MAX_VALUE + ((b >>> Integer.SIZE - 1) & (k & 1));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/testers/CollectionRetainAllTester.java","tnLine":43,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"guava-gwt/target/classes/com/google/common/math/LongMath.java","tnLine":97,"tnColumn":18,"tnPatch":null,"tnCodeLine":"    return x > 0 & (x & (x - 1)) == 0;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"guava/src/com/google/common/util/concurrent/Monitor.java","tnLine":852,"tnColumn":35,"tnPatch":null,"tnCodeLine":"    if (!((guard.monitor == this) & lock.isHeldByCurrentThread())) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"guava-gwt/target/classes/com/google/common/math/LongMath.java","tnLine":547,"tnColumn":33,"tnPatch":null,"tnCodeLine":"    checkNoOverflow((a ^ b) < 0 | (a ^ result) >= 0, \"checkedAdd\", a, b);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/google/MultimapPutIterableTester.java","tnLine":43,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/testers/ListLastIndexOfTester.java","tnLine":35,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"SortedMap was replaced by NavigableMap in Java 6.","tnFile":"guava/src/com/google/common/collect/Maps.java","tnLine":2086,"tnColumn":10,"tnPatch":null,"tnCodeLine":"  static class TransformedEntriesSortedMap<K, V1, V2> extends TransformedEntriesMap<K, V1, V2>","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"guava-gwt/target/classes/com/google/common/math/LongMath.java","tnLine":755,"tnColumn":42,"tnPatch":null,"tnCodeLine":"            if (-FLOOR_SQRT_MAX_LONG > b | b > FLOOR_SQRT_MAX_LONG) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/google/MultisetSetCountConditionallyTester.java","tnLine":36,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/testers/SetAddAllTester.java","tnLine":36,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"IntLongMath","tnDesc":"Expression of type int may overflow before being assigned to a long","tnFile":"guava/src/com/google/common/hash/Murmur3_32HashFunction.java","tnLine":403,"tnColumn":9,"tnPatch":null,"tnCodeLine":"        | ((0x80 | (0x3F & c)) << 16);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/testers/NavigableSetNavigationTester.java","tnLine":45,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ReferenceEquality","tnDesc":"Comparison using reference equality instead of value equality","tnFile":"guava-testlib/src/com/google/common/collect/testing/Helpers.java","tnLine":465,"tnColumn":15,"tnPatch":null,"tnCodeLine":"      if (lhs == rhs) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"guava-gwt/target/classes/com/google/common/math/LongMath.java","tnLine":698,"tnColumn":34,"tnPatch":null,"tnCodeLine":"    if (leadingZeros < Long.SIZE | (a < 0 & b == Long.MIN_VALUE)) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/google/MultimapSizeTester.java","tnLine":39,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/testers/ListAddAllAtIndexTester.java","tnLine":41,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ReferenceEquality","tnDesc":"Comparison using reference equality instead of value equality","tnFile":"guava/src/com/google/common/io/BaseEncoding.java","tnLine":831,"tnColumn":37,"tnPatch":null,"tnCodeLine":"        result = lowerCase = (lower == alphabet) ? this : newInstance(lower, paddingChar);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ReferenceEquality","tnDesc":"Comparison using reference equality instead of value equality","tnFile":"guava-gwt/target/classes/com/google/common/collect/LinkedListMultimap.java","tnLine":541,"tnColumn":19,"tnPatch":null,"tnCodeLine":"      if (current != next) { // after call to next()","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/testers/SetRemoveTester.java","tnLine":34,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"guava/src/com/google/common/math/LongMath.java","tnLine":547,"tnColumn":33,"tnPatch":null,"tnCodeLine":"    checkNoOverflow((a ^ b) < 0 | (a ^ result) >= 0, \"checkedAdd\", a, b);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"guava-gwt/target/classes/com/google/common/math/LongMath.java","tnLine":426,"tnColumn":40,"tnPatch":null,"tnCodeLine":"          increment = (mode == HALF_UP | (mode == HALF_EVEN & (div & 1) != 0));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/google/BiMapInverseTester.java","tnLine":42,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ReferenceEquality","tnDesc":"Comparison using reference equality instead of value equality","tnFile":"guava-gwt/target/classes/com/google/common/collect/Range.java","tnLine":355,"tnColumn":23,"tnPatch":null,"tnCodeLine":"        || lowerBound == Cut.<C>aboveAll()","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UndefinedEquals","tnDesc":"Multimap does not have well-defined equals behavior.","tnFile":"guava-gwt/target/classes/com/google/common/collect/ForwardingMultimap.java","tnLine":146,"tnColumn":47,"tnPatch":null,"tnCodeLine":"    return object == this || delegate().equals(object);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ReferenceEquality","tnDesc":"Comparison using reference equality instead of value equality","tnFile":"guava/src/com/google/common/hash/BloomFilter.java","tnLine":229,"tnColumn":17,"tnPatch":null,"tnCodeLine":"    return this != that","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"SortedMap was replaced by NavigableMap in Java 6.","tnFile":"guava/src/com/google/common/collect/StandardRowSortedTable.java","tnLine":93,"tnColumn":11,"tnPatch":null,"tnCodeLine":"  private class RowSortedMap extends RowMap implements SortedMap<R, Map<C, V>> {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"guava/src/com/google/common/math/LongMath.java","tnLine":559,"tnColumn":34,"tnPatch":null,"tnCodeLine":"    checkNoOverflow((a ^ b) >= 0 | (a ^ result) >= 0, \"checkedSubtract\", a, b);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"SortedMap was replaced by NavigableMap in Java 6.","tnFile":"guava/src/com/google/common/collect/ForwardingSortedMap.java","tnLine":54,"tnColumn":17,"tnPatch":null,"tnCodeLine":"public abstract class ForwardingSortedMap<K, V> extends ForwardingMap<K, V>","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The parameter 'stream' is never read.","tnFile":"guava-gwt/target/classes/com/google/common/collect/ImmutableAsList.java","tnLine":76,"tnColumn":45,"tnPatch":null,"tnCodeLine":"  private void readObject(ObjectInputStream stream) throws InvalidObjectException {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"SortedSet was replaced by NavigableSet in Java 6.","tnFile":"guava/src/com/google/common/collect/Sets.java","tnLine":1153,"tnColumn":18,"tnPatch":null,"tnCodeLine":"  private static class FilteredSortedSet<E> extends FilteredSet<E> implements SortedSet<E> {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"guava/src/com/google/common/math/LongMath.java","tnLine":718,"tnColumn":17,"tnPatch":null,"tnCodeLine":"    if (b >= -2 & b <= 2) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"SortedSet was replaced by NavigableSet in Java 6.","tnFile":"guava-gwt/target/classes/com/google/common/collect/Maps.java","tnLine":2986,"tnColumn":5,"tnPatch":null,"tnCodeLine":"    class SortedKeySet extends KeySet implements SortedSet<K> {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/testers/ListRemoveTester.java","tnLine":35,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ReferenceEquality","tnDesc":"Comparison using reference equality instead of value equality","tnFile":"guava/src/com/google/common/io/BaseEncoding.java","tnLine":821,"tnColumn":37,"tnPatch":null,"tnCodeLine":"        result = upperCase = (upper == alphabet) ? this : newInstance(upper, paddingChar);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/google/ListMultimapPutTester.java","tnLine":36,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/google/SetMultimapAsMapTester.java","tnLine":45,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"guava/src/com/google/common/util/concurrent/AggregateFuture.java","tnLine":190,"tnColumn":11,"tnPatch":null,"tnCodeLine":"          | (allMustSucceed & !completedWithFailure & firstTimeSeeingThisException)) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingFail","tnDesc":"Not calling fail() when expecting an exception masks bugs","tnFile":"guava-testlib/src/com/google/common/util/concurrent/testing/AbstractListenableFutureTest.java","tnLine":177,"tnColumn":19,"tnPatch":null,"tnCodeLine":"                  future.get();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedNestedClass","tnDesc":"This nested class is unused, and can be removed.","tnFile":"guava-gwt/target/classes/com/google/common/collect/FluentIterable.java","tnLine":845,"tnColumn":18,"tnPatch":null,"tnCodeLine":"  private static class FromIterableFunction<E> implements Function<Iterable<E>, FluentIterable<E>> {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/testers/MapReplaceTester.java","tnLine":39,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ReferenceEquality","tnDesc":"Comparison using reference equality instead of value equality","tnFile":"guava/src/com/google/common/collect/Range.java","tnLine":356,"tnColumn":23,"tnPatch":null,"tnCodeLine":"        || upperBound == Cut.<C>belowAll()) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"SortedMap was replaced by NavigableMap in Java 6.","tnFile":"guava/src/com/google/common/collect/Maps.java","tnLine":965,"tnColumn":18,"tnPatch":null,"tnCodeLine":"  private static class SortedAsMapView<K, V> extends AsMapView<K, V> implements SortedMap<K, V> {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/google/ListMultimapAsMapTester.java","tnLine":45,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ReferenceEquality","tnDesc":"Comparison using reference equality instead of value equality","tnFile":"guava-gwt/target/classes/com/google/common/collect/Range.java","tnLine":389,"tnColumn":23,"tnPatch":null,"tnCodeLine":"    return upperBound != Cut.aboveAll();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"guava/src/com/google/common/collect/GeneralRange.java","tnLine":166,"tnColumn":32,"tnPatch":null,"tnCodeLine":"    return cmp > 0 | (cmp == 0 & getUpperBoundType() == OPEN);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"guava-gwt/target/classes/com/google/common/math/LongMath.java","tnLine":670,"tnColumn":22,"tnPatch":null,"tnCodeLine":"    if ((a ^ b) >= 0 | (a ^ naiveDifference) >= 0) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"SortedMap was replaced by NavigableMap in Java 6.","tnFile":"guava-gwt/target/classes/com/google/common/collect/StandardRowSortedTable.java","tnLine":93,"tnColumn":11,"tnPatch":null,"tnCodeLine":"  private class RowSortedMap extends RowMap implements SortedMap<R, Map<C, V>> {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"AmbiguousMethodReference","tnDesc":"This method's reference is ambiguous, its name and functional interface type are the same as: toJavaUtil()","tnFile":"guava-gwt/target/classes/com/google/common/base/Optional.java","tnLine":141,"tnColumn":53,"tnPatch":null,"tnCodeLine":"  public static <T> java.util.@Nullable Optional<T> toJavaUtil(","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/google/MultimapToStringTester.java","tnLine":36,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"guava/src/com/google/common/math/LongMath.java","tnLine":589,"tnColumn":28,"tnPatch":null,"tnCodeLine":"    checkNoOverflow(a >= 0 | b != Long.MIN_VALUE, \"checkedMultiply\", a, b);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/testers/MapGetTester.java","tnLine":38,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The local variable 'closeBracketIndex' is never read.","tnFile":"guava/src/com/google/common/net/HostAndPort.java","tnLine":213,"tnColumn":9,"tnPatch":null,"tnCodeLine":"    int closeBracketIndex = 0;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"guava-gwt/target/classes/com/google/common/math/LongMath.java","tnLine":559,"tnColumn":34,"tnPatch":null,"tnCodeLine":"    checkNoOverflow((a ^ b) >= 0 | (a ^ result) >= 0, \"checkedSubtract\", a, b);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ReferenceEquality","tnDesc":"Comparison using reference equality instead of value equality","tnFile":"guava/src/com/google/common/collect/Range.java","tnLine":638,"tnColumn":19,"tnPatch":null,"tnCodeLine":"    return (lower == lowerBound && upper == upperBound) ? this : create(lower, upper);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"SortedSet was replaced by NavigableSet in Java 6.","tnFile":"guava-gwt/target/classes/com/google/common/collect/ForwardingSortedSet.java","tnLine":55,"tnColumn":17,"tnPatch":null,"tnCodeLine":"public abstract class ForwardingSortedSet<E> extends ForwardingSet<E> implements SortedSet<E> {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"WaitNotInLoop","tnDesc":"Because of spurious wakeups, awaitNanos(long) must always be called in a loop","tnFile":"guava/src/com/google/common/util/concurrent/ForwardingCondition.java","tnLine":42,"tnColumn":33,"tnPatch":null,"tnCodeLine":"    return delegate().awaitNanos(nanosTimeout);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The parameter 'stream' is never read.","tnFile":"guava-gwt/target/classes/com/google/common/collect/ImmutableList.java","tnLine":693,"tnColumn":45,"tnPatch":null,"tnCodeLine":"  private void readObject(ObjectInputStream stream) throws InvalidObjectException {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ReferenceEquality","tnDesc":"Comparison using reference equality instead of value equality","tnFile":"guava/src/com/google/common/io/Files.java","tnLine":374,"tnColumn":15,"tnPatch":null,"tnCodeLine":"    if (file1 == file2 || file1.equals(file2)) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/testers/MapForEachTester.java","tnLine":44,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"Enumeration is an ancient precursor to Iterator.","tnFile":"guava-gwt/target/classes/com/google/common/collect/Iterators.java","tnLine":1098,"tnColumn":12,"tnPatch":null,"tnCodeLine":"    return new Enumeration<T>() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/google/MultisetEntrySetTester.java","tnLine":43,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/testers/MapReplaceAllTester.java","tnLine":42,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"Stack is a nonstandard class that predates the Java Collections Framework; prefer ArrayDeque. Note that the Stack methods push/pop/peek correspond to the Deque methods addFirst/removeFirst/peekFirst.","tnFile":"guava-testlib/src/com/google/common/collect/testing/AbstractIteratorTester.java","tnLine":138,"tnColumn":35,"tnPatch":null,"tnCodeLine":"    final Stack<E> nextElements = new Stack<E>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"guava/src/com/google/common/math/DoubleMath.java","tnLine":134,"tnColumn":37,"tnPatch":null,"tnCodeLine":"        z > MIN_INT_AS_DOUBLE - 1.0 & z < MAX_INT_AS_DOUBLE + 1.0, x, mode);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"guava/src/com/google/common/math/LongMath.java","tnLine":698,"tnColumn":34,"tnPatch":null,"tnCodeLine":"    if (leadingZeros < Long.SIZE | (a < 0 & b == Long.MIN_VALUE)) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/google/MultimapRemoveAllTester.java","tnLine":42,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"guava/src/com/google/common/math/LongMath.java","tnLine":604,"tnColumn":17,"tnPatch":null,"tnCodeLine":"    if (b >= -2 & b <= 2) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/google/MultimapContainsValueTester.java","tnLine":35,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/testers/CollectionContainsTester.java","tnLine":38,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"guava/src/com/google/common/util/concurrent/AbstractCatchingFuture.java","tnLine":76,"tnColumn":9,"tnPatch":null,"tnCodeLine":"        | isCancelled()) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ReferenceEquality","tnDesc":"Comparison using reference equality instead of value equality","tnFile":"guava/src/com/google/common/collect/Range.java","tnLine":363,"tnColumn":23,"tnPatch":null,"tnCodeLine":"    return lowerBound != Cut.belowAll();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedMethod","tnDesc":"Private method 'logPatternCompilerError' is never used.","tnFile":"guava-gwt/target/classes/com/google/common/base/Platform.java","tnLine":82,"tnColumn":23,"tnPatch":null,"tnCodeLine":"  private static void logPatternCompilerError(ServiceConfigurationError e) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"SynchronizeOnNonFinalField","tnDesc":"Synchronizing on non-final fields is not safe: if the field is ever updated, different threads may end up locking on different objects.","tnFile":"guava-testlib/src/com/google/common/collect/testing/testers/CollectionStreamTester.java","tnLine":44,"tnColumn":18,"tnPatch":null,"tnCodeLine":"    synchronized (collection) { // to allow Collections.synchronized* tests to pass","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"SortedMap was replaced by NavigableMap in Java 6.","tnFile":"guava-gwt/target/classes/com/google/common/collect/Maps.java","tnLine":2086,"tnColumn":10,"tnPatch":null,"tnCodeLine":"  static class TransformedEntriesSortedMap<K, V1, V2> extends TransformedEntriesMap<K, V1, V2>","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UndefinedEquals","tnDesc":"Collection does not have well-defined equals behavior.","tnFile":"guava/src/com/google/common/base/Predicates.java","tnLine":566,"tnColumn":29,"tnPatch":null,"tnCodeLine":"        return target.equals(that.target);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"headSetImpl implements method in ImmutableSortedSet; expected @Override","tnFile":"guava/src/com/google/common/collect/ContiguousSet.java","tnLine":196,"tnColumn":29,"tnPatch":null,"tnCodeLine":"  abstract ContiguousSet<C> headSetImpl(C toElement, boolean inclusive);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"tailSetImpl implements method in ImmutableSortedSet; expected @Override","tnFile":"guava/src/com/google/common/collect/ContiguousSet.java","tnLine":203,"tnColumn":29,"tnPatch":null,"tnCodeLine":"  abstract ContiguousSet<C> tailSetImpl(C fromElement, boolean inclusive);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/testers/CollectionClearTester.java","tnLine":39,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"It is very rare for LinkedList to out-perform ArrayList or ArrayDeque. Avoid it unless you're willing to invest a lot of time into benchmarking. Caveat: LinkedList supports null elements, but ArrayDeque does not.","tnFile":"guava/src/com/google/common/io/LineReader.java","tnLine":46,"tnColumn":39,"tnPatch":null,"tnCodeLine":"  private final Queue<String> lines = new LinkedList<>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/testers/CollectionSerializationTester.java","tnLine":34,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"SortedSet was replaced by NavigableSet in Java 6.","tnFile":"guava-gwt/target/classes/com/google/common/collect/AbstractMapBasedMultimap.java","tnLine":987,"tnColumn":11,"tnPatch":null,"tnCodeLine":"  private class SortedKeySet extends KeySet implements SortedSet<K> {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"InputStreamSlowMultibyteRead","tnDesc":"Please also override int read(byte[], int, int), otherwise multi-byte reads from this input stream are likely to be slow.","tnFile":"guava/src/com/google/common/io/BaseEncoding.java","tnLine":741,"tnColumn":20,"tnPatch":null,"tnCodeLine":"        public int read() throws IOException {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"Enumeration is an ancient precursor to Iterator.","tnFile":"guava/src/com/google/common/collect/Iterators.java","tnLine":1098,"tnColumn":12,"tnPatch":null,"tnCodeLine":"    return new Enumeration<T>() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/google/MultimapContainsEntryTester.java","tnLine":37,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"SortedMap was replaced by NavigableMap in Java 6.","tnFile":"guava/src/com/google/common/collect/AbstractMapBasedMultimap.java","tnLine":1436,"tnColumn":11,"tnPatch":null,"tnCodeLine":"  private class SortedAsMap extends AsMap implements SortedMap<K, Collection<V>> {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"SortedSet was replaced by NavigableSet in Java 6.","tnFile":"guava-gwt/target/classes/com/google/common/collect/AbstractMapBasedMultimap.java","tnLine":615,"tnColumn":3,"tnPatch":null,"tnCodeLine":"  class WrappedSortedSet extends WrappedCollection implements SortedSet<V> {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/testers/ConcurrentMapReplaceEntryTester.java","tnLine":39,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"SortedMap was replaced by NavigableMap in Java 6.","tnFile":"guava-gwt/target/classes/com/google/common/collect/Maps.java","tnLine":2963,"tnColumn":18,"tnPatch":null,"tnCodeLine":"  private static class FilteredEntrySortedMap<K, V> extends FilteredEntryMap<K, V>","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"It is very rare for LinkedList to out-perform ArrayList or ArrayDeque. Avoid it unless you're willing to invest a lot of time into benchmarking. Caveat: LinkedList supports null elements, but ArrayDeque does not.","tnFile":"guava-gwt/target/classes/com/google/common/collect/Lists.java","tnLine":214,"tnColumn":12,"tnPatch":null,"tnCodeLine":"    return new LinkedList<>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"guava/src/com/google/common/util/concurrent/Monitor.java","tnLine":822,"tnColumn":35,"tnPatch":null,"tnCodeLine":"    if (!((guard.monitor == this) & lock.isHeldByCurrentThread())) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/google/MultisetReadsTester.java","tnLine":36,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The parameter 'stream' is never read.","tnFile":"guava/src/com/google/common/collect/ImmutableList.java","tnLine":693,"tnColumn":45,"tnPatch":null,"tnCodeLine":"  private void readObject(ObjectInputStream stream) throws InvalidObjectException {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"It is very rare for LinkedList to out-perform ArrayList or ArrayDeque. Avoid it unless you're willing to invest a lot of time into benchmarking. Caveat: LinkedList supports null elements, but ArrayDeque does not.","tnFile":"guava-testlib/src/com/google/common/collect/testing/TestsForQueuesInJavaUtil.java","tnLine":146,"tnColumn":24,"tnPatch":null,"tnCodeLine":"                return new LinkedList<>(MinimalCollection.of(elements));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"AmbiguousMethodReference","tnDesc":"This method's reference is ambiguous, its name and functional interface type are the same as: toJavaUtil()","tnFile":"guava/src/com/google/common/base/Optional.java","tnLine":141,"tnColumn":53,"tnPatch":null,"tnCodeLine":"  public static <T> java.util.@Nullable Optional<T> toJavaUtil(","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/testers/MapGetOrDefaultTester.java","tnLine":39,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"guava-gwt/target/classes/com/google/common/math/LongMath.java","tnLine":698,"tnColumn":43,"tnPatch":null,"tnCodeLine":"    if (leadingZeros < Long.SIZE | (a < 0 & b == Long.MIN_VALUE)) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/google/MultimapPutTester.java","tnLine":46,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ReferenceEquality","tnDesc":"Comparison using reference equality instead of value equality","tnFile":"guava-gwt/target/classes/com/google/common/collect/LinkedListMultimap.java","tnLine":360,"tnColumn":19,"tnPatch":null,"tnCodeLine":"      if (current != next) { // after call to next()","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UndefinedEquals","tnDesc":"Collection does not have well-defined equals behavior.","tnFile":"guava/src/com/google/common/collect/FilteredEntryMultimap.java","tnLine":310,"tnColumn":52,"tnPatch":null,"tnCodeLine":"              if (!collection.isEmpty() && c.equals(collection)) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"guava/src/com/google/common/math/DoubleMath.java","tnLine":159,"tnColumn":38,"tnPatch":null,"tnCodeLine":"        MIN_LONG_AS_DOUBLE - z < 1.0 & z < MAX_LONG_AS_DOUBLE_PLUS_ONE, x, mode);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/testers/MapEntrySetTester.java","tnLine":49,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/testers/CollectionRemoveTester.java","tnLine":43,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"guava/src/com/google/common/math/IntMath.java","tnLine":361,"tnColumn":62,"tnPatch":null,"tnCodeLine":"          increment = (mode == HALF_UP || (mode == HALF_EVEN & (div & 1) != 0));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"It is very rare for LinkedList to out-perform ArrayList or ArrayDeque. Avoid it unless you're willing to invest a lot of time into benchmarking. Caveat: LinkedList supports null elements, but ArrayDeque does not.","tnFile":"guava/src/com/google/common/collect/Lists.java","tnLine":214,"tnColumn":12,"tnPatch":null,"tnCodeLine":"    return new LinkedList<>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/testers/QueuePollTester.java","tnLine":38,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"guava/src/com/google/common/math/LongMath.java","tnLine":698,"tnColumn":43,"tnPatch":null,"tnCodeLine":"    if (leadingZeros < Long.SIZE | (a < 0 & b == Long.MIN_VALUE)) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"guava/src/com/google/common/collect/GeneralRange.java","tnLine":166,"tnColumn":20,"tnPatch":null,"tnCodeLine":"    return cmp > 0 | (cmp == 0 & getUpperBoundType() == OPEN);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"guava/src/com/google/common/util/concurrent/Monitor.java","tnLine":869,"tnColumn":35,"tnPatch":null,"tnCodeLine":"    if (!((guard.monitor == this) & lock.isHeldByCurrentThread())) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UndefinedEquals","tnDesc":"Multimap does not have well-defined equals behavior.","tnFile":"guava/src/com/google/common/collect/Synchronized.java","tnLine":746,"tnColumn":33,"tnPatch":null,"tnCodeLine":"        return delegate().equals(o);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"SortedSet was replaced by NavigableSet in Java 6.","tnFile":"guava-gwt/target/classes/com/google/common/collect/Sets.java","tnLine":1153,"tnColumn":18,"tnPatch":null,"tnCodeLine":"  private static class FilteredSortedSet<E> extends FilteredSet<E> implements SortedSet<E> {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"SortedMap was replaced by NavigableMap in Java 6.","tnFile":"guava-gwt/target/classes/com/google/common/collect/Maps.java","tnLine":965,"tnColumn":18,"tnPatch":null,"tnCodeLine":"  private static class SortedAsMapView<K, V> extends AsMapView<K, V> implements SortedMap<K, V> {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"SortedSet was replaced by NavigableSet in Java 6.","tnFile":"guava/src/com/google/common/collect/Maps.java","tnLine":2986,"tnColumn":5,"tnPatch":null,"tnCodeLine":"    class SortedKeySet extends KeySet implements SortedSet<K> {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'exception' is never read.","tnFile":"guava-testlib/src/com/google/common/util/concurrent/testing/SameThreadScheduledExecutorService.java","tnLine":152,"tnColumn":32,"tnPatch":null,"tnCodeLine":"    private ExecutionException exception;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ThreadLocalUsage","tnDesc":"ThreadLocals should be stored in static fields","tnFile":"guava/src/com/google/common/eventbus/Dispatcher.java","tnLine":79,"tnColumn":9,"tnPatch":null,"tnCodeLine":"        new ThreadLocal<Queue<Event>>() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"SortedSet was replaced by NavigableSet in Java 6.","tnFile":"guava-gwt/target/classes/com/google/common/collect/Synchronized.java","tnLine":291,"tnColumn":10,"tnPatch":null,"tnCodeLine":"  static class SynchronizedSortedSet<E> extends SynchronizedSet<E> implements SortedSet<E> {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"guava/src/com/google/common/util/concurrent/AbstractTransformFuture.java","tnLine":67,"tnColumn":50,"tnPatch":null,"tnCodeLine":"    if (isCancelled() | localInputFuture == null | localFunction == null) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The local variable 'colonIndex' is never read.","tnFile":"guava/src/com/google/common/net/HostAndPort.java","tnLine":212,"tnColumn":9,"tnPatch":null,"tnCodeLine":"    int colonIndex = 0;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/google/ListMultimapReplaceValuesTester.java","tnLine":33,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"SortedSet was replaced by NavigableSet in Java 6.","tnFile":"guava/src/com/google/common/collect/AbstractMapBasedMultimap.java","tnLine":615,"tnColumn":3,"tnPatch":null,"tnCodeLine":"  class WrappedSortedSet extends WrappedCollection implements SortedSet<V> {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/google/ListMultimapEqualsTester.java","tnLine":32,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/testers/CollectionStreamTester.java","tnLine":35,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"guava/src/com/google/common/math/LongMath.java","tnLine":426,"tnColumn":40,"tnPatch":null,"tnCodeLine":"          increment = (mode == HALF_UP | (mode == HALF_EVEN & (div & 1) != 0));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"SortedSet was replaced by NavigableSet in Java 6.","tnFile":"guava/src/com/google/common/collect/AbstractMapBasedMultimap.java","tnLine":987,"tnColumn":11,"tnPatch":null,"tnCodeLine":"  private class SortedKeySet extends KeySet implements SortedSet<K> {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'b' is never read.","tnFile":"guava-testlib/src/com/google/common/collect/testing/testers/SortedSetNavigationTester.java","tnLine":46,"tnColumn":13,"tnPatch":null,"tnCodeLine":"  private E b;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/testers/SortedSetNavigationTester.java","tnLine":40,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"subSetImpl implements method in ImmutableSortedSet; expected @Override","tnFile":"guava/src/com/google/common/collect/ContiguousSet.java","tnLine":199,"tnColumn":29,"tnPatch":null,"tnCodeLine":"  abstract ContiguousSet<C> subSetImpl(","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ReferenceEquality","tnDesc":"Comparison using reference equality instead of value equality","tnFile":"guava/src/com/google/common/collect/Range.java","tnLine":638,"tnColumn":42,"tnPatch":null,"tnCodeLine":"    return (lower == lowerBound && upper == upperBound) ? this : create(lower, upper);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/google/MultimapEqualsTester.java","tnLine":38,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/testers/AbstractQueueTester.java","tnLine":30,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ImmutableEnumChecker","tnDesc":"enums should be immutable: 'MapFeature' has field 'implied' of type 'java.util.Set<com.google.common.collect.testing.features.Feature<? super java.util.Map>>', 'Set' is mutable","tnFile":"guava-testlib/src/com/google/common/collect/testing/features/MapFeature.java","tnLine":76,"tnColumn":43,"tnPatch":null,"tnCodeLine":"  private final Set<Feature<? super Map>> implied;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"SortedMap was replaced by NavigableMap in Java 6.","tnFile":"guava-gwt/target/classes/com/google/common/collect/Synchronized.java","tnLine":1237,"tnColumn":10,"tnPatch":null,"tnCodeLine":"  static class SynchronizedSortedMap<K, V> extends SynchronizedMap<K, V>","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/google/SetMultimapReplaceValuesTester.java","tnLine":33,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UndefinedEquals","tnDesc":"Multimap does not have well-defined equals behavior.","tnFile":"guava/src/com/google/common/collect/ForwardingMultimap.java","tnLine":146,"tnColumn":47,"tnPatch":null,"tnCodeLine":"    return object == this || delegate().equals(object);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/google/BiMapRemoveTester.java","tnLine":36,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/testers/ListAddAllTester.java","tnLine":36,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"OperatorPrecedence","tnDesc":"Use grouping parenthesis to make the operator precedence explicit","tnFile":"guava/src/com/google/common/math/IntMath.java","tnLine":592,"tnColumn":58,"tnPatch":null,"tnCodeLine":"    int limit = Integer.MAX_VALUE + ((b >>> Integer.SIZE - 1) & (k & 1));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/google/MultimapForEachTester.java","tnLine":36,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/testers/CollectionContainsAllTester.java","tnLine":42,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/google/AbstractMultisetTester.java","tnLine":30,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ReferenceEquality","tnDesc":"Comparison using reference equality instead of value equality","tnFile":"guava/src/com/google/common/collect/TreeRangeSet.java","tnLine":600,"tnColumn":45,"tnPatch":null,"tnCodeLine":"          if (nextComplementRangeUpperBound == Cut.<C>belowAll()) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ReferenceEquality","tnDesc":"Comparison using reference equality instead of value equality","tnFile":"guava-gwt/target/classes/com/google/common/collect/Range.java","tnLine":363,"tnColumn":23,"tnPatch":null,"tnCodeLine":"    return lowerBound != Cut.belowAll();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/testers/ListSubListTester.java","tnLine":50,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"guava/src/com/google/common/math/IntMath.java","tnLine":94,"tnColumn":18,"tnPatch":null,"tnCodeLine":"    return x > 0 & (x & (x - 1)) == 0;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"SortedMap was replaced by NavigableMap in Java 6.","tnFile":"guava-gwt/target/classes/com/google/common/collect/TreeBasedTable.java","tnLine":171,"tnColumn":11,"tnPatch":null,"tnCodeLine":"  private class TreeRow extends Row implements SortedMap<C, V> {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ReferenceEquality","tnDesc":"Comparison using reference equality instead of value equality","tnFile":"guava/src/com/google/common/hash/BloomFilter.java","tnLine":247,"tnColumn":24,"tnPatch":null,"tnCodeLine":"    checkArgument(this != that, \"Cannot combine a BloomFilter with itself.\");","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"Stack is a nonstandard class that predates the Java Collections Framework; prefer ArrayDeque. Note that the Stack methods push/pop/peek correspond to the Deque methods addFirst/removeFirst/peekFirst.","tnFile":"guava-testlib/src/com/google/common/collect/testing/AbstractIteratorTester.java","tnLine":143,"tnColumn":39,"tnPatch":null,"tnCodeLine":"    final Stack<E> previousElements = new Stack<E>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JUnit4ClassUsedInJUnit3","tnDesc":"@Ignore cannot be used inside a JUnit3 class. Convert your class to JUnit4 style.","tnFile":"guava-testlib/src/com/google/common/collect/testing/testers/CollectionRemoveIfTester.java","tnLine":43,"tnColumn":1,"tnPatch":null,"tnCodeLine":"@Ignore // Affects only Android test runner, which respects JUnit 4 annotations on JUnit 3 tests.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"guava/src/com/google/common/collect/GeneralRange.java","tnLine":157,"tnColumn":32,"tnPatch":null,"tnCodeLine":"    return cmp < 0 | (cmp == 0 & getLowerBoundType() == OPEN);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"guava/src/com/google/common/collect/GeneralRange.java","tnLine":129,"tnColumn":46,"tnPatch":null,"tnCodeLine":"        checkArgument(lowerBoundType != OPEN | upperBoundType != OPEN);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}}],null,{"analysisLOC":null,"analysisBuildSys":"Maven []","analysisLang":null}]}]],"debugLog":"analyzing-0d950ad55f3c9020/guava/src/com/google/common/io/Closeables.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/util/concurrent/Callables.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/reflect/TypeToken.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/reflect/ImmutableTypeToInstanceMap.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/collect/ImmutableClassToInstanceMap.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/base/AbstractIterator.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/util/concurrent/package-info.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/collect/ComparisonChain.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/cache/AbstractLoadingCache.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/hash/HashingOutputStream.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/collect/Iterables.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/util/concurrent/ForwardingBlockingQueue.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/escape/Platform.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/collect/Multisets.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/io/ByteArrayDataInput.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/base/Platform.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/thirdparty/publicsuffix/PublicSuffixPatterns.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/collect/ForwardingSet.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/collect/ImmutableSortedMapFauxverideShim.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/graph/NetworkBuilder.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/io/Closer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/collect/ObjectArrays.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/collect/SortedMultisetBridge.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/collect/AbstractTable.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/util/concurrent/AbstractScheduledService.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/io/ReaderInputStream.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/eventbus/AllowConcurrentEvents.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/collect/RegularImmutableAsList.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/collect/ImmutableSortedMultiset.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/cache/RemovalListeners.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/util/concurrent/ForwardingCondition.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/graph/Traverser.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/collect/ForwardingMultiset.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/base/Ticker.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/xml/XmlEscapers.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/util/concurrent/ForwardingLock.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/base/VerifyException.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/html/package-info.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/base/package-info.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/cache/CacheBuilder.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/collect/RegularImmutableMultiset.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/collect/MutableClassToInstanceMap.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/collect/EmptyImmutableSetMultimap.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/cache/ForwardingCache.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/graph/AbstractUndirectedNetworkConnections.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/graph/Graphs.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/collect/ForwardingSortedMap.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/math/StatsAccumulator.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/collect/HashBiMap.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/util/concurrent/WrappingScheduledExecutorService.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/cache/RemovalNotification.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/cache/Weigher.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/collect/AllEqualOrdering.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/base/CommonPattern.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/graph/UndirectedGraphConnections.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/collect/JdkBackedImmutableSet.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/collect/ListMultimap.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/collect/SortedIterable.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/collect/FilteredEntryMultimap.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/net/HostSpecifier.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/util/concurrent/ListenerCallQueue.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/cache/LongAddables.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/collect/CompactLinkedHashMap.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/collect/ComputationException.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/primitives/UnsignedInts.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/graph/SuccessorsFunction.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/hash/Hasher.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/collect/EmptyContiguousSet.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/base/Absent.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/collect/ImmutableEnumSet.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/math/PairedStatsAccumulator.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/graph/ImmutableValueGraph.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/base/CharMatcher.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/util/concurrent/MoreExecutors.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/graph/ConfigurableNetwork.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/collect/MapDifference.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/collect/ForwardingImmutableMap.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/collect/Hashing.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/net/UrlEscapers.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/collect/RangeGwtSerializationDependencies.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/collect/TreeTraverser.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/util/concurrent/GwtFuturesCatchingSpecialization.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/collect/ImmutableMapEntry.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/io/Flushables.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/collect/ImmutableSortedMultisetFauxverideShim.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/util/concurrent/CollectionFuture.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/collect/NaturalOrdering.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/eventbus/Dispatcher.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/collect/Queues.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/hash/ChecksumHashFunction.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/collect/AbstractSortedMultiset.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/cache/AbstractCache.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/escape/Escapers.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/collect/AbstractSortedKeySortedSetMultimap.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/reflect/Invokable.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/graph/ForwardingValueGraph.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/collect/DenseImmutableTable.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/collect/AbstractMultimap.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/hash/AbstractHashFunction.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/base/Stopwatch.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/eventbus/SubscriberExceptionContext.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/collect/DiscreteDomain.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/util/concurrent/AsyncCallable.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/io/MultiInputStream.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/io/FileWriteMode.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/hash/SipHashFunction.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/collect/FilteredMultimapValues.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/cache/CacheBuilderSpec.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/html/HtmlEscapers.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/graph/NetworkConnections.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/base/ExtraObjectsMethodsForWeb.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/util/concurrent/TimeLimiter.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/util/concurrent/TrustedListenableFutureTask.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/collect/CompactHashSet.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/util/concurrent/AbstractListeningExecutorService.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/io/CharStreams.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/math/Quantiles.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/primitives/UnsignedInteger.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/io/LittleEndianDataOutputStream.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/collect/Serialization.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/collect/ForwardingSortedMultiset.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/util/concurrent/CycleDetectingLockFactory.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/collect/AbstractMapBasedMultiset.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/collect/SingletonImmutableTable.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/base/MoreObjects.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/collect/JdkBackedImmutableBiMap.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/collect/ImmutableMapEntrySet.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/collect/TreeBasedTable.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/collect/ExplicitOrdering.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/util/concurrent/AsyncFunction.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/hash/AbstractStreamingHasher.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/hash/MessageDigestHashFunction.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/collect/ConsumingQueueIterator.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/util/concurrent/DirectExecutor.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/graph/AbstractValueGraph.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/collect/LinkedListMultimap.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/util/concurrent/CombinedFuture.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/collect/SortedLists.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/primitives/Doubles.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/collect/LinkedHashMultimap.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/collect/Streams.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/src/com/google/common/collect/FilteredKeySetMultimap.java\\\"],\\\"classpath\\\":[\\\"/root/.m2/repository/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3.jar\\\",\\\"/root/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar\\\",\\\"/root/.m2/repository/com/google/errorprone/error_prone_annotations/2.3.2/error_prone_annotations-2.3.2.jar\\\",\\\"/root/.m2/repository/org/checkerframework/checker-qual/2.8.1/checker-qual-2.8.1.jar\\\",\\\"/root/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar\\\",\\\"/root/.m2/repository/org/codehaus/mojo/animal-sniffer-annotations/1.17/animal-sniffer-annotations-1.17.jar\\\",\\\"/root/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar\\\"],\\\"output_dir\\\":\\\"/tmp/analyzing-0d950ad55f3c9020/guava/target/classes\\\",\\\"jdk\\\":\\\"JDK1.8\\\"},{\\\"arguments\\\":[],\\\"files\\\":[\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/features/ConflictingRequirementsException.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/TestCollectionGenerator.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/TestStringCollectionGenerator.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/ListMultimapEqualsTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/AbstractListMultimapTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/AbstractListIndexOfTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/NavigableMapTestSuiteBuilder.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/ListHashCodeTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/MapContainsKeyTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/MultimapPutTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/MapEqualsTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/ListAddAllTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/MultisetIteratorTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/MultimapAsMapTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/util/concurrent/testing/AbstractListenableFutureTest.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/AnEnum.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/ListAddAllAtIndexTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/DerivedGoogleCollectionGenerators.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/QueueTestSuiteBuilder.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/MultimapForEachTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/MinimalIterable.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/CollectionClearTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/features/Feature.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/AbstractMultimapTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/ListGenerators.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/ListEqualsTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/MapGetTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/TestStringQueueGenerator.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/ConcurrentMapReplaceEntryTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/MapToStringTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/NavigableSetTestSuiteBuilder.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/SetMultimapAsMapTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/MapRemoveEntryTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/escape/testing/package-info.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/TestsForQueuesInJavaUtil.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/WrongType.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/DerivedGenerator.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/Platform.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/MultisetReadsTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/MultimapAsMapGetTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/CollectionTestSuiteBuilder.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/TestStringListMultimapGenerator.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/AbstractCollectionTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/SortedSetMultimapTestSuiteBuilder.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/testing/EquivalenceTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/DerivedCollectionGenerators.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/CollectionRemoveIfTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/CollectionRemoveAllTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/UnmodifiableCollectionTests.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/CollectionContainsAllTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/AbstractListTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/CollectionRetainAllTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/TestSortedMapGenerator.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/SafeTreeSet.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/SpliteratorTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/testing/EqualsTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/MapForEachTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/OneSizeTestContainerGenerator.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/ListMultimapReplaceValuesTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/MapGenerators.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/TestStringBiMapGenerator.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/UnhashableObject.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/TestQueueGenerator.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/ListRemoveTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/BiMapClearTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/SetMultimapReplaceValuesTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/TestMapGenerator.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/testing/SerializableTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/MultisetFeature.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/MultimapContainsValueTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/MapTestSuiteBuilder.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/MultimapRemoveAllTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/features/ListFeature.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/MapReplaceTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/MultisetEntrySetTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/TestStringSortedSetGenerator.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/MapRemoveTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/TestIteratorGenerator.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/MapReplaceAllTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/ListMultimapAsMapTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/CollectionCreationTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/QueuePollTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/TestMultisetGenerator.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/MultimapToStringTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/SetRemoveTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/testing/TearDownAccepter.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/TestStringSortedMapGenerator.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/MultimapKeySetTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/GoogleHelpers.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/TestListGenerator.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/TestCharacterListGenerator.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/TestMapEntrySetGenerator.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/AbstractMapTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/testing/package-info.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/TestEnumMultisetGenerator.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/MultisetSetCountConditionallyTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/TestSetMultimapGenerator.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/MultimapGetTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/escape/testing/EscaperAsserts.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/BiMapGenerators.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/MapContainsValueTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/BiMapInverseTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/ListLastIndexOfTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/TestMultimapGenerator.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/ListAddAtIndexTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/MultimapValuesTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/TestEnumSetGenerator.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/MapComputeTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/SetTestSuiteBuilder.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/ListSubListTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/features/FeatureUtil.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/BiMapRemoveTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/features/MapFeature.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/MultimapEqualsTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/MapGetOrDefaultTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/BaseComparable.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/CollectionToArrayTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/SortedMultisetTestSuiteBuilder.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/MultimapEntriesTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/SortedSetNavigationTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/testing/NullPointerTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/TestCollidingSetGenerator.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/MultisetSerializationTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/MultimapSizeTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/MinimalSet.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/AbstractQueueTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/CollectionSerializationTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/CollectionContainsTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/ListMultimapPutAllTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/features/CollectionFeature.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/AbstractMultisetSetCountTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/TestEnumMapGenerator.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/ListMultimapPutTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/MapCreationTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/AbstractBiMapTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/MultisetCountTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/MultimapPutIterableTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/MapEntrySetTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/MapPutIfAbsentTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/TestIntegerSetGenerator.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/SetAddAllTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/BiMapEntrySetTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/ListCreationTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/util/concurrent/testing/TestingExecutors.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/IteratorTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/SafeTreeMap.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/SortedSetMultimapAsMapTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/CollectionStreamTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/BiMapTestSuiteBuilder.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/TestStringMultisetGenerator.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/MultimapContainsEntryTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/MultimapFeature.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/features/TesterAnnotation.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/ListTestSuiteBuilder.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/AbstractIteratorTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/PerCollectionSizeTestSuiteBuilder.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/testing/Platform.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/SampleElements.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/ConcurrentMapRemoveTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/CollectionRemoveTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/SortedSetMultimapGetTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/features/CollectionSize.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/TestContainerGenerator.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/TestSubjectGenerator.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/SortedMapTestSuiteBuilder.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/util/concurrent/testing/MockFutureListener.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/OneSizeGenerator.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/NavigableSetNavigationTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/MultimapClearTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/ListToArrayTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/TestIntegerSortedSetGenerator.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/testing/TearDown.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/ListRemoveAtIndexTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/testing/GcFinalization.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/QueueRemoveTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/MultisetEqualsTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/testing/AbstractPackageSanityTests.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/util/concurrent/testing/SameThreadScheduledExecutorService.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/AbstractSetTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/SortedSetTestSuiteBuilder.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/testing/DummyProxy.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/MapClearTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/SetMultimapEqualsTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/ConcurrentMapReplaceTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/ConcurrentMapPutIfAbsentTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/ListReplaceAllTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/testing/ForwardingWrapperTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/TestSetGenerator.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/MultimapTestSuiteBuilder.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/SetAddTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/AbstractContainerTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/MultisetNavigationTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/testing/RelationshipTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/BiMapPutTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/MultisetContainsTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/testing/ClassSanityTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/SetEqualsTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/AbstractMultisetTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/TestUnhashableCollectionGenerator.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/MapIsEmptyTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/ReserializingTestSetGenerator.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/ListAddTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/MultimapPutAllMultimapTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/QueueOfferTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/testing/ArbitraryInstances.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/MapComputeIfAbsentTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/ListGetTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/MapHashCodeTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/SortedMapNavigationTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/ListMultimapTestSuiteBuilder.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/CollectionAddTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/ListListIteratorTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/SetHashCodeTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/TestStringSetGenerator.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/MultisetForEachEntryTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/MultisetElementSetTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/testing/FakeTicker.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/CollectionAddAllTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/MapMergeTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/TestsForMapsInJavaUtil.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/TestStringListGenerator.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/DerivedComparable.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/CollectionSpliteratorTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/MapPutTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/MultisetTestSuiteBuilder.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/SetMultimapPutTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/AbstractCollectionTestSuiteBuilder.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/CollectionEqualsTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/QueueElementTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/TestsForSetsInJavaUtil.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/ListIndexOfTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/ReserializingTestCollectionGenerator.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/testing/ClusterException.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/ListSetTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/SortedMapGenerators.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/ConcurrentMapTestSuiteBuilder.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/TestsForListsInJavaUtil.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/AbstractTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/SortedMapInterfaceTest.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/CollectionIteratorTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/MapComputeIfPresentTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/MultimapContainsKeyTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/NavigableMapNavigationTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/ListMultimapRemoveTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/Helpers.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/DerivedTestIteratorGenerator.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/CollectionIsEmptyTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/SetMultimapPutAllTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/features/SetFeature.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/testing/TestLogHandler.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/SetCreationTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/SetMultimapTestSuiteBuilder.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/TestSortedSetGenerator.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/CollectionForEachTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/TestBiMapGenerator.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/TestListMultimapGenerator.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/MultimapRemoveEntryTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/MultimapReplaceValuesTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/MapSerializationTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/testing/FreshValueGenerator.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/MultisetAddTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/IteratorFeature.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/ListRemoveAllTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/MapSizeTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/testing/TearDownStack.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/SetGenerators.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/CollectionSizeTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/MapInterfaceTest.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/TestStringMapGenerator.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/QueuePeekTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/testing/SloppyTearDown.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/FeatureSpecificTestSuiteBuilder.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/MapReplaceEntryTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/ConcurrentNavigableMapTestSuiteBuilder.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/CollectionToStringTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/testing/CollectorTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/MapPutAllTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/MultisetRemoveTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/ListIteratorTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/features/TesterRequirements.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/MultisetSetCountUnconditionallyTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/MinimalCollection.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/ListRetainAllTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/TestStringSetMultimapGenerator.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/CollectionSerializationEqualTester.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/testers/Platform.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/src/com/google/common/collect/testing/google/MultimapKeysTester.java\\\"],\\\"classpath\\\":[\\\"/root/.m2/repository/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3.jar\\\",\\\"/root/.m2/repository/com/google/errorprone/error_prone_annotations/2.3.2/error_prone_annotations-2.3.2.jar\\\",\\\"/root/.m2/repository/org/checkerframework/checker-qual/2.8.1/checker-qual-2.8.1.jar\\\",\\\"/root/.m2/repository/com/googlecode/java-diff-utils/diffutils/1.3.0/diffutils-1.3.0.jar\\\",\\\"/root/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar\\\",\\\"/root/.m2/repository/org/codehaus/mojo/animal-sniffer-annotations/1.17/animal-sniffer-annotations-1.17.jar\\\",\\\"/root/.m2/repository/com/google/truth/truth/0.44/truth-0.44.jar\\\",\\\"/root/.m2/repository/com/google/auto/value/auto-value-annotations/1.6.3/auto-value-annotations-1.6.3.jar\\\",\\\"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/target/guava-HEAD-jre-SNAPSHOT.jar\\\",\\\"/root/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar\\\",\\\"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar\\\",\\\"/root/.m2/repository/org/checkerframework/checker-compat-qual/2.5.5/checker-compat-qual-2.5.5.jar\\\",\\\"/root/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar\\\"],\\\"output_dir\\\":\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/target/classes\\\",\\\"jdk\\\":\\\"JDK1.8\\\"},{\\\"arguments\\\":[],\\\"files\\\":[\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/SingletonImmutableBiMap_CustomFieldSerializer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/UsingToStringOrdering_CustomFieldSerializer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/ImmutableEnumMap_CustomFieldSerializer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/RegularImmutableAsList_CustomFieldSerializer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/RegularImmutableList_CustomFieldSerializer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/ReverseOrdering_CustomFieldSerializer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/ImmutableSortedMap_CustomFieldSerializerBase.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/ForwardingImmutableSet_CustomFieldSerializer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/HashMultiset_CustomFieldSerializer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/base/GwtSerializationDependencies.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/primitives/UnsignedLong_CustomFieldSerializer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/EmptyImmutableListMultimap_CustomFieldSerializer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/ImmutableAsList_CustomFieldSerializer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/ForwardingImmutableList_CustomFieldSerializer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/LinkedListMultimap_CustomFieldSerializer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/ImmutableTable_CustomFieldSerializerBase.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/ImmutableMultiset_CustomFieldSerializer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/Multiset_CustomFieldSerializerBase.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/base/PairwiseEquivalence_CustomFieldSerializer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/HashMultimap_CustomFieldSerializer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/ImmutableListMultimap_CustomFieldSerializer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/EmptyImmutableSetMultimap_CustomFieldSerializer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/SingletonImmutableTable_CustomFieldSerializer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/RegularImmutableMultiset_CustomFieldSerializer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/SingletonImmutableList_CustomFieldSerializer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/IndexedImmutableSet_CustomFieldSerializer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/RegularImmutableMap_CustomFieldSerializer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/ForceGuavaCompilationEntryPoint.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/ImmutableSortedMap_CustomFieldSerializer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/LexicographicalOrdering_CustomFieldSerializer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/ImmutableEnumSet_CustomFieldSerializer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/NullsLastOrdering_CustomFieldSerializer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/Range_CustomFieldSerializer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/JdkBackedImmutableMap_CustomFieldSerializer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/HashBasedTable_CustomFieldSerializer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/ImmutableBiMap_CustomFieldSerializer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/ImmutableList_CustomFieldSerializer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/ImmutableEntry_CustomFieldSerializer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/TreeMultimap_CustomFieldSerializer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/LinkedHashMultimap_CustomFieldSerializer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/DenseImmutableTable_CustomFieldSerializer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/AllEqualOrdering_CustomFieldSerializer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/SparseImmutableTable_CustomFieldSerializer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/JdkBackedImmutableMultiset_CustomFieldSerializer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/SingletonImmutableSet_CustomFieldSerializer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/ExplicitOrdering_CustomFieldSerializer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/ImmutableSortedSet_CustomFieldSerializer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/RegularImmutableBiMap_CustomFieldSerializer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/ImmutableSet_CustomFieldSerializer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/RegularImmutableSortedSet_CustomFieldSerializer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/NaturalOrdering_CustomFieldSerializer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/ImmutableSetMultimap_CustomFieldSerializer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/LinkedHashMultiset_CustomFieldSerializer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/ByFunctionOrdering_CustomFieldSerializer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/base/Present_CustomFieldSerializer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/NullsFirstOrdering_CustomFieldSerializer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/CompoundOrdering_CustomFieldSerializer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/JdkBackedImmutableSet_CustomFieldSerializer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/ComparatorOrdering_CustomFieldSerializer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/ArrayListMultimap_CustomFieldSerializer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/GwtSerializationDependencies.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/Multimap_CustomFieldSerializerBase.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/JdkBackedImmutableBiMap_CustomFieldSerializer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/RegularImmutableSet_CustomFieldSerializer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/TreeBasedTable_CustomFieldSerializer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/base/Absent_CustomFieldSerializer.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/Table_CustomFieldSerializerBase.java\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/src/com/google/common/collect/ReverseNaturalOrdering_CustomFieldSerializer.java\\\"],\\\"classpath\\\":[\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/target/guava-testlib-HEAD-jre-SNAPSHOT-tests.jar\\\",\\\"/root/.m2/repository/xalan/xalan/2.7.2/xalan-2.7.2.jar\\\",\\\"/root/.m2/repository/ant/ant/1.6.5/ant-1.6.5.jar\\\",\\\"/root/.m2/repository/org/eclipse/jetty/websocket/websocket-api/9.2.13.v20150730/websocket-api-9.2.13.v20150730.jar\\\",\\\"/root/.m2/repository/org/codehaus/mojo/animal-sniffer-annotations/1.17/animal-sniffer-annotations-1.17.jar\\\",\\\"/root/.m2/repository/org/ow2/asm/asm-util/5.0.3/asm-util-5.0.3.jar\\\",\\\"/root/.m2/repository/com/google/gwt/gwt-dev/2.8.2/gwt-dev-2.8.2.jar\\\",\\\"/root/.m2/repository/org/eclipse/jetty/jetty-jndi/9.2.14.v20151106/jetty-jndi-9.2.14.v20151106.jar\\\",\\\"/root/.m2/repository/org/ow2/asm/asm-commons/5.0.3/asm-commons-5.0.3.jar\\\",\\\"/root/.m2/repository/org/eclipse/jetty/jetty-webapp/9.2.14.v20151106/jetty-webapp-9.2.14.v20151106.jar\\\",\\\"/root/.m2/repository/org/eclipse/jetty/apache-jsp/9.2.14.v20151106/apache-jsp-9.2.14.v20151106.jar\\\",\\\"/root/.m2/repository/org/eclipse/jetty/toolchain/jetty-schemas/3.1.M0/jetty-schemas-3.1.M0.jar\\\",\\\"/root/.m2/repository/org/eclipse/jetty/jetty-servlets/9.2.14.v20151106/jetty-servlets-9.2.14.v20151106.jar\\\",\\\"/root/.m2/repository/org/eclipse/jetty/websocket/websocket-common/9.2.13.v20150730/websocket-common-9.2.13.v20150730.jar\\\",\\\"/root/.m2/repository/com/google/gwt/gwt-user/2.8.2/gwt-user-2.8.2.jar\\\",\\\"/root/.m2/repository/org/eclipse/jetty/jetty-server/9.2.14.v20151106/jetty-server-9.2.14.v20151106.jar\\\",\\\"/root/.m2/repository/commons-collections/commons-collections/3.2.2/commons-collections-3.2.2.jar\\\",\\\"/root/.m2/repository/com/ibm/icu/icu4j/50.1.1/icu4j-50.1.1.jar\\\",\\\"/root/.m2/repository/javax/servlet/javax.servlet-api/3.1.0/javax.servlet-api-3.1.0.jar\\\",\\\"/root/.m2/repository/xerces/xercesImpl/2.11.0/xercesImpl-2.11.0.jar\\\",\\\"/root/.m2/repository/org/checkerframework/checker-compat-qual/2.5.5/checker-compat-qual-2.5.5.jar\\\",\\\"/root/.m2/repository/org/eclipse/jetty/jetty-plus/9.2.14.v20151106/jetty-plus-9.2.14.v20151106.jar\\\",\\\"/root/.m2/repository/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3.jar\\\",\\\"/root/.m2/repository/org/ow2/asm/asm/5.0.3/asm-5.0.3.jar\\\",\\\"/root/.m2/repository/org/apache/httpcomponents/httpmime/4.5.1/httpmime-4.5.1.jar\\\",\\\"/root/.m2/repository/org/apache/commons/commons-lang3/3.4/commons-lang3-3.4.jar\\\",\\\"/root/.m2/repository/com/googlecode/java-diff-utils/diffutils/1.3.0/diffutils-1.3.0.jar\\\",\\\"/root/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar\\\",\\\"/root/.m2/repository/xml-apis/xml-apis/1.4.01/xml-apis-1.4.01.jar\\\",\\\"/root/.m2/repository/org/eclipse/jetty/jetty-security/9.2.14.v20151106/jetty-security-9.2.14.v20151106.jar\\\",\\\"/root/.m2/repository/commons-codec/commons-codec/1.10/commons-codec-1.10.jar\\\",\\\"/root/.m2/repository/xalan/serializer/2.7.2/serializer-2.7.2.jar\\\",\\\"/root/.m2/repository/com/google/code/gson/gson/2.6.2/gson-2.6.2.jar\\\",\\\"/root/.m2/repository/org/mortbay/jasper/apache-jsp/8.0.9.M3/apache-jsp-8.0.9.M3.jar\\\",\\\"/root/.m2/repository/colt/colt/1.2.0/colt-1.2.0.jar\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-tests/target/guava-tests-HEAD-jre-SNAPSHOT-tests.jar\\\",\\\"/root/.m2/repository/tapestry/tapestry/4.0.2/tapestry-4.0.2.jar\\\",\\\"/root/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar\\\",\\\"/root/.m2/repository/javax/annotation/javax.annotation-api/1.2/javax.annotation-api-1.2.jar\\\",\\\"/root/.m2/repository/org/apache/httpcomponents/httpclient/4.5.1/httpclient-4.5.1.jar\\\",\\\"/root/.m2/repository/javax/validation/validation-api/1.0.0.GA/validation-api-1.0.0.GA-sources.jar\\\",\\\"/root/.m2/repository/org/ow2/asm/asm-tree/5.0.3/asm-tree-5.0.3.jar\\\",\\\"/root/.m2/repository/org/eclipse/jetty/jetty-io/9.2.14.v20151106/jetty-io-9.2.14.v20151106.jar\\\",\\\"/root/.m2/repository/com/google/jsinterop/jsinterop-annotations/1.0.2/jsinterop-annotations-1.0.2-sources.jar\\\",\\\"/root/.m2/repository/net/sourceforge/htmlunit/htmlunit/2.19/htmlunit-2.19.jar\\\",\\\"/root/.m2/repository/net/sourceforge/htmlunit/htmlunit-core-js/2.17/htmlunit-core-js-2.17.jar\\\",\\\"/root/.m2/repository/org/eclipse/jetty/websocket/websocket-client/9.2.13.v20150730/websocket-client-9.2.13.v20150730.jar\\\",\\\"/root/.m2/repository/org/w3c/css/sac/1.3/sac-1.3.jar\\\",\\\"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar\\\",\\\"/root/.m2/repository/org/eclipse/jetty/jetty-xml/9.2.14.v20151106/jetty-xml-9.2.14.v20151106.jar\\\",\\\"/root/.m2/repository/commons-io/commons-io/2.4/commons-io-2.4.jar\\\",\\\"/root/.m2/repository/org/eclipse/jetty/jetty-util/9.2.14.v20151106/jetty-util-9.2.14.v20151106.jar\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava-testlib/target/guava-testlib-HEAD-jre-SNAPSHOT.jar\\\",\\\"/root/.m2/repository/org/eclipse/jetty/jetty-annotations/9.2.14.v20151106/jetty-annotations-9.2.14.v20151106.jar\\\",\\\"/root/.m2/repository/org/eclipse/jetty/jetty-continuation/9.2.14.v20151106/jetty-continuation-9.2.14.v20151106.jar\\\",\\\"/root/.m2/repository/javax/validation/validation-api/1.0.0.GA/validation-api-1.0.0.GA.jar\\\",\\\"/root/.m2/repository/com/google/errorprone/error_prone_annotations/2.3.2/error_prone_annotations-2.3.2.jar\\\",\\\"/root/.m2/repository/com/google/jsinterop/jsinterop-annotations/1.0.2/jsinterop-annotations-1.0.2.jar\\\",\\\"/root/.m2/repository/org/checkerframework/checker-qual/2.8.1/checker-qual-2.8.1.jar\\\",\\\"/root/.m2/repository/com/google/truth/extensions/truth-java8-extension/0.44/truth-java8-extension-0.44-gwt.jar\\\",\\\"/root/.m2/repository/com/google/truth/truth/0.44/truth-0.44.jar\\\",\\\"/root/.m2/repository/net/sourceforge/nekohtml/nekohtml/1.9.22/nekohtml-1.9.22.jar\\\",\\\"/root/.m2/repository/com/google/auto/value/auto-value-annotations/1.6.3/auto-value-annotations-1.6.3.jar\\\",\\\"/root/.m2/repository/org/eclipse/jetty/jetty-http/9.2.14.v20151106/jetty-http-9.2.14.v20151106.jar\\\",\\\"/root/.m2/repository/net/sourceforge/cssparser/cssparser/0.9.18/cssparser-0.9.18.jar\\\",\\\"/tmp/analyzing-0d950ad55f3c9020/guava/target/guava-HEAD-jre-SNAPSHOT.jar\\\",\\\"/root/.m2/repository/com/google/truth/truth/0.44/truth-0.44-gwt.jar\\\",\\\"/root/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar\\\",\\\"/root/.m2/repository/org/apache/httpcomponents/httpcore/4.4.3/httpcore-4.4.3.jar\\\",\\\"/root/.m2/repository/org/mortbay/jasper/apache-el/8.0.9.M3/apache-el-8.0.9.M3.jar\\\",\\\"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar\\\",\\\"/root/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar\\\",\\\"/root/.m2/repository/org/eclipse/jetty/jetty-servlet/9.2.14.v20151106/jetty-servlet-9.2.14.v20151106.jar\\\"],\\\"output_dir\\\":\\\"/tmp/analyzing-0d950ad55f3c9020/guava-gwt/target/classes\\\",\\\"jdk\\\":\\\"JDK1.8\\\"}]\"\n[DEBUG] [20/Jun/2019:21:46:59 +0000] [()] Done generating compilation database.\n[DEBUG] [20/Jun/2019:21:46:59 +0000] [()] Trying to autodetect the build system based on files present in the repository.\n[DEBUG] [20/Jun/2019:21:46:59 +0000] [()] Errorprone JDK1.8 and jceJDK \"JDK1.8\" are compatible.\n[DEBUG] [20/Jun/2019:22:02:24 +0000] [()] Tool completed with 123 but only reporting up to 1200.\n[DEBUG] [20/Jun/2019:22:04:07 +0000] [()] Tool completed with 256 but only reporting up to 1200.\n[DEBUG] [20/Jun/2019:22:04:07 +0000] [()] All tools complete for commit \"master\"\n[DEBUG] [20/Jun/2019:22:04:09 +0000] [()] Analysis has completed.\n"}}
