{"tag":"AnalysisSuccess","contents":{"requestedTools":null,"toolResults":[[{"tag":"Infer"},{"tag":"ToolSuccess","contents":[[{"tnType":"NULL_DEREFERENCE","tnDesc":"object `stringToWrite` last assigned on line 38 could be null and is dereferenced at line 39.","tnFile":"src/main/java/org/dasein/cloud/util/requester/entities/DaseinEntity.java","tnLine":39,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.requester.entities.DaseinEntity.<init>(java.lang.Object,org.dasein.cloud.util.requester.streamprocessors.StreamProcessor)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `currentTags.get(tagToCheck)` could be null and is dereferenced at line 68.","tnFile":"src/main/java/org/dasein/cloud/compute/AutoScalingGroupFilterOptions.java","tnLine":68,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.compute.AutoScalingGroupFilterOptions.matches(org.dasein.cloud.compute.ScalingGroup):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.bouncycastle.util.io.pem.PemReader` acquired by call to `new()` at line 97 is not released after line 104.","tnFile":"src/main/java/org/dasein/cloud/util/X509Store.java","tnLine":104,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.X509Store.readPemObject(java.lang.String):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getFirewall(id)` could be null and is dereferenced at line 220.","tnFile":"src/main/java/org/dasein/cloud/network/AbstractNetworkFirewallSupport.java","tnLine":220,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.network.AbstractNetworkFirewallSupport.setTags(java.lang.String[],org.dasein.cloud.Tag[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getSnapshot(id)` could be null and is dereferenced at line 290.","tnFile":"src/main/java/org/dasein/cloud/compute/AbstractSnapshotSupport.java","tnLine":290,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.compute.AbstractSnapshotSupport.setTags(java.lang.String[],org.dasein.cloud.Tag[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getVolume(id)` could be null and is dereferenced at line 301.","tnFile":"src/main/java/org/dasein/cloud/compute/AbstractVolumeSupport.java","tnLine":301,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.compute.AbstractVolumeSupport.setTags(java.lang.String[],org.dasein.cloud.Tag[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getLoadBalancer(id)` could be null and is dereferenced at line 307.","tnFile":"src/main/java/org/dasein/cloud/network/AbstractLoadBalancerSupport.java","tnLine":307,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.network.AbstractLoadBalancerSupport.setTags(java.lang.String[],org.dasein.cloud.Tag[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getFirewall(id)` could be null and is dereferenced at line 402.","tnFile":"src/main/java/org/dasein/cloud/network/AbstractFirewallSupport.java","tnLine":402,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.network.AbstractFirewallSupport.setTags(java.lang.String[],org.dasein.cloud.Tag[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getSubnet(id)` could be null and is dereferenced at line 443.","tnFile":"src/main/java/org/dasein/cloud/network/AbstractVLANSupport.java","tnLine":443,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.network.AbstractVLANSupport.setSubnetTags(java.lang.String[],org.dasein.cloud.Tag[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getRoutingTable(id)` could be null and is dereferenced at line 456.","tnFile":"src/main/java/org/dasein/cloud/network/AbstractVLANSupport.java","tnLine":456,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.network.AbstractVLANSupport.setRoutingTableTags(java.lang.String[],org.dasein.cloud.Tag[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getVlan(id)` could be null and is dereferenced at line 483.","tnFile":"src/main/java/org/dasein/cloud/network/AbstractVLANSupport.java","tnLine":483,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.network.AbstractVLANSupport.setVLANTags(java.lang.String[],org.dasein.cloud.Tag[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getVirtualMachine(id)` could be null and is dereferenced at line 750.","tnFile":"src/main/java/org/dasein/cloud/compute/AbstractVMSupport.java","tnLine":750,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.compute.AbstractVMSupport.setTags(java.lang.String[],org.dasein.cloud.Tag[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void APITrace.begin(CloudProvider,String)` reads without synchronization from `current.currentChild`. Potentially races with write in method `APITrace.begin(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/main/java/org/dasein/cloud/util/APITrace.java","tnLine":106,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.APITrace.begin(org.dasein.cloud.CloudProvider,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void APITrace.begin(CloudProvider,String)` mutates container `util.APITrace.operations` via call to `put` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"src/main/java/org/dasein/cloud/util/APITrace.java","tnLine":103,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.APITrace.begin(org.dasein.cloud.CloudProvider,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void APITrace.begin(CloudProvider,String)` reads without synchronization from container `util.APITrace.operations` via call to `get`. Potentially races with write in method `APITrace.begin(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/main/java/org/dasein/cloud/util/APITrace.java","tnLine":100,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.APITrace.begin(org.dasein.cloud.CloudProvider,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void APITrace.begin(CloudProvider,String)` writes to field `current.currentChild` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"src/main/java/org/dasein/cloud/util/APITrace.java","tnLine":109,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.APITrace.begin(org.dasein.cloud.CloudProvider,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void CloudProvider.connect(ProviderContext)` indirectly mutates container `cloud.Cloud.clouds` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/CloudProvider.java","tnLine":171,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.CloudProvider.connect(org.dasein.cloud.ProviderContext):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void CloudProvider.connect(ProviderContext,CloudProvider)` indirectly mutates container `cloud.Cloud.clouds` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/CloudProvider.java","tnLine":185,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.CloudProvider.connect(org.dasein.cloud.ProviderContext,org.dasein.cloud.CloudProvider):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void CloudProvider.connect(ProviderContext,CloudProvider,Cloud)` indirectly mutates container `cloud.Cloud.clouds` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/CloudProvider.java","tnLine":213,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.CloudProvider.connect(org.dasein.cloud.ProviderContext,org.dasein.cloud.CloudProvider,org.dasein.cloud.Cloud):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void APITrace.end()` reads without synchronization from container `util.APITrace.operations` via call to `get`. Potentially races with write in method `APITrace.begin(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/util/APITrace.java","tnLine":141,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.APITrace.end():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void APITrace.end()` indirectly mutates container `util.APITrace.operationTrace` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/util/APITrace.java","tnLine":163,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.APITrace.end():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void APITrace.end()` mutates container `util.APITrace.operations` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/util/APITrace.java","tnLine":161,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.APITrace.end():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `String VirtualMachine.fetchPassword()` reads without synchronization from `this.rootPassword`. Potentially races with write in method `VirtualMachine.getRootPassword()`.\n Reporting because this access may occur on a background thread.","tnFile":"src/main/java/org/dasein/cloud/compute/VirtualMachine.java","tnLine":195,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.compute.VirtualMachine.fetchPassword():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Iterable Cache.get(ProviderContext)` reads without synchronization from container `this.regionCache` via call to `get`. Potentially races with write in method `Cache.get(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/main/java/org/dasein/cloud/util/Cache.java","tnLine":282,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.Cache.get(org.dasein.cloud.ProviderContext):java.lang.Iterable","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Iterable Cache.get(ProviderContext)` reads without synchronization from container `this.regionAccountCache` via call to `get`. Potentially races with write in method `Cache.get(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/main/java/org/dasein/cloud/util/Cache.java","tnLine":296,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.Cache.get(org.dasein.cloud.ProviderContext):java.lang.Iterable","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Iterable Cache.get(ProviderContext)` reads without synchronization from `entry.items`. Potentially races with write in method `Cache.get(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/main/java/org/dasein/cloud/util/Cache.java","tnLine":313,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.Cache.get(org.dasein.cloud.ProviderContext):java.lang.Iterable","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Iterable Cache.get(ProviderContext)` reads without synchronization from container `this.cloudCache` via call to `get`. Potentially races with write in method `Cache.get(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/main/java/org/dasein/cloud/util/Cache.java","tnLine":279,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.Cache.get(org.dasein.cloud.ProviderContext):java.lang.Iterable","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Iterable Cache.get(ProviderContext)` reads without synchronization from container `this.cloudAccountCache` via call to `get`. Potentially races with write in method `Cache.get(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/main/java/org/dasein/cloud/util/Cache.java","tnLine":289,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.Cache.get(org.dasein.cloud.ProviderContext):java.lang.Iterable","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Iterable Cache.get(ProviderContext)` writes to field `entry.items` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"src/main/java/org/dasein/cloud/util/Cache.java","tnLine":310,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.Cache.get(org.dasein.cloud.ProviderContext):java.lang.Iterable","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object SingletonCache.get(ProviderContext)` reads without synchronization from container `this.regionCache` via call to `get`. Potentially races with write in method `SingletonCache.put(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/main/java/org/dasein/cloud/util/SingletonCache.java","tnLine":275,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.SingletonCache.get(org.dasein.cloud.ProviderContext):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object SingletonCache.get(ProviderContext)` reads without synchronization from container `this.regionAccountCache` via call to `get`. Potentially races with write in method `SingletonCache.put(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/main/java/org/dasein/cloud/util/SingletonCache.java","tnLine":289,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.SingletonCache.get(org.dasein.cloud.ProviderContext):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object SingletonCache.get(ProviderContext)` reads without synchronization from `entry.item`. Potentially races with write in method `SingletonCache.get(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/main/java/org/dasein/cloud/util/SingletonCache.java","tnLine":306,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.SingletonCache.get(org.dasein.cloud.ProviderContext):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object SingletonCache.get(ProviderContext)` reads without synchronization from container `this.cloudCache` via call to `get`. Potentially races with write in method `SingletonCache.put(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/main/java/org/dasein/cloud/util/SingletonCache.java","tnLine":272,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.SingletonCache.get(org.dasein.cloud.ProviderContext):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object SingletonCache.get(ProviderContext)` reads without synchronization from container `this.cloudAccountCache` via call to `get`. Potentially races with write in method `SingletonCache.put(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/main/java/org/dasein/cloud/util/SingletonCache.java","tnLine":282,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.SingletonCache.get(org.dasein.cloud.ProviderContext):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Object SingletonCache.get(ProviderContext)` writes to field `entry.item` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"src/main/java/org/dasein/cloud/util/SingletonCache.java","tnLine":303,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.SingletonCache.get(org.dasein.cloud.ProviderContext):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object AsynchronousTask.getResult()` reads without synchronization from `this.result`. Potentially races with write in method `AsynchronousTask.completeWithResult(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/AsynchronousTask.java","tnLine":76,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.AsynchronousTask.getResult():java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `String VirtualMachine.getRootPassword()` indirectly reads without synchronization from `this.rootPassword`. Potentially races with write in method `VirtualMachine.getRootPassword()`.\n Reporting because this access may occur on a background thread.","tnFile":"src/main/java/org/dasein/cloud/compute/VirtualMachine.java","tnLine":148,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.compute.VirtualMachine.getRootPassword():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `String VirtualMachine.getRootPassword(long)` indirectly reads without synchronization from `this.rootPassword`. Potentially races with write in method `VirtualMachine.getRootPassword()`.\n Reporting because this access may occur on a background thread.","tnFile":"src/main/java/org/dasein/cloud/compute/VirtualMachine.java","tnLine":155,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.compute.VirtualMachine.getRootPassword(long):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `String Volume.getTag(String)` indirectly writes to field `this.tags` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/compute/Volume.java","tnLine":323,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.compute.Volume.getTag(java.lang.String):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Map Volume.getTags()` writes to field `this.tags` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/compute/Volume.java","tnLine":329,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.compute.Volume.getTags():java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Map Volume.getTags()` reads without synchronization from `this.tags`. Potentially races with write in method `Volume.setTags(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/compute/Volume.java","tnLine":328,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.compute.Volume.getTags():java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Throwable AsynchronousTask.getTaskError()` reads without synchronization from `this.taskError`. Potentially races with write in method `AsynchronousTask.complete(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/AsynchronousTask.java","tnLine":88,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.AsynchronousTask.getTaskError():java.lang.Throwable","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void CloudProvider.hold()` reads without synchronization from `this.computeCloudProvider`. Potentially races with write in method `CloudProvider.connect(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/main/java/org/dasein/cloud/CloudProvider.java","tnLine":389,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.CloudProvider.hold():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Cache.put(ProviderContext,Iterable)` reads without synchronization from container `this.regionCache` via call to `get`. Potentially races with write in method `Cache.get(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/util/Cache.java","tnLine":331,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.Cache.put(org.dasein.cloud.ProviderContext,java.lang.Iterable):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Cache.put(ProviderContext,Iterable)` reads without synchronization from container `this.cloudAccountCache` via call to `get`. Potentially races with write in method `Cache.get(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/util/Cache.java","tnLine":340,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.Cache.put(org.dasein.cloud.ProviderContext,java.lang.Iterable):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Cache.put(ProviderContext,Iterable)` reads without synchronization from container `this.regionAccountCache` via call to `get`. Potentially races with write in method `Cache.get(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/util/Cache.java","tnLine":349,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.Cache.put(org.dasein.cloud.ProviderContext,java.lang.Iterable):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Cache.put(ProviderContext,Iterable)` mutates container `this.cloudAccountCache` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/util/Cache.java","tnLine":344,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.Cache.put(org.dasein.cloud.ProviderContext,java.lang.Iterable):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Cache.put(ProviderContext,Iterable)` mutates container `this.cloudCache` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/util/Cache.java","tnLine":328,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.Cache.put(org.dasein.cloud.ProviderContext,java.lang.Iterable):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Cache.put(ProviderContext,Iterable)` mutates container `this.regionCache` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/util/Cache.java","tnLine":335,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.Cache.put(org.dasein.cloud.ProviderContext,java.lang.Iterable):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Cache.put(ProviderContext,Iterable)` mutates container `this.regionAccountCache` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/util/Cache.java","tnLine":353,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.Cache.put(org.dasein.cloud.ProviderContext,java.lang.Iterable):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void SingletonCache.put(ProviderContext,Object)` mutates container `this.regionAccountCache` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/util/SingletonCache.java","tnLine":346,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.SingletonCache.put(org.dasein.cloud.ProviderContext,java.lang.Object):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void SingletonCache.put(ProviderContext,Object)` reads without synchronization from container `this.regionCache` via call to `get`. Potentially races with write in method `SingletonCache.clear()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/util/SingletonCache.java","tnLine":324,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.SingletonCache.put(org.dasein.cloud.ProviderContext,java.lang.Object):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void SingletonCache.put(ProviderContext,Object)` reads without synchronization from container `this.cloudAccountCache` via call to `get`. Potentially races with write in method `SingletonCache.clear()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/util/SingletonCache.java","tnLine":333,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.SingletonCache.put(org.dasein.cloud.ProviderContext,java.lang.Object):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void SingletonCache.put(ProviderContext,Object)` mutates container `this.regionCache` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/util/SingletonCache.java","tnLine":328,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.SingletonCache.put(org.dasein.cloud.ProviderContext,java.lang.Object):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void SingletonCache.put(ProviderContext,Object)` reads without synchronization from container `this.regionAccountCache` via call to `get`. Potentially races with write in method `SingletonCache.clear()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/util/SingletonCache.java","tnLine":342,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.SingletonCache.put(org.dasein.cloud.ProviderContext,java.lang.Object):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void SingletonCache.put(ProviderContext,Object)` mutates container `this.cloudCache` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/util/SingletonCache.java","tnLine":321,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.SingletonCache.put(org.dasein.cloud.ProviderContext,java.lang.Object):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void SingletonCache.put(ProviderContext,Object)` mutates container `this.cloudAccountCache` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/util/SingletonCache.java","tnLine":337,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.SingletonCache.put(org.dasein.cloud.ProviderContext,java.lang.Object):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void CloudProvider.release()` reads without synchronization from `this.computeCloudProvider`. Potentially races with write in method `CloudProvider.connect(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/main/java/org/dasein/cloud/CloudProvider.java","tnLine":404,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.CloudProvider.release():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void APITrace.reset()` mutates container `util.APITrace.operations` via call to `clear` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"src/main/java/org/dasein/cloud/util/APITrace.java","tnLine":588,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.APITrace.reset():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void InvoiceLine.setBreakout(String,Double)` reads without synchronization from `this.breakouts`. Potentially races with write in method `InvoiceLine.getBreakouts()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/admin/InvoiceLine.java","tnLine":106,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.admin.InvoiceLine.setBreakout(java.lang.String,java.lang.Double):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void InvoiceLine.setBreakout(String,Double)` writes to field `this.breakouts` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/admin/InvoiceLine.java","tnLine":107,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.admin.InvoiceLine.setBreakout(java.lang.String,java.lang.Double):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void VirtualMachine.setRootPassword(String)` writes to field `this.rootPassword` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/compute/VirtualMachine.java","tnLine":135,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.compute.VirtualMachine.setRootPassword(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Account.setTag(String,String)` reads without synchronization from `this.tags`. Potentially races with write in method `Account.getTags()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/admin/Account.java","tnLine":187,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.admin.Account.setTag(java.lang.String,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Account.setTag(String,String)` writes to field `this.tags` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/admin/Account.java","tnLine":188,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.admin.Account.setTag(java.lang.String,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void InvoiceHeader.setTag(String,String)` reads without synchronization from `this.tags`. Potentially races with write in method `InvoiceHeader.setTags(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/admin/InvoiceHeader.java","tnLine":66,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.admin.InvoiceHeader.setTag(java.lang.String,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void InvoiceHeader.setTag(String,String)` writes to field `this.tags` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/admin/InvoiceHeader.java","tnLine":67,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.admin.InvoiceHeader.setTag(java.lang.String,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void AffinityGroup.setTag(String,String)` reads without synchronization from `this.tags`. Potentially races with write in method `AffinityGroup.setTags(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/compute/AffinityGroup.java","tnLine":95,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.compute.AffinityGroup.setTag(java.lang.String,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void AffinityGroup.setTag(String,String)` writes to field `this.tags` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/compute/AffinityGroup.java","tnLine":96,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.compute.AffinityGroup.setTag(java.lang.String,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void VirtualMachine.setTag(String,String)` reads without synchronization from `this.tags`. Potentially races with write in method `VirtualMachine.setTags(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/compute/VirtualMachine.java","tnLine":559,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.compute.VirtualMachine.setTag(java.lang.String,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void VirtualMachine.setTag(String,String)` writes to field `this.tags` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/compute/VirtualMachine.java","tnLine":560,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.compute.VirtualMachine.setTag(java.lang.String,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Volume.setTag(String,String)` indirectly writes to field `this.tags` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/compute/Volume.java","tnLine":336,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.compute.Volume.setTag(java.lang.String,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Cache$CacheDelegate.setTimeoutInSeconds(String,long)` writes to field `c.cacheTimeout` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"src/main/java/org/dasein/cloud/util/Cache.java","tnLine":167,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.Cache$CacheDelegate.setTimeoutInSeconds(java.lang.String,long):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void SingletonCache$CacheDelegate.setTimeoutInSeconds(String,long)` writes to field `c.cacheTimeout` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"src/main/java/org/dasein/cloud/util/SingletonCache.java","tnLine":162,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.SingletonCache$CacheDelegate.setTimeoutInSeconds(java.lang.String,long):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void APITrace.trace(CloudProvider,String)` writes to field `current.apiCalls` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"src/main/java/org/dasein/cloud/util/APITrace.java","tnLine":622,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.APITrace.trace(org.dasein.cloud.CloudProvider,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void APITrace.trace(CloudProvider,String)` reads without synchronization from container `util.APITrace.operations` via call to `get`. Potentially races with write in method `APITrace.begin(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/main/java/org/dasein/cloud/util/APITrace.java","tnLine":603,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.APITrace.trace(org.dasein.cloud.CloudProvider,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void APITrace.trace(CloudProvider,String)` reads without synchronization from `current.apiCalls`. Potentially races with write in method `APITrace.trace(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/main/java/org/dasein/cloud/util/APITrace.java","tnLine":621,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.APITrace.trace(org.dasein.cloud.CloudProvider,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void APITrace.trace(CloudProvider,String)` writes to field `current.calls` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"src/main/java/org/dasein/cloud/util/APITrace.java","tnLine":608,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.APITrace.trace(org.dasein.cloud.CloudProvider,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}}],null,{"analysisLOC":null,"analysisBuildSys":null,"analysisLang":null}]}],[{"tag":"ErrorProne"},{"tag":"ToolSuccess","contents":[[{"tnType":"Var","tnDesc":"Non-constant variable missing @Var annotation","tnFile":"src/main/java/org/dasein/cloud/CloudProvider.java","tnLine":249,"tnColumn":16,"tnPatch":null,"tnCodeLine":"        String name = baseName;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"FieldMissingNullable","tnDesc":"May assign null to field","tnFile":"src/main/java/org/dasein/cloud/network/LbListener.java","tnLine":216,"tnColumn":38,"tnPatch":null,"tnCodeLine":"        this.providerLBHealthCheckId = providerLBHealthCheckId;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"FieldCanBeFinal","tnDesc":"This field is only assigned during initialization; consider making it final","tnFile":"src/main/java/org/dasein/cloud/compute/AutoScalingGroupDeleteOptions.java","tnLine":28,"tnColumn":18,"tnPatch":null,"tnCodeLine":"  private String providerAutoScalingGroupId;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"WildcardImport","tnDesc":"Wildcard imports, static or otherwise, should not be used","tnFile":"src/main/java/org/dasein/cloud/compute/ScalingGroup.java","tnLine":23,"tnColumn":1,"tnPatch":null,"tnCodeLine":"import java.util.*;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nullable is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/CloudProvider.java","tnLine":239,"tnColumn":29,"tnPatch":null,"tnCodeLine":"    public @Nullable String findUniqueName(@Nonnull String baseName, @Nonnull NamingConstraints constraints, @Nonnull ResourceNamespace namespace) throws CloudException, InternalException {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nullable is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/CloudProvider.java","tnLine":302,"tnColumn":42,"tnPatch":null,"tnCodeLine":"    public abstract @Nullable CIServices getCIServices();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"MissingOverride","tnDesc":"toString overrides method in Object; expected @Override","tnFile":"src/main/java/org/dasein/cloud/platform/Topic.java","tnLine":36,"tnColumn":19,"tnPatch":null,"tnCodeLine":"    public String toString() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"MissingSummary","tnDesc":"A summary line is required on public/protected Javadocs.","tnFile":"src/main/java/org/dasein/cloud/compute/AutoScalingGroupDeleteOptions.java","tnLine":23,"tnColumn":4,"tnPatch":null,"tnCodeLine":" * @author Chris Kelners (http://github.com/ckelner)","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"InconsistentOverloads","tnDesc":"The parameters of this method are inconsistent with other overloaded versions. A consistent order would be: getInstance(HCProtocol protocol, int port, String path, int interval, int timeout, int healthyCount, int unhealthyCount, String providerLBHealthCheckId, String name, String description, String host)","tnFile":"src/main/java/org/dasein/cloud/network/LoadBalancerHealthCheck.java","tnLine":64,"tnColumn":43,"tnPatch":null,"tnCodeLine":"    public static LoadBalancerHealthCheck getInstance(@Nullable String providerLBHealthCheckId, @Nonnull String name, @Nullable String description, @Nullable String host, @Nullable HCProtocol protocol, int port, @Nullable String path, int interval, int timeout, int healthyCount, int unhealthyCount){","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"MissingSummary","tnDesc":"A summary fragment is required; consider using the value of the @return block as a summary fragment instead.","tnFile":"src/main/java/org/dasein/cloud/Tag.java","tnLine":94,"tnColumn":8,"tnPatch":null,"tnCodeLine":"     * @return the key for this key/value pair","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nullable is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/network/LbListener.java","tnLine":196,"tnColumn":29,"tnPatch":null,"tnCodeLine":"    public @Nullable String getProviderLBHealthCheckId(){","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"MissingSummary","tnDesc":"A summary fragment is required; consider using the value of the @return block as a summary fragment instead.","tnFile":"src/main/java/org/dasein/cloud/CloudProvider.java","tnLine":313,"tnColumn":8,"tnPatch":null,"tnCodeLine":"     * @return the name of this cloud provider","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"MissingSummary","tnDesc":"A summary fragment is required; consider using the value of the @return block as a summary fragment instead.","tnFile":"src/main/java/org/dasein/cloud/Tag.java","tnLine":109,"tnColumn":8,"tnPatch":null,"tnCodeLine":"     * @return the value associated with this key/value pair","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"Var","tnDesc":"Non-constant variable missing @Var annotation","tnFile":"src/main/java/org/dasein/cloud/CloudProvider.java","tnLine":77,"tnColumn":116,"tnPatch":null,"tnCodeLine":"    static public boolean matchesTags(@Nonnull Map<String, ?> currentValues, @Nonnull String name, @Nonnull String description, @Nullable Map<String, String> valuesToMatch) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"FieldMissingNullable","tnDesc":"May assign null to field","tnFile":"src/main/java/org/dasein/cloud/CloudException.java","tnLine":90,"tnColumn":27,"tnPatch":null,"tnCodeLine":"        this.providerCode = providerCode;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"MissingSummary","tnDesc":"A summary fragment is required; consider using the value of the @return block as a summary fragment instead.","tnFile":"src/main/java/org/dasein/cloud/CloudProvider.java","tnLine":282,"tnColumn":8,"tnPatch":null,"tnCodeLine":"     * @return an object containing the fields required for connecting Dasein to the cloud provider","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nullable is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/CloudProvider.java","tnLine":310,"tnColumn":48,"tnPatch":null,"tnCodeLine":"    public abstract @Nullable PlatformServices getPlatformServices();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nonnull is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/network/LbListener.java","tnLine":205,"tnColumn":32,"tnPatch":null,"tnCodeLine":"    public @Nonnull LbListener withSslCertificateName(@Nullable String sslCertificateName) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"UnusedMethod","tnDesc":"Private method 'getLastItem' is never used.","tnFile":"src/main/java/org/dasein/cloud/CloudProvider.java","tnLine":65,"tnColumn":36,"tnPatch":null,"tnCodeLine":"    static private @Nonnull String getLastItem(@Nonnull String name) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nonnull is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/compute/AffinityGroupCreateOptions.java","tnLine":49,"tnColumn":28,"tnPatch":null,"tnCodeLine":"    public @Nonnull String getName(){","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"FieldMissingNullable","tnDesc":"May assign null to field","tnFile":"src/main/java/org/dasein/cloud/network/LbListener.java","tnLine":206,"tnColumn":33,"tnPatch":null,"tnCodeLine":"        this.sslCertificateName = sslCertificateName;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"MissingSummary","tnDesc":"A summary line is required on public/protected Javadocs.","tnFile":"src/main/java/org/dasein/cloud/compute/AutoScalingGroupFilterOptions.java","tnLine":26,"tnColumn":4,"tnPatch":null,"tnCodeLine":" * @author Eduard Bakaev","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"DepAnn","tnDesc":"Deprecated item is not annotated with @Deprecated","tnFile":"src/main/java/org/dasein/cloud/network/LbListener.java","tnLine":233,"tnColumn":17,"tnPatch":null,"tnCodeLine":"    public void setAlgorithm(@Nonnull LbAlgorithm algorithm) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"InconsistentOverloads","tnDesc":"The parameters of this method are inconsistent with other overloaded versions. A consistent order would be: getInstance(HCProtocol protocol, int port, String path, int interval, int timeout, int healthyCount, int unhealthyCount, String providerLBHealthCheckId)","tnFile":"src/main/java/org/dasein/cloud/network/LoadBalancerHealthCheck.java","tnLine":60,"tnColumn":43,"tnPatch":null,"tnCodeLine":"    public static LoadBalancerHealthCheck getInstance(@Nullable String providerLBHealthCheckId, @Nonnull HCProtocol protocol, int port, @Nullable String path, int interval, int timeout, int healthyCount, int unhealthyCount){","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"FieldCanBeFinal","tnDesc":"This field is only assigned during initialization; consider making it final","tnFile":"src/main/java/org/dasein/cloud/network/LoadBalancerHealthCheck.java","tnLine":40,"tnColumn":31,"tnPatch":null,"tnCodeLine":"    private List<String>      providerLoadBalancerIds = new ArrayList<String>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"InconsistentOverloads","tnDesc":"The parameters of this method are inconsistent with other overloaded versions. A consistent order would be: getInstance(int publicPort, int privatePort, LbProtocol protocol)","tnFile":"src/main/java/org/dasein/cloud/network/LbListener.java","tnLine":52,"tnColumn":30,"tnPatch":null,"tnCodeLine":"    static public LbListener getInstance(@Nonnull LbProtocol protocol, int publicPort, int privatePort) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"MissingSummary","tnDesc":"A summary fragment is required; consider using the value of the @return block as a summary fragment instead.","tnFile":"src/main/java/org/dasein/cloud/network/LbListener.java","tnLine":194,"tnColumn":8,"tnPatch":null,"tnCodeLine":"     * @return the ID of a Health Check if one is attached.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"FieldMissingNullable","tnDesc":"May assign null to field","tnFile":"src/main/java/org/dasein/cloud/network/LbListener.java","tnLine":131,"tnColumn":33,"tnPatch":null,"tnCodeLine":"        this.sslCertificateName = sslCertificateName;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"Var","tnDesc":"Non-constant variable missing @Var annotation","tnFile":"src/main/java/org/dasein/cloud/CloudProvider.java","tnLine":77,"tnColumn":94,"tnPatch":null,"tnCodeLine":"    static public boolean matchesTags(@Nonnull Map<String, ?> currentValues, @Nonnull String name, @Nonnull String description, @Nullable Map<String, String> valuesToMatch) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nonnull is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/compute/AutoScalingGroupFilterOptions.java","tnLine":83,"tnColumn":51,"tnPatch":null,"tnCodeLine":"    public @Nonnull AutoScalingGroupFilterOptions withTags( @Nonnull Map<String, String> tags ) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"FieldMissingNullable","tnDesc":"May assign null to field","tnFile":"src/main/java/org/dasein/cloud/network/LoadBalancerHealthCheck.java","tnLine":71,"tnColumn":26,"tnPatch":null,"tnCodeLine":"        this.description = description;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nullable is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/CloudProvider.java","tnLine":261,"tnColumn":45,"tnPatch":null,"tnCodeLine":"    public abstract @Nullable AdminServices getAdminServices();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"MissingOverride","tnDesc":"run overrides method in Thread; expected @Override","tnFile":"src/main/java/org/dasein/cloud/CloudProvider.java","tnLine":147,"tnColumn":29,"tnPatch":null,"tnCodeLine":"                public void run() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"MissingSummary","tnDesc":"A summary fragment is required; consider using the value of the @return block as a summary fragment instead.","tnFile":"src/main/java/org/dasein/cloud/network/LbListener.java","tnLine":142,"tnColumn":8,"tnPatch":null,"tnCodeLine":"     * @return the name of the cookie to be used when the persistence mechanism is a server cookie","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nonnull is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/compute/AffinityGroupCreateOptions.java","tnLine":39,"tnColumn":55,"tnPatch":null,"tnCodeLine":"    public static @Nonnull AffinityGroupCreateOptions getInstance(@Nonnull String name, @Nullable String description, @Nonnull String dataCenterId){","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nonnull is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/compute/AffinityGroupCreateOptions.java","tnLine":61,"tnColumn":28,"tnPatch":null,"tnCodeLine":"    public @Nonnull String build(@Nonnull CloudProvider provider) throws CloudException, InternalException{","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nonnegative is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/CloudException.java","tnLine":108,"tnColumn":29,"tnPatch":null,"tnCodeLine":"    public @Nonnegative int getHttpCode() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nonnull is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/CloudException.java","tnLine":116,"tnColumn":28,"tnPatch":null,"tnCodeLine":"    public @Nonnull String getProviderCode() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"Var","tnDesc":"Non-constant variable missing @Var annotation","tnFile":"src/main/java/org/dasein/cloud/CloudProvider.java","tnLine":239,"tnColumn":60,"tnPatch":null,"tnCodeLine":"    public @Nullable String findUniqueName(@Nonnull String baseName, @Nonnull NamingConstraints constraints, @Nonnull ResourceNamespace namespace) throws CloudException, InternalException {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nonnull is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/compute/AffinityGroupCreateOptions.java","tnLine":57,"tnColumn":28,"tnPatch":null,"tnCodeLine":"    public @Nonnull String getDataCenterId(){","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"FieldCanBeFinal","tnDesc":"This field is only assigned during initialization; consider making it final","tnFile":"src/main/java/org/dasein/cloud/network/LoadBalancerHealthCheck.java","tnLine":37,"tnColumn":31,"tnPatch":null,"tnCodeLine":"    private String            providerLBHealthCheckId;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"ReturnMissingNullable","tnDesc":"Returning null literal","tnFile":"src/main/java/org/dasein/cloud/CloudProvider.java","tnLine":426,"tnColumn":9,"tnPatch":null,"tnCodeLine":"        return null;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"InconsistentOverloads","tnDesc":"The parameters of this method are inconsistent with other overloaded versions. A consistent order would be: <init>(String msg, CloudErrorType type, int httpCode, String providerCode, Throwable cause)","tnFile":"src/main/java/org/dasein/cloud/CloudException.java","tnLine":101,"tnColumn":15,"tnPatch":null,"tnCodeLine":"    protected CloudException(@Nullable CloudErrorType type, @Nonnegative int httpCode, @Nullable String providerCode, @Nullable String msg, @Nonnull Throwable cause) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nullable is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/CloudProvider.java","tnLine":306,"tnColumn":48,"tnPatch":null,"tnCodeLine":"    public abstract @Nullable IdentityServices getIdentityServices();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nonnull is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/CloudProvider.java","tnLine":284,"tnColumn":50,"tnPatch":null,"tnCodeLine":"    public abstract @Nonnull ContextRequirements getContextRequirements();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nonnull is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/CloudProvider.java","tnLine":290,"tnColumn":37,"tnPatch":null,"tnCodeLine":"    public abstract @Nonnull String getCloudName();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"ClassNewInstance","tnDesc":"Class.newInstance() bypasses exception checking; prefer getDeclaredConstructor().newInstance()","tnFile":"src/main/java/org/dasein/cloud/CloudProvider.java","tnLine":337,"tnColumn":81,"tnPatch":null,"tnCodeLine":"            CloudProvider p = (CloudProvider) Class.forName(storage).newInstance();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"FieldMissingNullable","tnDesc":"Assigning null literal to field","tnFile":"src/main/java/org/dasein/cloud/CloudProvider.java","tnLine":443,"tnColumn":21,"tnPatch":null,"tnCodeLine":"            context = null;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@SuppressWarnings, @Nonnull are not type annotations, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/CloudProvider.java","tnLine":65,"tnColumn":36,"tnPatch":null,"tnCodeLine":"    static private @Nonnull String getLastItem(@Nonnull String name) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nullable is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/CloudProvider.java","tnLine":308,"tnColumn":47,"tnPatch":null,"tnCodeLine":"    public abstract @Nullable NetworkServices getNetworkServices();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"Var","tnDesc":"Unnecessary 'final' modifier.","tnFile":"src/main/java/org/dasein/cloud/compute/AutoScalingGroupDeleteOptions.java","tnLine":43,"tnColumn":70,"tnPatch":null,"tnCodeLine":"  public AutoScalingGroupDeleteOptions setForceDelete( final Boolean forceDelete ) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"FieldCanBeFinal","tnDesc":"This field is only assigned during initialization; consider making it final","tnFile":"src/main/java/org/dasein/cloud/compute/AffinityGroupCreateOptions.java","tnLine":36,"tnColumn":20,"tnPatch":null,"tnCodeLine":"    private String description;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nonnull is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/network/LbListener.java","tnLine":161,"tnColumn":35,"tnPatch":null,"tnCodeLine":"    public @Nonnull LbPersistence getPersistence() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"FieldCanBeFinal","tnDesc":"This field is only assigned during initialization; consider making it final","tnFile":"src/main/java/org/dasein/cloud/compute/AffinityGroupCreateOptions.java","tnLine":35,"tnColumn":20,"tnPatch":null,"tnCodeLine":"    private String name;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"FieldMissingNullable","tnDesc":"May assign null to field","tnFile":"src/main/java/org/dasein/cloud/network/LoadBalancerHealthCheck.java","tnLine":70,"tnColumn":19,"tnPatch":null,"tnCodeLine":"        this.name = name;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"WildcardImport","tnDesc":"Wildcard imports, static or otherwise, should not be used","tnFile":"src/main/java/org/dasein/cloud/CloudProvider.java","tnLine":36,"tnColumn":1,"tnPatch":null,"tnCodeLine":"import java.util.*;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nonnull is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/network/LbListener.java","tnLine":215,"tnColumn":32,"tnPatch":null,"tnCodeLine":"    public @Nonnull LbListener withProviderLBHealthCheckId(@Nullable String providerLBHealthCheckId) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"InconsistentOverloads","tnDesc":"The parameters of this method are inconsistent with other overloaded versions. A consistent order would be: <init>(String accountNumber, Cloud cloud, String regionId)","tnFile":"src/main/java/org/dasein/cloud/ProviderContext.java","tnLine":196,"tnColumn":13,"tnPatch":null,"tnCodeLine":"    private ProviderContext(@Nonnull Cloud cloud, @Nonnull String accountNumber, @Nullable String regionId) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"Var","tnDesc":"Non-constant variable missing @Var annotation","tnFile":"src/main/java/org/dasein/cloud/CloudProvider.java","tnLine":250,"tnColumn":13,"tnPatch":null,"tnCodeLine":"        int i = 1;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"DepAnn","tnDesc":"Deprecated item is not annotated with @Deprecated","tnFile":"src/main/java/org/dasein/cloud/network/LbListener.java","tnLine":260,"tnColumn":17,"tnPatch":null,"tnCodeLine":"    public void setPublicPort(int publicPort) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"UnusedVariable","tnDesc":"The field 'debug' is never read.","tnFile":"src/main/java/org/dasein/cloud/CloudProvider.java","tnLine":126,"tnColumn":21,"tnPatch":null,"tnCodeLine":"    private boolean debug;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nonnull is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/network/LbListener.java","tnLine":137,"tnColumn":33,"tnPatch":null,"tnCodeLine":"    public @Nonnull LbAlgorithm getAlgorithm() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"FieldMissingNullable","tnDesc":"May assign null to field","tnFile":"src/main/java/org/dasein/cloud/CloudProvider.java","tnLine":215,"tnColumn":35,"tnPatch":null,"tnCodeLine":"        this.computeCloudProvider = computeProvider;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nonnull is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/compute/AffinityGroupCreateOptions.java","tnLine":53,"tnColumn":28,"tnPatch":null,"tnCodeLine":"    public @Nonnull String getDescription(){","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"FieldMissingNullable","tnDesc":"May assign null to field","tnFile":"src/main/java/org/dasein/cloud/network/LoadBalancerHealthCheck.java","tnLine":75,"tnColumn":19,"tnPatch":null,"tnCodeLine":"        this.path = path;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"EqualsGetClass","tnDesc":"Overriding Object#equals in a non-final class by using getClass rather than instanceof breaks substitutability of subclasses.","tnFile":"src/main/java/org/dasein/cloud/Tag.java","tnLine":68,"tnColumn":20,"tnPatch":null,"tnCodeLine":"    public boolean equals(@Nullable Object ob) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nonnull is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/CloudException.java","tnLine":112,"tnColumn":36,"tnPatch":null,"tnCodeLine":"    public @Nonnull CloudErrorType getErrorType() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nullable is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/network/LbListener.java","tnLine":144,"tnColumn":29,"tnPatch":null,"tnCodeLine":"    public @Nullable String getCookie() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"FieldMissingNullable","tnDesc":"May assign null to field","tnFile":"src/main/java/org/dasein/cloud/CloudException.java","tnLine":105,"tnColumn":27,"tnPatch":null,"tnCodeLine":"        this.providerCode = providerCode;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"FieldMissingNullable","tnDesc":"May assign null to field","tnFile":"src/main/java/org/dasein/cloud/network/LoadBalancerHealthCheck.java","tnLine":72,"tnColumn":19,"tnPatch":null,"tnCodeLine":"        this.host = host;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"Var","tnDesc":"Unnecessary 'final' modifier.","tnFile":"src/main/java/org/dasein/cloud/compute/AutoScalingGroupDeleteOptions.java","tnLine":31,"tnColumn":53,"tnPatch":null,"tnCodeLine":"  public AutoScalingGroupDeleteOptions(final String providerAutoScalingGroupId) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nullable is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/CloudProvider.java","tnLine":277,"tnColumn":44,"tnPatch":null,"tnCodeLine":"    public final @Nullable ProviderContext getContext() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"FieldCanBeFinal","tnDesc":"This field is only assigned during initialization; consider making it final","tnFile":"src/main/java/org/dasein/cloud/compute/AffinityGroupCreateOptions.java","tnLine":37,"tnColumn":20,"tnPatch":null,"tnCodeLine":"    private String dataCenterId;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"DepAnn","tnDesc":"Deprecated item is not annotated with @Deprecated","tnFile":"src/main/java/org/dasein/cloud/network/LbListener.java","tnLine":118,"tnColumn":12,"tnPatch":null,"tnCodeLine":"    public LbListener() { }","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"DepAnn","tnDesc":"Deprecated item is not annotated with @Deprecated","tnFile":"src/main/java/org/dasein/cloud/network/LbListener.java","tnLine":242,"tnColumn":17,"tnPatch":null,"tnCodeLine":"    public void setNetworkProtocol(@Nonnull LbProtocol networkProtocol) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"FieldMissingNullable","tnDesc":"Assigning null literal to field","tnFile":"src/main/java/org/dasein/cloud/CloudProvider.java","tnLine":447,"tnColumn":34,"tnPatch":null,"tnCodeLine":"            storageCloudProvider = null;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nonnull is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/network/LbListener.java","tnLine":152,"tnColumn":32,"tnPatch":null,"tnCodeLine":"    public @Nonnull LbProtocol getNetworkProtocol() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"FieldMissingNullable","tnDesc":"May assign null to field","tnFile":"src/main/java/org/dasein/cloud/CloudException.java","tnLine":103,"tnColumn":24,"tnPatch":null,"tnCodeLine":"        this.errorType = type;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nullable is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/CloudProvider.java","tnLine":304,"tnColumn":47,"tnPatch":null,"tnCodeLine":"    public abstract @Nullable ComputeServices getComputeServices();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"FieldMissingNullable","tnDesc":"May assign null to field","tnFile":"src/main/java/org/dasein/cloud/network/LoadBalancerHealthCheck.java","tnLine":73,"tnColumn":23,"tnPatch":null,"tnCodeLine":"        this.protocol = protocol;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nonnull is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/CloudProvider.java","tnLine":315,"tnColumn":37,"tnPatch":null,"tnCodeLine":"    public abstract @Nonnull String getProviderName();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nonnull is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/Tag.java","tnLine":96,"tnColumn":28,"tnPatch":null,"tnCodeLine":"    public @Nonnull String getKey() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"InconsistentOverloads","tnDesc":"The parameters of this method are inconsistent with other overloaded versions. A consistent order would be: getInstance(int publicPort, int privatePort, LbProtocol protocol, LbAlgorithm algorithm, String persistenceCookie)","tnFile":"src/main/java/org/dasein/cloud/network/LbListener.java","tnLine":83,"tnColumn":30,"tnPatch":null,"tnCodeLine":"    static public LbListener getInstance(@Nonnull LbAlgorithm algorithm, @Nonnull String persistenceCookie, @Nonnull LbProtocol protocol, int publicPort, int privatePort) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Override, @Nonnull are not type annotations, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/network/LbListener.java","tnLine":222,"tnColumn":28,"tnPatch":null,"tnCodeLine":"    public @Nonnull String toString() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"FieldMissingNullable","tnDesc":"May assign null to field","tnFile":"src/main/java/org/dasein/cloud/compute/AffinityGroupCreateOptions.java","tnLine":45,"tnColumn":26,"tnPatch":null,"tnCodeLine":"        this.description = description;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nonnull is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/compute/AutoScalingGroupFilterOptions.java","tnLine":35,"tnColumn":58,"tnPatch":null,"tnCodeLine":"    static public @Nonnull AutoScalingGroupFilterOptions getInstance() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"MissingSummary","tnDesc":"A summary fragment is required; consider using the value of the @return block as a summary fragment instead.","tnFile":"src/main/java/org/dasein/cloud/compute/AutoScalingGroupFilterOptions.java","tnLine":42,"tnColumn":8,"tnPatch":null,"tnCodeLine":"     * @return the tags, if any, on which filtering should be done (<code>null</code> means don't filter on tags)","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"FieldCanBeFinal","tnDesc":"This field is only assigned during initialization; consider making it final","tnFile":"src/main/java/org/dasein/cloud/compute/AutoScalingTag.java","tnLine":35,"tnColumn":19,"tnPatch":null,"tnCodeLine":"  private Boolean propagateAtLaunch;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"FieldMissingNullable","tnDesc":"May assign null to field","tnFile":"src/main/java/org/dasein/cloud/CloudException.java","tnLine":88,"tnColumn":24,"tnPatch":null,"tnCodeLine":"        this.errorType = type;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"InconsistentOverloads","tnDesc":"The parameters of this method are inconsistent with other overloaded versions. A consistent order would be: <init>(String msg, CloudErrorType type, int httpCode, String providerCode)","tnFile":"src/main/java/org/dasein/cloud/CloudException.java","tnLine":86,"tnColumn":15,"tnPatch":null,"tnCodeLine":"    protected CloudException(@Nullable CloudErrorType type, @Nonnegative int httpCode, @Nullable String providerCode, @Nullable String msg) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"RemoveUnusedImports","tnDesc":"Unused imports","tnFile":"src/main/java/org/dasein/cloud/Tag.java","tnLine":24,"tnColumn":1,"tnPatch":null,"tnCodeLine":"import java.io.Serializable;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nonnull is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/CloudProvider.java","tnLine":296,"tnColumn":49,"tnPatch":null,"tnCodeLine":"    public abstract @Nonnull DataCenterServices getDataCenterServices();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"MissingSummary","tnDesc":"A summary fragment is required; consider using the value of the @return block as a summary fragment instead.","tnFile":"src/main/java/org/dasein/cloud/network/LbListener.java","tnLine":135,"tnColumn":8,"tnPatch":null,"tnCodeLine":"     * @return the load balancing algorithm for the traffic associated with this listener","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@SuppressWarnings, @Nullable are not type annotations, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/CloudProvider.java","tnLine":322,"tnColumn":51,"tnPatch":null,"tnCodeLine":"    public synchronized @Nullable StorageServices getStorageServices() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"UngroupedOverloads","tnDesc":"Constructor overloads are not grouped together; found ungrouped overloads on line(s): 393, 402","tnFile":"src/main/java/org/dasein/cloud/ProviderContext.java","tnLine":196,"tnColumn":13,"tnPatch":null,"tnCodeLine":"    private ProviderContext(@Nonnull Cloud cloud, @Nonnull String accountNumber, @Nullable String regionId) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"FieldCanBeFinal","tnDesc":"This field is only assigned during initialization; consider making it final","tnFile":"src/main/java/org/dasein/cloud/network/LoadBalancerHealthCheck.java","tnLine":41,"tnColumn":31,"tnPatch":null,"tnCodeLine":"    private List<LbListener>  listeners = new ArrayList<LbListener>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"FieldMissingNullable","tnDesc":"May assign null to field","tnFile":"src/main/java/org/dasein/cloud/network/LoadBalancerHealthCheck.java","tnLine":69,"tnColumn":38,"tnPatch":null,"tnCodeLine":"        this.providerLBHealthCheckId = providerLBHealthCheckId;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"DepAnn","tnDesc":"Deprecated item is not annotated with @Deprecated","tnFile":"src/main/java/org/dasein/cloud/network/LbListener.java","tnLine":251,"tnColumn":17,"tnPatch":null,"tnCodeLine":"    public void setPrivatePort(int privatePort) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"InconsistentOverloads","tnDesc":"The parameters of this method are inconsistent with other overloaded versions. A consistent order would be: getInstance(int publicPort, int privatePort, LbProtocol protocol, LbAlgorithm algorithm, LbPersistence persistence)","tnFile":"src/main/java/org/dasein/cloud/network/LbListener.java","tnLine":101,"tnColumn":30,"tnPatch":null,"tnCodeLine":"    static public LbListener getInstance(@Nonnull LbAlgorithm algorithm, @Nonnull LbPersistence persistence, @Nonnull LbProtocol protocol, int publicPort, int privatePort) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"InconsistentOverloads","tnDesc":"The parameters of this method are inconsistent with other overloaded versions. A consistent order would be: getInstance(int publicPort, int privatePort, LbProtocol protocol, String sslCertificateName)","tnFile":"src/main/java/org/dasein/cloud/network/LbListener.java","tnLine":66,"tnColumn":30,"tnPatch":null,"tnCodeLine":"    static public LbListener getInstance(@Nonnull LbProtocol protocol, int publicPort, int privatePort,","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}}],null,{"analysisLOC":null,"analysisBuildSys":"Maven []","analysisLang":null}]}]]}}
