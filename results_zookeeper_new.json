{"tag":"AnalysisSuccess","contents":{"requestedTools":null,"toolResults":[[{"tag":"Infer"},{"tag":"ToolSuccess","contents":[[{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getProperty(\"java.vendor\")` could be null and is dereferenced at line 47.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/util/OSMXBean.java","tnLine":47,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.util.OSMXBean.<clinit>():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getProperty(\"os.name\")` could be null and is dereferenced at line 49.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/util/OSMXBean.java","tnLine":49,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.util.OSMXBean.<clinit>():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getProperty(\"os.name\")` could be null and is dereferenced at line 51.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/util/OSMXBean.java","tnLine":51,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.util.OSMXBean.<clinit>():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.apache.zookeeper.server.ByteBufferOutputStream` acquired by call to `new()` at line 48 is not released after line 49.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ByteBufferOutputStream.java","tnLine":49,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ByteBufferOutputStream.record2ByteBuffer(org.apache.jute.Record,java.nio.ByteBuffer):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 53 is not released after line 57.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/CreateResponse.java","tnLine":57,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.CreateResponse.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 53 is not released after line 59.\n**Note**: potential exception at line 56","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/CreateResponse.java","tnLine":59,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.CreateResponse.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 53 is not released after line 57.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/ErrorResponse.java","tnLine":57,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.ErrorResponse.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 53 is not released after line 59.\n**Note**: potential exception at line 56","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/ErrorResponse.java","tnLine":59,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.ErrorResponse.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 53 is not released after line 57.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/GetACLRequest.java","tnLine":57,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.GetACLRequest.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 53 is not released after line 59.\n**Note**: potential exception at line 56","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/GetACLRequest.java","tnLine":59,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.GetACLRequest.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 53 is not released after line 57.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/GetAllChildrenNumberRequest.java","tnLine":57,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.GetAllChildrenNumberRequest.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 53 is not released after line 59.\n**Note**: potential exception at line 56","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/GetAllChildrenNumberRequest.java","tnLine":59,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.GetAllChildrenNumberRequest.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 53 is not released after line 57.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/GetAllChildrenNumberResponse.java","tnLine":57,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.GetAllChildrenNumberResponse.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 53 is not released after line 59.\n**Note**: potential exception at line 56","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/GetAllChildrenNumberResponse.java","tnLine":59,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.GetAllChildrenNumberResponse.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 53 is not released after line 57.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/GetEphemeralsRequest.java","tnLine":57,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.GetEphemeralsRequest.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 53 is not released after line 59.\n**Note**: potential exception at line 56","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/GetEphemeralsRequest.java","tnLine":59,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.GetEphemeralsRequest.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 53 is not released after line 57.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/GetMaxChildrenRequest.java","tnLine":57,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.GetMaxChildrenRequest.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 53 is not released after line 59.\n**Note**: potential exception at line 56","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/GetMaxChildrenRequest.java","tnLine":59,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.GetMaxChildrenRequest.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 53 is not released after line 57.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/GetMaxChildrenResponse.java","tnLine":57,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.GetMaxChildrenResponse.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 53 is not released after line 59.\n**Note**: potential exception at line 56","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/GetMaxChildrenResponse.java","tnLine":59,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.GetMaxChildrenResponse.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 53 is not released after line 57.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/GetSASLRequest.java","tnLine":57,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.GetSASLRequest.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 53 is not released after line 59.\n**Note**: potential exception at line 56","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/GetSASLRequest.java","tnLine":59,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.GetSASLRequest.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 53 is not released after line 57.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/SetSASLRequest.java","tnLine":57,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.SetSASLRequest.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 53 is not released after line 59.\n**Note**: potential exception at line 56","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/SetSASLRequest.java","tnLine":59,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.SetSASLRequest.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 53 is not released after line 57.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/SetSASLResponse.java","tnLine":57,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.SetSASLResponse.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 53 is not released after line 59.\n**Note**: potential exception at line 56","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/SetSASLResponse.java","tnLine":59,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.SetSASLResponse.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 53 is not released after line 57.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/SyncRequest.java","tnLine":57,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.SyncRequest.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 53 is not released after line 59.\n**Note**: potential exception at line 56","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/SyncRequest.java","tnLine":59,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.SyncRequest.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 53 is not released after line 57.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/SyncResponse.java","tnLine":57,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.SyncResponse.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 53 is not released after line 59.\n**Note**: potential exception at line 56","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/SyncResponse.java","tnLine":59,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.SyncResponse.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 53 is not released after line 57.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/txn/CreateSessionTxn.java","tnLine":57,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.txn.CreateSessionTxn.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 53 is not released after line 59.\n**Note**: potential exception at line 56","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/txn/CreateSessionTxn.java","tnLine":59,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.txn.CreateSessionTxn.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 53 is not released after line 57.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/txn/DeleteTxn.java","tnLine":57,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.txn.DeleteTxn.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 53 is not released after line 59.\n**Note**: potential exception at line 56","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/txn/DeleteTxn.java","tnLine":59,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.txn.DeleteTxn.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 53 is not released after line 57.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/txn/ErrorTxn.java","tnLine":57,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.txn.ErrorTxn.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 53 is not released after line 59.\n**Note**: potential exception at line 56","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/txn/ErrorTxn.java","tnLine":59,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.txn.ErrorTxn.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 54 is not released after line 58.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/ExistsResponse.java","tnLine":58,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.ExistsResponse.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 54 is not released after line 58.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/SetACLResponse.java","tnLine":58,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.SetACLResponse.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 54 is not released after line 58.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/SetDataResponse.java","tnLine":58,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.SetDataResponse.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `bytes` last assigned on line 82 could be null and is dereferenced at line 87.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/LogFormatter.java","tnLine":87,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.LogFormatter.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `getArchive(...)` at line 63 is not released after line 111.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/LogFormatter.java","tnLine":111,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.LogFormatter.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `getArchive(...)` at line 63 is not released after line 83.\n**Note**: potential exception at line 82","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/LogFormatter.java","tnLine":83,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.LogFormatter.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `getArchive(...)` at line 63 is not released after line 90.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/LogFormatter.java","tnLine":90,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.LogFormatter.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `getArchive(...)` at line 63 is not released after line 96.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/LogFormatter.java","tnLine":96,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.LogFormatter.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileInputStream` acquired by call to `FileInputStream(...)` at line 62 is not released after line 63.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/LogFormatter.java","tnLine":63,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.LogFormatter.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PushbackInputStream` acquired to `pushbackInputStream` by call to `new()` at line 59 is not released after line 62.\n**Note**: potential exception at line 60","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/PrependableSocket.java","tnLine":62,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.PrependableSocket.prependToInputStream(byte[],int,int):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getProperty(\"os.name\")` could be null and is dereferenced at line 112.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/Shell.java","tnLine":112,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.Shell.<clinit>():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `getArchive(...)` at line 59 is not released after line 64.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/util/SerializeUtils.java","tnLine":64,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.util.SerializeUtils.deserializeTxn(byte[],org.apache.zookeeper.txn.TxnHeader):org.apache.jute.Record","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired to `return` by call to `getArchive(...)` at line 59 is not released after line 71.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/util/SerializeUtils.java","tnLine":71,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.util.SerializeUtils.deserializeTxn(byte[],org.apache.zookeeper.txn.TxnHeader):org.apache.jute.Record","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `stat` last assigned on line 70 could be null and is dereferenced by call to `print(...)` at line 72.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/cli/SetCommand.java","tnLine":72,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.cli.SetCommand.exec():boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 64 is not released after line 69.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/data/Id.java","tnLine":69,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.data.Id.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 64 is not released after line 71.\n**Note**: potential exception at line 67","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/data/Id.java","tnLine":71,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.data.Id.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 64 is not released after line 69.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/CheckVersionRequest.java","tnLine":69,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.CheckVersionRequest.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 64 is not released after line 71.\n**Note**: potential exception at line 67","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/CheckVersionRequest.java","tnLine":71,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.CheckVersionRequest.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 64 is not released after line 69.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/CheckWatchesRequest.java","tnLine":69,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.CheckWatchesRequest.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 64 is not released after line 71.\n**Note**: potential exception at line 67","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/CheckWatchesRequest.java","tnLine":71,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.CheckWatchesRequest.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 64 is not released after line 69.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/DeleteRequest.java","tnLine":69,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.DeleteRequest.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 64 is not released after line 71.\n**Note**: potential exception at line 67","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/DeleteRequest.java","tnLine":71,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.DeleteRequest.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 64 is not released after line 69.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/ExistsRequest.java","tnLine":69,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.ExistsRequest.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 64 is not released after line 71.\n**Note**: potential exception at line 67","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/ExistsRequest.java","tnLine":71,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.ExistsRequest.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 64 is not released after line 69.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/GetChildren2Request.java","tnLine":69,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.GetChildren2Request.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 64 is not released after line 71.\n**Note**: potential exception at line 67","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/GetChildren2Request.java","tnLine":71,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.GetChildren2Request.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 64 is not released after line 69.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/GetChildrenRequest.java","tnLine":69,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.GetChildrenRequest.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 64 is not released after line 71.\n**Note**: potential exception at line 67","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/GetChildrenRequest.java","tnLine":71,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.GetChildrenRequest.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 64 is not released after line 69.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/GetDataRequest.java","tnLine":69,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.GetDataRequest.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 64 is not released after line 71.\n**Note**: potential exception at line 67","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/GetDataRequest.java","tnLine":71,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.GetDataRequest.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 64 is not released after line 69.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/RemoveWatchesRequest.java","tnLine":69,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.RemoveWatchesRequest.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 64 is not released after line 71.\n**Note**: potential exception at line 67","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/RemoveWatchesRequest.java","tnLine":71,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.RemoveWatchesRequest.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 64 is not released after line 69.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/RequestHeader.java","tnLine":69,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.RequestHeader.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 64 is not released after line 71.\n**Note**: potential exception at line 67","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/RequestHeader.java","tnLine":71,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.RequestHeader.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 64 is not released after line 69.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/SetMaxChildrenRequest.java","tnLine":69,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.SetMaxChildrenRequest.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 64 is not released after line 71.\n**Note**: potential exception at line 67","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/SetMaxChildrenRequest.java","tnLine":71,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.SetMaxChildrenRequest.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 64 is not released after line 69.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/txn/CheckVersionTxn.java","tnLine":69,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.txn.CheckVersionTxn.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 64 is not released after line 71.\n**Note**: potential exception at line 67","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/txn/CheckVersionTxn.java","tnLine":71,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.txn.CheckVersionTxn.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 64 is not released after line 69.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/txn/SetMaxChildrenTxn.java","tnLine":69,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.txn.SetMaxChildrenTxn.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 64 is not released after line 71.\n**Note**: potential exception at line 67","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/txn/SetMaxChildrenTxn.java","tnLine":71,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.txn.SetMaxChildrenTxn.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 64 is not released after line 69.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/txn/Txn.java","tnLine":69,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.txn.Txn.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 64 is not released after line 71.\n**Note**: potential exception at line 67","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/txn/Txn.java","tnLine":71,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.txn.Txn.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 65 is not released after line 70.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/data/ACL.java","tnLine":70,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.data.ACL.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 65 is not released after line 72.\n**Note**: potential exception at line 68","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/data/ACL.java","tnLine":72,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.data.ACL.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 65 is not released after line 70.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/Create2Response.java","tnLine":70,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.Create2Response.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 65 is not released after line 72.\n**Note**: potential exception at line 68","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/Create2Response.java","tnLine":72,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.Create2Response.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 65 is not released after line 70.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/GetDataResponse.java","tnLine":70,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.GetDataResponse.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 65 is not released after line 72.\n**Note**: potential exception at line 68","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/GetDataResponse.java","tnLine":72,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.GetDataResponse.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `children` last assigned on line 71 could be null and is dereferenced at line 72.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/JLineZNodeCompleter.java","tnLine":72,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.JLineZNodeCompleter.completeZNode(java.lang.String,java.lang.String,java.util.List):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 72 is not released after line 85.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/GetChildrenResponse.java","tnLine":85,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.GetChildrenResponse.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 72 is not released after line 87.\n**Note**: potential exception at line 80","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/GetChildrenResponse.java","tnLine":87,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.GetChildrenResponse.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 72 is not released after line 85.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/GetEphemeralsResponse.java","tnLine":85,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.GetEphemeralsResponse.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 72 is not released after line 87.\n**Note**: potential exception at line 80","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/GetEphemeralsResponse.java","tnLine":87,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.GetEphemeralsResponse.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 73 is not released after line 86.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/txn/MultiTxn.java","tnLine":86,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.txn.MultiTxn.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 75 is not released after line 81.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/AuthPacket.java","tnLine":81,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.AuthPacket.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 75 is not released after line 83.\n**Note**: potential exception at line 78","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/AuthPacket.java","tnLine":83,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.AuthPacket.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 75 is not released after line 81.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/MultiHeader.java","tnLine":81,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.MultiHeader.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 75 is not released after line 83.\n**Note**: potential exception at line 78","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/MultiHeader.java","tnLine":83,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.MultiHeader.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 75 is not released after line 81.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/ReplyHeader.java","tnLine":81,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.ReplyHeader.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 75 is not released after line 83.\n**Note**: potential exception at line 78","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/ReplyHeader.java","tnLine":83,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.ReplyHeader.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 75 is not released after line 81.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/SetDataRequest.java","tnLine":81,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.SetDataRequest.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 75 is not released after line 83.\n**Note**: potential exception at line 78","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/SetDataRequest.java","tnLine":83,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.SetDataRequest.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 75 is not released after line 81.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/WatcherEvent.java","tnLine":81,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.WatcherEvent.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 75 is not released after line 83.\n**Note**: potential exception at line 78","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/WatcherEvent.java","tnLine":83,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.WatcherEvent.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 75 is not released after line 81.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/server/persistence/FileHeader.java","tnLine":81,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.persistence.FileHeader.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 75 is not released after line 83.\n**Note**: potential exception at line 78","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/server/persistence/FileHeader.java","tnLine":83,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.persistence.FileHeader.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 75 is not released after line 81.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/server/quorum/LearnerInfo.java","tnLine":81,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.LearnerInfo.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 75 is not released after line 83.\n**Note**: potential exception at line 78","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/server/quorum/LearnerInfo.java","tnLine":83,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.LearnerInfo.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 75 is not released after line 81.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/server/quorum/QuorumAuthPacket.java","tnLine":81,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.QuorumAuthPacket.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 75 is not released after line 83.\n**Note**: potential exception at line 78","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/server/quorum/QuorumAuthPacket.java","tnLine":83,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.QuorumAuthPacket.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 75 is not released after line 81.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/txn/SetDataTxn.java","tnLine":81,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.txn.SetDataTxn.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 75 is not released after line 83.\n**Note**: potential exception at line 78","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/txn/SetDataTxn.java","tnLine":83,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.txn.SetDataTxn.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `bytes` last assigned on line 95 could be null and is dereferenced at line 101.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/util/LogChopper.java","tnLine":101,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.util.LogChopper.chop(java.io.BufferedInputStream,java.io.BufferedOutputStream,long):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `getArchive(...)` at line 72 is not released after line 104.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/util/LogChopper.java","tnLine":104,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.util.LogChopper.chop(java.io.BufferedInputStream,java.io.BufferedOutputStream,long):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `getArchive(...)` at line 72 is not released after line 112.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/util/LogChopper.java","tnLine":112,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.util.LogChopper.chop(java.io.BufferedInputStream,java.io.BufferedOutputStream,long):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `getArchive(...)` at line 72 is not released after line 118.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/util/LogChopper.java","tnLine":118,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.util.LogChopper.chop(java.io.BufferedInputStream,java.io.BufferedOutputStream,long):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `getArchive(...)` at line 72 is not released after line 145.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/util/LogChopper.java","tnLine":145,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.util.LogChopper.chop(java.io.BufferedInputStream,java.io.BufferedOutputStream,long):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `getArchive(...)` at line 72 is not released after line 96.\n**Note**: potential exception at line 95","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/util/LogChopper.java","tnLine":96,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.util.LogChopper.chop(java.io.BufferedInputStream,java.io.BufferedOutputStream,long):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.apache.zookeeper.server.persistence.FileTxnLog` acquired by call to `FileTxnSnapLog(...)` at line 79 is not released after line 83.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/PurgeTxnLog.java","tnLine":83,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.PurgeTxnLog.purge(java.io.File,java.io.File,int):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.apache.zookeeper.server.persistence.FileTxnLog` acquired by call to `FileTxnSnapLog(...)` at line 79 is not released after line 84.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/PurgeTxnLog.java","tnLine":84,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.PurgeTxnLog.purge(java.io.File,java.io.File,int):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `getArchive(...)` at line 78 is not released after line 79.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ByteBufferInputStream.java","tnLine":79,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ByteBufferInputStream.byteBuffer2Record(java.nio.ByteBuffer,org.apache.jute.Record):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.apache.zookeeper.server.ByteBufferInputStream` acquired by call to `new()` at line 78 is not released after line 78.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ByteBufferInputStream.java","tnLine":78,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ByteBufferInputStream.byteBuffer2Record(java.nio.ByteBuffer,org.apache.jute.Record):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `getArchive(...)` at line 90 is not released after line 89.\n**Note**: potential exception at line 91","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/FileSnap.java","tnLine":89,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.persistence.FileSnap.deserialize(org.apache.zookeeper.server.DataTree,java.util.Map):long","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `getArchive(...)` at line 90 is not released after line 92.\n**Note**: potential exception at line 92","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/FileSnap.java","tnLine":92,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.persistence.FileSnap.deserialize(org.apache.zookeeper.server.DataTree,java.util.Map):long","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `ss` last assigned on line 94 could be null and is dereferenced at line 98.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/auth/SaslQuorumAuthServer.java","tnLine":98,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.auth.SaslQuorumAuthServer.authenticate(java.net.Socket,java.io.DataInputStream):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `new()` at line 91 is not released after line 136.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/auth/SaslQuorumAuthLearner.java","tnLine":136,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.auth.SaslQuorumAuthLearner.authenticate(java.net.Socket,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired to `din` by call to `new()` at line 91 is not released after line 138.\n**Note**: potential exception at line 101","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/auth/SaslQuorumAuthLearner.java","tnLine":138,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.auth.SaslQuorumAuthLearner.authenticate(java.net.Socket,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 84 is not released after line 100.\n**Note**: potential exception at line 92","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/GetChildren2Response.java","tnLine":100,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.GetChildren2Response.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 84 is not released after line 98.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/GetChildren2Response.java","tnLine":98,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.GetChildren2Response.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 85 is not released after line 99.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/GetACLResponse.java","tnLine":99,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.GetACLResponse.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 86 is not released after line 93.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/ConnectResponse.java","tnLine":93,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.ConnectResponse.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 86 is not released after line 95.\n**Note**: potential exception at line 89","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/ConnectResponse.java","tnLine":95,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.ConnectResponse.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 86 is not released after line 93.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/ReconfigRequest.java","tnLine":93,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.ReconfigRequest.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 86 is not released after line 95.\n**Note**: potential exception at line 89","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/ReconfigRequest.java","tnLine":95,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.ReconfigRequest.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 95 is not released after line 110.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/SetACLRequest.java","tnLine":110,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.SetACLRequest.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 95 is not released after line 112.\n**Note**: potential exception at line 98","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/SetACLRequest.java","tnLine":112,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.SetACLRequest.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 95 is not released after line 110.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/txn/SetACLTxn.java","tnLine":110,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.txn.SetACLTxn.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 95 is not released after line 112.\n**Note**: potential exception at line 98","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/txn/SetACLTxn.java","tnLine":112,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.txn.SetACLTxn.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 97 is not released after line 105.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/ConnectRequest.java","tnLine":105,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.ConnectRequest.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 97 is not released after line 107.\n**Note**: potential exception at line 100","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/ConnectRequest.java","tnLine":107,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.ConnectRequest.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 97 is not released after line 105.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/txn/TxnHeader.java","tnLine":105,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.txn.TxnHeader.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 97 is not released after line 107.\n**Note**: potential exception at line 100","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/txn/TxnHeader.java","tnLine":107,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.txn.TxnHeader.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `children` last assigned on line 125 could be null and is dereferenced at line 127.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/cli/DelQuotaCommand.java","tnLine":127,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.cli.DelQuotaCommand.delQuota(org.apache.zookeeper.ZooKeeper,java.lang.String,boolean,boolean):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `getArchive(...)` at line 102 is not released after line 109.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/SnapshotFormatter.java","tnLine":109,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.SnapshotFormatter.run(java.lang.String,boolean,boolean):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getProperty(\"zookeeper.SASLAuthenticationProvider.superPassword\")` could be null and is dereferenced at line 103.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/auth/SaslServerCallbackHandler.java","tnLine":103,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.auth.SaslServerCallbackHandler.handlePasswordCallback(javax.security.auth.callback.PasswordCallback):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 106 is not released after line 122.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/CreateRequest.java","tnLine":122,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.CreateRequest.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 106 is not released after line 124.\n**Note**: potential exception at line 109","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/CreateRequest.java","tnLine":124,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.CreateRequest.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 106 is not released after line 122.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/server/quorum/QuorumPacket.java","tnLine":122,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.QuorumPacket.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 106 is not released after line 124.\n**Note**: potential exception at line 109","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/server/quorum/QuorumPacket.java","tnLine":124,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.QuorumPacket.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 106 is not released after line 122.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/txn/CreateContainerTxn.java","tnLine":122,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.txn.CreateContainerTxn.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 106 is not released after line 124.\n**Note**: potential exception at line 109","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/txn/CreateContainerTxn.java","tnLine":124,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.txn.CreateContainerTxn.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 106 is not released after line 122.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/txn/CreateTxnV0.java","tnLine":122,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.txn.CreateTxnV0.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 106 is not released after line 124.\n**Note**: potential exception at line 109","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/txn/CreateTxnV0.java","tnLine":124,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.txn.CreateTxnV0.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileInputStream` acquired by call to `FileInputStream(...)` at line 105 is not released after line 109.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/SnapStream.java","tnLine":109,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.persistence.SnapStream.getInputStream(java.io.File):java.util.zip.CheckedInputStream","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.lang.Process` acquired by call to `exec(...)` at line 121 is not released after line 124.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/util/OSMXBean.java","tnLine":124,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.util.OSMXBean.getOpenFileDescriptorCount():long","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `osname` last assigned on line 113 could be null and is dereferenced at line 114.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/common/PathUtils.java","tnLine":114,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.common.PathUtils.normalizeFileSystemPath(java.lang.String):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 117 is not released after line 134.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/CreateTTLRequest.java","tnLine":134,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.CreateTTLRequest.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 117 is not released after line 136.\n**Note**: potential exception at line 120","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/CreateTTLRequest.java","tnLine":136,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.CreateTTLRequest.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 117 is not released after line 134.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/txn/CreateTTLTxn.java","tnLine":134,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.txn.CreateTTLTxn.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 117 is not released after line 136.\n**Note**: potential exception at line 120","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/txn/CreateTTLTxn.java","tnLine":136,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.txn.CreateTTLTxn.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 117 is not released after line 134.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/txn/CreateTxn.java","tnLine":134,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.txn.CreateTxn.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 117 is not released after line 136.\n**Note**: potential exception at line 120","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/txn/CreateTxn.java","tnLine":136,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.txn.CreateTxn.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `parseCommandLine(...)` at line 114 is not released after line 121.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/TxnLogToolkit.java","tnLine":121,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.persistence.TxnLogToolkit.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `gcTimesBeforeSleep.get(name)` could be null and is dereferenced by call to `subtract(...)` at line 128.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/util/JvmPauseMonitor.java","tnLine":128,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.util.JvmPauseMonitor.formatMessage(long,java.util.HashMap,java.util.HashMap):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `children` last assigned on line 133 could be null and is dereferenced at line 134.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ZKUtil.java","tnLine":134,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ZKUtil.listSubTreeBFS(org.apache.zookeeper.ZooKeeper,java.lang.String):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `getArchive(...)` at line 138 is not released after line 145.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxnSocket.java","tnLine":145,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxnSocket.readConnectResult():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.apache.zookeeper.server.ByteBufferInputStream` acquired by call to `new()` at line 137 is not released after line 138.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxnSocket.java","tnLine":138,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxnSocket.readConnectResult():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 129 is not released after line 133.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/SnapStream.java","tnLine":133,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.persistence.SnapStream.getOutputStream(java.io.File):java.util.zip.CheckedOutputStream","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired to `pwriter` by call to `new()` at line 138 is not released after line 142.\n**Note**: potential exception at line 140","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/SessionTrackerImpl.java","tnLine":142,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.SessionTrackerImpl.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 141 is not released after line 153.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/data/StatPersisted.java","tnLine":153,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.data.StatPersisted.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 141 is not released after line 155.\n**Note**: potential exception at line 144","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/data/StatPersisted.java","tnLine":155,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.data.StatPersisted.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 143 is not released after line 177.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/SetWatches.java","tnLine":177,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.SetWatches.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 143 is not released after line 179.\n**Note**: potential exception at line 146","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/proto/SetWatches.java","tnLine":179,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.proto.SetWatches.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `QuorumHierarchical.serverWeight.get(valueOf(id))` could be null and is dereferenced at line 145.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/flexible/QuorumHierarchical.java","tnLine":145,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.flexible.QuorumHierarchical.getWeight(long):long","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `children` last assigned on line 152 could be null and is dereferenced at line 153.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/cli/DelQuotaCommand.java","tnLine":153,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.cli.DelQuotaCommand.trimProcQuotas(org.apache.zookeeper.ZooKeeper,java.lang.String):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.lang.Process` acquired by call to `exec(...)` at line 161 is not released after line 163.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/util/OSMXBean.java","tnLine":163,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.util.OSMXBean.getMaxFileDescriptorCount():long","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `getArchive(...)` at line 158 is not released after line 159.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/auth/SaslQuorumAuthServer.java","tnLine":159,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.auth.SaslQuorumAuthServer.receive(java.io.DataInputStream):byte[]","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 163 is not released after line 177.","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/data/Stat.java","tnLine":177,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.data.Stat.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `CsvOutputArchive(...)` at line 163 is not released after line 179.\n**Note**: potential exception at line 166","tnFile":"zookeeper-jute/target/main/java/org/apache/zookeeper/data/Stat.java","tnLine":179,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.data.Stat.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `getArchive(...)` at line 163 is not released after line 164.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/auth/SaslQuorumAuthLearner.java","tnLine":164,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.auth.SaslQuorumAuthLearner.receive(java.io.DataInputStream):org.apache.zookeeper.server.quorum.QuorumAuthPacket","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `bytes` last assigned on line 186 could be null and is dereferenced at line 191.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/TxnLogToolkit.java","tnLine":191,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.persistence.TxnLogToolkit.dump(java.util.Scanner):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `response.getStat()` could be null and is dereferenced by call to `copyStat(...)` at line 190.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/admin/ZooKeeperAdmin.java","tnLine":190,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.admin.ZooKeeperAdmin.reconfigure(java.lang.String,java.lang.String,java.lang.String,long,org.apache.zookeeper.data.Stat):byte[]","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `children` last assigned on line 200 could be null and is dereferenced at line 205.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/cli/SetQuotaCommand.java","tnLine":205,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.cli.SetQuotaCommand.checkIfParentQuota(org.apache.zookeeper.ZooKeeper,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `parent` last assigned on line 212 could be null and is dereferenced at line 209.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/common/PathTrie.java","tnLine":209,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.common.PathTrie.addPath(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `parent` last assigned on line 212 could be null and is dereferenced at line 214.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/common/PathTrie.java","tnLine":214,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.common.PathTrie.addPath(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `normalisedHost` last assigned on line 199 could be null and is dereferenced at line 204.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/common/ZKHostnameVerifier.java","tnLine":204,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.common.ZKHostnameVerifier.matchIPv6Address(java.lang.String,java.util.List):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `parent` last assigned on line 237 could be null and is dereferenced at line 233.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/common/PathTrie.java","tnLine":233,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.common.PathTrie.deletePath(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `parent` last assigned on line 237 could be null and is dereferenced at line 240.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/common/PathTrie.java","tnLine":240,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.common.PathTrie.deletePath(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.apache.zookeeper.server.persistence.FileTxnLog` acquired by call to `new()` at line 228 is not released after line 240.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java","tnLine":240,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.persistence.FileTxnSnapLog.restore(org.apache.zookeeper.server.DataTree,java.util.concurrent.ConcurrentHashMap,org.apache.zookeeper.server.persistence.FileTxnSnapLog$PlayBackListener):long","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.apache.zookeeper.server.persistence.FileTxnLog` acquired by call to `new()` at line 228 is not released after line 260.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java","tnLine":260,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.persistence.FileTxnSnapLog.restore(org.apache.zookeeper.server.DataTree,java.util.concurrent.ConcurrentHashMap,org.apache.zookeeper.server.persistence.FileTxnSnapLog$PlayBackListener):long","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired by call to `new()` at line 259 is not released after line 267.\n**Note**: potential exception at line 267","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/NettyServerCnxn.java","tnLine":267,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.NettyServerCnxn.checkFourLetterWord(io.netty.channel.Channel,io.netty.buffer.ByteBuf,int):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired by call to `new()` at line 259 is not released after line 280.\n**Note**: potential exception at line 280","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/NettyServerCnxn.java","tnLine":280,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.NettyServerCnxn.checkFourLetterWord(io.netty.channel.Channel,io.netty.buffer.ByteBuf,int):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired by call to `new()` at line 259 is not released after line 284.\n**Note**: potential exception at line 284","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/NettyServerCnxn.java","tnLine":284,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.NettyServerCnxn.checkFourLetterWord(io.netty.channel.Channel,io.netty.buffer.ByteBuf,int):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `parent` last assigned on line 269 could be null and is dereferenced at line 271.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/common/PathTrie.java","tnLine":271,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.common.PathTrie.findMaxPrefix(java.lang.String):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `new()` at line 254 is not released after line 256.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/ObserverMaster.java","tnLine":256,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.ObserverMaster.revalidateLearnerSession(org.apache.zookeeper.server.quorum.QuorumPacket):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired to `dis` by call to `new()` at line 254 is not released after line 279.\n**Note**: potential exception at line 255","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/ObserverMaster.java","tnLine":279,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.ObserverMaster.revalidateLearnerSession(org.apache.zookeeper.server.quorum.QuorumPacket):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired by call to `new()` at line 305 is not released after line 304.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Learner.java","tnLine":304,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.Learner.connectToLeader(java.net.InetSocketAddress,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStream` acquired to `Learner.sock` by call to `createSocket()` at line 258 is not released after line 296.\n**Note**: potential exception at line 270","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Learner.java","tnLine":296,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.Learner.connectToLeader(java.net.InetSocketAddress,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `new()` at line 285 is not released after line 287.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/ObserverMaster.java","tnLine":287,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.ObserverMaster.revalidateSession(org.apache.zookeeper.server.quorum.QuorumPacket,org.apache.zookeeper.server.quorum.LearnerHandler):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired to `dis` by call to `new()` at line 285 is not released after line 295.\n**Note**: potential exception at line 286","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/ObserverMaster.java","tnLine":295,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.ObserverMaster.revalidateSession(org.apache.zookeeper.server.quorum.QuorumPacket,org.apache.zookeeper.server.quorum.LearnerHandler):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `QuorumHierarchical.serverWeight.get(sid)` could be null and is dereferenced at line 304.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/flexible/QuorumHierarchical.java","tnLine":304,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.flexible.QuorumHierarchical.computeGroupWeight():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.apache.zookeeper.admin.ZooKeeperAdmin` acquired by call to `ZooKeeperMain(...)` at line 300 is not released after line 301.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ZooKeeperMain.java","tnLine":301,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ZooKeeperMain.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.apache.zookeeper.server.persistence.FileTxnLog` acquired by call to `FileTxnSnapLog(...)` at line 323 is not released after line 323.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java","tnLine":323,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZooKeeperServer.<init>(java.io.File,java.io.File,int)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `QuorumHierarchical.serverWeight.get(valueOf(sid))` could be null and is dereferenced at line 339.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/flexible/QuorumHierarchical.java","tnLine":339,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.flexible.QuorumHierarchical.containsQuorum(java.util.Set):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `new()` at line 367 is not released after line 369.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/LearnerHandler.java","tnLine":369,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.LearnerHandler.packetToString(org.apache.zookeeper.server.quorum.QuorumPacket):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.net.Socket` acquired by call to `Socket()` at line 333 is not released after line 336.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java","tnLine":336,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.QuorumCnxManager.testInitiateConnection(long):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.apache.zookeeper.server.persistence.FileTxnLog` acquired by call to `new()` at line 344 is not released after line 345.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java","tnLine":345,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.persistence.FileTxnSnapLog.readTxnLog(long,boolean):org.apache.zookeeper.server.persistence.TxnLog$TxnIterator","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `children` last assigned on line 401 could be null and is dereferenced at line 402.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ZooKeeperMain.java","tnLine":402,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ZooKeeperMain.trimProcQuotas(org.apache.zookeeper.ZooKeeper,java.lang.String):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.apache.zookeeper.server.persistence.FileTxnLog` acquired by call to `new()` at line 404 is not released after line 405.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java","tnLine":405,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.persistence.FileTxnSnapLog.getLastLoggedZxid():long","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `new()` at line 425 is not released after line 441.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java","tnLine":441,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.QuorumCnxManager.startConnection(java.net.Socket,java.lang.Long):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `new()` at line 425 is not released after line 460.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java","tnLine":460,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.QuorumCnxManager.startConnection(java.net.Socket,java.lang.Long):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired by call to `new()` at line 430 is not released after line 433.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Leader.java","tnLine":433,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.Leader$LearnerCnxAcceptor.run():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `children` last assigned on line 451 could be null and is dereferenced at line 453.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ZooKeeperMain.java","tnLine":453,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ZooKeeperMain.delQuota(org.apache.zookeeper.ZooKeeper,java.lang.String,boolean,boolean):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `ClientCnxnSocketNetty$ZKClientPipelineFactory.sslContext` last assigned on line 454 could be null and is dereferenced at line 455.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxnSocketNetty.java","tnLine":455,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxnSocketNetty$ZKClientPipelineFactory.initSSL(io.netty.channel.ChannelPipeline):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.apache.zookeeper.server.persistence.FileTxnLog` acquired to `truncLog` by call to `new()` at line 462 is not released after line 473.\n**Note**: potential exception at line 463","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java","tnLine":473,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.persistence.FileTxnSnapLog.truncateLog(long):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `children` last assigned on line 476 could be null and is dereferenced at line 481.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ZooKeeperMain.java","tnLine":481,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ZooKeeperMain.checkIfParentQuota(org.apache.zookeeper.ZooKeeper,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired by call to `new()` at line 475 is not released after line 477.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/ObserverMaster.java","tnLine":477,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.ObserverMaster.run():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired by call to `new()` at line 497 is not released after line 505.\n**Note**: potential exception at line 505","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/NIOServerCnxn.java","tnLine":505,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.NIOServerCnxn.checkFourLetterWord(java.nio.channels.SelectionKey,int):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired by call to `new()` at line 497 is not released after line 516.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/NIOServerCnxn.java","tnLine":516,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.NIOServerCnxn.checkFourLetterWord(java.nio.channels.SelectionKey,int):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired by call to `new()` at line 497 is not released after line 522.\n**Note**: potential exception at line 522","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/NIOServerCnxn.java","tnLine":522,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.NIOServerCnxn.checkFourLetterWord(java.nio.channels.SelectionKey,int):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired by call to `new()` at line 497 is not released after line 526.\n**Note**: potential exception at line 526","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/NIOServerCnxn.java","tnLine":526,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.NIOServerCnxn.checkFourLetterWord(java.nio.channels.SelectionKey,int):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `getArchive(...)` at line 499 is not released after line 501.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/FileTxnLog.java","tnLine":501,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.persistence.FileTxnLog.readHeader(java.io.File):org.apache.zookeeper.server.persistence.FileHeader","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.apache.zookeeper.server.persistence.FileTxnLog$FileTxnIterator` acquired to `itr` by call to `FileTxnLog$FileTxnIterator(...)` at line 517 is not released after line 522.\n**Note**: potential exception at line 518","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/FileTxnLog.java","tnLine":522,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.persistence.FileTxnLog.getDbId():long","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getProperty(\"java.specification.version\")` could be null and is dereferenced by call to `getDefaultCipherSuitesForJavaVersion(...)` at line 527.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/common/X509Util.java","tnLine":527,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.common.X509Util.getDefaultCipherSuites():java.lang.String[]","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `new()` at line 637 is not released after line 639.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Learner.java","tnLine":639,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.Learner.revalidate(org.apache.zookeeper.server.quorum.QuorumPacket):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired to `dis` by call to `new()` at line 637 is not released after line 654.\n**Note**: potential exception at line 638","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Learner.java","tnLine":654,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.Learner.revalidate(org.apache.zookeeper.server.quorum.QuorumPacket):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.net.Socket` acquired to `sock` by call to `Socket()` at line 658 is not released after line 673.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java","tnLine":673,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.QuorumCnxManager.connectOne(long,java.net.InetSocketAddress):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `goToNextLog()` at line 671 is not released after line 672.\n**Note**: potential exception at line 672","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/FileTxnLog.java","tnLine":672,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.persistence.FileTxnLog$FileTxnIterator.init():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `lastSeenQV` last assigned on line 713 could be null and is dereferenced at line 714.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java","tnLine":714,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.QuorumCnxManager.connectOne(long):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired by call to `new()` at line 726 is not released after line 726.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/FileTxnLog.java","tnLine":726,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.persistence.FileTxnLog$FileTxnIterator.createInputArchive(java.io.File):org.apache.jute.InputArchive","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `getArchive(...)` at line 842 is not released after line 946.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java","tnLine":946,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxn$SendThread.readResponse(java.nio.ByteBuffer):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.apache.zookeeper.server.ByteBufferInputStream` acquired by call to `new()` at line 840 is not released after line 842.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java","tnLine":842,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxn$SendThread.readResponse(java.nio.ByteBuffer):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStream` acquired to `client` by call to `accept()` at line 899 is not released after line 899.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java","tnLine":899,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.QuorumCnxManager$Listener.run():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `getArchive(...)` at line 1134 is not released after line 1146.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java","tnLine":1146,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZooKeeperServer.processConnectRequest(org.apache.zookeeper.server.NIOServerCnxn,java.nio.ByteBuffer):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.apache.zookeeper.server.ByteBufferInputStream` acquired by call to `new()` at line 1134 is not released after line 1134.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java","tnLine":1134,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZooKeeperServer.processConnectRequest(org.apache.zookeeper.server.NIOServerCnxn,java.nio.ByteBuffer):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `data` last assigned on line 1146 could be null and is dereferenced at line 1147.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Leader.java","tnLine":1147,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.Leader.propose(org.apache.zookeeper.server.Request):org.apache.zookeeper.server.quorum.Leader$Proposal","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `getArchive(...)` at line 1254 is not released after line 1256.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java","tnLine":1256,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZooKeeperServer.processPacket(org.apache.zookeeper.server.NIOServerCnxn,java.nio.ByteBuffer):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.apache.zookeeper.server.ByteBufferInputStream` acquired by call to `new()` at line 1253 is not released after line 1254.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java","tnLine":1254,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZooKeeperServer.processPacket(org.apache.zookeeper.server.NIOServerCnxn,java.nio.ByteBuffer):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `sock.getOutputStream()` could be null and is dereferenced at line 1326.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java","tnLine":1326,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxn$SendThread.pingRwServer():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `__new(org.apache.zookeeper.client.ConnectStringParser).getServerAddresses()` could be null and is dereferenced by call to `StaticHostProvider(...)` at line 1315.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ZooKeeper.java","tnLine":1315,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ZooKeeper.createDefaultHostProvider(java.lang.String):org.apache.zookeeper.client.HostProvider","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `clientToken` last assigned on line 1336 could be null and is dereferenced at line 1337.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java","tnLine":1337,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZooKeeperServer.processSasl(java.nio.ByteBuffer,org.apache.zookeeper.server.NIOServerCnxn):org.apache.jute.Record","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `new()` at line 1628 is not released after line 1630.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Leader.java","tnLine":1630,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.Leader.revalidateSession(org.apache.zookeeper.server.quorum.QuorumPacket,org.apache.zookeeper.server.quorum.LearnerHandler):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `response.getStat()` could be null and is dereferenced at line 2024.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ZooKeeper.java","tnLine":2024,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ZooKeeper.exists(java.lang.String,org.apache.zookeeper.Watcher):org.apache.zookeeper.data.Stat","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `response.getStat()` could be null and is dereferenced by call to `copyStat(...)` at line 2134.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ZooKeeper.java","tnLine":2134,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ZooKeeper.getData(java.lang.String,org.apache.zookeeper.Watcher,org.apache.zookeeper.data.Stat):byte[]","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `response.getStat()` could be null and is dereferenced by call to `copyStat(...)` at line 2240.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ZooKeeper.java","tnLine":2240,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ZooKeeper.getConfig(org.apache.zookeeper.Watcher,org.apache.zookeeper.data.Stat):byte[]","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `QuorumPeer.secureCnxnFactory.getLocalAddress()` could be null and is dereferenced by call to `formatInetAddr(...)` at line 2241.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java","tnLine":2241,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.QuorumPeer.updateThreadName():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `response.getStat()` could be null and is dereferenced by call to `copyStat(...)` at line 2413.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ZooKeeper.java","tnLine":2413,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ZooKeeper.getACL(java.lang.String,org.apache.zookeeper.data.Stat):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `response.getStat()` could be null and is dereferenced by call to `copyStat(...)` at line 2673.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ZooKeeper.java","tnLine":2673,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ZooKeeper.getChildren(java.lang.String,org.apache.zookeeper.Watcher,org.apache.zookeeper.data.Stat):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int DataTree.aclCacheSize()` indirectly reads without synchronization from container `this.aclCache.aclKeyMap` via call to `size`. Potentially races with write in method `DataTree.setACL(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/DataTree.java","tnLine":785,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.DataTree.aclCacheSize():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List ZKDatabase.aclForNode(DataNode)` reads without synchronization from `this.dataTree`. Potentially races with write in method `ZKDatabase.clear()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZKDatabase.java","tnLine":394,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZKDatabase.aclForNode(org.apache.zookeeper.server.DataNode):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void WatcherCleaner.addDeadWatcher(int)` indirectly writes to field `this.RATE_LOGGER.count` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/watch/WatcherCleaner.java","tnLine":106,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.watch.WatcherCleaner.addDeadWatcher(int):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ObserverMaster.addLearnerHandler(LearnerHandler)` reads without synchronization from `this.listenerRunning`. Potentially races with write in method `ObserverMaster.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/ObserverMaster.java","tnLine":163,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.ObserverMaster.addLearnerHandler(org.apache.zookeeper.server.quorum.LearnerHandler):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `int UnifiedServerSocket$UnifiedInputStream.available()` indirectly writes to field `this.realInputStream` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/UnifiedServerSocket.java","tnLine":711,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.UnifiedServerSocket$UnifiedInputStream.available():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void PrepRequestProcessor.checkACL(ZooKeeperServer,ServerCnxn,List,int,List,String,List)` indirectly reads without synchronization from `auth.ProviderRegistry.initialized`. Potentially races with write in method `PrepRequestProcessor.pRequest2Txn(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/PrepRequestProcessor.java","tnLine":324,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.PrepRequestProcessor.checkACL(org.apache.zookeeper.server.ZooKeeperServer,org.apache.zookeeper.server.ServerCnxn,java.util.List,int,java.util.List,java.lang.String,java.util.List):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean LeaderZooKeeperServer.checkIfValidGlobalSession(long,int)` reads without synchronization from `this.sessionTracker`. Potentially races with write in method `LeaderZooKeeperServer.startup()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/LeaderZooKeeperServer.java","tnLine":131,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.LeaderZooKeeperServer.checkIfValidGlobalSession(long,int):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ZKDatabase.clear()` writes to field `this.dataTree` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZKDatabase.java","tnLine":151,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZKDatabase.clear():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ZKDatabase.clear()` reads without synchronization from `this.dataTree`. Potentially races with write in method `ZKDatabase.truncateLog(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZKDatabase.java","tnLine":150,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZKDatabase.clear():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ZKDatabase.clear()` writes to field `this.minCommittedLog` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZKDatabase.java","tnLine":145,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZKDatabase.clear():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ZKDatabase.clear()` writes to field `this.maxCommittedLog` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZKDatabase.java","tnLine":146,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZKDatabase.clear():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ClientCnxn.close()` indirectly writes to field `p.finished` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java","tnLine":1509,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxn.close():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void UnifiedServerSocket$UnifiedInputStream.close()` indirectly writes to field `this.realInputStream` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/UnifiedServerSocket.java","tnLine":716,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.UnifiedServerSocket$UnifiedInputStream.close():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ClientCnxnSocketNIO.connect(InetSocketAddress)` writes to field `this.incomingBuffer` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxnSocketNIO.java","tnLine":297,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxnSocketNIO.connect(java.net.InetSocketAddress):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ClientCnxnSocketNIO.connect(InetSocketAddress)` indirectly writes to field `this.sendThread.isFirstConnect` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxnSocketNIO.java","tnLine":285,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxnSocketNIO.connect(java.net.InetSocketAddress):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ClientCnxnSocketNIO.connect(InetSocketAddress)` writes to field `this.initialized` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxnSocketNIO.java","tnLine":291,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxnSocketNIO.connect(java.net.InetSocketAddress):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ClientCnxnSocketNetty.connect(InetSocketAddress)` writes to field `this.firstConnect` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxnSocketNetty.java","tnLine":132,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxnSocketNetty.connect(java.net.InetSocketAddress):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean ZKDatabase.containsWatcher(String,Watcher$WatcherType,Watcher)` reads without synchronization from `this.dataTree`. Potentially races with write in method `ZKDatabase.clear()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZKDatabase.java","tnLine":665,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZKDatabase.containsWatcher(java.lang.String,org.apache.zookeeper.Watcher$WatcherType,org.apache.zookeeper.Watcher):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `String ZooKeeper.create(String,byte[],List,CreateMode)` indirectly writes to field `p.finished` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ZooKeeper.java","tnLine":1537,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ZooKeeper.create(java.lang.String,byte[],java.util.List,org.apache.zookeeper.CreateMode):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `String ZooKeeper.create(String,byte[],List,CreateMode,Stat)` indirectly writes to field `p.finished` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ZooKeeper.java","tnLine":1609,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ZooKeeper.create(java.lang.String,byte[],java.util.List,org.apache.zookeeper.CreateMode,org.apache.zookeeper.data.Stat):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `String ZooKeeper.create(String,byte[],List,CreateMode,Stat,long)` indirectly writes to field `p.finished` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ZooKeeper.java","tnLine":1634,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ZooKeeper.create(java.lang.String,byte[],java.util.List,org.apache.zookeeper.CreateMode,org.apache.zookeeper.data.Stat,long):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void DataTree.createNode(String,byte[],List,long,int,long,long)` indirectly reads with synchronization from container `this.ephemerals` via call to `get`. Potentially races with unsynchronized write in method `DataTree.deserialize(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/DataTree.java","tnLine":411,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.DataTree.createNode(java.lang.String,byte[],java.util.List,long,int,long,long):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void DataTree.createNode(String,byte[],List,long,int,long,long,Stat)` indirectly writes to field `parent.property` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/DataTree.java","tnLine":515,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.DataTree.createNode(java.lang.String,byte[],java.util.List,long,int,long,long,org.apache.zookeeper.data.Stat):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void DataTree.createNode(String,byte[],List,long,int,long,long,Stat)` reads with synchronization from container `this.ephemerals` via call to `get`. Potentially races with unsynchronized write in method `DataTree.deserialize(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/DataTree.java","tnLine":496,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.DataTree.createNode(java.lang.String,byte[],java.util.List,long,int,long,long,org.apache.zookeeper.data.Stat):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `long ZooKeeperServer.createSession(ServerCnxn,byte[],int)` reads without synchronization from `this.sessionTracker`. Potentially races with write in method `ZooKeeperServer.startup()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java","tnLine":786,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZooKeeperServer.createSession(org.apache.zookeeper.server.ServerCnxn,byte[],int):long","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ZooKeeperServer.createSessionTracker()` writes to field `this.sessionTracker` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java","tnLine":598,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZooKeeperServer.createSessionTracker():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void LeaderZooKeeperServer.createSessionTracker()` writes to field `this.sessionTracker` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/LeaderZooKeeperServer.java","tnLine":119,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.LeaderZooKeeperServer.createSessionTracker():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ZooKeeper.delete(String,int)` indirectly writes to field `p.finished` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ZooKeeper.java","tnLine":1790,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ZooKeeper.delete(java.lang.String,int):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void DataTree.deleteNode(String,long)` reads with synchronization from container `this.ephemerals` via call to `get`. Potentially races with unsynchronized write in method `DataTree.deserialize(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/DataTree.java","tnLine":588,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.DataTree.deleteNode(java.lang.String,long):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void DataTree.deserialize(InputArchive,String)` writes to field `this.root` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/DataTree.java","tnLine":1297,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.DataTree.deserialize(org.apache.jute.InputArchive,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void DataTree.deserialize(InputArchive,String)` mutates container `this.ephemerals` via call to `put` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/DataTree.java","tnLine":1316,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.DataTree.deserialize(org.apache.jute.InputArchive,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void DataTree.deserialize(InputArchive,String)` reads without synchronization from `this.root`. Potentially races with write in method `DataTree.deserialize(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/DataTree.java","tnLine":1323,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.DataTree.deserialize(org.apache.jute.InputArchive,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void DataTree.deserialize(InputArchive,String)` reads without synchronization from container `this.ephemerals` via call to `get`. Potentially races with write in method `DataTree.processTxn(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/DataTree.java","tnLine":1313,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.DataTree.deserialize(org.apache.jute.InputArchive,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void DataTree.deserialize(InputArchive,String)` indirectly writes to field `parent.property` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/DataTree.java","tnLine":1331,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.DataTree.deserialize(org.apache.jute.InputArchive,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `long FileSnap.deserialize(DataTree,Map)` writes to field `this.lastSnapshotInfo` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/FileSnap.java","tnLine":103,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.persistence.FileSnap.deserialize(org.apache.zookeeper.server.DataTree,java.util.Map):long","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ZKDatabase.deserializeSnapshot(InputArchive)` indirectly reads without synchronization from `this.dataTree`. Potentially races with write in method `ZKDatabase.clear()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZKDatabase.java","tnLine":583,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZKDatabase.deserializeSnapshot(org.apache.jute.InputArchive):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ZKDatabase.deserializeSnapshot(InputArchive)` indirectly writes to field `this.dataTree` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZKDatabase.java","tnLine":582,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZKDatabase.deserializeSnapshot(org.apache.jute.InputArchive):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ClientCnxnSocketNIO.doIO(Queue,ClientCnxn)` reads without synchronization from `this.sockKey`. Potentially races with write in method `ClientCnxnSocketNIO.registerAndConnect(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxnSocketNIO.java","tnLine":70,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxnSocketNIO.doIO(java.util.Queue,org.apache.zookeeper.ClientCnxn):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ClientCnxnSocketNIO.doIO(Queue,ClientCnxn)` indirectly writes to field `this.sendThread.this$0.connectTimeout` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxnSocketNIO.java","tnLine":88,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxnSocketNIO.doIO(java.util.Queue,org.apache.zookeeper.ClientCnxn):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ClientCnxnSocketNIO.doIO(Queue,ClientCnxn)` indirectly reads with synchronization from `this.now`. Potentially races with unsynchronized write in method `ClientCnxnSocketNIO.doTransport(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxnSocketNIO.java","tnLine":104,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxnSocketNIO.doIO(java.util.Queue,org.apache.zookeeper.ClientCnxn):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ClientCnxnSocketNIO.doIO(Queue,ClientCnxn)` reads without synchronization from `this.incomingBuffer`. Potentially races with write in method `ClientCnxnSocketNIO.doTransport(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxnSocketNIO.java","tnLine":75,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxnSocketNIO.doIO(java.util.Queue,org.apache.zookeeper.ClientCnxn):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ClientCnxnSocketNIO.doIO(Queue,ClientCnxn)` writes to field `this.incomingBuffer` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxnSocketNIO.java","tnLine":97,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxnSocketNIO.doIO(java.util.Queue,org.apache.zookeeper.ClientCnxn):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ClientCnxnSocketNIO.doIO(Queue,ClientCnxn)` indirectly reads without synchronization from `this.sendThread.this$0.zooKeeperSaslClient.gotLastPacket`. Potentially races with write in method `ClientCnxnSocketNIO.doTransport(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxnSocketNIO.java","tnLine":91,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxnSocketNIO.doIO(java.util.Queue,org.apache.zookeeper.ClientCnxn):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ClientCnxnSocketNIO.doIO(Queue,ClientCnxn)` indirectly writes to field `this.lastHeard` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxnSocketNIO.java","tnLine":98,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxnSocketNIO.doIO(java.util.Queue,org.apache.zookeeper.ClientCnxn):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ClientCnxnSocketNIO.doIO(Queue,ClientCnxn)` reads with synchronization from `this.initialized`. Potentially races with unsynchronized write in method `ClientCnxnSocketNIO.doIO(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxnSocketNIO.java","tnLine":143,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxnSocketNIO.doIO(java.util.Queue,org.apache.zookeeper.ClientCnxn):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ClientCnxnSocketNIO.doIO(Queue,ClientCnxn)` indirectly reads with synchronization from `this.sendThread.this$0.sessionId`. Potentially races with unsynchronized write in method `ClientCnxnSocketNIO.doIO(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxnSocketNIO.java","tnLine":101,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxnSocketNIO.doIO(java.util.Queue,org.apache.zookeeper.ClientCnxn):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ClientCnxnSocketNIO.doIO(Queue,ClientCnxn)` writes to field `this.initialized` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxnSocketNIO.java","tnLine":99,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxnSocketNIO.doIO(java.util.Queue,org.apache.zookeeper.ClientCnxn):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ClientCnxnSocketNIO.doTransport(int,Queue,ClientCnxn)` indirectly writes to field `this.sendThread.isFirstConnect` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxnSocketNIO.java","tnLine":360,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(int,java.util.Queue,org.apache.zookeeper.ClientCnxn):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ClientCnxnSocketNIO.doTransport(int,Queue,ClientCnxn)` indirectly writes to field `this.lastHeard` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxnSocketNIO.java","tnLine":358,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(int,java.util.Queue,org.apache.zookeeper.ClientCnxn):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ClientCnxnSocketNIO.doTransport(int,Queue,ClientCnxn)` indirectly writes to field `this.now` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxnSocketNIO.java","tnLine":353,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(int,java.util.Queue,org.apache.zookeeper.ClientCnxn):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ClientCnxnSocketNIO.doTransport(int,Queue,ClientCnxn)` indirectly reads with synchronization from `this.incomingBuffer`. Potentially races with unsynchronized write in method `ClientCnxnSocketNIO.doIO(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxnSocketNIO.java","tnLine":363,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(int,java.util.Queue,org.apache.zookeeper.ClientCnxn):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ClientCnxnSocketNIO.doTransport(int,Queue,ClientCnxn)` indirectly writes to field `this.localSocketAddress` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxnSocketNIO.java","tnLine":359,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(int,java.util.Queue,org.apache.zookeeper.ClientCnxn):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ClientCnxnSocketNetty.doTransport(int,Queue,ClientCnxn)` reads without synchronization from `this.firstConnect`. Potentially races with write in method `ClientCnxnSocketNetty.connect(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxnSocketNetty.java","tnLine":269,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxnSocketNetty.doTransport(int,java.util.Queue,org.apache.zookeeper.ClientCnxn):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ClientCnxnSocketNetty.doTransport(int,Queue,ClientCnxn)` indirectly reads without synchronization from `this.channel`. Potentially races with write in method `ClientCnxnSocketNetty.cleanup()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxnSocketNetty.java","tnLine":294,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxnSocketNetty.doTransport(int,java.util.Queue,org.apache.zookeeper.ClientCnxn):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ReadOnlyZooKeeperServer.dumpConf(PrintWriter)` indirectly reads without synchronization from `this.secureServerCnxnFactory`. Potentially races with write in method `ReadOnlyZooKeeperServer.startup()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/ReadOnlyZooKeeperServer.java","tnLine":160,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.ReadOnlyZooKeeperServer.dumpConf(java.io.PrintWriter):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void DataTree.dumpEphemerals(PrintWriter)` reads without synchronization from container `this.ephemerals` via call to `keySet`. Potentially races with write in method `DataTree.processTxn(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/DataTree.java","tnLine":1389,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.DataTree.dumpEphemerals(java.io.PrintWriter):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ZKDatabase.dumpEphemerals(PrintWriter)` reads without synchronization from `this.dataTree`. Potentially races with write in method `ZKDatabase.clear()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZKDatabase.java","tnLine":418,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZKDatabase.dumpEphemerals(java.io.PrintWriter):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ZooKeeperServer.dumpEphemerals(PrintWriter)` indirectly reads without synchronization from `this.zkDb.dataTree`. Potentially races with write in method `ZooKeeperServer.shutdown(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java","tnLine":1115,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZooKeeperServer.dumpEphemerals(java.io.PrintWriter):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Stat ZooKeeper.exists(String,boolean)` indirectly writes to field `p.finished` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ZooKeeper.java","tnLine":2048,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ZooKeeper.exists(java.lang.String,boolean):org.apache.zookeeper.data.Stat","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Stat ZooKeeper.exists(String,Watcher)` indirectly writes to field `p.finished` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ZooKeeper.java","tnLine":2015,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ZooKeeper.exists(java.lang.String,org.apache.zookeeper.Watcher):org.apache.zookeeper.data.Stat","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `long ZKDatabase.fastForwardDataBase()` reads without synchronization from `this.dataTree`. Potentially races with write in method `ZKDatabase.clear()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZKDatabase.java","tnLine":275,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZKDatabase.fastForwardDataBase():long","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `QuorumPeer$QuorumServer QuorumPeer.findLearnerMaster(QuorumPeer$QuorumServer)` indirectly reads without synchronization from container `this.observerMasters` via call to `size`. Potentially races with write in method `QuorumPeer.setQuorumVerifier(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java","tnLine":2100,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.QuorumPeer.findLearnerMaster(org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer):org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `QuorumPeer$QuorumServer QuorumPeer.findLearnerMaster(QuorumPeer$QuorumServer)` indirectly writes to field `this.nextObserverMaster` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java","tnLine":2101,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.QuorumPeer.findLearnerMaster(org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer):org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ClientCnxn.finishPacket(ClientCnxn$Packet)` writes to field `p.finished` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java","tnLine":748,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxn.finishPacket(org.apache.zookeeper.ClientCnxn$Packet):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ClientCnxn.finishPacket(ClientCnxn$Packet)` indirectly reads without synchronization from `p.replyHeader.err`. Potentially races with write in method `ClientCnxn.finishPacket(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java","tnLine":714,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxn.finishPacket(org.apache.zookeeper.ClientCnxn$Packet):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ClientCnxn.finishPacket(ClientCnxn$Packet)` indirectly writes to field `p.replyHeader.err` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java","tnLine":732,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxn.finishPacket(org.apache.zookeeper.ClientCnxn$Packet):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `List ZooKeeper.getACL(String,Stat)` indirectly writes to field `p.finished` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ZooKeeper.java","tnLine":2407,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ZooKeeper.getACL(java.lang.String,org.apache.zookeeper.data.Stat):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List ZKDatabase.getACL(String,Stat)` reads without synchronization from `this.dataTree`. Potentially races with write in method `ZKDatabase.clear()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZKDatabase.java","tnLine":515,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZKDatabase.getACL(java.lang.String,org.apache.zookeeper.data.Stat):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `long QuorumPeer.getAcceptedEpoch()` reads without synchronization from `this.acceptedEpoch`. Potentially races with write in method `QuorumPeer.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java","tnLine":1953,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.QuorumPeer.getAcceptedEpoch():long","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `long QuorumPeer.getAcceptedEpoch()` writes to field `this.acceptedEpoch` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java","tnLine":1954,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.QuorumPeer.getAcceptedEpoch():long","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int ZKDatabase.getAclSize()` reads without synchronization from `this.dataTree`. Potentially races with write in method `ZKDatabase.clear()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZKDatabase.java","tnLine":553,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZKDatabase.getAclSize():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `int ZooKeeper.getAllChildrenNumber(String)` indirectly writes to field `p.finished` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ZooKeeper.java","tnLine":2774,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ZooKeeper.getAllChildrenNumber(java.lang.String):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int ZKDatabase.getAllChildrenNumber(String)` reads without synchronization from `this.dataTree`. Potentially races with write in method `ZKDatabase.clear()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZKDatabase.java","tnLine":536,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZKDatabase.getAllChildrenNumber(java.lang.String):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `List ZooKeeper.getChildren(String,boolean)` indirectly writes to field `p.finished` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ZooKeeper.java","tnLine":2579,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ZooKeeper.getChildren(java.lang.String,boolean):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `List ZooKeeper.getChildren(String,boolean,Stat)` indirectly writes to field `p.finished` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ZooKeeper.java","tnLine":2704,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ZooKeeper.getChildren(java.lang.String,boolean,org.apache.zookeeper.data.Stat):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `List ZooKeeper.getChildren(String,Watcher)` indirectly writes to field `p.finished` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ZooKeeper.java","tnLine":2549,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ZooKeeper.getChildren(java.lang.String,org.apache.zookeeper.Watcher):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `List ZooKeeper.getChildren(String,Watcher,Stat)` indirectly writes to field `p.finished` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ZooKeeper.java","tnLine":2667,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ZooKeeper.getChildren(java.lang.String,org.apache.zookeeper.Watcher,org.apache.zookeeper.data.Stat):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List ZKDatabase.getChildren(String,Stat,Watcher)` reads without synchronization from `this.dataTree`. Potentially races with write in method `ZKDatabase.clear()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZKDatabase.java","tnLine":528,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZKDatabase.getChildren(java.lang.String,org.apache.zookeeper.data.Stat,org.apache.zookeeper.Watcher):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `byte[] ZooKeeper.getConfig(boolean,Stat)` indirectly writes to field `p.finished` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ZooKeeper.java","tnLine":2291,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ZooKeeper.getConfig(boolean,org.apache.zookeeper.data.Stat):byte[]","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `byte[] ZooKeeper.getConfig(Watcher,Stat)` indirectly writes to field `p.finished` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ZooKeeper.java","tnLine":2234,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ZooKeeper.getConfig(org.apache.zookeeper.Watcher,org.apache.zookeeper.data.Stat):byte[]","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `long QuorumPeer.getCurrentEpoch()` writes to field `this.currentEpoch` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java","tnLine":1947,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.QuorumPeer.getCurrentEpoch():long","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `long QuorumPeer.getCurrentEpoch()` reads without synchronization from `this.currentEpoch`. Potentially races with write in method `QuorumPeer.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java","tnLine":1946,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.QuorumPeer.getCurrentEpoch():long","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `byte[] ZooKeeper.getData(String,boolean,Stat)` indirectly writes to field `p.finished` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ZooKeeper.java","tnLine":2159,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ZooKeeper.getData(java.lang.String,boolean,org.apache.zookeeper.data.Stat):byte[]","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `byte[] ZooKeeper.getData(String,Watcher,Stat)` indirectly writes to field `p.finished` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ZooKeeper.java","tnLine":2128,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ZooKeeper.getData(java.lang.String,org.apache.zookeeper.Watcher,org.apache.zookeeper.data.Stat):byte[]","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `byte[] ZKDatabase.getData(String,Stat,Watcher)` reads without synchronization from `this.dataTree`. Potentially races with write in method `ZKDatabase.clear()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZKDatabase.java","tnLine":491,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZKDatabase.getData(java.lang.String,org.apache.zookeeper.data.Stat,org.apache.zookeeper.Watcher):byte[]","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `DataTree ZKDatabase.getDataTree()` reads without synchronization from `this.dataTree`. Potentially races with write in method `ZKDatabase.clear()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZKDatabase.java","tnLine":168,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZKDatabase.getDataTree():org.apache.zookeeper.server.DataTree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `long ZKDatabase.getDataTreeLastProcessedZxid()` reads without synchronization from `this.dataTree`. Potentially races with write in method `ZKDatabase.clear()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZKDatabase.java","tnLine":221,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZKDatabase.getDataTreeLastProcessedZxid():long","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Election QuorumPeer.getElectionAlg()` reads without synchronization from `this.electionAlg`. Potentially races with write in method `QuorumPeer.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java","tnLine":1738,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.QuorumPeer.getElectionAlg():org.apache.zookeeper.server.quorum.Election","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `List ZooKeeper.getEphemerals()` indirectly writes to field `p.finished` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ZooKeeper.java","tnLine":2815,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ZooKeeper.getEphemerals():java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Map DataTree.getEphemerals()` reads without synchronization from container `this.ephemerals` via call to `entrySet`. Potentially races with write in method `DataTree.processTxn(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/DataTree.java","tnLine":1416,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.DataTree.getEphemerals():java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Map ZKDatabase.getEphemerals()` reads without synchronization from `this.dataTree`. Potentially races with write in method `ZKDatabase.clear()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZKDatabase.java","tnLine":422,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZKDatabase.getEphemerals():java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Map ZooKeeperServer.getEphemerals()` indirectly reads without synchronization from `this.zkDb.dataTree`. Potentially races with write in method `ZooKeeperServer.shutdown(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java","tnLine":1119,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZooKeeperServer.getEphemerals():java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Set DataTree.getEphemerals(long)` reads without synchronization from container `this.ephemerals` via call to `get`. Potentially races with write in method `DataTree.processTxn(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/DataTree.java","tnLine":164,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.DataTree.getEphemerals(long):java.util.Set","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Set ZKDatabase.getEphemerals(long)` reads without synchronization from `this.dataTree`. Potentially races with write in method `ZKDatabase.clear()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZKDatabase.java","tnLine":439,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZKDatabase.getEphemerals(long):java.util.Set","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `List ZooKeeper.getEphemerals(String)` indirectly writes to field `p.finished` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ZooKeeper.java","tnLine":2833,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ZooKeeper.getEphemerals(java.lang.String):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int DataTree.getEphemeralsCount()` reads without synchronization from container `this.ephemerals` via call to `values`. Potentially races with write in method `DataTree.deserialize(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/DataTree.java","tnLine":201,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.DataTree.getEphemeralsCount():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `long Leader.getEpoch()` reads without synchronization from `this.lastProposed`. Potentially races with write in method `Leader.propose(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Leader.java","tnLine":1118,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.Leader.getEpoch():long","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `long ZooKeeperServer.getLastProcessedZxid()` indirectly reads without synchronization from `this.zkDb.dataTree`. Potentially races with write in method `ZooKeeperServer.shutdown(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java","tnLine":999,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZooKeeperServer.getLastProcessedZxid():long","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `SnapshotInfo FileSnap.getLastSnapshotInfo()` reads without synchronization from `this.lastSnapshotInfo`. Potentially races with write in method `FileSnap.serialize(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/FileSnap.java","tnLine":68,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.persistence.FileSnap.getLastSnapshotInfo():org.apache.zookeeper.server.persistence.SnapshotInfo","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `SocketAddress ClientCnxnSocketNIO.getLocalSocketAddress()` reads without synchronization from `this.localSocketAddress`. Potentially races with write in method `ClientCnxnSocketNIO.doTransport(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxnSocketNIO.java","tnLine":319,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxnSocketNIO.getLocalSocketAddress():java.net.SocketAddress","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `SocketAddress ClientCnxnSocketNetty.getLocalSocketAddress()` reads without synchronization from `this.channel`. Potentially races with write in method `ClientCnxnSocketNetty.cleanup()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxnSocketNetty.java","tnLine":399,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxnSocketNetty.getLocalSocketAddress():java.net.SocketAddress","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `String QuorumPeer.getNextDynamicConfigFilename()` reads without synchronization from `this.configFilename`. Potentially races with write in method `QuorumPeer.setConfigFileName(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java","tnLine":1617,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.QuorumPeer.getNextDynamicConfigFilename():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `DataNode ZKDatabase.getNode(String)` reads without synchronization from `this.dataTree`. Potentially races with write in method `ZKDatabase.clear()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZKDatabase.java","tnLine":478,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZKDatabase.getNode(java.lang.String):org.apache.zookeeper.server.DataNode","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int ZKDatabase.getNodeCount()` reads without synchronization from `this.dataTree`. Potentially races with write in method `ZKDatabase.clear()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZKDatabase.java","tnLine":430,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZKDatabase.getNodeCount():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `AuthenticationProvider ProviderRegistry.getProvider(String)` reads without synchronization from `auth.ProviderRegistry.initialized`. Potentially races with write in method `ProviderRegistry.reset()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/auth/ProviderRegistry.java","tnLine":76,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.auth.ProviderRegistry.getProvider(java.lang.String):org.apache.zookeeper.server.auth.AuthenticationProvider","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `AuthenticationProvider ProviderRegistry.getProvider(String)` reads without synchronization from container `auth.ProviderRegistry.authenticationProviders` via call to `get`. Potentially races with write in method `ProviderRegistry.reset()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/auth/ProviderRegistry.java","tnLine":78,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.auth.ProviderRegistry.getProvider(java.lang.String):org.apache.zookeeper.server.auth.AuthenticationProvider","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Set MBeanRegistry.getRegisteredBeans()` reads without synchronization from container `this.mapBean2Path` via call to `keySet`. Potentially races with write in method `MBeanRegistry.register(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/jmx/MBeanRegistry.java","tnLine":140,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.jmx.MBeanRegistry.getRegisteredBeans():java.util.Set","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `SocketAddress ClientCnxnSocketNIO.getRemoteSocketAddress()` reads without synchronization from `this.remoteSocketAddress`. Potentially races with write in method `ClientCnxnSocketNIO.doTransport(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxnSocketNIO.java","tnLine":308,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxnSocketNIO.getRemoteSocketAddress():java.net.SocketAddress","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `SocketAddress ClientCnxnSocketNetty.getRemoteSocketAddress()` reads without synchronization from `this.channel`. Potentially races with write in method `ClientCnxnSocketNetty.cleanup()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxnSocketNetty.java","tnLine":393,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxnSocketNetty.getRemoteSocketAddress():java.net.SocketAddress","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `ServerAuthenticationProvider ProviderRegistry.getServerProvider(String)` indirectly reads without synchronization from `auth.ProviderRegistry.initialized`. Potentially races with write in method `ProviderRegistry.reset()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/auth/ProviderRegistry.java","tnLine":72,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.auth.ProviderRegistry.getServerProvider(java.lang.String):org.apache.zookeeper.server.auth.ServerAuthenticationProvider","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Map ZooKeeperServer.getSessionExpiryMap()` reads without synchronization from `this.sessionTracker`. Potentially races with write in method `ZooKeeperServer.startup()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java","tnLine":1416,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZooKeeperServer.getSessionExpiryMap():java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `SessionTracker ZooKeeperServer.getSessionTracker()` reads without synchronization from `this.sessionTracker`. Potentially races with write in method `ZooKeeperServer.startup()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java","tnLine":457,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZooKeeperServer.getSessionTracker():org.apache.zookeeper.server.SessionTracker","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Collection DataTree.getSessions()` reads without synchronization from container `this.ephemerals` via call to `keySet`. Potentially races with write in method `DataTree.deserialize(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/DataTree.java","tnLine":184,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.DataTree.getSessions():java.util.Collection","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Collection ZKDatabase.getSessions()` reads without synchronization from `this.dataTree`. Potentially races with write in method `ZKDatabase.clear()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZKDatabase.java","tnLine":229,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZKDatabase.getSessions():java.util.Collection","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `long Leader.getUptime()` reads without synchronization from `this.leaderStartTime`. Potentially races with write in method `Leader.lead()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Leader.java","tnLine":490,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.Leader.getUptime():long","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `long ZKDatabase.getmaxCommittedLog()` reads without synchronization from `this.maxCommittedLog`. Potentially races with write in method `ZKDatabase.addCommittedProposal(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZKDatabase.java","tnLine":176,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZKDatabase.getmaxCommittedLog():long","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `long ZKDatabase.getminCommittedLog()` reads without synchronization from `this.minCommittedLog`. Potentially races with write in method `ZKDatabase.addCommittedProposal(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZKDatabase.java","tnLine":187,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZKDatabase.getminCommittedLog():long","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ZKDatabase.initConfigInZKDatabase(QuorumVerifier)` reads with synchronization from `this.dataTree`. Potentially races with unsynchronized write in method `ZKDatabase.clear()`.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZKDatabase.java","tnLine":635,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZKDatabase.initConfigInZKDatabase(org.apache.zookeeper.server.quorum.flexible.QuorumVerifier):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean ZKDatabase.isSpecialPath(String)` reads without synchronization from `this.dataTree`. Potentially races with write in method `ZKDatabase.clear()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZKDatabase.java","tnLine":545,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZKDatabase.isSpecialPath(java.lang.String):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void DataTree.killSession(long,long)` mutates container `this.ephemerals` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/DataTree.java","tnLine":1092,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.DataTree.killSession(long,long):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void DataTree.killSession(long,long)` indirectly reads with synchronization from container `this.ephemerals` via call to `get`. Potentially races with unsynchronized write in method `DataTree.deserialize(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/DataTree.java","tnLine":1096,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.DataTree.killSession(long,long):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ZKDatabase.killSession(long,long)` reads without synchronization from `this.dataTree`. Potentially races with write in method `ZKDatabase.clear()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZKDatabase.java","tnLine":410,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZKDatabase.killSession(long,long):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ZooKeeperServer.killSession(long,long)` reads without synchronization from `this.sessionTracker`. Potentially races with write in method `ZooKeeperServer.startup()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java","tnLine":489,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZooKeeperServer.killSession(long,long):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ZooKeeperServer.killSession(long,long)` indirectly reads without synchronization from `this.zkDb.dataTree`. Potentially races with write in method `ZooKeeperServer.shutdown(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java","tnLine":483,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZooKeeperServer.killSession(long,long):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Leader.lead()` indirectly writes to field `this.self.electionTimeTaken` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Leader.java","tnLine":505,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.Leader.lead():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Leader.lead()` indirectly reads with synchronization from `this.zk.jmxServerBean`. Potentially races with unsynchronized write in method `Leader.lead()`.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Leader.java","tnLine":611,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.Leader.lead():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Leader.lead()` writes to field `this.self.start_fle` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Leader.java","tnLine":509,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.Leader.lead():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Leader.lead()` reads without synchronization from `this.self.end_fle`. Potentially races with write in method `Leader.lead()`.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Leader.java","tnLine":504,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.Leader.lead():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Leader.lead()` indirectly writes to field `this.zk.jmxServerBean` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Leader.java","tnLine":512,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.Leader.lead():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Leader.lead()` writes to field `this.self.end_fle` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Leader.java","tnLine":503,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.Leader.lead():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `String ProviderRegistry.listProviders()` reads without synchronization from container `auth.ProviderRegistry.authenticationProviders` via call to `keySet`. Potentially races with write in method `ProviderRegistry.reset()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/auth/ProviderRegistry.java","tnLine":87,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.auth.ProviderRegistry.listProviders():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ZooKeeperServer.loadData()` indirectly reads without synchronization from `this.zkDb.dataTree`. Potentially races with write in method `ZooKeeperServer.shutdown(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java","tnLine":377,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZooKeeperServer.loadData():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `long ZKDatabase.loadDataBase()` reads without synchronization from `this.dataTree`. Potentially races with write in method `ZKDatabase.clear()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZKDatabase.java","tnLine":261,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZKDatabase.loadDataBase():long","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Vote FastLeaderElection.lookForLeader()` reads without synchronization from `this.self.start_fle`. Potentially races with write in method `FastLeaderElection.lookForLeader()`.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java","tnLine":916,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.FastLeaderElection.lookForLeader():org.apache.zookeeper.server.quorum.Vote","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Vote FastLeaderElection.lookForLeader()` writes to field `this.self.jmxLeaderElectionBean` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java","tnLine":909,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.FastLeaderElection.lookForLeader():org.apache.zookeeper.server.quorum.Vote","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Vote FastLeaderElection.lookForLeader()` reads with synchronization from `this.self.jmxLeaderElectionBean`. Potentially races with unsynchronized write in method `FastLeaderElection.lookForLeader()`.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java","tnLine":1111,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.FastLeaderElection.lookForLeader():org.apache.zookeeper.server.quorum.Vote","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Vote FastLeaderElection.lookForLeader()` writes to field `this.self.start_fle` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java","tnLine":917,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.FastLeaderElection.lookForLeader():org.apache.zookeeper.server.quorum.Vote","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Election QuorumPeer.makeLEStrategy()` reads without synchronization from `this.electionAlg`. Potentially races with write in method `QuorumPeer.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java","tnLine":1134,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.QuorumPeer.makeLEStrategy():org.apache.zookeeper.server.quorum.Election","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `boolean UnifiedServerSocket$UnifiedInputStream.markSupported()` indirectly writes to field `this.realInputStream` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/UnifiedServerSocket.java","tnLine":736,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.UnifiedServerSocket$UnifiedInputStream.markSupported():boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `List ZooKeeper.multi(Iterable)` indirectly writes to field `p.finished` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ZooKeeper.java","tnLine":1829,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ZooKeeper.multi(java.lang.Iterable):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `List ZooKeeper.multiInternal(MultiTransactionRecord)` indirectly writes to field `p.finished` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ZooKeeper.java","tnLine":1908,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ZooKeeper.multiInternal(org.apache.zookeeper.MultiTransactionRecord):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ClientCnxnSocketNetty.onClosing()` reads without synchronization from `this.firstConnect`. Potentially races with write in method `ClientCnxnSocketNetty.connect(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxnSocketNetty.java","tnLine":251,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxnSocketNetty.onClosing():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void PrepRequestProcessor.pRequest(Request)` indirectly writes to field `splits.[_]` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/PrepRequestProcessor.java","tnLine":749,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.PrepRequestProcessor.pRequest(org.apache.zookeeper.server.Request):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void PrepRequestProcessor.pRequest(Request)` indirectly reads without synchronization from `auth.ProviderRegistry.initialized`. Potentially races with write in method `PrepRequestProcessor.pRequest2Txn(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/PrepRequestProcessor.java","tnLine":811,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.PrepRequestProcessor.pRequest(org.apache.zookeeper.server.Request):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void PrepRequestProcessor.pRequest2Txn(int,long,Request,Record,boolean)` indirectly reads without synchronization from `auth.ProviderRegistry.initialized`. Potentially races with write in method `PrepRequestProcessor.pRequest2Txn(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/PrepRequestProcessor.java","tnLine":573,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.PrepRequestProcessor.pRequest2Txn(int,long,org.apache.zookeeper.server.Request,org.apache.jute.Record,boolean):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void PrepRequestProcessor.pRequest2Txn(int,long,Request,Record,boolean)` reads without synchronization from `request.qv`. Potentially races with write in method `PrepRequestProcessor.pRequest2Txn(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/PrepRequestProcessor.java","tnLine":477,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.PrepRequestProcessor.pRequest2Txn(int,long,org.apache.zookeeper.server.Request,org.apache.jute.Record,boolean):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void PrepRequestProcessor.pRequest2Txn(int,long,Request,Record,boolean)` writes to field `request.qv` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/PrepRequestProcessor.java","tnLine":540,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.PrepRequestProcessor.pRequest2Txn(int,long,org.apache.zookeeper.server.Request,org.apache.jute.Record,boolean):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void PrepRequestProcessor.pRequest2Txn(int,long,Request,Record,boolean)` indirectly writes to field `request.hdr` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/PrepRequestProcessor.java","tnLine":369,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.PrepRequestProcessor.pRequest2Txn(int,long,org.apache.zookeeper.server.Request,org.apache.jute.Record,boolean):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void PrepRequestProcessor.pRequest2Txn(int,long,Request,Record,boolean)` indirectly writes to field `splits.[_]` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/PrepRequestProcessor.java","tnLine":488,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.PrepRequestProcessor.pRequest2Txn(int,long,org.apache.zookeeper.server.Request,org.apache.jute.Record,boolean):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void PrepRequestProcessor.pRequest2Txn(int,long,Request,Record,boolean)` indirectly writes to field `request.txn` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/PrepRequestProcessor.java","tnLine":561,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.PrepRequestProcessor.pRequest2Txn(int,long,org.apache.zookeeper.server.Request,org.apache.jute.Record,boolean):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void PrepRequestProcessor.pRequest2Txn(int,long,Request,Record,boolean)` indirectly reads with synchronization from `request.hdr`. Potentially races with unsynchronized write in method `PrepRequestProcessor.pRequest2Txn(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/PrepRequestProcessor.java","tnLine":609,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.PrepRequestProcessor.pRequest2Txn(int,long,org.apache.zookeeper.server.Request,org.apache.jute.Record,boolean):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void PrepRequestProcessor.pRequest2Txn(int,long,Request,Record,boolean)` indirectly reads without synchronization from `server.PrepRequestProcessor.failCreate`. Potentially races with write in method `PrepRequestProcessor.setFailCreate(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/PrepRequestProcessor.java","tnLine":377,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.PrepRequestProcessor.pRequest2Txn(int,long,org.apache.zookeeper.server.Request,org.apache.jute.Record,boolean):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Learner.ping(QuorumPacket)` indirectly reads without synchronization from `this.zk.sessionTracker`. Potentially races with write in method `Learner.syncWithLeader(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Learner.java","tnLine":660,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.Learner.ping(org.apache.zookeeper.server.quorum.QuorumPacket):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ZooKeeperServer.processConnectRequest(ServerCnxn,ByteBuffer)` reads without synchronization from `this.zkDb.dataTree`. Potentially races with write in method `ZooKeeperServer.shutdown(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java","tnLine":1161,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZooKeeperServer.processConnectRequest(org.apache.zookeeper.server.ServerCnxn,java.nio.ByteBuffer):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ZooKeeperServer.processConnectRequest(ServerCnxn,ByteBuffer)` indirectly reads without synchronization from `this.sessionTracker`. Potentially races with write in method `ZooKeeperServer.startup()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java","tnLine":1211,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZooKeeperServer.processConnectRequest(org.apache.zookeeper.server.ServerCnxn,java.nio.ByteBuffer):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `DataTree$ProcessTxnResult DataTree.processTxn(TxnHeader,Record)` indirectly reads with synchronization from container `this.ephemerals` via call to `get`. Potentially races with unsynchronized write in method `DataTree.deserialize(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/DataTree.java","tnLine":836,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.DataTree.processTxn(org.apache.zookeeper.txn.TxnHeader,org.apache.jute.Record):org.apache.zookeeper.server.DataTree$ProcessTxnResult","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `DataTree$ProcessTxnResult ZKDatabase.processTxn(TxnHeader,Record)` reads without synchronization from `this.dataTree`. Potentially races with write in method `ZKDatabase.clear()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZKDatabase.java","tnLine":458,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZKDatabase.processTxn(org.apache.zookeeper.txn.TxnHeader,org.apache.jute.Record):org.apache.zookeeper.server.DataTree$ProcessTxnResult","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `DataTree$ProcessTxnResult DataTree.processTxn(TxnHeader,Record,boolean)` indirectly reads with synchronization from container `this.ephemerals` via call to `get`. Potentially races with unsynchronized write in method `DataTree.deserialize(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/DataTree.java","tnLine":905,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.DataTree.processTxn(org.apache.zookeeper.txn.TxnHeader,org.apache.jute.Record,boolean):org.apache.zookeeper.server.DataTree$ProcessTxnResult","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `DataTree$ProcessTxnResult DataTree.processTxn(TxnHeader,Record,boolean)` indirectly mutates container `this.ephemerals` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/DataTree.java","tnLine":922,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.DataTree.processTxn(org.apache.zookeeper.txn.TxnHeader,org.apache.jute.Record,boolean):org.apache.zookeeper.server.DataTree$ProcessTxnResult","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Leader$Proposal Leader.propose(Request)` indirectly reads with synchronization from `this.zk.jmxServerBean`. Potentially races with unsynchronized write in method `Leader.lead()`.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Leader.java","tnLine":1142,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.Leader.propose(org.apache.zookeeper.server.Request):org.apache.zookeeper.server.quorum.Leader$Proposal","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `long LearnerHandler.queueCommittedProposals(Iterator,long,Long,Long)` writes to field `this.needOpPacket` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/LearnerHandler.java","tnLine":962,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.LearnerHandler.queueCommittedProposals(java.util.Iterator,long,java.lang.Long,java.lang.Long):long","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `long LearnerHandler.queueCommittedProposals(Iterator,long,Long,Long)` reads without synchronization from `this.needOpPacket`. Potentially races with write in method `LearnerHandler.syncFollower(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/LearnerHandler.java","tnLine":900,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.LearnerHandler.queueCommittedProposals(java.util.Iterator,long,java.lang.Long,java.lang.Long):long","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `int UnifiedServerSocket$UnifiedInputStream.read()` indirectly writes to field `this.realInputStream` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/UnifiedServerSocket.java","tnLine":678,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.UnifiedServerSocket$UnifiedInputStream.read():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `int UnifiedServerSocket$UnifiedInputStream.read(byte[])` indirectly writes to field `this.realInputStream` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/UnifiedServerSocket.java","tnLine":688,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.UnifiedServerSocket$UnifiedInputStream.read(byte[]):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `int UnifiedServerSocket$UnifiedInputStream.read(byte[],int,int)` indirectly writes to field `this.realInputStream` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/UnifiedServerSocket.java","tnLine":693,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.UnifiedServerSocket$UnifiedInputStream.read(byte[],int,int):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Learner.readPacket(QuorumPacket)` reads without synchronization from `this.leaderIs`. Potentially races with write in method `Learner.connectToLeader(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Learner.java","tnLine":167,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.Learner.readPacket(org.apache.zookeeper.server.quorum.QuorumPacket):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ClientCnxn$SendThread.readResponse(ByteBuffer)` indirectly writes to field `this.this$0.zooKeeperSaslClient.gotLastPacket` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java","tnLine":910,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxn$SendThread.readResponse(java.nio.ByteBuffer):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ClientCnxn$SendThread.readResponse(ByteBuffer)` indirectly reads without synchronization from `this.saslLoginFailed`. Potentially races with write in method `ClientCnxn$SendThread.run()`.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java","tnLine":907,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxn$SendThread.readResponse(java.nio.ByteBuffer):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ClientCnxn$SendThread.readResponse(ByteBuffer)` indirectly writes to field `packet.replyHeader.zxid` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java","tnLine":942,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxn$SendThread.readResponse(java.nio.ByteBuffer):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ClientCnxn$SendThread.readResponse(ByteBuffer)` indirectly writes to field `packet.replyHeader.err` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java","tnLine":941,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxn$SendThread.readResponse(java.nio.ByteBuffer):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ClientCnxn$SendThread.readResponse(ByteBuffer)` reads without synchronization from `this.this$0.sessionId`. Potentially races with write in method `ClientCnxn$SendThread.onConnected(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java","tnLine":952,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxn$SendThread.readResponse(java.nio.ByteBuffer):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ClientCnxn$SendThread.readResponse(ByteBuffer)` reads without synchronization from `this.lastPingSentNs`. Potentially races with write in method `ClientCnxn$SendThread.run()`.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java","tnLine":852,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxn$SendThread.readResponse(java.nio.ByteBuffer):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ClientCnxn$SendThread.readResponse(ByteBuffer)` indirectly writes to field `packet.replyHeader.xid` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java","tnLine":940,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxn$SendThread.readResponse(java.nio.ByteBuffer):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ClientCnxn$SendThread.readResponse(ByteBuffer)` indirectly writes to field `packet.finished` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java","tnLine":955,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxn$SendThread.readResponse(java.nio.ByteBuffer):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void QuorumPeer.recreateSocketAddresses(long)` indirectly writes to field `qs.addr` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java","tnLine":783,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.QuorumPeer.recreateSocketAddresses(long):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void MBeanRegistry.register(ZKMBeanInfo,ZKMBeanInfo)` reads without synchronization from container `this.mapBean2Path` via call to `get`. Potentially races with write in method `MBeanRegistry.unregister(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/jmx/MBeanRegistry.java","tnLine":100,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.jmx.MBeanRegistry.register(org.apache.zookeeper.jmx.ZKMBeanInfo,org.apache.zookeeper.jmx.ZKMBeanInfo):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ClientCnxnSocketNIO.registerAndConnect(SocketChannel,InetSocketAddress)` indirectly writes to field `this.sendThread.isFirstConnect` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxnSocketNIO.java","tnLine":277,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxnSocketNIO.registerAndConnect(java.nio.channels.SocketChannel,java.net.InetSocketAddress):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ZooKeeperServer.registerJMX()` reads without synchronization from `this.jmxDataTreeBean`. Potentially races with write in method `ZooKeeperServer.shutdown(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java","tnLine":530,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZooKeeperServer.registerJMX():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ZooKeeperServer.registerJMX()` writes to field `this.jmxServerBean` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java","tnLine":525,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZooKeeperServer.registerJMX():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ZooKeeperServer.registerJMX()` reads without synchronization from `this.jmxServerBean`. Potentially races with write in method `ZooKeeperServer.shutdown(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java","tnLine":526,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZooKeeperServer.registerJMX():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ZooKeeperServer.registerJMX()` writes to field `this.jmxDataTreeBean` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java","tnLine":529,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZooKeeperServer.registerJMX():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void LeaderZooKeeperServer.registerJMX()` reads without synchronization from `this.jmxDataTreeBean`. Potentially races with write in method `LeaderZooKeeperServer.shutdown()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/LeaderZooKeeperServer.java","tnLine":161,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.LeaderZooKeeperServer.registerJMX():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void LeaderZooKeeperServer.registerJMX()` writes to field `this.jmxDataTreeBean` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/LeaderZooKeeperServer.java","tnLine":160,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.LeaderZooKeeperServer.registerJMX():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void LearnerZooKeeperServer.registerJMX()` writes to field `this.jmxDataTreeBean` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/LearnerZooKeeperServer.java","tnLine":105,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.LearnerZooKeeperServer.registerJMX():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void LearnerZooKeeperServer.registerJMX()` reads without synchronization from `this.jmxDataTreeBean`. Potentially races with write in method `LearnerZooKeeperServer.shutdown()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/LearnerZooKeeperServer.java","tnLine":106,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.LearnerZooKeeperServer.registerJMX():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ReadOnlyZooKeeperServer.registerJMX()` writes to field `this.jmxDataTreeBean` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/ReadOnlyZooKeeperServer.java","tnLine":80,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.ReadOnlyZooKeeperServer.registerJMX():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ReadOnlyZooKeeperServer.registerJMX()` reads without synchronization from `this.jmxDataTreeBean`. Potentially races with write in method `ReadOnlyZooKeeperServer.startup()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/ReadOnlyZooKeeperServer.java","tnLine":81,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.ReadOnlyZooKeeperServer.registerJMX():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void LearnerZooKeeperServer.registerJMX(ZooKeeperServerBean,LocalPeerBean)` writes to field `this.jmxServerBean` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/LearnerZooKeeperServer.java","tnLine":127,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.LearnerZooKeeperServer.registerJMX(org.apache.zookeeper.server.ZooKeeperServerBean,org.apache.zookeeper.server.quorum.LocalPeerBean):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ReadOnlyZooKeeperServer.registerJMX(ZooKeeperServerBean,LocalPeerBean)` writes to field `this.jmxServerBean` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/ReadOnlyZooKeeperServer.java","tnLine":91,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.ReadOnlyZooKeeperServer.registerJMX(org.apache.zookeeper.server.ZooKeeperServerBean,org.apache.zookeeper.server.quorum.LocalPeerBean):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void LeaderZooKeeperServer.registerJMX(LeaderBean,LocalPeerBean)` writes to field `this.jmxServerBean` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/LeaderZooKeeperServer.java","tnLine":182,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.LeaderZooKeeperServer.registerJMX(org.apache.zookeeper.server.quorum.LeaderBean,org.apache.zookeeper.server.quorum.LocalPeerBean):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean LeaderZooKeeperServer.registerJMX(LearnerHandlerBean)` reads without synchronization from `this.jmxServerBean`. Potentially races with write in method `LeaderZooKeeperServer.shutdown()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/LeaderZooKeeperServer.java","tnLine":192,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.LeaderZooKeeperServer.registerJMX(org.apache.zookeeper.server.quorum.LearnerHandlerBean):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Leader.registerLearnerHandlerBean(LearnerHandler,Socket)` indirectly reads without synchronization from `this.zk.jmxServerBean`. Potentially races with write in method `Leader.shutdown(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Leader.java","tnLine":1657,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.Leader.registerLearnerHandlerBean(org.apache.zookeeper.server.quorum.LearnerHandler,java.net.Socket):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ZooKeeper.removeAllWatches(String,Watcher$WatcherType,boolean)` indirectly writes to field `p.finished` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ZooKeeper.java","tnLine":2974,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ZooKeeper.removeAllWatches(java.lang.String,org.apache.zookeeper.Watcher$WatcherType,boolean):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ZKDatabase.removeCnxn(ServerCnxn)` reads without synchronization from `this.dataTree`. Potentially races with write in method `ZKDatabase.clear()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZKDatabase.java","tnLine":401,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZKDatabase.removeCnxn(org.apache.zookeeper.server.ServerCnxn):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ZooKeeperServer.removeCnxn(ServerCnxn)` indirectly reads without synchronization from `this.zkDb.dataTree`. Potentially races with write in method `ZooKeeperServer.shutdown(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java","tnLine":188,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZooKeeperServer.removeCnxn(org.apache.zookeeper.server.ServerCnxn):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ProviderRegistry.removeProvider(String)` mutates container `auth.ProviderRegistry.authenticationProviders` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/auth/ProviderRegistry.java","tnLine":82,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.auth.ProviderRegistry.removeProvider(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean ZKDatabase.removeWatch(String,Watcher$WatcherType,Watcher)` reads without synchronization from `this.dataTree`. Potentially races with write in method `ZKDatabase.clear()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZKDatabase.java","tnLine":679,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZKDatabase.removeWatch(java.lang.String,org.apache.zookeeper.Watcher$WatcherType,org.apache.zookeeper.Watcher):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void WatchManagerOptimized.removeWatcher(Watcher)` indirectly writes to field `this.watcherCleaner.RATE_LOGGER.count` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/watch/WatchManagerOptimized.java","tnLine":181,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.watch.WatchManagerOptimized.removeWatcher(org.apache.zookeeper.Watcher):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ZooKeeper.removeWatches(String,Watcher,Watcher$WatcherType,boolean)` indirectly writes to field `p.finished` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ZooKeeper.java","tnLine":2928,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ZooKeeper.removeWatches(java.lang.String,org.apache.zookeeper.Watcher,org.apache.zookeeper.Watcher$WatcherType,boolean):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ZooKeeperServer.reopenSession(ServerCnxn,long,byte[],int)` indirectly reads without synchronization from `this.sessionTracker`. Potentially races with write in method `ZooKeeperServer.startup()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java","tnLine":822,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZooKeeperServer.reopenSession(org.apache.zookeeper.server.ServerCnxn,long,byte[],int):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Leader.reportLookingSid(long)` reads without synchronization from `this.waitingForNewEpoch`. Potentially races with write in method `Leader.lead()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Leader.java","tnLine":1307,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.Leader.reportLookingSid(long):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Learner.revalidate(QuorumPacket)` indirectly reads without synchronization from `this.zk.secureServerCnxnFactory`. Potentially races with write in method `Learner.syncWithLeader(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Learner.java","tnLine":646,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.Learner.revalidate(org.apache.zookeeper.server.quorum.QuorumPacket):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ZooKeeperServer.revalidateSession(ServerCnxn,long,int)` reads without synchronization from `this.sessionTracker`. Potentially races with write in method `ZooKeeperServer.startup()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java","tnLine":810,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZooKeeperServer.revalidateSession(org.apache.zookeeper.server.ServerCnxn,long,int):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void LeaderZooKeeperServer.revalidateSession(ServerCnxn,long,int)` indirectly reads without synchronization from `this.sessionTracker`. Potentially races with write in method `LeaderZooKeeperServer.startup()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/LeaderZooKeeperServer.java","tnLine":242,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.LeaderZooKeeperServer.revalidateSession(org.apache.zookeeper.server.ServerCnxn,long,int):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Leader.revalidateSession(QuorumPacket,LearnerHandler)` indirectly reads without synchronization from `this.zk.sessionTracker`. Potentially races with write in method `Leader.lead()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Leader.java","tnLine":1634,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.Leader.revalidateSession(org.apache.zookeeper.server.quorum.QuorumPacket,org.apache.zookeeper.server.quorum.LearnerHandler):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ClientCnxn$SendThread.run()` indirectly writes to field `this.clientCnxnSocket.lastHeard` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java","tnLine":1149,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxn$SendThread.run():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ClientCnxn$SendThread.run()` indirectly writes to field `this.this$0.zooKeeperSaslClient.saslState` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java","tnLine":1177,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxn$SendThread.run():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ClientCnxn$SendThread.run()` indirectly reads without synchronization from `this.clientCnxnSocket.lastSend`. Potentially races with write in method `ClientCnxn$SendThread.run()`.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java","tnLine":1224,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxn$SendThread.run():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ClientCnxn$SendThread.run()` indirectly reads without synchronization from `this.clientCnxnSocket.lastHeard`. Potentially races with write in method `ClientCnxn$SendThread.run()`.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java","tnLine":1206,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxn$SendThread.run():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ClientCnxn$SendThread.run()` writes to field `this.pingRwTimeout` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java","tnLine":1245,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxn$SendThread.run():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ClientCnxn$SendThread.run()` indirectly reads without synchronization from `this.isFirstConnect`. Potentially races with write in method `ClientCnxn$SendThread.primeConnection()`.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java","tnLine":1167,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxn$SendThread.run():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ClientCnxn$SendThread.run()` indirectly writes to field `this.clientCnxnSocket.outgoingQueue` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java","tnLine":1147,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxn$SendThread.run():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ClientCnxn$SendThread.run()` reads without synchronization from `this.pingRwTimeout`. Potentially races with write in method `ClientCnxn$SendThread.run()`.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java","tnLine":1241,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxn$SendThread.run():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ClientCnxn$SendThread.run()` indirectly reads without synchronization from `this.this$0.zooKeeperSaslClient.saslState`. Potentially races with write in method `ClientCnxn$SendThread.readResponse(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java","tnLine":1175,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxn$SendThread.run():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ClientCnxn$SendThread.run()` indirectly writes to field `this.lastPingSentNs` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java","tnLine":1228,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxn$SendThread.run():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ClientCnxn$SendThread.run()` indirectly writes to field `this.clientCnxnSocket.now` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java","tnLine":1148,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxn$SendThread.run():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ClientCnxn$SendThread.run()` reads without synchronization from `this.this$0.connectTimeout`. Potentially races with write in method `ClientCnxn$SendThread.onConnected(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java","tnLine":1208,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxn$SendThread.run():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ClientCnxn$SendThread.run()` writes to field `this.rwServerAddress` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java","tnLine":1163,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxn$SendThread.run():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ClientCnxn$SendThread.run()` reads without synchronization from `this.rwServerAddress`. Potentially races with write in method `ClientCnxn$SendThread.run()`.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java","tnLine":1161,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxn$SendThread.run():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void PrepRequestProcessor.run()` indirectly reads without synchronization from `auth.ProviderRegistry.initialized`. Potentially races with write in method `PrepRequestProcessor.pRequest2Txn(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/PrepRequestProcessor.java","tnLine":149,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.PrepRequestProcessor.run():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void CommitProcessor.run()` writes to field `topPending.zxid` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/CommitProcessor.java","tnLine":319,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.CommitProcessor.run():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void CommitProcessor.run()` writes to field `topPending.commitRecvTime` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/CommitProcessor.java","tnLine":320,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.CommitProcessor.run():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void CommitProcessor.run()` indirectly writes to field `topPending.hdr` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/CommitProcessor.java","tnLine":317,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.CommitProcessor.run():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void CommitProcessor.run()` mutates container `this.pendingRequests` via call to `remove` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/CommitProcessor.java","tnLine":347,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.CommitProcessor.run():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void CommitProcessor.run()` reads without synchronization from container `this.pendingRequests` via call to `size`. Potentially races with write in method `CommitProcessor.run()`.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/CommitProcessor.java","tnLine":270,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.CommitProcessor.run():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void CommitProcessor.run()` indirectly reads without synchronization from `this.workerPool`. Potentially races with write in method `CommitProcessor.start()`.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/CommitProcessor.java","tnLine":229,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.CommitProcessor.run():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void CommitProcessor.run()` indirectly writes to field `topPending.txn` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/CommitProcessor.java","tnLine":318,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.CommitProcessor.run():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void FastLeaderElection$Messenger$WorkerReceiver.run()` writes to field `this.this$1.this$0.leadingVoteSet` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java","tnLine":434,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger$WorkerReceiver.run():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void FastLeaderElection$Messenger$WorkerReceiver.run()` reads with synchronization from `this.this$1.this$0.leadingVoteSet`. Potentially races with unsynchronized write in method `FastLeaderElection$Messenger$WorkerReceiver.run()`.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java","tnLine":432,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger$WorkerReceiver.run():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void LearnerHandler.run()` indirectly reads without synchronization from `this.needOpPacket`. Potentially races with write in method `LearnerHandler.syncFollower(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/LearnerHandler.java","tnLine":506,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.LearnerHandler.run():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ObserverMaster.run()` reads without synchronization from `this.listenerRunning`. Potentially races with write in method `ObserverMaster.start()`.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/ObserverMaster.java","tnLine":468,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.ObserverMaster.run():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void QuorumPeer.run()` reads without synchronization from `this.follower`. Potentially races with write in method `QuorumPeer.setFollower(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java","tnLine":1286,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.QuorumPeer.run():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void QuorumPeer.run()` writes to field `this.shuttingDownLE` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java","tnLine":1253,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.QuorumPeer.run():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void QuorumPeer.run()` reads without synchronization from `this.observer`. Potentially races with write in method `QuorumPeer.setObserver(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java","tnLine":1267,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.QuorumPeer.run():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void QuorumPeer.run()` reads without synchronization from `this.leader`. Potentially races with write in method `QuorumPeer.setLeader(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java","tnLine":1299,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.QuorumPeer.run():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void QuorumPeer.run()` reads without synchronization from `this.shuttingDownLE`. Potentially races with write in method `QuorumPeer.restartLeaderElection(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java","tnLine":1252,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.QuorumPeer.run():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ClientCnxnSocketNetty.sendPacket(ClientCnxn$Packet)` reads without synchronization from `this.channel`. Potentially races with write in method `ClientCnxnSocketNetty.cleanup()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxnSocketNetty.java","tnLine":385,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxnSocketNetty.sendPacket(org.apache.zookeeper.ClientCnxn$Packet):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void DataTree.serialize(OutputArchive,String)` indirectly reads without synchronization from `this.root`. Potentially races with write in method `DataTree.deserialize(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/DataTree.java","tnLine":1279,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.DataTree.serialize(org.apache.jute.OutputArchive,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void DataTree.serializeNodes(OutputArchive)` reads without synchronization from `this.root`. Potentially races with write in method `DataTree.deserialize(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/DataTree.java","tnLine":1272,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.DataTree.serializeNodes(org.apache.jute.OutputArchive):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ZKDatabase.serializeSnapshot(OutputArchive)` indirectly reads without synchronization from `this.dataTree`. Potentially races with write in method `ZKDatabase.clear()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZKDatabase.java","tnLine":595,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZKDatabase.serializeSnapshot(org.apache.jute.OutputArchive):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Stat ZooKeeper.setACL(String,List,int)` indirectly writes to field `p.finished` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ZooKeeper.java","tnLine":2476,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ZooKeeper.setACL(java.lang.String,java.util.List,int):org.apache.zookeeper.data.Stat","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void QuorumPeer.setAcceptedEpoch(long)` writes to field `this.acceptedEpoch` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java","tnLine":1966,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.QuorumPeer.setAcceptedEpoch(long):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void QuorumPeer.setCurrentEpoch(long)` writes to field `this.currentEpoch` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java","tnLine":1960,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.QuorumPeer.setCurrentEpoch(long):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Stat ZooKeeper.setData(String,byte[],int)` indirectly writes to field `p.finished` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ZooKeeper.java","tnLine":2346,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ZooKeeper.setData(java.lang.String,byte[],int):org.apache.zookeeper.data.Stat","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void LearnerHandler.setFirstPacket(boolean)` writes to field `this.needOpPacket` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/LearnerHandler.java","tnLine":1056,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.LearnerHandler.setFirstPacket(boolean):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ZooKeeperServer.setOwner(long,Object)` reads without synchronization from `this.sessionTracker`. Potentially races with write in method `ZooKeeperServer.startup()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java","tnLine":805,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZooKeeperServer.setOwner(long,java.lang.Object):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ZKDatabase.setWatches(long,List,List,List,Watcher)` reads without synchronization from `this.dataTree`. Potentially races with write in method `ZKDatabase.clear()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZKDatabase.java","tnLine":504,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZKDatabase.setWatches(long,java.util.List,java.util.List,java.util.List,org.apache.zookeeper.Watcher):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ZKDatabase.setlastProcessedZxid(long)` reads without synchronization from `this.dataTree`. Potentially races with write in method `ZKDatabase.clear()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZKDatabase.java","tnLine":447,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZKDatabase.setlastProcessedZxid(long):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ZooKeeperServer.setupRequestProcessors()` reads without synchronization from `this.firstProcessor`. Potentially races with write in method `ZooKeeperServer.startup()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java","tnLine":579,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZooKeeperServer.setupRequestProcessors():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ZooKeeperServer.setupRequestProcessors()` writes to field `this.firstProcessor` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java","tnLine":578,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZooKeeperServer.setupRequestProcessors():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void LeaderZooKeeperServer.setupRequestProcessors()` writes to field `this.firstProcessor` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/LeaderZooKeeperServer.java","tnLine":79,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.LeaderZooKeeperServer.setupRequestProcessors():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ReadOnlyZooKeeperServer.setupRequestProcessors()` indirectly reads without synchronization from `this.serverCnxnFactory`. Potentially races with write in method `ReadOnlyZooKeeperServer.startup()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/ReadOnlyZooKeeperServer.java","tnLine":56,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.ReadOnlyZooKeeperServer.setupRequestProcessors():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ReadOnlyZooKeeperServer.setupRequestProcessors()` reads without synchronization from `this.firstProcessor`. Potentially races with write in method `ReadOnlyZooKeeperServer.startup()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/ReadOnlyZooKeeperServer.java","tnLine":59,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.ReadOnlyZooKeeperServer.setupRequestProcessors():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ReadOnlyZooKeeperServer.setupRequestProcessors()` writes to field `this.firstProcessor` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/ReadOnlyZooKeeperServer.java","tnLine":58,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.ReadOnlyZooKeeperServer.setupRequestProcessors():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void NettyServerCnxnFactory.shutdown()` reads without synchronization from `this.parentChannel`. Potentially races with write in method `NettyServerCnxnFactory.startup(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/NettyServerCnxnFactory.java","tnLine":433,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.NettyServerCnxnFactory.shutdown():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void NettyServerCnxnFactory.shutdown()` reads without synchronization from `this.login`. Potentially races with write in method `NettyServerCnxnFactory.configure(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/NettyServerCnxnFactory.java","tnLine":426,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.NettyServerCnxnFactory.shutdown():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void NettyServerCnxnFactory.shutdown()` indirectly writes to field `this.x509Util.keyStoreFileWatcher` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/NettyServerCnxnFactory.java","tnLine":424,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.NettyServerCnxnFactory.shutdown():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void NettyServerCnxnFactory.shutdown()` reads without synchronization from `this.zkServer`. Potentially races with write in method `NettyServerCnxnFactory.startup(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/NettyServerCnxnFactory.java","tnLine":456,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.NettyServerCnxnFactory.shutdown():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void NettyServerCnxnFactory.shutdown()` reads without synchronization from `this.localAddress`. Potentially races with write in method `NettyServerCnxnFactory.startup(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/NettyServerCnxnFactory.java","tnLine":422,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.NettyServerCnxnFactory.shutdown():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void FastLeaderElection.shutdown()` writes to field `this.proposedZxid` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java","tnLine":682,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.FastLeaderElection.shutdown():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void FastLeaderElection.shutdown()` writes to field `this.leadingVoteSet` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java","tnLine":683,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.FastLeaderElection.shutdown():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void FastLeaderElection.shutdown()` writes to field `this.proposedLeader` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java","tnLine":681,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.FastLeaderElection.shutdown():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Learner.shutdown()` indirectly writes to field `this.self.cnxnFactory.zkServer` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Learner.java","tnLine":674,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.Learner.shutdown():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void QuorumPeer.shutdown()` reads without synchronization from `this.leader`. Potentially races with write in method `QuorumPeer.setLeader(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java","tnLine":1356,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.QuorumPeer.shutdown():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Leader.shutdown(String)` indirectly reads with synchronization from `this.zk.jmxServerBean`. Potentially races with unsynchronized write in method `Leader.lead()`.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Leader.java","tnLine":743,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.Leader.shutdown(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Leader.shutdown(String)` indirectly writes to field `this.self.cnxnFactory.zkServer` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Leader.java","tnLine":733,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.Leader.shutdown(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Leader.shutdown(String)` reads without synchronization from `this.isShutdown`. Potentially races with write in method `Leader.shutdown(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Leader.java","tnLine":721,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.Leader.shutdown(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int ReferenceCountedACLCache.size()` reads without synchronization from container `this.aclKeyMap` via call to `size`. Potentially races with write in method `ReferenceCountedACLCache.convertAcls(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ReferenceCountedACLCache.java","tnLine":143,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ReferenceCountedACLCache.size():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `long UnifiedServerSocket$UnifiedInputStream.skip(long)` indirectly writes to field `this.realInputStream` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/UnifiedServerSocket.java","tnLine":706,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.UnifiedServerSocket$UnifiedInputStream.skip(long):long","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ZooKeeperServer.startJvmPauseMonitor()` indirectly writes to field `this.jvmPauseMonitor.monitorThread` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java","tnLine":569,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZooKeeperServer.startJvmPauseMonitor():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ZooKeeperServer.startSessionTracker()` reads without synchronization from `this.sessionTracker`. Potentially races with write in method `ZooKeeperServer.startup()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java","tnLine":602,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZooKeeperServer.startSessionTracker():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Stat ZKDatabase.statNode(String,ServerCnxn)` reads without synchronization from `this.dataTree`. Potentially races with write in method `ZKDatabase.clear()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZKDatabase.java","tnLine":469,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZKDatabase.statNode(java.lang.String,org.apache.zookeeper.server.ServerCnxn):org.apache.zookeeper.data.Stat","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `ReplyHeader ClientCnxn.submitRequest(RequestHeader,Record,Record,ZooKeeper$WatchRegistration)` indirectly writes to field `p.finished` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java","tnLine":1540,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxn.submitRequest(org.apache.zookeeper.proto.RequestHeader,org.apache.jute.Record,org.apache.jute.Record,org.apache.zookeeper.ZooKeeper$WatchRegistration):org.apache.zookeeper.proto.ReplyHeader","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `ReplyHeader ClientCnxn.submitRequest(RequestHeader,Record,Record,ZooKeeper$WatchRegistration,WatchDeregistration)` indirectly writes to field `p.finished` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java","tnLine":1562,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxn.submitRequest(org.apache.zookeeper.proto.RequestHeader,org.apache.jute.Record,org.apache.jute.Record,org.apache.zookeeper.ZooKeeper$WatchRegistration,org.apache.zookeeper.WatchDeregistration):org.apache.zookeeper.proto.ReplyHeader","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ZooKeeperServer.submitRequest(Request)` indirectly reads without synchronization from `this.sessionTracker`. Potentially races with write in method `ZooKeeperServer.createSessionTracker()`.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java","tnLine":923,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZooKeeperServer.submitRequest(org.apache.zookeeper.server.Request):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ZooKeeperServer.submitRequest(Request)` indirectly writes to field `si.e` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java","tnLine":932,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZooKeeperServer.submitRequest(org.apache.zookeeper.server.Request):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ZooKeeperServer.submitRequest(Request)` reads without synchronization from `this.firstProcessor`. Potentially races with write in method `ZooKeeperServer.setupRequestProcessors()`.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java","tnLine":926,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZooKeeperServer.submitRequest(org.apache.zookeeper.server.Request):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean LearnerHandler.syncFollower(long,LearnerMaster)` indirectly reads without synchronization from `this.sid`. Potentially races with write in method `LearnerHandler.run()`.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/LearnerHandler.java","tnLine":857,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.LearnerHandler.syncFollower(long,org.apache.zookeeper.server.quorum.LearnerMaster):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean LearnerHandler.syncFollower(long,LearnerMaster)` reads without synchronization from `this.needOpPacket`. Potentially races with write in method `LearnerHandler.queueCommittedProposals(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/LearnerHandler.java","tnLine":854,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.LearnerHandler.syncFollower(long,org.apache.zookeeper.server.quorum.LearnerMaster):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Learner.syncWithLeader(long)` indirectly reads without synchronization from `this.leaderIs`. Potentially races with write in method `Learner.connectToLeader(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Learner.java","tnLine":399,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.Learner.syncWithLeader(long):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ZooKeeperServer.takeSnapshot()` indirectly reads without synchronization from `this.zkDb.dataTree`. Potentially races with write in method `ZooKeeperServer.shutdown(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java","tnLine":401,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZooKeeperServer.takeSnapshot():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ZooKeeperServer.takeSnapshot(boolean)` indirectly reads without synchronization from `this.zkDb.dataTree`. Potentially races with write in method `ZooKeeperServer.shutdown(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java","tnLine":407,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZooKeeperServer.takeSnapshot(boolean):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ClientCnxnSocketNetty.testableCloseSocket()` reads without synchronization from `this.channel`. Potentially races with write in method `ClientCnxnSocketNetty.cleanup()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxnSocketNetty.java","tnLine":405,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxnSocketNetty.testableCloseSocket():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `String ClientCnxn.toString()` reads without synchronization from `this.xid`. Potentially races with write in method `ClientCnxn.getXid()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java","tnLine":240,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxn.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Leader.touch(long,int)` indirectly reads without synchronization from `this.zk.sessionTracker`. Potentially races with write in method `Leader.lead()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Leader.java","tnLine":1596,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.Leader.touch(long,int):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean LeaderZooKeeperServer.touch(long,int)` reads without synchronization from `this.sessionTracker`. Potentially races with write in method `LeaderZooKeeperServer.startup()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/LeaderZooKeeperServer.java","tnLine":123,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.LeaderZooKeeperServer.touch(long,int):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ZooKeeperServer.touch(ServerCnxn)` reads without synchronization from `this.sessionTracker`. Potentially races with write in method `ZooKeeperServer.startup()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java","tnLine":515,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZooKeeperServer.touch(org.apache.zookeeper.server.ServerCnxn):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `boolean ZKDatabase.truncateLog(long)` indirectly writes to field `this.dataTree` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZKDatabase.java","tnLine":563,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZKDatabase.truncateLog(long):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean ZKDatabase.truncateLog(long)` indirectly reads with synchronization from `this.dataTree`. Potentially races with unsynchronized write in method `ZKDatabase.clear()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZKDatabase.java","tnLine":572,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZKDatabase.truncateLog(long):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean ClientCnxn$SendThread.tunnelAuthInProgress()` indirectly reads without synchronization from `this.this$0.zooKeeperSaslClient.gotLastPacket`. Potentially races with write in method `ClientCnxn$SendThread.readResponse(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java","tnLine":1461,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxn$SendThread.tunnelAuthInProgress():boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean ClientCnxn$SendThread.tunnelAuthInProgress()` reads without synchronization from `this.this$0.zooKeeperSaslClient`. Potentially races with write in method `ClientCnxn$SendThread.run()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java","tnLine":1456,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxn$SendThread.tunnelAuthInProgress():boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean ClientCnxn$SendThread.tunnelAuthInProgress()` reads without synchronization from `this.saslLoginFailed`. Potentially races with write in method `ClientCnxn$SendThread.run()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java","tnLine":1450,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.ClientCnxn$SendThread.tunnelAuthInProgress():boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void MBeanRegistry.unregister(ZKMBeanInfo)` mutates container `this.mapBean2Path` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/jmx/MBeanRegistry.java","tnLine":150,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.jmx.MBeanRegistry.unregister(org.apache.zookeeper.jmx.ZKMBeanInfo):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ZooKeeperServer.unregisterJMX()` writes to field `this.jmxDataTreeBean` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java","tnLine":720,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZooKeeperServer.unregisterJMX():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ZooKeeperServer.unregisterJMX()` writes to field `this.jmxServerBean` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java","tnLine":719,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZooKeeperServer.unregisterJMX():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ZooKeeperServer.unregisterJMX()` reads without synchronization from `this.jmxDataTreeBean`. Potentially races with write in method `ZooKeeperServer.shutdown(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java","tnLine":706,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZooKeeperServer.unregisterJMX():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ZooKeeperServer.unregisterJMX()` reads without synchronization from `this.jmxServerBean`. Potentially races with write in method `ZooKeeperServer.shutdown(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java","tnLine":713,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.ZooKeeperServer.unregisterJMX():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void LeaderZooKeeperServer.unregisterJMX()` reads without synchronization from `this.jmxDataTreeBean`. Potentially races with write in method `LeaderZooKeeperServer.shutdown()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/LeaderZooKeeperServer.java","tnLine":204,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.LeaderZooKeeperServer.unregisterJMX():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void LeaderZooKeeperServer.unregisterJMX()` writes to field `this.jmxDataTreeBean` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/LeaderZooKeeperServer.java","tnLine":210,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.LeaderZooKeeperServer.unregisterJMX():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void LearnerZooKeeperServer.unregisterJMX()` reads without synchronization from `this.jmxDataTreeBean`. Potentially races with write in method `LearnerZooKeeperServer.shutdown()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/LearnerZooKeeperServer.java","tnLine":139,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.LearnerZooKeeperServer.unregisterJMX():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void LearnerZooKeeperServer.unregisterJMX()` writes to field `this.jmxDataTreeBean` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/LearnerZooKeeperServer.java","tnLine":145,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.LearnerZooKeeperServer.unregisterJMX():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ReadOnlyZooKeeperServer.unregisterJMX()` reads without synchronization from `this.jmxDataTreeBean`. Potentially races with write in method `ReadOnlyZooKeeperServer.startup()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/ReadOnlyZooKeeperServer.java","tnLine":103,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.ReadOnlyZooKeeperServer.unregisterJMX():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ReadOnlyZooKeeperServer.unregisterJMX()` writes to field `this.jmxDataTreeBean` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/ReadOnlyZooKeeperServer.java","tnLine":109,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.ReadOnlyZooKeeperServer.unregisterJMX():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ReadOnlyZooKeeperServer.unregisterJMX(ZooKeeperServer)` writes to field `this.jmxServerBean` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/ReadOnlyZooKeeperServer.java","tnLine":121,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.ReadOnlyZooKeeperServer.unregisterJMX(org.apache.zookeeper.server.ZooKeeperServer):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ReadOnlyZooKeeperServer.unregisterJMX(ZooKeeperServer)` reads without synchronization from `this.jmxServerBean`. Potentially races with write in method `ReadOnlyZooKeeperServer.startup()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/ReadOnlyZooKeeperServer.java","tnLine":115,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.ReadOnlyZooKeeperServer.unregisterJMX(org.apache.zookeeper.server.ZooKeeperServer):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void LeaderZooKeeperServer.unregisterJMX(Leader)` reads without synchronization from `this.jmxServerBean`. Potentially races with write in method `LeaderZooKeeperServer.shutdown()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/LeaderZooKeeperServer.java","tnLine":216,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.LeaderZooKeeperServer.unregisterJMX(org.apache.zookeeper.server.quorum.Leader):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void LeaderZooKeeperServer.unregisterJMX(Leader)` writes to field `this.jmxServerBean` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/LeaderZooKeeperServer.java","tnLine":222,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.LeaderZooKeeperServer.unregisterJMX(org.apache.zookeeper.server.quorum.Leader):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void LearnerZooKeeperServer.unregisterJMX(Learner)` reads without synchronization from `this.jmxServerBean`. Potentially races with write in method `LearnerZooKeeperServer.shutdown()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/LearnerZooKeeperServer.java","tnLine":151,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.LearnerZooKeeperServer.unregisterJMX(org.apache.zookeeper.server.quorum.Learner):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void LearnerZooKeeperServer.unregisterJMX(Learner)` writes to field `this.jmxServerBean` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/LearnerZooKeeperServer.java","tnLine":157,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.LearnerZooKeeperServer.unregisterJMX(org.apache.zookeeper.server.quorum.Learner):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `QuorumPeer$QuorumServer QuorumPeer.validateLearnerMaster(String)` indirectly reads without synchronization from container `this.observerMasters` via call to `size`. Potentially races with write in method `QuorumPeer.setQuorumVerifier(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java","tnLine":2116,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.QuorumPeer.validateLearnerMaster(java.lang.String):org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Learner.writePacket(QuorumPacket,boolean)` reads without synchronization from `this.leaderOs`. Potentially races with write in method `Learner.connectToLeader(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Learner.java","tnLine":149,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.apache.zookeeper.server.quorum.Learner.writePacket(org.apache.zookeeper.server.quorum.QuorumPacket,boolean):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}}],null,{"analysisLOC":null,"analysisBuildSys":null,"analysisLang":null}]}],[{"tag":"ErrorProne"},{"tag":"ToolSuccess","contents":[[],null,{"analysisLOC":null,"analysisBuildSys":"Maven []","analysisLang":null}]}]]}}
