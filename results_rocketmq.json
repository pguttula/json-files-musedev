{"requestedTools":null,"toolResults":[[{"tag":"Infer"},{"tag":"ToolSuccess","contents":[[{"tnType":"NULL_DEREFERENCE","tnDesc":"object `extFieldsBytes` last assigned on line 41 could be null and is dereferenced at line 42.","tnFile":"remoting/src/main/java/org/apache/rocketmq/remoting/protocol/RocketMQSerializable.java","tnLine":42,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"byte[] RocketMQSerializable.rocketMQProtocolEncode(RemotingCommand)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `dupMsgMap.get(valueOf(i))` could be null and is dereferenced at line 84.","tnFile":"test/src/main/java/org/apache/rocketmq/test/util/DuplicateMessageInfo.java","tnLine":84,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void DuplicateMessageInfo.checkDuplicatedMessageInfo(boolean,List)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"format string arguments don't mach provided arguments in printf(...) at line 55.","tnFile":"example/src/main/java/org/apache/rocketmq/example/operation/Producer.java","tnLine":55,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void Producer.main(java.lang.String[])","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `consumer.consumer` last assigned on line 39 could be null and is dereferenced by call to `start()` at line 42.","tnFile":"test/src/main/java/org/apache/rocketmq/test/factory/ConsumerFactory.java","tnLine":42,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"RMQNormalConsumer ConsumerFactory.getRMQNormalConsumer(String,String,String,String,AbstractListener,boolean)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `InputStreamReader(...)` at line 39 is not released after line 39.","tnFile":"common/src/main/java/org/apache/rocketmq/common/utils/IOTinyUtils.java","tnLine":39,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"String IOTinyUtils.toString(InputStream,String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"format string arguments don't mach provided arguments in printf(...) at line 44.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/offset/ResetOffsetByTimeOldCommand.java","tnLine":44,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ResetOffsetByTimeOldCommand.resetOffset(DefaultMQAdminExt,String,String,long,boolean,String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"format string arguments don't mach provided arguments in printf(...) at line 54.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/offset/ResetOffsetByTimeOldCommand.java","tnLine":54,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ResetOffsetByTimeOldCommand.resetOffset(DefaultMQAdminExt,String,String,long,boolean,String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"printf(...) at line 111: parameter 2 is expected to be of type java.lang.Integer but java.lang.String was given.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/stats/StatsAllSubCommand.java","tnLine":111,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void StatsAllSubCommand.printTopicDetail(DefaultMQAdminExt,String,boolean)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"printf(...) at line 97: parameter 2 is expected to be of type java.lang.Integer but java.lang.String was given.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/stats/StatsAllSubCommand.java","tnLine":97,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void StatsAllSubCommand.printTopicDetail(DefaultMQAdminExt,String,boolean)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `first` last assigned on line 46 could be null and is dereferenced at line 68.","tnFile":"common/src/main/java/org/apache/rocketmq/common/message/MessageBatch.java","tnLine":68,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"MessageBatch MessageBatch.generateFromList(Collection)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.CharArrayWriter` acquired to `sw` by call to `new()` at line 44 is not released after line 46.","tnFile":"common/src/main/java/org/apache/rocketmq/common/utils/IOTinyUtils.java","tnLine":46,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"String IOTinyUtils.toString(Reader)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `consumer.getDefaultMQPullConsumerImpl().getOffsetStore()` could be null and is dereferenced at line 77.","tnFile":"client/src/main/java/org/apache/rocketmq/client/MQHelper.java","tnLine":77,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void MQHelper.resetOffsetByTimestamp(MessageModel,String,String,String,long)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `consumer.consumer` last assigned on line 49 could be null and is dereferenced by call to `create()` at line 51.","tnFile":"test/src/main/java/org/apache/rocketmq/test/factory/ConsumerFactory.java","tnLine":51,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"RMQBroadCastConsumer ConsumerFactory.getRMQBroadCastConsumer(String,String,String,String,AbstractListener)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `buffer` last assigned on line 59 could be null and is dereferenced at line 62.","tnFile":"common/src/main/java/org/apache/rocketmq/common/protocol/body/RegisterBrokerBody.java","tnLine":62,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"byte[] RegisterBrokerBody.encode(boolean)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.util.zip.Deflater` acquired by call to `Deflater(...)` at line 54 is not released after line 54.","tnFile":"common/src/main/java/org/apache/rocketmq/common/protocol/body/RegisterBrokerBody.java","tnLine":54,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"byte[] RegisterBrokerBody.encode(boolean)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"format string arguments don't mach provided arguments in printf(...) at line 50.","tnFile":"example/src/main/java/org/apache/rocketmq/example/simple/AsyncProducer.java","tnLine":50,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void AsyncProducer$1.onSuccess(SendResult)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"format string arguments don't mach provided arguments in printf(...) at line 73.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/namesrv/GetNamesrvConfigCommand.java","tnLine":73,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void GetNamesrvConfigCommand.execute(CommandLine,Options,RPCHook)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.apache.rocketmq.remoting.netty.FileRegionEncoder$1` acquired by call to `new()` at line 51 is not released after line 77.","tnFile":"remoting/src/main/java/org/apache/rocketmq/remoting/netty/FileRegionEncoder.java","tnLine":77,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void FileRegionEncoder.encode(ChannelHandlerContext,FileRegion,ByteBuf)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"format string arguments don't mach provided arguments in printf(...) at line 109.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/message/QueryMsgByIdSubCommand.java","tnLine":109,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void QueryMsgByIdSubCommand.printMsg(DefaultMQAdminExt,MessageExt)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"format string arguments don't mach provided arguments in printf(...) at line 114.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/message/QueryMsgByIdSubCommand.java","tnLine":114,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void QueryMsgByIdSubCommand.printMsg(DefaultMQAdminExt,MessageExt)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"format string arguments don't mach provided arguments in printf(...) at line 119.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/message/QueryMsgByIdSubCommand.java","tnLine":119,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void QueryMsgByIdSubCommand.printMsg(DefaultMQAdminExt,MessageExt)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"format string arguments don't mach provided arguments in printf(...) at line 124.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/message/QueryMsgByIdSubCommand.java","tnLine":124,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void QueryMsgByIdSubCommand.printMsg(DefaultMQAdminExt,MessageExt)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"format string arguments don't mach provided arguments in printf(...) at line 139.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/message/QueryMsgByIdSubCommand.java","tnLine":139,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void QueryMsgByIdSubCommand.printMsg(DefaultMQAdminExt,MessageExt)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"format string arguments don't mach provided arguments in printf(...) at line 64.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/message/QueryMsgByIdSubCommand.java","tnLine":64,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void QueryMsgByIdSubCommand.printMsg(DefaultMQAdminExt,MessageExt)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"format string arguments don't mach provided arguments in printf(...) at line 69.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/message/QueryMsgByIdSubCommand.java","tnLine":69,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void QueryMsgByIdSubCommand.printMsg(DefaultMQAdminExt,MessageExt)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"format string arguments don't mach provided arguments in printf(...) at line 74.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/message/QueryMsgByIdSubCommand.java","tnLine":74,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void QueryMsgByIdSubCommand.printMsg(DefaultMQAdminExt,MessageExt)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"format string arguments don't mach provided arguments in printf(...) at line 79.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/message/QueryMsgByIdSubCommand.java","tnLine":79,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void QueryMsgByIdSubCommand.printMsg(DefaultMQAdminExt,MessageExt)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"format string arguments don't mach provided arguments in printf(...) at line 84.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/message/QueryMsgByIdSubCommand.java","tnLine":84,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void QueryMsgByIdSubCommand.printMsg(DefaultMQAdminExt,MessageExt)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"printf(...) at line 104: parameter 2 is expected to be of type java.lang.Integer but java.lang.String was given.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/message/QueryMsgByIdSubCommand.java","tnLine":104,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void QueryMsgByIdSubCommand.printMsg(DefaultMQAdminExt,MessageExt)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"printf(...) at line 129: parameter 2 is expected to be of type java.lang.Integer but java.lang.String was given.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/message/QueryMsgByIdSubCommand.java","tnLine":129,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void QueryMsgByIdSubCommand.printMsg(DefaultMQAdminExt,MessageExt)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"printf(...) at line 89: parameter 2 is expected to be of type java.lang.Integer but java.lang.String was given.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/message/QueryMsgByIdSubCommand.java","tnLine":89,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void QueryMsgByIdSubCommand.printMsg(DefaultMQAdminExt,MessageExt)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"printf(...) at line 94: parameter 2 is expected to be of type java.lang.Integer but java.lang.String was given.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/message/QueryMsgByIdSubCommand.java","tnLine":94,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void QueryMsgByIdSubCommand.printMsg(DefaultMQAdminExt,MessageExt)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"printf(...) at line 99: parameter 2 is expected to be of type java.lang.Integer but java.lang.String was given.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/message/QueryMsgByIdSubCommand.java","tnLine":99,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void QueryMsgByIdSubCommand.printMsg(DefaultMQAdminExt,MessageExt)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"format string arguments don't mach provided arguments in printf(...) at line 56.","tnFile":"example/src/main/java/org/apache/rocketmq/example/operation/Consumer.java","tnLine":56,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"ConsumeConcurrentlyStatus Consumer$1.consumeMessage(List,ConsumeConcurrentlyContext)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"format string arguments don't mach provided arguments in printf(...) at line 56.","tnFile":"example/src/main/java/org/apache/rocketmq/example/simple/AsyncProducer.java","tnLine":56,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void AsyncProducer$1.onException(Throwable)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"Format string must be string literal.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/broker/CleanExpiredCQSubCommand.java","tnLine":71,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void CleanExpiredCQSubCommand.execute(CommandLine,Options,RPCHook)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"Format string must be string literal.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/broker/CleanUnusedTopicCommand.java","tnLine":71,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void CleanUnusedTopicCommand.execute(CommandLine,Options,RPCHook)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `topicWrapper.getDataVersion()` could be null and is dereferenced by call to `assignNewOne(...)` at line 65.","tnFile":"broker/src/main/java/org/apache/rocketmq/broker/slave/SlaveSynchronize.java","tnLine":65,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void SlaveSynchronize.syncTopicConfig()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"format string arguments don't mach provided arguments in printf(...) at line 69.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/connection/ConsumerConnectionSubCommand.java","tnLine":69,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ConsumerConnectionSubCommand.execute(CommandLine,Options,RPCHook)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"format string arguments don't mach provided arguments in printf(...) at line 84.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/connection/ConsumerConnectionSubCommand.java","tnLine":84,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ConsumerConnectionSubCommand.execute(CommandLine,Options,RPCHook)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"format string arguments don't mach provided arguments in printf(...) at line 70.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/topic/TopicStatusSubCommand.java","tnLine":70,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void TopicStatusSubCommand.execute(CommandLine,Options,RPCHook)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"format string arguments don't mach provided arguments in printf(...) at line 86.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/topic/TopicStatusSubCommand.java","tnLine":86,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void TopicStatusSubCommand.execute(CommandLine,Options,RPCHook)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `topicOffset` last assigned on line 79 could be null and is dereferenced at line 82.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/topic/TopicStatusSubCommand.java","tnLine":82,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void TopicStatusSubCommand.execute(CommandLine,Options,RPCHook)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `consumer.consumer` last assigned on line 59 could be null and is dereferenced by call to `create()` at line 61.","tnFile":"test/src/main/java/org/apache/rocketmq/test/factory/ConsumerFactory.java","tnLine":61,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"RMQSqlConsumer ConsumerFactory.getRMQSqlConsumer(String,String,String,MessageSelector,AbstractListener)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"format string arguments don't mach provided arguments in printf(...) at line 71.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/connection/ProducerConnectionSubCommand.java","tnLine":71,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ProducerConnectionSubCommand.execute(CommandLine,Options,RPCHook)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"format string arguments don't mach provided arguments in printf(...) at line 102.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/message/QueryMsgByUniqueKeySubCommand.java","tnLine":102,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void QueryMsgByUniqueKeySubCommand.queryById(DefaultMQAdminExt,String,String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"format string arguments don't mach provided arguments in printf(...) at line 107.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/message/QueryMsgByUniqueKeySubCommand.java","tnLine":107,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void QueryMsgByUniqueKeySubCommand.queryById(DefaultMQAdminExt,String,String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"format string arguments don't mach provided arguments in printf(...) at line 112.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/message/QueryMsgByUniqueKeySubCommand.java","tnLine":112,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void QueryMsgByUniqueKeySubCommand.queryById(DefaultMQAdminExt,String,String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"format string arguments don't mach provided arguments in printf(...) at line 117.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/message/QueryMsgByUniqueKeySubCommand.java","tnLine":117,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void QueryMsgByUniqueKeySubCommand.queryById(DefaultMQAdminExt,String,String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"format string arguments don't mach provided arguments in printf(...) at line 132.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/message/QueryMsgByUniqueKeySubCommand.java","tnLine":132,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void QueryMsgByUniqueKeySubCommand.queryById(DefaultMQAdminExt,String,String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"format string arguments don't mach provided arguments in printf(...) at line 67.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/message/QueryMsgByUniqueKeySubCommand.java","tnLine":67,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void QueryMsgByUniqueKeySubCommand.queryById(DefaultMQAdminExt,String,String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"format string arguments don't mach provided arguments in printf(...) at line 72.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/message/QueryMsgByUniqueKeySubCommand.java","tnLine":72,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void QueryMsgByUniqueKeySubCommand.queryById(DefaultMQAdminExt,String,String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"format string arguments don't mach provided arguments in printf(...) at line 77.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/message/QueryMsgByUniqueKeySubCommand.java","tnLine":77,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void QueryMsgByUniqueKeySubCommand.queryById(DefaultMQAdminExt,String,String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"printf(...) at line 122: parameter 2 is expected to be of type java.lang.Integer but java.lang.String was given.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/message/QueryMsgByUniqueKeySubCommand.java","tnLine":122,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void QueryMsgByUniqueKeySubCommand.queryById(DefaultMQAdminExt,String,String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"printf(...) at line 82: parameter 2 is expected to be of type java.lang.Integer but java.lang.String was given.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/message/QueryMsgByUniqueKeySubCommand.java","tnLine":82,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void QueryMsgByUniqueKeySubCommand.queryById(DefaultMQAdminExt,String,String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"printf(...) at line 87: parameter 2 is expected to be of type java.lang.Integer but java.lang.String was given.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/message/QueryMsgByUniqueKeySubCommand.java","tnLine":87,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void QueryMsgByUniqueKeySubCommand.queryById(DefaultMQAdminExt,String,String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"printf(...) at line 92: parameter 2 is expected to be of type java.lang.Integer but java.lang.String was given.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/message/QueryMsgByUniqueKeySubCommand.java","tnLine":92,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void QueryMsgByUniqueKeySubCommand.queryById(DefaultMQAdminExt,String,String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"printf(...) at line 97: parameter 2 is expected to be of type java.lang.Integer but java.lang.String was given.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/message/QueryMsgByUniqueKeySubCommand.java","tnLine":97,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void QueryMsgByUniqueKeySubCommand.queryById(DefaultMQAdminExt,String,String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"format string arguments don't mach provided arguments in printf(...) at line 77.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/offset/GetConsumerStatusCommand.java","tnLine":77,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void GetConsumerStatusCommand.execute(CommandLine,Options,RPCHook)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"format string arguments don't mach provided arguments in printf(...) at line 88.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/offset/GetConsumerStatusCommand.java","tnLine":88,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void GetConsumerStatusCommand.execute(CommandLine,Options,RPCHook)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"format string arguments don't mach provided arguments in printf(...) at line 70.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/topic/TopicListSubCommand.java","tnLine":70,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void TopicListSubCommand.execute(CommandLine,Options,RPCHook)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"format string arguments don't mach provided arguments in printf(...) at line 99.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/topic/TopicListSubCommand.java","tnLine":99,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void TopicListSubCommand.execute(CommandLine,Options,RPCHook)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"format string arguments don't mach provided arguments in printf(...) at line 110.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/message/CheckMsgSendRTCommand.java","tnLine":110,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void CheckMsgSendRTCommand.execute(CommandLine,Options,RPCHook)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"format string arguments don't mach provided arguments in printf(...) at line 80.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/message/CheckMsgSendRTCommand.java","tnLine":80,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void CheckMsgSendRTCommand.execute(CommandLine,Options,RPCHook)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"format string arguments don't mach provided arguments in printf(...) at line 92.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/consumer/ConsumerSubCommand.java","tnLine":92,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ConsumerSubCommand.execute(CommandLine,Options,RPCHook)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `rt` last assigned on line 78 could be null and is dereferenced at line 79.","tnFile":"broker/src/main/java/org/apache/rocketmq/broker/latency/BrokerFastFailure.java","tnLine":79,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void BrokerFastFailure.cleanExpiredRequest()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `request.getExtFields()` could be null and is dereferenced at line 82.","tnFile":"broker/src/main/java/org/apache/rocketmq/broker/processor/QueryMessageProcessor.java","tnLine":82,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"RemotingCommand QueryMessageProcessor.queryMessage(ChannelHandlerContext,RemotingCommand)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired by call to `new()` at line 88 is not released after line 131.\n**Note**: potential exception at line 90","tnFile":"namesrv/src/main/java/org/apache/rocketmq/namesrv/NamesrvStartup.java","tnLine":131,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"NamesrvController NamesrvStartup.createNamesrvController(java.lang.String[])","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"format string arguments don't mach provided arguments in printf(...) at line 93.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/consumer/ConsumerStatusSubCommand.java","tnLine":93,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ConsumerStatusSubCommand.execute(CommandLine,Options,RPCHook)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"format string arguments don't mach provided arguments in printf(...) at line 114.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/offset/ResetOffsetByTimeCommand.java","tnLine":114,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ResetOffsetByTimeCommand.execute(CommandLine,Options,RPCHook)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"format string arguments don't mach provided arguments in printf(...) at line 122.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/offset/ResetOffsetByTimeCommand.java","tnLine":122,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ResetOffsetByTimeCommand.execute(CommandLine,Options,RPCHook)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"Format string must be string literal.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/broker/SendMsgStatusCommand.java","tnLine":88,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void SendMsgStatusCommand.execute(CommandLine,Options,RPCHook)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"format string arguments don't mach provided arguments in printf(...) at line 85.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/message/PrintMessageByQueueCommand.java","tnLine":85,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void PrintMessageByQueueCommand.printCalculateByTag(Map,boolean)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"format string arguments don't mach provided arguments in printf(...) at line 78.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/message/QueryMsgByKeySubCommand.java","tnLine":78,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void QueryMsgByKeySubCommand.queryByKey(DefaultMQAdminExt,String,String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"printf(...) at line 83: parameter 2 is expected to be of type java.lang.Integer but java.lang.String was given.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/message/QueryMsgByKeySubCommand.java","tnLine":83,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void QueryMsgByKeySubCommand.queryByKey(DefaultMQAdminExt,String,String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `msg` last assigned on line 83 could be null and is dereferenced by call to `sendMessageBack(...)` at line 102.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/ProcessQueue.java","tnLine":102,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ProcessQueue.cleanExpiredMsg(DefaultMQPushConsumer)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 92 is not released after line 103.\n**Note**: potential exception at line 97","tnFile":"common/src/main/java/org/apache/rocketmq/common/utils/IOTinyUtils.java","tnLine":103,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void IOTinyUtils.copyFile(String,String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"format string arguments don't mach provided arguments in printf(...) at line 123.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/cluster/CLusterSendMsgRTCommand.java","tnLine":123,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void CLusterSendMsgRTCommand.execute(CommandLine,Options,RPCHook)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"format string arguments don't mach provided arguments in printf(...) at line 166.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/cluster/CLusterSendMsgRTCommand.java","tnLine":166,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void CLusterSendMsgRTCommand.execute(CommandLine,Options,RPCHook)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"format string arguments don't mach provided arguments in printf(...) at line 133.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/message/SendMessageCommand.java","tnLine":133,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void SendMessageCommand.execute(CommandLine,Options,RPCHook)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"format string arguments don't mach provided arguments in printf(...) at line 141.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/message/SendMessageCommand.java","tnLine":141,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void SendMessageCommand.execute(CommandLine,Options,RPCHook)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"format string arguments don't mach provided arguments in printf(...) at line 148.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/message/SendMessageCommand.java","tnLine":148,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void SendMessageCommand.execute(CommandLine,Options,RPCHook)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"format string arguments don't mach provided arguments in printf(...) at line 108.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/broker/BrokerConsumeStatsSubCommad.java","tnLine":108,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void BrokerConsumeStatsSubCommad.execute(CommandLine,Options,RPCHook)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"format string arguments don't mach provided arguments in printf(...) at line 139.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/broker/BrokerConsumeStatsSubCommad.java","tnLine":139,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void BrokerConsumeStatsSubCommad.execute(CommandLine,Options,RPCHook)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired by call to `new()` at line 128 is not released after line 244.\n**Note**: potential exception at line 130","tnFile":"broker/src/main/java/org/apache/rocketmq/broker/BrokerStartup.java","tnLine":244,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"BrokerController BrokerStartup.createBrokerController(java.lang.String[])","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.LineNumberReader` acquired to `reader` by call to `new()` at line 103 is not released after line 107.","tnFile":"logging/src/main/java/org/apache/rocketmq/logging/inner/LoggingEvent.java","tnLine":107,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"java.lang.String[] LoggingEvent.getThrowableStr()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"format string arguments don't mach provided arguments in printf(...) at line 115.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/consumer/ConsumerProgressSubCommand.java","tnLine":115,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ConsumerProgressSubCommand.execute(CommandLine,Options,RPCHook)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"format string arguments don't mach provided arguments in printf(...) at line 161.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/consumer/ConsumerProgressSubCommand.java","tnLine":161,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ConsumerProgressSubCommand.execute(CommandLine,Options,RPCHook)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `offsetWrapper` last assigned on line 127 could be null and is dereferenced at line 128.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/consumer/ConsumerProgressSubCommand.java","tnLine":128,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ConsumerProgressSubCommand.execute(CommandLine,Options,RPCHook)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"format string arguments don't mach provided arguments in printf(...) at line 105.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/broker/BrokerStatusSubCommand.java","tnLine":105,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void BrokerStatusSubCommand.printBrokerRuntimeStats(DefaultMQAdminExt,String,boolean)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"format string arguments don't mach provided arguments in printf(...) at line 107.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/broker/BrokerStatusSubCommand.java","tnLine":107,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void BrokerStatusSubCommand.printBrokerRuntimeStats(DefaultMQAdminExt,String,boolean)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `InputStreamReader(...)` at line 106 is not released after line 128.\n**Note**: potential exception at line 110","tnFile":"broker/src/main/java/org/apache/rocketmq/broker/util/ServiceProvider.java","tnLine":128,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List ServiceProvider.load(String,Class)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.util.zip.InflaterInputStream` acquired to `inflaterInputStream` by call to `new()` at line 103 is not released after line 127.","tnFile":"common/src/main/java/org/apache/rocketmq/common/protocol/body/RegisterBrokerBody.java","tnLine":127,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"RegisterBrokerBody RegisterBrokerBody.decode(byte[],boolean)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getEffectiveLevel()` could be null and is dereferenced by call to `isGreaterOrEqual(...)` at line 103.","tnFile":"logging/src/main/java/org/apache/rocketmq/logging/inner/Logger.java","tnLine":103,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void Logger.debug(Object)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"format string arguments don't mach provided arguments in printf(...) at line 104.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/cluster/ClusterListSubCommand.java","tnLine":104,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ClusterListSubCommand.printClusterMoreStats(DefaultMQAdminExt)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"printf(...) at line 150: parameter 2 is expected to be of type java.lang.Integer but java.lang.String was given.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/cluster/ClusterListSubCommand.java","tnLine":150,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ClusterListSubCommand.printClusterMoreStats(DefaultMQAdminExt)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getEffectiveLevel()` could be null and is dereferenced by call to `isGreaterOrEqual(...)` at line 113.","tnFile":"logging/src/main/java/org/apache/rocketmq/logging/inner/Logger.java","tnLine":113,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void Logger.debug(Object,Throwable)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"format string arguments don't mach provided arguments in printf(...) at line 125.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/broker/GetBrokerConfigCommand.java","tnLine":125,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void GetBrokerConfigCommand.getAndPrint(MQAdminExt,String,String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `BrokerStatsManager.statsTable.get(statsName)` could be null and is dereferenced at line 117.","tnFile":"store/src/main/java/org/apache/rocketmq/store/stats/BrokerStatsManager.java","tnLine":117,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"StatsItem BrokerStatsManager.getStatsItem(String,String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `subscriptionWrapper.getDataVersion()` could be null and is dereferenced by call to `assignNewOne(...)` at line 131.","tnFile":"broker/src/main/java/org/apache/rocketmq/broker/slave/SlaveSynchronize.java","tnLine":131,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void SlaveSynchronize.syncSubscriptionGroupConfig()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getEffectiveLevel()` could be null and is dereferenced by call to `isGreaterOrEqual(...)` at line 123.","tnFile":"logging/src/main/java/org/apache/rocketmq/logging/inner/Logger.java","tnLine":123,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void Logger.error(Object)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `brokers.get(brokerName)` could be null and is dereferenced at line 127.","tnFile":"test/src/main/java/org/apache/rocketmq/test/util/MQAdmin.java","tnLine":127,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"boolean MQAdmin.isBrokerExist(String,String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `BrokerStatsManager.statsTable.get(\"TOPIC_PUT_NUMS\")` could be null and is dereferenced at line 125.","tnFile":"store/src/main/java/org/apache/rocketmq/store/stats/BrokerStatsManager.java","tnLine":125,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void BrokerStatsManager.incTopicPutNums(String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `msgDupMap.get(valueOf(i))` could be null and is dereferenced at line 128.","tnFile":"test/src/main/java/org/apache/rocketmq/test/util/DuplicateMessageInfo.java","tnLine":128,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"int DuplicateMessageInfo.getDuplicateMsgNum(HashMap)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `brokerNameSet` last assigned on line 129 could be null and is dereferenced at line 130.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/CommandUtil.java","tnLine":130,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"Set CommandUtil.fetchBrokerNameByClusterName(MQAdminExt,String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getEffectiveLevel()` could be null and is dereferenced by call to `isGreaterOrEqual(...)` at line 132.","tnFile":"logging/src/main/java/org/apache/rocketmq/logging/inner/Logger.java","tnLine":132,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void Logger.error(Object,Throwable)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `BrokerStatsManager.statsTable.get(\"TOPIC_PUT_NUMS\")` could be null and is dereferenced at line 129.","tnFile":"store/src/main/java/org/apache/rocketmq/store/stats/BrokerStatsManager.java","tnLine":129,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void BrokerStatsManager.incTopicPutNums(String,int,int)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `BrokerStatsManager.statsTable.get(\"TOPIC_PUT_SIZE\")` could be null and is dereferenced at line 133.","tnFile":"store/src/main/java/org/apache/rocketmq/store/stats/BrokerStatsManager.java","tnLine":133,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void BrokerStatsManager.incTopicPutSize(String,int)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `InputStreamReader(...)` at line 140 is not released after line 152.\n**Note**: potential exception at line 144","tnFile":"broker/src/main/java/org/apache/rocketmq/broker/util/ServiceProvider.java","tnLine":152,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"Object ServiceProvider.loadClass(String,Class)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `BrokerStatsManager.statsTable.get(\"GROUP_GET_NUMS\")` could be null and is dereferenced at line 138.","tnFile":"store/src/main/java/org/apache/rocketmq/store/stats/BrokerStatsManager.java","tnLine":138,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void BrokerStatsManager.incGroupGetNums(String,String,int)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `BrokerStatsManager.statsTable.get(\"GROUP_GET_SIZE\")` could be null and is dereferenced at line 151.","tnFile":"store/src/main/java/org/apache/rocketmq/store/stats/BrokerStatsManager.java","tnLine":151,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void BrokerStatsManager.incGroupGetSize(String,String,int)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `BrokerStatsManager.statsTable.get(\"GROUP_GET_LATENCY\")` could be null and is dereferenced at line 156.","tnFile":"store/src/main/java/org/apache/rocketmq/store/stats/BrokerStatsManager.java","tnLine":156,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void BrokerStatsManager.incGroupGetLatency(String,String,int,int)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `msg` last assigned on line 172 could be null and is dereferenced by call to `sendMessageBack(...)` at line 195.","tnFile":"openmessaging/src/main/java/io/openmessaging/rocketmq/consumer/LocalMessageCache.java","tnLine":195,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void LocalMessageCache.cleanExpireMsg()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `BrokerStatsManager.statsTable.get(\"BROKER_PUT_NUMS\")` could be null and is dereferenced at line 160.","tnFile":"store/src/main/java/org/apache/rocketmq/store/stats/BrokerStatsManager.java","tnLine":160,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void BrokerStatsManager.incBrokerPutNums()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `pgroupRead` last assigned on line 166 could be null and is dereferenced at line 167.","tnFile":"broker/src/main/java/org/apache/rocketmq/broker/processor/EndTransactionProcessor.java","tnLine":167,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"RemotingCommand EndTransactionProcessor.checkPrepareMessage(MessageExt,EndTransactionRequestHeader)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `BrokerStatsManager.statsTable.get(\"BROKER_PUT_NUMS\")` could be null and is dereferenced at line 164.","tnFile":"store/src/main/java/org/apache/rocketmq/store/stats/BrokerStatsManager.java","tnLine":164,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void BrokerStatsManager.incBrokerPutNums(int)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"format string arguments don't mach provided arguments in printf(...) at line 174.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/stats/StatsAllSubCommand.java","tnLine":174,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void StatsAllSubCommand.execute(CommandLine,Options,RPCHook)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `BrokerStatsManager.statsTable.get(\"BROKER_GET_NUMS\")` could be null and is dereferenced at line 168.","tnFile":"store/src/main/java/org/apache/rocketmq/store/stats/BrokerStatsManager.java","tnLine":168,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void BrokerStatsManager.incBrokerGetNums(int)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"format string arguments don't mach provided arguments in printf(...) at line 174.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/cluster/ClusterListSubCommand.java","tnLine":174,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ClusterListSubCommand.printClusterBaseInfo(DefaultMQAdminExt)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"format string arguments don't mach provided arguments in printf(...) at line 257.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/cluster/ClusterListSubCommand.java","tnLine":257,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ClusterListSubCommand.printClusterBaseInfo(DefaultMQAdminExt)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `BrokerStatsManager.statsTable.get(\"SNDBCK_PUT_NUMS\")` could be null and is dereferenced at line 173.","tnFile":"store/src/main/java/org/apache/rocketmq/store/stats/BrokerStatsManager.java","tnLine":173,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void BrokerStatsManager.incSendBackNums(String,String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `BrokerStatsManager.statsTable.get(\"GROUP_GET_NUMS\")` could be null and is dereferenced at line 178.","tnFile":"store/src/main/java/org/apache/rocketmq/store/stats/BrokerStatsManager.java","tnLine":178,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"double BrokerStatsManager.tpsGroupGetNums(String,String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getEffectiveLevel()` could be null and is dereferenced by call to `isGreaterOrEqual(...)` at line 182.","tnFile":"logging/src/main/java/org/apache/rocketmq/logging/inner/Logger.java","tnLine":182,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void Logger.info(Object)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `mappedFile` last assigned on line 197 could be null and is dereferenced at line 198.","tnFile":"store/src/main/java/org/apache/rocketmq/store/dledger/DLedgerCommitLog.java","tnLine":198,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"int DLedgerCommitLog.deleteExpiredFile(long,int,long,boolean)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getEffectiveLevel()` could be null and is dereferenced by call to `isGreaterOrEqual(...)` at line 191.","tnFile":"logging/src/main/java/org/apache/rocketmq/logging/inner/Logger.java","tnLine":191,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void Logger.info(Object,Throwable)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `tu` last assigned on line 205 could be null and is dereferenced at line 212.","tnFile":"store/src/main/java/org/apache/rocketmq/store/schedule/ScheduleMessageService.java","tnLine":212,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"boolean ScheduleMessageService.parseDelayLevel()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `BrokerStatsManager.statsTable.get(key)` could be null and is dereferenced at line 196.","tnFile":"store/src/main/java/org/apache/rocketmq/store/stats/BrokerStatsManager.java","tnLine":196,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void BrokerStatsManager.incCommercialValue(String,String,String,String,String,int)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"CHECKERS_PRINTF_ARGS","tnDesc":"format string arguments don't mach provided arguments in printf(...) at line 215.","tnFile":"tools/src/main/java/org/apache/rocketmq/tools/command/MQAdminStartup.java","tnLine":215,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void MQAdminStartup.printHelp()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.net.HttpURLConnection` acquired by call to `openConnection()` at line 216 is not released after line 218.","tnFile":"common/src/main/java/org/apache/rocketmq/common/MixAll.java","tnLine":218,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"String MixAll.file2String(URL)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `BrokerController.messageStore.getDispatcherList()` could be null and is dereferenced at line 249.","tnFile":"broker/src/main/java/org/apache/rocketmq/broker/BrokerController.java","tnLine":249,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"boolean BrokerController.initialize()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getEffectiveLevel()` could be null and is dereferenced by call to `isGreaterOrEqual(...)` at line 234.","tnFile":"logging/src/main/java/org/apache/rocketmq/logging/inner/Logger.java","tnLine":234,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void Logger.warn(Object)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getEffectiveLevel()` could be null and is dereferenced by call to `isGreaterOrEqual(...)` at line 243.","tnFile":"logging/src/main/java/org/apache/rocketmq/logging/inner/Logger.java","tnLine":243,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void Logger.warn(Object,Throwable)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `requestHeader` last assigned on line 257 could be null and is dereferenced at line 259.","tnFile":"broker/src/main/java/org/apache/rocketmq/broker/processor/AbstractSendMessageProcessor.java","tnLine":259,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void AbstractSendMessageProcessor.executeSendMessageHookBefore(ChannelHandlerContext,RemotingCommand,SendMessageContext)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `headerData` last assigned on line 333 could be null and is dereferenced at line 334.","tnFile":"remoting/src/main/java/org/apache/rocketmq/remoting/protocol/RemotingCommand.java","tnLine":334,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"ByteBuffer RemotingCommand.encode()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `CommitLog.topicQueueTable.get(encodeResult.queueOffsetKey)` could be null and is dereferenced at line 419.","tnFile":"store/src/main/java/org/apache/rocketmq/store/dledger/DLedgerCommitLog.java","tnLine":419,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"PutMessageResult DLedgerCommitLog.putMessage(MessageExtBrokerInner)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `topicPublishInfo.getMessageQueueList()` could be null and is dereferenced at line 401.","tnFile":"client/src/main/java/org/apache/rocketmq/client/trace/AsyncTraceDispatcher.java","tnLine":401,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"Set AsyncTraceDispatcher$AsyncAppenderRequest.tryGetMessageQueueBrokerSet(DefaultMQProducerImpl,String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `headerData` last assigned on line 409 could be null and is dereferenced at line 411.","tnFile":"remoting/src/main/java/org/apache/rocketmq/remoting/protocol/RemotingCommand.java","tnLine":411,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"ByteBuffer RemotingCommand.encodeHeader(int)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `result` last assigned on line 437 could be null and is dereferenced at line 439.","tnFile":"broker/src/main/java/org/apache/rocketmq/broker/transaction/queue/TransactionalMessageServiceImpl.java","tnLine":439,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"GetResult TransactionalMessageServiceImpl.getHalfMsg(MessageQueue,long)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `response.getExtFields()` could be null and is dereferenced at line 548.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/MQClientAPIImpl.java","tnLine":548,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"SendResult MQClientAPIImpl.processSendResponse(String,Message,RemotingCommand)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `brokerNameSet` last assigned on line 649 could be null and is dereferenced at line 650.","tnFile":"namesrv/src/main/java/org/apache/rocketmq/namesrv/routeinfo/RouteInfoManager.java","tnLine":650,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"byte[] RouteInfoManager.getTopicsByCluster(String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired to `ostream` by call to `FileOutputStream(...)` at line 697 is not released after line 711.\n**Note**: potential exception at line 711","tnFile":"logging/src/main/java/org/apache/rocketmq/logging/inner/LoggingBuilder.java","tnLine":711,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void LoggingBuilder$FileAppender.setFile(String,boolean,boolean,int)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `msg` last assigned on line 892 could be null and is dereferenced at line 894.","tnFile":"store/src/main/java/org/apache/rocketmq/store/DefaultMessageStore.java","tnLine":894,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"QueryMessageResult DefaultMessageStore.queryMessage(String,String,int,long,long)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `request.getExtFields()` could be null and is dereferenced at line 996.","tnFile":"broker/src/main/java/org/apache/rocketmq/broker/processor/AdminBrokerProcessor.java","tnLine":996,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"RemotingCommand AdminBrokerProcessor.consumeMessageDirectly(ChannelHandlerContext,RemotingCommand)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.OutputStreamWriter` acquired by call to `createWriter(...)` at line 1138 is not released after line 1138.\n**Note**: potential exception at line 1138","tnFile":"logging/src/main/java/org/apache/rocketmq/logging/inner/LoggingBuilder.java","tnLine":1138,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void LoggingBuilder$ConsoleAppender.activateOptions()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.OutputStreamWriter` acquired by call to `createWriter(...)` at line 1140 is not released after line 1140.\n**Note**: potential exception at line 1140","tnFile":"logging/src/main/java/org/apache/rocketmq/logging/inner/LoggingBuilder.java","tnLine":1140,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void LoggingBuilder$ConsoleAppender.activateOptions()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `MQClientInstance.<init>(ClientConfig,int,String)` indirectly writes to field `netty.TlsSystemConfig.org.apache.rocketmq.remoting.netty.TlsSystemConfig.tlsClientAuthServer` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/factory/MQClientInstance.java","tnLine":125,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"MQClientInstance.<init>(ClientConfig,int,String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `MQClientInstance.<init>(ClientConfig,int,String,RPCHook)` indirectly writes to field `netty.TlsSystemConfig.org.apache.rocketmq.remoting.netty.TlsSystemConfig.tlsClientAuthServer` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/factory/MQClientInstance.java","tnLine":135,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"MQClientInstance.<init>(ClientConfig,int,String,RPCHook)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void RocketmqLog4jAppender.activateOptions()` writes to field `this.org.apache.rocketmq.logappender.log4j.RocketmqLog4jAppender.producer` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"logappender/src/main/java/org/apache/rocketmq/logappender/log4j/RocketmqLog4jAppender.java","tnLine":68,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void RocketmqLog4jAppender.activateOptions()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void LoggingBuilder$FileAppender.activateOptions()` reads without synchronization from `this.org.apache.rocketmq.logging.inner.LoggingBuilder$FileAppender.bufferSize`. Potentially races with write in method `LoggingBuilder$FileAppender.setFile(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"logging/src/main/java/org/apache/rocketmq/logging/inner/LoggingBuilder.java","tnLine":639,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void LoggingBuilder$FileAppender.activateOptions()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void LoggingBuilder$FileAppender.activateOptions()` reads without synchronization from `this.org.apache.rocketmq.logging.inner.LoggingBuilder$FileAppender.fileName`. Potentially races with write in method `LoggingBuilder$FileAppender.setFile(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"logging/src/main/java/org/apache/rocketmq/logging/inner/LoggingBuilder.java","tnLine":637,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void LoggingBuilder$FileAppender.activateOptions()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void DefaultMQPushConsumerImpl.adjustThreadPool()` reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPushConsumerImpl.consumeMessageService`. Potentially races with write in method `DefaultMQPushConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPushConsumerImpl.java","tnLine":1120,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void DefaultMQPushConsumerImpl.adjustThreadPool()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void RocketmqLogbackAppender.append(ILoggingEvent)` reads without synchronization from `this.org.apache.rocketmq.logappender.logback.RocketmqLogbackAppender.producer`. Potentially races with write in method `RocketmqLogbackAppender.stop()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"logappender/src/main/java/org/apache/rocketmq/logappender/logback/RocketmqLogbackAppender.java","tnLine":77,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void RocketmqLogbackAppender.append(ILoggingEvent)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void RocketmqLogbackAppender.append(Object)` indirectly reads without synchronization from `this.org.apache.rocketmq.logappender.logback.RocketmqLogbackAppender.producer`. Potentially races with write in method `RocketmqLogbackAppender.stop()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"logappender/src/main/java/org/apache/rocketmq/logappender/logback/RocketmqLogbackAppender.java","tnLine":32,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void RocketmqLogbackAppender.append(Object)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void RocketmqLog4jAppender.append(LoggingEvent)` reads without synchronization from `this.org.apache.rocketmq.logappender.log4j.RocketmqLog4jAppender.producer`. Potentially races with write in method `RocketmqLog4jAppender.close()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"logappender/src/main/java/org/apache/rocketmq/logappender/log4j/RocketmqLog4jAppender.java","tnLine":90,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void RocketmqLog4jAppender.append(LoggingEvent)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void LoggingBuilder$AsyncAppender.append(LoggingEvent)` indirectly writes to field `event.org.apache.rocketmq.logging.inner.LoggingEvent.renderedMessage` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"logging/src/main/java/org/apache/rocketmq/logging/inner/LoggingBuilder.java","tnLine":186,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void LoggingBuilder$AsyncAppender.append(LoggingEvent)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void LoggingBuilder$AsyncAppender.append(LoggingEvent)` indirectly writes to field `event.org.apache.rocketmq.logging.inner.LoggingEvent.threadName` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"logging/src/main/java/org/apache/rocketmq/logging/inner/LoggingBuilder.java","tnLine":185,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void LoggingBuilder$AsyncAppender.append(LoggingEvent)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void LoggingBuilder$WriterAppender.append(LoggingEvent)` indirectly reads without synchronization from `this.org.apache.rocketmq.logging.inner.Appender.closed`. Potentially races with write in method `LoggingBuilder$WriterAppender.close()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"logging/src/main/java/org/apache/rocketmq/logging/inner/LoggingBuilder.java","tnLine":480,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void LoggingBuilder$WriterAppender.append(LoggingEvent)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void LoggingBuilder$WriterAppender.append(LoggingEvent)` indirectly reads without synchronization from `this.org.apache.rocketmq.logging.inner.LoggingBuilder$WriterAppender.qw`. Potentially races with write in method `LoggingBuilder$WriterAppender.setWriter(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"logging/src/main/java/org/apache/rocketmq/logging/inner/LoggingBuilder.java","tnLine":483,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void LoggingBuilder$WriterAppender.append(LoggingEvent)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `PushConsumer PushConsumerImpl.attachQueue(String,MessageListener)` indirectly reads without synchronization from `this.io.openmessaging.rocketmq.consumer.PushConsumerImpl.rocketmqPushConsumer.org.apache.rocketmq.client.consumer.DefaultMQPushConsumer.defaultMQPushConsumerImpl.org.apache.rocketmq.client.impl.consumer.DefaultMQPushConsumerImpl.mQClientFactory`. Potentially races with write in method `PushConsumerImpl.startup()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"openmessaging/src/main/java/io/openmessaging/rocketmq/consumer/PushConsumerImpl.java","tnLine":111,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"PushConsumer PushConsumerImpl.attachQueue(String,MessageListener)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `PushConsumer PushConsumerImpl.attachQueue(String,MessageListener,KeyValue)` indirectly reads without synchronization from `this.io.openmessaging.rocketmq.consumer.PushConsumerImpl.rocketmqPushConsumer.org.apache.rocketmq.client.consumer.DefaultMQPushConsumer.defaultMQPushConsumerImpl.org.apache.rocketmq.client.impl.consumer.DefaultMQPushConsumerImpl.mQClientFactory`. Potentially races with write in method `PushConsumerImpl.startup()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"openmessaging/src/main/java/io/openmessaging/rocketmq/consumer/PushConsumerImpl.java","tnLine":120,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"PushConsumer PushConsumerImpl.attachQueue(String,MessageListener,KeyValue)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean LoggingBuilder$WriterAppender.checkEntryConditions()` reads without synchronization from `this.org.apache.rocketmq.logging.inner.Appender.closed`. Potentially races with write in method `LoggingBuilder$WriterAppender.close()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"logging/src/main/java/org/apache/rocketmq/logging/inner/LoggingBuilder.java","tnLine":487,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"boolean LoggingBuilder$WriterAppender.checkEntryConditions()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean LoggingBuilder$WriterAppender.checkEntryConditions()` reads without synchronization from `this.org.apache.rocketmq.logging.inner.LoggingBuilder$WriterAppender.qw`. Potentially races with write in method `LoggingBuilder$WriterAppender.setWriter(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"logging/src/main/java/org/apache/rocketmq/logging/inner/LoggingBuilder.java","tnLine":492,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"boolean LoggingBuilder$WriterAppender.checkEntryConditions()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ProcessQueue.cleanExpiredMsg(DefaultMQPushConsumer)` indirectly reads without synchronization from `msg.org.apache.rocketmq.common.message.Message.topic`. Potentially races with write in method `ProcessQueue.cleanExpiredMsg(...)`.\n Reporting because this access may occur on a background thread. [wob].","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/ProcessQueue.java","tnLine":103,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ProcessQueue.cleanExpiredMsg(DefaultMQPushConsumer)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ProcessQueue.cleanExpiredMsg(DefaultMQPushConsumer)` indirectly writes to field `msg.org.apache.rocketmq.common.message.Message.topic` outside of synchronization.\n Reporting because this access may occur on a background thread. [wob].","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/ProcessQueue.java","tnLine":102,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ProcessQueue.cleanExpiredMsg(DefaultMQPushConsumer)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void LoggingBuilder$FileAppender.closeFile()` reads without synchronization from `this.org.apache.rocketmq.logging.inner.LoggingBuilder$WriterAppender.qw`. Potentially races with write in method `LoggingBuilder$FileAppender.setFile(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"logging/src/main/java/org/apache/rocketmq/logging/inner/LoggingBuilder.java","tnLine":653,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void LoggingBuilder$FileAppender.closeFile()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void LoggingBuilder$WriterAppender.closeWriter()` reads without synchronization from `this.org.apache.rocketmq.logging.inner.LoggingBuilder$WriterAppender.qw`. Potentially races with write in method `LoggingBuilder$WriterAppender.setWriter(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"logging/src/main/java/org/apache/rocketmq/logging/inner/LoggingBuilder.java","tnLine":517,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void LoggingBuilder$WriterAppender.closeWriter()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `ConsumerRunningInfo DefaultMQPushConsumerImpl.consumerRunningInfo()` reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPushConsumerImpl.mQClientFactory`. Potentially races with write in method `DefaultMQPushConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPushConsumerImpl.java","tnLine":1082,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"ConsumerRunningInfo DefaultMQPushConsumerImpl.consumerRunningInfo()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `ConsumerRunningInfo DefaultMQPushConsumerImpl.consumerRunningInfo()` reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPushConsumerImpl.offsetStore`. Potentially races with write in method `DefaultMQPushConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPushConsumerImpl.java","tnLine":1076,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"ConsumerRunningInfo DefaultMQPushConsumerImpl.consumerRunningInfo()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `ConsumerRunningInfo DefaultMQPushConsumerImpl.consumerRunningInfo()` reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPushConsumerImpl.consumeMessageService`. Potentially races with write in method `DefaultMQPushConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPushConsumerImpl.java","tnLine":1061,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"ConsumerRunningInfo DefaultMQPushConsumerImpl.consumerRunningInfo()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `ConsumerRunningInfo DefaultMQPushConsumerImpl.consumerRunningInfo()` reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPushConsumerImpl.consumeOrderly`. Potentially races with write in method `DefaultMQPushConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPushConsumerImpl.java","tnLine":1060,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"ConsumerRunningInfo DefaultMQPushConsumerImpl.consumerRunningInfo()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void DefaultMQPullConsumerImpl.createTopic(String,String,int)` indirectly reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPullConsumerImpl.mQClientFactory`. Potentially races with write in method `DefaultMQPullConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPullConsumerImpl.java","tnLine":93,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void DefaultMQPullConsumerImpl.createTopic(String,String,int)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void DefaultMQPushConsumerImpl.createTopic(String,String,int)` indirectly reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPushConsumerImpl.mQClientFactory`. Potentially races with write in method `DefaultMQPushConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPushConsumerImpl.java","tnLine":157,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void DefaultMQPushConsumerImpl.createTopic(String,String,int)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void DefaultMQPullConsumerImpl.createTopic(String,String,int,int)` reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPullConsumerImpl.mQClientFactory`. Potentially races with write in method `DefaultMQPullConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPullConsumerImpl.java","tnLine":98,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void DefaultMQPullConsumerImpl.createTopic(String,String,int,int)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void DefaultMQPushConsumerImpl.createTopic(String,String,int,int)` reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPushConsumerImpl.mQClientFactory`. Potentially races with write in method `DefaultMQPushConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPushConsumerImpl.java","tnLine":161,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void DefaultMQPushConsumerImpl.createTopic(String,String,int,int)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void TopicConfigManager.decode(String)` indirectly writes to field `this.org.apache.rocketmq.broker.topic.TopicConfigManager.dataVersion.org.apache.rocketmq.common.DataVersion.timestamp` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"broker/src/main/java/org/apache/rocketmq/broker/topic/TopicConfigManager.java","tnLine":407,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void TopicConfigManager.decode(String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void TopicConfigManager.deleteTopicConfig(String)` indirectly writes to field `this.org.apache.rocketmq.broker.topic.TopicConfigManager.dataVersion.org.apache.rocketmq.common.DataVersion.timestamp` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"broker/src/main/java/org/apache/rocketmq/broker/topic/TopicConfigManager.java","tnLine":375,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void TopicConfigManager.deleteTopicConfig(String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void DefaultMQPullConsumerImpl.doRebalance()` indirectly reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPullConsumerImpl.rebalanceImpl.org.apache.rocketmq.client.impl.consumer.RebalanceImpl.allocateMessageQueueStrategy`. Potentially races with write in method `DefaultMQPullConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPullConsumerImpl.java","tnLine":379,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void DefaultMQPullConsumerImpl.doRebalance()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void DefaultMQPushConsumerImpl.doRebalance()` indirectly reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPushConsumerImpl.consumeOrderly`. Potentially races with write in method `DefaultMQPushConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPushConsumerImpl.java","tnLine":1009,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void DefaultMQPushConsumerImpl.doRebalance()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void DefaultMQPushConsumerImpl.doRebalance()` indirectly reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPushConsumerImpl.rebalanceImpl.org.apache.rocketmq.client.impl.consumer.RebalanceImpl.allocateMessageQueueStrategy`. Potentially races with write in method `DefaultMQPushConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPushConsumerImpl.java","tnLine":1009,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void DefaultMQPushConsumerImpl.doRebalance()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `long DefaultMQPullConsumerImpl.earliestMsgStoreTime(MessageQueue)` reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPullConsumerImpl.mQClientFactory`. Potentially races with write in method `DefaultMQPullConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPullConsumerImpl.java","tnLine":160,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"long DefaultMQPullConsumerImpl.earliestMsgStoreTime(MessageQueue)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `long DefaultMQPushConsumerImpl.earliestMsgStoreTime(MessageQueue)` reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPushConsumerImpl.mQClientFactory`. Potentially races with write in method `DefaultMQPushConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPushConsumerImpl.java","tnLine":193,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"long DefaultMQPushConsumerImpl.earliestMsgStoreTime(MessageQueue)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void DefaultMQPushConsumerImpl.executePullRequestImmediately(PullRequest)` reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPushConsumerImpl.mQClientFactory`. Potentially races with write in method `DefaultMQPushConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPushConsumerImpl.java","tnLine":477,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void DefaultMQPushConsumerImpl.executePullRequestImmediately(PullRequest)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void DefaultMQPushConsumerImpl.executeTaskLater(Runnable,long)` reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPushConsumerImpl.mQClientFactory`. Potentially races with write in method `DefaultMQPushConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPushConsumerImpl.java","tnLine":487,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void DefaultMQPushConsumerImpl.executeTaskLater(Runnable,long)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `long DefaultMQPullConsumerImpl.fetchConsumeOffset(MessageQueue,boolean)` reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPullConsumerImpl.offsetStore`. Potentially races with write in method `DefaultMQPullConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPullConsumerImpl.java","tnLine":112,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"long DefaultMQPullConsumerImpl.fetchConsumeOffset(MessageQueue,boolean)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List DefaultMQPullConsumerImpl.fetchPublishMessageQueues(String)` reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPullConsumerImpl.mQClientFactory`. Potentially races with write in method `DefaultMQPullConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPullConsumerImpl.java","tnLine":134,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List DefaultMQPullConsumerImpl.fetchPublishMessageQueues(String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Set DefaultMQPullConsumerImpl.fetchSubscribeMessageQueues(String)` reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPullConsumerImpl.mQClientFactory`. Potentially races with write in method `DefaultMQPullConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPullConsumerImpl.java","tnLine":142,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"Set DefaultMQPullConsumerImpl.fetchSubscribeMessageQueues(String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Set DefaultMQPushConsumerImpl.fetchSubscribeMessageQueues(String)` reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPushConsumerImpl.mQClientFactory`. Potentially races with write in method `DefaultMQPushConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPushConsumerImpl.java","tnLine":167,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"Set DefaultMQPushConsumerImpl.fetchSubscribeMessageQueues(String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean LoggingBuilder$FileAppender.getAppend()` reads without synchronization from `this.org.apache.rocketmq.logging.inner.LoggingBuilder$FileAppender.fileAppend`. Potentially races with write in method `LoggingBuilder$FileAppender.setFile(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"logging/src/main/java/org/apache/rocketmq/logging/inner/LoggingBuilder.java","tnLine":629,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"boolean LoggingBuilder$FileAppender.getAppend()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean LoggingBuilder$AsyncAppender.getBlocking()` reads without synchronization from `this.org.apache.rocketmq.logging.inner.LoggingBuilder$AsyncAppender.blocking`. Potentially races with write in method `LoggingBuilder$AsyncAppender.setBlocking(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"logging/src/main/java/org/apache/rocketmq/logging/inner/LoggingBuilder.java","tnLine":318,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"boolean LoggingBuilder$AsyncAppender.getBlocking()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int LoggingBuilder$FileAppender.getBufferSize()` reads without synchronization from `this.org.apache.rocketmq.logging.inner.LoggingBuilder$FileAppender.bufferSize`. Potentially races with write in method `LoggingBuilder$FileAppender.setFile(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"logging/src/main/java/org/apache/rocketmq/logging/inner/LoggingBuilder.java","tnLine":668,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"int LoggingBuilder$FileAppender.getBufferSize()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean LoggingBuilder$FileAppender.getBufferedIO()` reads without synchronization from `this.org.apache.rocketmq.logging.inner.LoggingBuilder$FileAppender.bufferedIO`. Potentially races with write in method `LoggingBuilder$FileAppender.setFile(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"logging/src/main/java/org/apache/rocketmq/logging/inner/LoggingBuilder.java","tnLine":664,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"boolean LoggingBuilder$FileAppender.getBufferedIO()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `ConsumeMessageService DefaultMQPushConsumerImpl.getConsumeMessageService()` reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPushConsumerImpl.consumeMessageService`. Potentially races with write in method `DefaultMQPushConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPushConsumerImpl.java","tnLine":1164,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"ConsumeMessageService DefaultMQPushConsumerImpl.getConsumeMessageService()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `ConsumerStatsManager DefaultMQPushConsumerImpl.getConsumerStatsManager()` reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPushConsumerImpl.mQClientFactory`. Potentially races with write in method `DefaultMQPushConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPushConsumerImpl.java","tnLine":473,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"ConsumerStatsManager DefaultMQPushConsumerImpl.getConsumerStatsManager()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `String LoggingBuilder$FileAppender.getFile()` reads without synchronization from `this.org.apache.rocketmq.logging.inner.LoggingBuilder$FileAppender.fileName`. Potentially races with write in method `LoggingBuilder$FileAppender.setFile(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"logging/src/main/java/org/apache/rocketmq/logging/inner/LoggingBuilder.java","tnLine":633,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"String LoggingBuilder$FileAppender.getFile()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `MessageListener DefaultMQPushConsumerImpl.getMessageListenerInner()` reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPushConsumerImpl.messageListenerInner`. Potentially races with write in method `DefaultMQPushConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPushConsumerImpl.java","tnLine":858,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"MessageListener DefaultMQPushConsumerImpl.getMessageListenerInner()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `MessageQueueListener DefaultMQPullConsumer.getMessageQueueListener()` reads without synchronization from `this.org.apache.rocketmq.client.consumer.DefaultMQPullConsumer.messageQueueListener`. Potentially races with write in method `DefaultMQPullConsumer.registerMessageQueueListener(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/consumer/DefaultMQPullConsumer.java","tnLine":245,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"MessageQueueListener DefaultMQPullConsumer.getMessageQueueListener()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `OffsetStore DefaultMQPullConsumerImpl.getOffsetStore()` reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPullConsumerImpl.offsetStore`. Potentially races with write in method `DefaultMQPullConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPullConsumerImpl.java","tnLine":767,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"OffsetStore DefaultMQPullConsumerImpl.getOffsetStore()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `OffsetStore DefaultMQPushConsumerImpl.getOffsetStore()` reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPushConsumerImpl.offsetStore`. Potentially races with write in method `DefaultMQPushConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPushConsumerImpl.java","tnLine":205,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"OffsetStore DefaultMQPushConsumerImpl.getOffsetStore()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `MQProducer RocketmqLog4jAppender.getProducer()` reads without synchronization from `this.org.apache.rocketmq.logappender.log4j.RocketmqLog4jAppender.producer`. Potentially races with write in method `RocketmqLog4jAppender.close()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"logappender/src/main/java/org/apache/rocketmq/logappender/log4j/RocketmqLog4jAppender.java","tnLine":179,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"MQProducer RocketmqLog4jAppender.getProducer()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `PullAPIWrapper DefaultMQPullConsumerImpl.getPullAPIWrapper()` reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPullConsumerImpl.pullAPIWrapper`. Potentially races with write in method `DefaultMQPullConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPullConsumerImpl.java","tnLine":775,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"PullAPIWrapper DefaultMQPullConsumerImpl.getPullAPIWrapper()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Throwable DefaultPromise.getThrowable()` reads without synchronization from `this.io.openmessaging.rocketmq.promise.DefaultPromise.exception`. Potentially races with write in method `DefaultPromise.get(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"openmessaging/src/main/java/io/openmessaging/rocketmq/promise/DefaultPromise.java","tnLine":148,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"Throwable DefaultPromise.getThrowable()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `MQClientInstance DefaultMQPushConsumerImpl.getmQClientFactory()` reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPushConsumerImpl.mQClientFactory`. Potentially races with write in method `DefaultMQPushConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPushConsumerImpl.java","tnLine":1090,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"MQClientInstance DefaultMQPushConsumerImpl.getmQClientFactory()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean Logger.isAttached(Appender)` indirectly reads without synchronization from `this.org.apache.rocketmq.logging.inner.Logger.appenderPipeline.org.apache.rocketmq.logging.inner.Appender$AppenderPipelineImpl.appenderList`. Potentially races with write in method `Logger.removeAllAppenders()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"logging/src/main/java/org/apache/rocketmq/logging/inner/Logger.java","tnLine":197,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"boolean Logger.isAttached(Appender)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean Logger.isAttached(Appender)` reads without synchronization from `this.org.apache.rocketmq.logging.inner.Logger.appenderPipeline`. Potentially races with write in method `Logger.removeAllAppenders()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"logging/src/main/java/org/apache/rocketmq/logging/inner/Logger.java","tnLine":197,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"boolean Logger.isAttached(Appender)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean DefaultMQPushConsumerImpl.isConsumeOrderly()` reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPushConsumerImpl.consumeOrderly`. Potentially races with write in method `DefaultMQPushConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPushConsumerImpl.java","tnLine":951,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"boolean DefaultMQPushConsumerImpl.isConsumeOrderly()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `long DefaultMQPullConsumerImpl.maxOffset(MessageQueue)` reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPullConsumerImpl.mQClientFactory`. Potentially races with write in method `DefaultMQPullConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPullConsumerImpl.java","tnLine":165,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"long DefaultMQPullConsumerImpl.maxOffset(MessageQueue)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `long DefaultMQPushConsumerImpl.maxOffset(MessageQueue)` reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPushConsumerImpl.mQClientFactory`. Potentially races with write in method `DefaultMQPushConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPushConsumerImpl.java","tnLine":197,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"long DefaultMQPushConsumerImpl.maxOffset(MessageQueue)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `long DefaultMQPullConsumerImpl.minOffset(MessageQueue)` reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPullConsumerImpl.mQClientFactory`. Potentially races with write in method `DefaultMQPullConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPullConsumerImpl.java","tnLine":170,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"long DefaultMQPullConsumerImpl.minOffset(MessageQueue)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `long DefaultMQPushConsumerImpl.minOffset(MessageQueue)` reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPushConsumerImpl.mQClientFactory`. Potentially races with write in method `DefaultMQPushConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPushConsumerImpl.java","tnLine":201,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"long DefaultMQPushConsumerImpl.minOffset(MessageQueue)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void DefaultMQPullConsumerImpl.persistConsumerOffset()` reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPullConsumerImpl.offsetStore`. Potentially races with write in method `DefaultMQPullConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPullConsumerImpl.java","tnLine":390,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void DefaultMQPullConsumerImpl.persistConsumerOffset()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void DefaultMQPushConsumerImpl.persistConsumerOffset()` reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPushConsumerImpl.offsetStore`. Potentially races with write in method `DefaultMQPushConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPushConsumerImpl.java","tnLine":1021,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void DefaultMQPushConsumerImpl.persistConsumerOffset()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `PullResult DefaultMQPullConsumerImpl.pull(MessageQueue,String,long,int)` indirectly reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPullConsumerImpl.pullAPIWrapper`. Potentially races with write in method `DefaultMQPullConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPullConsumerImpl.java","tnLine":175,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"PullResult DefaultMQPullConsumerImpl.pull(MessageQueue,String,long,int)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `PullResult DefaultMQPullConsumerImpl.pull(MessageQueue,String,long,int,long)` indirectly reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPullConsumerImpl.pullAPIWrapper`. Potentially races with write in method `DefaultMQPullConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPullConsumerImpl.java","tnLine":181,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"PullResult DefaultMQPullConsumerImpl.pull(MessageQueue,String,long,int,long)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void DefaultMQPullConsumerImpl.pull(MessageQueue,String,long,int,PullCallback)` indirectly reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPullConsumerImpl.pullAPIWrapper`. Potentially races with write in method `DefaultMQPullConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPullConsumerImpl.java","tnLine":437,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void DefaultMQPullConsumerImpl.pull(MessageQueue,String,long,int,PullCallback)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void DefaultMQPullConsumerImpl.pull(MessageQueue,String,long,int,PullCallback,long)` indirectly reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPullConsumerImpl.pullAPIWrapper`. Potentially races with write in method `DefaultMQPullConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPullConsumerImpl.java","tnLine":444,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void DefaultMQPullConsumerImpl.pull(MessageQueue,String,long,int,PullCallback,long)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `PullResult DefaultMQPullConsumerImpl.pull(MessageQueue,MessageSelector,long,int)` indirectly reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPullConsumerImpl.pullAPIWrapper`. Potentially races with write in method `DefaultMQPullConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPullConsumerImpl.java","tnLine":186,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"PullResult DefaultMQPullConsumerImpl.pull(MessageQueue,MessageSelector,long,int)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `PullResult DefaultMQPullConsumerImpl.pull(MessageQueue,MessageSelector,long,int,long)` indirectly reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPullConsumerImpl.pullAPIWrapper`. Potentially races with write in method `DefaultMQPullConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPullConsumerImpl.java","tnLine":192,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"PullResult DefaultMQPullConsumerImpl.pull(MessageQueue,MessageSelector,long,int,long)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void DefaultMQPullConsumerImpl.pull(MessageQueue,MessageSelector,long,int,PullCallback)` indirectly reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPullConsumerImpl.pullAPIWrapper`. Potentially races with write in method `DefaultMQPullConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPullConsumerImpl.java","tnLine":450,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void DefaultMQPullConsumerImpl.pull(MessageQueue,MessageSelector,long,int,PullCallback)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void DefaultMQPullConsumerImpl.pull(MessageQueue,MessageSelector,long,int,PullCallback,long)` indirectly reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPullConsumerImpl.pullAPIWrapper`. Potentially races with write in method `DefaultMQPullConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPullConsumerImpl.java","tnLine":458,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void DefaultMQPullConsumerImpl.pull(MessageQueue,MessageSelector,long,int,PullCallback,long)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `PullResult DefaultMQPullConsumerImpl.pullBlockIfNotFound(MessageQueue,String,long,int)` indirectly reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPullConsumerImpl.pullAPIWrapper`. Potentially races with write in method `DefaultMQPullConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPullConsumerImpl.java","tnLine":529,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"PullResult DefaultMQPullConsumerImpl.pullBlockIfNotFound(MessageQueue,String,long,int)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void DefaultMQPullConsumerImpl.pullBlockIfNotFound(MessageQueue,String,long,int,PullCallback)` indirectly reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPullConsumerImpl.pullAPIWrapper`. Potentially races with write in method `DefaultMQPullConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPullConsumerImpl.java","tnLine":540,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void DefaultMQPullConsumerImpl.pullBlockIfNotFound(MessageQueue,String,long,int,PullCallback)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void DefaultMQPushConsumerImpl.pullMessage(PullRequest)` reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPushConsumerImpl.pullAPIWrapper`. Potentially races with write in method `DefaultMQPushConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPushConsumerImpl.java","tnLine":431,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void DefaultMQPushConsumerImpl.pullMessage(PullRequest)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void DefaultMQPushConsumerImpl.pullMessage(PullRequest)` reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPushConsumerImpl.consumeOrderly`. Potentially races with write in method `DefaultMQPushConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPushConsumerImpl.java","tnLine":258,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void DefaultMQPushConsumerImpl.pullMessage(PullRequest)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void DefaultMQPushConsumerImpl.pullMessage(PullRequest)` indirectly reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPushConsumerImpl.defaultMQPushConsumer.org.apache.rocketmq.client.ClientConfig.instanceName`. Potentially races with write in method `DefaultMQPushConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPushConsumerImpl.java","tnLine":230,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void DefaultMQPushConsumerImpl.pullMessage(PullRequest)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void DefaultMQPushConsumerImpl.pullMessage(PullRequest)` reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPushConsumerImpl.offsetStore`. Potentially races with write in method `DefaultMQPushConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPushConsumerImpl.java","tnLine":407,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void DefaultMQPushConsumerImpl.pullMessage(PullRequest)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void DefaultMQPushConsumerImpl.pullMessage(PullRequest)` indirectly reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPushConsumerImpl.mQClientFactory`. Potentially races with write in method `DefaultMQPushConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPushConsumerImpl.java","tnLine":293,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void DefaultMQPushConsumerImpl.pullMessage(PullRequest)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List DefaultMQPushConsumerImpl.queryConsumeTimeSpan(String)` reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPushConsumerImpl.mQClientFactory`. Potentially races with write in method `DefaultMQPushConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPushConsumerImpl.java","tnLine":1143,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List DefaultMQPushConsumerImpl.queryConsumeTimeSpan(String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `QueryResult DefaultMQPullConsumerImpl.queryMessage(String,String,int,long,long)` reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPullConsumerImpl.mQClientFactory`. Potentially races with write in method `DefaultMQPullConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPullConsumerImpl.java","tnLine":547,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"QueryResult DefaultMQPullConsumerImpl.queryMessage(String,String,int,long,long)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `QueryResult DefaultMQPushConsumerImpl.queryMessage(String,String,int,long,long)` reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPushConsumerImpl.mQClientFactory`. Potentially races with write in method `DefaultMQPushConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPushConsumerImpl.java","tnLine":492,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"QueryResult DefaultMQPushConsumerImpl.queryMessage(String,String,int,long,long)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `MessageExt DefaultMQPullConsumerImpl.queryMessageByUniqKey(String,String)` reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPullConsumerImpl.mQClientFactory`. Potentially races with write in method `DefaultMQPullConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPullConsumerImpl.java","tnLine":553,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"MessageExt DefaultMQPullConsumerImpl.queryMessageByUniqKey(String,String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `MessageExt DefaultMQPushConsumerImpl.queryMessageByUniqKey(String,String)` reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPushConsumerImpl.mQClientFactory`. Potentially races with write in method `DefaultMQPushConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPushConsumerImpl.java","tnLine":497,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"MessageExt DefaultMQPushConsumerImpl.queryMessageByUniqKey(String,String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void DefaultMQPushConsumerImpl.registerMessageListener(MessageListener)` writes to field `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPushConsumerImpl.messageListenerInner` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPushConsumerImpl.java","tnLine":501,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void DefaultMQPushConsumerImpl.registerMessageListener(MessageListener)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void DefaultMQPullConsumer.registerMessageQueueListener(String,MessageQueueListener)` reads without synchronization from `this.org.apache.rocketmq.client.consumer.DefaultMQPullConsumer.registerTopics`. Potentially races with write in method `DefaultMQPullConsumer.setRegisterTopics(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"client/src/main/java/org/apache/rocketmq/client/consumer/DefaultMQPullConsumer.java","tnLine":302,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void DefaultMQPullConsumer.registerMessageQueueListener(String,MessageQueueListener)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void LoggingBuilder$FileAppender.reset()` writes to field `this.org.apache.rocketmq.logging.inner.LoggingBuilder$FileAppender.fileName` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"logging/src/main/java/org/apache/rocketmq/logging/inner/LoggingBuilder.java","tnLine":730,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void LoggingBuilder$FileAppender.reset()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void LoggingBuilder$FileAppender.reset()` indirectly reads without synchronization from `this.org.apache.rocketmq.logging.inner.LoggingBuilder$WriterAppender.qw`. Potentially races with write in method `LoggingBuilder$FileAppender.setFile(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"logging/src/main/java/org/apache/rocketmq/logging/inner/LoggingBuilder.java","tnLine":729,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void LoggingBuilder$FileAppender.reset()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void LoggingBuilder$FileAppender.reset()` indirectly writes to field `this.org.apache.rocketmq.logging.inner.LoggingBuilder$WriterAppender.qw` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"logging/src/main/java/org/apache/rocketmq/logging/inner/LoggingBuilder.java","tnLine":731,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void LoggingBuilder$FileAppender.reset()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void LoggingBuilder$WriterAppender.reset()` indirectly reads without synchronization from `this.org.apache.rocketmq.logging.inner.LoggingBuilder$WriterAppender.qw`. Potentially races with write in method `LoggingBuilder$WriterAppender.setWriter(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"logging/src/main/java/org/apache/rocketmq/logging/inner/LoggingBuilder.java","tnLine":576,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void LoggingBuilder$WriterAppender.reset()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void LoggingBuilder$WriterAppender.reset()` writes to field `this.org.apache.rocketmq.logging.inner.LoggingBuilder$WriterAppender.qw` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"logging/src/main/java/org/apache/rocketmq/logging/inner/LoggingBuilder.java","tnLine":577,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void LoggingBuilder$WriterAppender.reset()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void DefaultMQPushConsumerImpl.resetOffsetByTimeStamp(long)` reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPushConsumerImpl.mQClientFactory`. Potentially races with write in method `DefaultMQPushConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPushConsumerImpl.java","tnLine":968,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void DefaultMQPushConsumerImpl.resetOffsetByTimeStamp(long)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void PushConsumerImpl.resume()` indirectly reads without synchronization from `this.io.openmessaging.rocketmq.consumer.PushConsumerImpl.rocketmqPushConsumer.org.apache.rocketmq.client.consumer.DefaultMQPushConsumer.defaultMQPushConsumerImpl.org.apache.rocketmq.client.impl.consumer.DefaultMQPushConsumerImpl.consumeOrderly`. Potentially races with write in method `PushConsumerImpl.startup()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"openmessaging/src/main/java/io/openmessaging/rocketmq/consumer/PushConsumerImpl.java","tnLine":89,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void PushConsumerImpl.resume()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void DefaultMQPushConsumerImpl.resume()` indirectly reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPushConsumerImpl.consumeOrderly`. Potentially races with write in method `DefaultMQPushConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPushConsumerImpl.java","tnLine":506,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void DefaultMQPushConsumerImpl.resume()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void LoggingBuilder$RollingFileAppender.rollOver()` reads without synchronization from `this.org.apache.rocketmq.logging.inner.LoggingBuilder$WriterAppender.qw`. Potentially races with write in method `LoggingBuilder$RollingFileAppender.setFile(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"logging/src/main/java/org/apache/rocketmq/logging/inner/LoggingBuilder.java","tnLine":761,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void LoggingBuilder$RollingFileAppender.rollOver()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void LoggingBuilder$RollingFileAppender.rollOver()` reads without synchronization from `this.org.apache.rocketmq.logging.inner.LoggingBuilder$FileAppender.fileName`. Potentially races with write in method `LoggingBuilder$RollingFileAppender.setFile(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"logging/src/main/java/org/apache/rocketmq/logging/inner/LoggingBuilder.java","tnLine":788,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void LoggingBuilder$RollingFileAppender.rollOver()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void LoggingBuilder$RollingFileAppender.rollOver()` reads without synchronization from `this.org.apache.rocketmq.logging.inner.LoggingBuilder$FileAppender.bufferSize`. Potentially races with write in method `LoggingBuilder$RollingFileAppender.setFile(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"logging/src/main/java/org/apache/rocketmq/logging/inner/LoggingBuilder.java","tnLine":807,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void LoggingBuilder$RollingFileAppender.rollOver()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void LoggingBuilder$RollingFileAppender.rollOver()` indirectly reads without synchronization from `this.org.apache.rocketmq.logging.inner.LoggingBuilder$WriterAppender.qw.org.apache.rocketmq.logging.inner.LoggingBuilder$RollingFileAppender$CountingQuietWriter.count`. Potentially races with write in method `LoggingBuilder$RollingFileAppender.setFile(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"logging/src/main/java/org/apache/rocketmq/logging/inner/LoggingBuilder.java","tnLine":761,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void LoggingBuilder$RollingFileAppender.rollOver()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void LoggingBuilder$RollingFileAppender.rollOver()` reads without synchronization from `this.org.apache.rocketmq.logging.inner.LoggingBuilder$FileAppender.bufferedIO`. Potentially races with write in method `LoggingBuilder$RollingFileAppender.setFile(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"logging/src/main/java/org/apache/rocketmq/logging/inner/LoggingBuilder.java","tnLine":794,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void LoggingBuilder$RollingFileAppender.rollOver()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `long DefaultMQPullConsumerImpl.searchOffset(MessageQueue,long)` reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPullConsumerImpl.mQClientFactory`. Potentially races with write in method `DefaultMQPullConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPullConsumerImpl.java","tnLine":558,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"long DefaultMQPullConsumerImpl.searchOffset(MessageQueue,long)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `long DefaultMQPushConsumerImpl.searchOffset(MessageQueue,long)` reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPushConsumerImpl.mQClientFactory`. Potentially races with write in method `DefaultMQPushConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPushConsumerImpl.java","tnLine":974,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"long DefaultMQPushConsumerImpl.searchOffset(MessageQueue,long)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void DefaultMQPullConsumerImpl.sendMessageBack(MessageExt,int,String)` indirectly reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPullConsumerImpl.mQClientFactory`. Potentially races with write in method `DefaultMQPullConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPullConsumerImpl.java","tnLine":563,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void DefaultMQPullConsumerImpl.sendMessageBack(MessageExt,int,String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void DefaultMQPushConsumerImpl.sendMessageBack(MessageExt,int,String)` reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPushConsumerImpl.mQClientFactory`. Potentially races with write in method `DefaultMQPushConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPushConsumerImpl.java","tnLine":515,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void DefaultMQPushConsumerImpl.sendMessageBack(MessageExt,int,String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void DefaultMQPullConsumerImpl.sendMessageBack(MessageExt,int,String,String)` reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPullConsumerImpl.mQClientFactory`. Potentially races with write in method `DefaultMQPullConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPullConsumerImpl.java","tnLine":581,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void DefaultMQPullConsumerImpl.sendMessageBack(MessageExt,int,String,String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean DefaultPromise.set(Object)` indirectly reads without synchronization from `this.io.openmessaging.rocketmq.promise.DefaultPromise.promiseListenerList`. Potentially races with write in method `DefaultPromise.addListener(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"openmessaging/src/main/java/io/openmessaging/rocketmq/promise/DefaultPromise.java","tnLine":112,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"boolean DefaultPromise.set(Object)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void LoggingBuilder$FileAppender.setAppend(boolean)` writes to field `this.org.apache.rocketmq.logging.inner.LoggingBuilder$FileAppender.fileAppend` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"logging/src/main/java/org/apache/rocketmq/logging/inner/LoggingBuilder.java","tnLine":672,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void LoggingBuilder$FileAppender.setAppend(boolean)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void LoggingBuilder$FileAppender.setBufferSize(int)` writes to field `this.org.apache.rocketmq.logging.inner.LoggingBuilder$FileAppender.bufferSize` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"logging/src/main/java/org/apache/rocketmq/logging/inner/LoggingBuilder.java","tnLine":683,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void LoggingBuilder$FileAppender.setBufferSize(int)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void LoggingBuilder$FileAppender.setBufferedIO(boolean)` writes to field `this.org.apache.rocketmq.logging.inner.LoggingBuilder$FileAppender.bufferedIO` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"logging/src/main/java/org/apache/rocketmq/logging/inner/LoggingBuilder.java","tnLine":676,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void LoggingBuilder$FileAppender.setBufferedIO(boolean)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void LoggingBuilder$FileAppender.setBufferedIO(boolean)` writes to field `this.org.apache.rocketmq.logging.inner.LoggingBuilder$WriterAppender.immediateFlush` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"logging/src/main/java/org/apache/rocketmq/logging/inner/LoggingBuilder.java","tnLine":678,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void LoggingBuilder$FileAppender.setBufferedIO(boolean)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void DefaultMQPushConsumerImpl.setConsumeMessageService(ConsumeMessageService)` writes to field `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPushConsumerImpl.consumeMessageService` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPushConsumerImpl.java","tnLine":1168,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void DefaultMQPushConsumerImpl.setConsumeMessageService(ConsumeMessageService)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void DefaultMQPushConsumerImpl.setConsumeOrderly(boolean)` writes to field `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPushConsumerImpl.consumeOrderly` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPushConsumerImpl.java","tnLine":955,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void DefaultMQPushConsumerImpl.setConsumeOrderly(boolean)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `boolean DefaultPromise.setFailure(Throwable)` writes to field `this.io.openmessaging.rocketmq.promise.DefaultPromise.exception` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"openmessaging/src/main/java/io/openmessaging/rocketmq/promise/DefaultPromise.java","tnLine":119,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"boolean DefaultPromise.setFailure(Throwable)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean DefaultPromise.setFailure(Throwable)` indirectly reads without synchronization from `this.io.openmessaging.rocketmq.promise.DefaultPromise.promiseListenerList`. Potentially races with write in method `DefaultPromise.addListener(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"openmessaging/src/main/java/io/openmessaging/rocketmq/promise/DefaultPromise.java","tnLine":120,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"boolean DefaultPromise.setFailure(Throwable)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void LoggingBuilder$FileAppender.setFile(String)` writes to field `this.org.apache.rocketmq.logging.inner.LoggingBuilder$FileAppender.fileName` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"logging/src/main/java/org/apache/rocketmq/logging/inner/LoggingBuilder.java","tnLine":625,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void LoggingBuilder$FileAppender.setFile(String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void DefaultMQPullConsumer.setMessageQueueListener(MessageQueueListener)` writes to field `this.org.apache.rocketmq.client.consumer.DefaultMQPullConsumer.messageQueueListener` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/consumer/DefaultMQPullConsumer.java","tnLine":249,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void DefaultMQPullConsumer.setMessageQueueListener(MessageQueueListener)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void DefaultMQPullConsumerImpl.setOffsetStore(OffsetStore)` writes to field `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPullConsumerImpl.offsetStore` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPullConsumerImpl.java","tnLine":771,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void DefaultMQPullConsumerImpl.setOffsetStore(OffsetStore)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void DefaultMQPushConsumerImpl.setOffsetStore(OffsetStore)` writes to field `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPushConsumerImpl.offsetStore` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPushConsumerImpl.java","tnLine":209,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void DefaultMQPushConsumerImpl.setOffsetStore(OffsetStore)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void DefaultMQPullConsumerImpl.setPullAPIWrapper(PullAPIWrapper)` writes to field `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPullConsumerImpl.pullAPIWrapper` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPullConsumerImpl.java","tnLine":779,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void DefaultMQPullConsumerImpl.setPullAPIWrapper(PullAPIWrapper)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void LoggingBuilder$FileAppender.setQWForFiles(Writer)` writes to field `this.org.apache.rocketmq.logging.inner.LoggingBuilder$WriterAppender.qw` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"logging/src/main/java/org/apache/rocketmq/logging/inner/LoggingBuilder.java","tnLine":725,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void LoggingBuilder$FileAppender.setQWForFiles(Writer)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void LoggingBuilder$RollingFileAppender.setQWForFiles(Writer)` writes to field `this.org.apache.rocketmq.logging.inner.LoggingBuilder$WriterAppender.qw` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"logging/src/main/java/org/apache/rocketmq/logging/inner/LoggingBuilder.java","tnLine":836,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void LoggingBuilder$RollingFileAppender.setQWForFiles(Writer)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void DefaultMQPushConsumerImpl.setmQClientFactory(MQClientInstance)` writes to field `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPushConsumerImpl.mQClientFactory` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPushConsumerImpl.java","tnLine":1094,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void DefaultMQPushConsumerImpl.setmQClientFactory(MQClientInstance)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void RocketmqLogbackAppender.start()` writes to field `this.org.apache.rocketmq.logappender.logback.RocketmqLogbackAppender.producer` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"logappender/src/main/java/org/apache/rocketmq/logappender/logback/RocketmqLogbackAppender.java","tnLine":98,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void RocketmqLogbackAppender.start()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void RocketmqLogbackAppender.start()` reads without synchronization from `this.org.apache.rocketmq.logappender.logback.RocketmqLogbackAppender.producer`. Potentially races with write in method `RocketmqLogbackAppender.stop()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"logappender/src/main/java/org/apache/rocketmq/logappender/logback/RocketmqLogbackAppender.java","tnLine":103,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void RocketmqLogbackAppender.start()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void LoggingBuilder$RollingFileAppender.subAppend(LoggingEvent)` reads without synchronization from `this.org.apache.rocketmq.logging.inner.LoggingBuilder$FileAppender.fileName`. Potentially races with write in method `LoggingBuilder$RollingFileAppender.setFile(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"logging/src/main/java/org/apache/rocketmq/logging/inner/LoggingBuilder.java","tnLine":841,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void LoggingBuilder$RollingFileAppender.subAppend(LoggingEvent)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void LoggingBuilder$RollingFileAppender.subAppend(LoggingEvent)` reads without synchronization from `this.org.apache.rocketmq.logging.inner.LoggingBuilder$WriterAppender.qw`. Potentially races with write in method `LoggingBuilder$RollingFileAppender.setFile(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"logging/src/main/java/org/apache/rocketmq/logging/inner/LoggingBuilder.java","tnLine":842,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void LoggingBuilder$RollingFileAppender.subAppend(LoggingEvent)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void LoggingBuilder$RollingFileAppender.subAppend(LoggingEvent)` indirectly reads without synchronization from `this.org.apache.rocketmq.logging.inner.LoggingBuilder$WriterAppender.qw.org.apache.rocketmq.logging.inner.LoggingBuilder$RollingFileAppender$CountingQuietWriter.count`. Potentially races with write in method `LoggingBuilder$RollingFileAppender.setFile(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"logging/src/main/java/org/apache/rocketmq/logging/inner/LoggingBuilder.java","tnLine":842,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void LoggingBuilder$RollingFileAppender.subAppend(LoggingEvent)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void LoggingBuilder$RollingFileAppender.subAppend(LoggingEvent)` indirectly reads without synchronization from `this.org.apache.rocketmq.logging.inner.LoggingBuilder$WriterAppender.immediateFlush`. Potentially races with write in method `LoggingBuilder$RollingFileAppender.setFile(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"logging/src/main/java/org/apache/rocketmq/logging/inner/LoggingBuilder.java","tnLine":840,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void LoggingBuilder$RollingFileAppender.subAppend(LoggingEvent)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void LoggingBuilder$RollingFileAppender.subAppend(LoggingEvent)` indirectly reads without synchronization from `this.org.apache.rocketmq.logging.inner.LoggingBuilder$FileAppender.bufferSize`. Potentially races with write in method `LoggingBuilder$RollingFileAppender.setFile(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"logging/src/main/java/org/apache/rocketmq/logging/inner/LoggingBuilder.java","tnLine":844,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void LoggingBuilder$RollingFileAppender.subAppend(LoggingEvent)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void LoggingBuilder$WriterAppender.subAppend(LoggingEvent)` reads without synchronization from `this.org.apache.rocketmq.logging.inner.LoggingBuilder$WriterAppender.qw`. Potentially races with write in method `LoggingBuilder$WriterAppender.setWriter(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"logging/src/main/java/org/apache/rocketmq/logging/inner/LoggingBuilder.java","tnLine":571,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void LoggingBuilder$WriterAppender.subAppend(LoggingEvent)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void DefaultMQPushConsumerImpl.subscribe(String,String)` reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPushConsumerImpl.mQClientFactory`. Potentially races with write in method `DefaultMQPushConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPushConsumerImpl.java","tnLine":881,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void DefaultMQPushConsumerImpl.subscribe(String,String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void DefaultMQPushConsumerImpl.subscribe(String,String,String)` reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPushConsumerImpl.mQClientFactory`. Potentially races with write in method `DefaultMQPushConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPushConsumerImpl.java","tnLine":897,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void DefaultMQPushConsumerImpl.subscribe(String,String,String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void DefaultMQPushConsumerImpl.subscribe(String,MessageSelector)` reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPushConsumerImpl.mQClientFactory`. Potentially races with write in method `DefaultMQPushConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPushConsumerImpl.java","tnLine":917,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void DefaultMQPushConsumerImpl.subscribe(String,MessageSelector)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void DefaultMQPullConsumerImpl.updateConsumeOffset(MessageQueue,long)` reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPullConsumerImpl.offsetStore`. Potentially races with write in method `DefaultMQPullConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPullConsumerImpl.java","tnLine":752,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void DefaultMQPullConsumerImpl.updateConsumeOffset(MessageQueue,long)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void DefaultMQPushConsumerImpl.updateConsumeOffset(MessageQueue,long)` reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPushConsumerImpl.offsetStore`. Potentially races with write in method `DefaultMQPushConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPushConsumerImpl.java","tnLine":934,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void DefaultMQPushConsumerImpl.updateConsumeOffset(MessageQueue,long)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void DefaultMQPullConsumerImpl.updateConsumeOffsetToBroker(MessageQueue,long,boolean)` reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPullConsumerImpl.offsetStore`. Potentially races with write in method `DefaultMQPullConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPullConsumerImpl.java","tnLine":568,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void DefaultMQPullConsumerImpl.updateConsumeOffsetToBroker(MessageQueue,long,boolean)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void DefaultMQPushConsumerImpl.updateCorePoolSize(int)` reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPushConsumerImpl.consumeMessageService`. Potentially races with write in method `DefaultMQPushConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPushConsumerImpl.java","tnLine":938,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void DefaultMQPushConsumerImpl.updateCorePoolSize(int)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void TopicConfigManager.updateOrderTopicConfig(KVTable)` indirectly writes to field `this.org.apache.rocketmq.broker.topic.TopicConfigManager.dataVersion.org.apache.rocketmq.common.DataVersion.timestamp` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"broker/src/main/java/org/apache/rocketmq/broker/topic/TopicConfigManager.java","tnLine":356,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void TopicConfigManager.updateOrderTopicConfig(KVTable)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void TopicConfigManager.updateOrderTopicConfig(KVTable)` indirectly reads without synchronization from `topicConfig.org.apache.rocketmq.common.TopicConfig.order`. Potentially races with write in method `TopicConfigManager.createTopicInSendMessageBackMethod(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not. [wob].","tnFile":"broker/src/main/java/org/apache/rocketmq/broker/topic/TopicConfigManager.java","tnLine":347,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void TopicConfigManager.updateOrderTopicConfig(KVTable)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void TopicConfigManager.updateOrderTopicConfig(KVTable)` indirectly writes to field `topicConfig.org.apache.rocketmq.common.TopicConfig.order` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not. [wob].","tnFile":"broker/src/main/java/org/apache/rocketmq/broker/topic/TopicConfigManager.java","tnLine":348,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void TopicConfigManager.updateOrderTopicConfig(KVTable)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void TopicConfigManager.updateTopicConfig(TopicConfig)` indirectly writes to field `this.org.apache.rocketmq.broker.topic.TopicConfigManager.dataVersion.org.apache.rocketmq.common.DataVersion.timestamp` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"broker/src/main/java/org/apache/rocketmq/broker/topic/TopicConfigManager.java","tnLine":324,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void TopicConfigManager.updateTopicConfig(TopicConfig)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void TopicConfigManager.updateTopicUnitFlag(String,boolean)` indirectly writes to field `this.org.apache.rocketmq.broker.topic.TopicConfigManager.dataVersion.org.apache.rocketmq.common.DataVersion.timestamp` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"broker/src/main/java/org/apache/rocketmq/broker/topic/TopicConfigManager.java","tnLine":289,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void TopicConfigManager.updateTopicUnitFlag(String,boolean)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void TopicConfigManager.updateTopicUnitSubFlag(String,boolean)` indirectly writes to field `this.org.apache.rocketmq.broker.topic.TopicConfigManager.dataVersion.org.apache.rocketmq.common.DataVersion.timestamp` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"broker/src/main/java/org/apache/rocketmq/broker/topic/TopicConfigManager.java","tnLine":309,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void TopicConfigManager.updateTopicUnitSubFlag(String,boolean)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `MessageExt DefaultMQPullConsumerImpl.viewMessage(String)` reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPullConsumerImpl.mQClientFactory`. Potentially races with write in method `DefaultMQPullConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPullConsumerImpl.java","tnLine":758,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"MessageExt DefaultMQPullConsumerImpl.viewMessage(String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `MessageExt DefaultMQPushConsumerImpl.viewMessage(String)` reads without synchronization from `this.org.apache.rocketmq.client.impl.consumer.DefaultMQPushConsumerImpl.mQClientFactory`. Potentially races with write in method `DefaultMQPushConsumerImpl.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPushConsumerImpl.java","tnLine":943,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"MessageExt DefaultMQPushConsumerImpl.viewMessage(String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void LoggingBuilder$WriterAppender.writeFooter()` reads without synchronization from `this.org.apache.rocketmq.logging.inner.LoggingBuilder$WriterAppender.qw`. Potentially races with write in method `LoggingBuilder$WriterAppender.setWriter(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"logging/src/main/java/org/apache/rocketmq/logging/inner/LoggingBuilder.java","tnLine":585,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void LoggingBuilder$WriterAppender.writeFooter()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void LoggingBuilder$WriterAppender.writeHeader()` reads without synchronization from `this.org.apache.rocketmq.logging.inner.LoggingBuilder$WriterAppender.qw`. Potentially races with write in method `LoggingBuilder$WriterAppender.setWriter(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"logging/src/main/java/org/apache/rocketmq/logging/inner/LoggingBuilder.java","tnLine":594,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void LoggingBuilder$WriterAppender.writeHeader()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}}],null]}],[{"tag":"ErrorProne"},{"tag":"ToolSuccess","contents":[[{"tnType":"FormatString","tnDesc":"extra format arguments: used 0, provided 1","tnFile":"acl/src/main/java/org/apache/rocketmq/acl/plain/RemoteAddressStrategyFactory.java","tnLine":51,"tnColumn":53,"tnPatch":null,"tnCodeLine":"                throw new AclException(String.format(\"MultipleRemoteAddressStrategy netaddress examine scope Exception netaddress\", remoteAddr));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"RandomModInteger","tnDesc":"Use Random.nextInt(int).  Random.nextInt() % n can have negative results","tnFile":"broker/src/main/java/org/apache/rocketmq/broker/processor/SendMessageProcessor.java","tnLine":276,"tnColumn":65,"tnPatch":null,"tnCodeLine":"                int queueIdInt = Math.abs(this.random.nextInt() % 99999999) % DLQ_NUMS_PER_GROUP;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"RandomModInteger","tnDesc":"Use Random.nextInt(int).  Random.nextInt() % n can have negative results","tnFile":"broker/src/main/java/org/apache/rocketmq/broker/processor/SendMessageProcessor.java","tnLine":187,"tnColumn":57,"tnPatch":null,"tnCodeLine":"            queueIdInt = Math.abs(this.random.nextInt() % 99999999) % DLQ_NUMS_PER_GROUP;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"SelfAssignment","tnDesc":"Variable assigned to itself","tnFile":"logappender/src/main/java/org/apache/rocketmq/logappender/log4j2/RocketmqLog4j2Appender.java","tnLine":77,"tnColumn":23,"tnPatch":null,"tnCodeLine":"        this.producer = producer;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"RandomModInteger","tnDesc":"Use Random.nextInt(int).  Random.nextInt() % n can have negative results","tnFile":"test/src/main/java/org/apache/rocketmq/test/util/RandomUtil.java","tnLine":268,"tnColumn":43,"tnPatch":null,"tnCodeLine":"            index = Math.abs(rd.nextInt() % len--);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"RandomModInteger","tnDesc":"Use Random.nextInt(int).  Random.nextInt() % n can have negative results","tnFile":"broker/src/main/java/org/apache/rocketmq/broker/processor/SendMessageProcessor.java","tnLine":141,"tnColumn":57,"tnPatch":null,"tnCodeLine":"        int queueIdInt = Math.abs(this.random.nextInt() % 99999999) % subscriptionGroupConfig.getRetryQueueNums();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"RandomModInteger","tnDesc":"Use Random.nextInt(int).  Random.nextInt() % n can have negative results","tnFile":"broker/src/main/java/org/apache/rocketmq/broker/processor/SendMessageProcessor.java","tnLine":332,"tnColumn":57,"tnPatch":null,"tnCodeLine":"            queueIdInt = Math.abs(this.random.nextInt() % 99999999) % topicConfig.getWriteQueueNums();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"RandomModInteger","tnDesc":"Use Random.nextInt(int).  Random.nextInt() % n can have negative results","tnFile":"broker/src/main/java/org/apache/rocketmq/broker/processor/SendMessageProcessor.java","tnLine":508,"tnColumn":57,"tnPatch":null,"tnCodeLine":"            queueIdInt = Math.abs(this.random.nextInt() % 99999999) % topicConfig.getWriteQueueNums();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"RandomModInteger","tnDesc":"Use Random.nextInt(int).  Random.nextInt() % n can have negative results","tnFile":"remoting/src/main/java/org/apache/rocketmq/remoting/netty/NettyRemotingClient.java","tnLine":147,"tnColumn":37,"tnPatch":null,"tnCodeLine":"        return Math.abs(r.nextInt() % 999) % 999;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"RandomModInteger","tnDesc":"Use Random.nextInt(int).  Random.nextInt() % n can have negative results","tnFile":"broker/src/main/java/org/apache/rocketmq/broker/processor/AbstractSendMessageProcessor.java","tnLine":110,"tnColumn":57,"tnPatch":null,"tnCodeLine":"            queueIdInt = Math.abs(this.random.nextInt() % 99999999) % topicConfig.getWriteQueueNums();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}}],null]}]]}
