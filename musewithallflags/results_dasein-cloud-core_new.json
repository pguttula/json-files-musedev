{"tag":"AnalysisSuccess","contents":{"requestedTools":null,"toolResults":[[{"tag":"Infer"},{"tag":"ToolSuccess","contents":[[{"tnType":"NULL_DEREFERENCE","tnDesc":"object `stringToWrite` last assigned on line 38 could be null and is dereferenced at line 39.","tnFile":"src/main/java/org/dasein/cloud/util/requester/entities/DaseinEntity.java","tnLine":39,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.requester.entities.DaseinEntity.<init>(java.lang.Object,org.dasein.cloud.util.requester.streamprocessors.StreamProcessor)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `currentTags.get(tagToCheck)` could be null and is dereferenced at line 68.","tnFile":"src/main/java/org/dasein/cloud/compute/AutoScalingGroupFilterOptions.java","tnLine":68,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.compute.AutoScalingGroupFilterOptions.matches(org.dasein.cloud.compute.ScalingGroup):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.bouncycastle.util.io.pem.PemReader` acquired by call to `new()` at line 97 is not released after line 104.","tnFile":"src/main/java/org/dasein/cloud/util/X509Store.java","tnLine":104,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.X509Store.readPemObject(java.lang.String):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getFirewall(id)` could be null and is dereferenced at line 220.","tnFile":"src/main/java/org/dasein/cloud/network/AbstractNetworkFirewallSupport.java","tnLine":220,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.network.AbstractNetworkFirewallSupport.setTags(java.lang.String[],org.dasein.cloud.Tag[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getSnapshot(id)` could be null and is dereferenced at line 290.","tnFile":"src/main/java/org/dasein/cloud/compute/AbstractSnapshotSupport.java","tnLine":290,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.compute.AbstractSnapshotSupport.setTags(java.lang.String[],org.dasein.cloud.Tag[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getVolume(id)` could be null and is dereferenced at line 301.","tnFile":"src/main/java/org/dasein/cloud/compute/AbstractVolumeSupport.java","tnLine":301,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.compute.AbstractVolumeSupport.setTags(java.lang.String[],org.dasein.cloud.Tag[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getLoadBalancer(id)` could be null and is dereferenced at line 307.","tnFile":"src/main/java/org/dasein/cloud/network/AbstractLoadBalancerSupport.java","tnLine":307,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.network.AbstractLoadBalancerSupport.setTags(java.lang.String[],org.dasein.cloud.Tag[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getFirewall(id)` could be null and is dereferenced at line 402.","tnFile":"src/main/java/org/dasein/cloud/network/AbstractFirewallSupport.java","tnLine":402,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.network.AbstractFirewallSupport.setTags(java.lang.String[],org.dasein.cloud.Tag[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getSubnet(id)` could be null and is dereferenced at line 443.","tnFile":"src/main/java/org/dasein/cloud/network/AbstractVLANSupport.java","tnLine":443,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.network.AbstractVLANSupport.setSubnetTags(java.lang.String[],org.dasein.cloud.Tag[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getRoutingTable(id)` could be null and is dereferenced at line 456.","tnFile":"src/main/java/org/dasein/cloud/network/AbstractVLANSupport.java","tnLine":456,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.network.AbstractVLANSupport.setRoutingTableTags(java.lang.String[],org.dasein.cloud.Tag[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getVlan(id)` could be null and is dereferenced at line 483.","tnFile":"src/main/java/org/dasein/cloud/network/AbstractVLANSupport.java","tnLine":483,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.network.AbstractVLANSupport.setVLANTags(java.lang.String[],org.dasein.cloud.Tag[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getVirtualMachine(id)` could be null and is dereferenced at line 750.","tnFile":"src/main/java/org/dasein/cloud/compute/AbstractVMSupport.java","tnLine":750,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.compute.AbstractVMSupport.setTags(java.lang.String[],org.dasein.cloud.Tag[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void APITrace.begin(CloudProvider,String)` reads without synchronization from `current.currentChild`. Potentially races with write in method `APITrace.begin(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/main/java/org/dasein/cloud/util/APITrace.java","tnLine":106,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.APITrace.begin(org.dasein.cloud.CloudProvider,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void APITrace.begin(CloudProvider,String)` mutates container `util.APITrace.operations` via call to `put` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"src/main/java/org/dasein/cloud/util/APITrace.java","tnLine":103,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.APITrace.begin(org.dasein.cloud.CloudProvider,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void APITrace.begin(CloudProvider,String)` reads without synchronization from container `util.APITrace.operations` via call to `get`. Potentially races with write in method `APITrace.begin(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/main/java/org/dasein/cloud/util/APITrace.java","tnLine":100,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.APITrace.begin(org.dasein.cloud.CloudProvider,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void APITrace.begin(CloudProvider,String)` writes to field `current.currentChild` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"src/main/java/org/dasein/cloud/util/APITrace.java","tnLine":109,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.APITrace.begin(org.dasein.cloud.CloudProvider,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void CloudProvider.connect(ProviderContext)` indirectly mutates container `cloud.Cloud.clouds` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/CloudProvider.java","tnLine":171,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.CloudProvider.connect(org.dasein.cloud.ProviderContext):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void CloudProvider.connect(ProviderContext,CloudProvider)` indirectly mutates container `cloud.Cloud.clouds` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/CloudProvider.java","tnLine":185,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.CloudProvider.connect(org.dasein.cloud.ProviderContext,org.dasein.cloud.CloudProvider):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void CloudProvider.connect(ProviderContext,CloudProvider,Cloud)` indirectly mutates container `cloud.Cloud.clouds` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/CloudProvider.java","tnLine":213,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.CloudProvider.connect(org.dasein.cloud.ProviderContext,org.dasein.cloud.CloudProvider,org.dasein.cloud.Cloud):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void APITrace.end()` reads without synchronization from container `util.APITrace.operations` via call to `get`. Potentially races with write in method `APITrace.begin(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/util/APITrace.java","tnLine":141,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.APITrace.end():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void APITrace.end()` indirectly mutates container `util.APITrace.operationTrace` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/util/APITrace.java","tnLine":163,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.APITrace.end():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void APITrace.end()` mutates container `util.APITrace.operations` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/util/APITrace.java","tnLine":161,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.APITrace.end():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `String VirtualMachine.fetchPassword()` reads without synchronization from `this.rootPassword`. Potentially races with write in method `VirtualMachine.getRootPassword()`.\n Reporting because this access may occur on a background thread.","tnFile":"src/main/java/org/dasein/cloud/compute/VirtualMachine.java","tnLine":195,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.compute.VirtualMachine.fetchPassword():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Iterable Cache.get(ProviderContext)` reads without synchronization from container `this.regionCache` via call to `get`. Potentially races with write in method `Cache.get(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/main/java/org/dasein/cloud/util/Cache.java","tnLine":282,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.Cache.get(org.dasein.cloud.ProviderContext):java.lang.Iterable","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Iterable Cache.get(ProviderContext)` reads without synchronization from container `this.regionAccountCache` via call to `get`. Potentially races with write in method `Cache.get(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/main/java/org/dasein/cloud/util/Cache.java","tnLine":296,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.Cache.get(org.dasein.cloud.ProviderContext):java.lang.Iterable","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Iterable Cache.get(ProviderContext)` reads without synchronization from `entry.items`. Potentially races with write in method `Cache.get(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/main/java/org/dasein/cloud/util/Cache.java","tnLine":313,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.Cache.get(org.dasein.cloud.ProviderContext):java.lang.Iterable","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Iterable Cache.get(ProviderContext)` reads without synchronization from container `this.cloudCache` via call to `get`. Potentially races with write in method `Cache.get(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/main/java/org/dasein/cloud/util/Cache.java","tnLine":279,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.Cache.get(org.dasein.cloud.ProviderContext):java.lang.Iterable","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Iterable Cache.get(ProviderContext)` reads without synchronization from container `this.cloudAccountCache` via call to `get`. Potentially races with write in method `Cache.get(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/main/java/org/dasein/cloud/util/Cache.java","tnLine":289,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.Cache.get(org.dasein.cloud.ProviderContext):java.lang.Iterable","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Iterable Cache.get(ProviderContext)` writes to field `entry.items` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"src/main/java/org/dasein/cloud/util/Cache.java","tnLine":310,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.Cache.get(org.dasein.cloud.ProviderContext):java.lang.Iterable","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object SingletonCache.get(ProviderContext)` reads without synchronization from container `this.regionCache` via call to `get`. Potentially races with write in method `SingletonCache.put(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/main/java/org/dasein/cloud/util/SingletonCache.java","tnLine":275,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.SingletonCache.get(org.dasein.cloud.ProviderContext):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object SingletonCache.get(ProviderContext)` reads without synchronization from container `this.regionAccountCache` via call to `get`. Potentially races with write in method `SingletonCache.put(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/main/java/org/dasein/cloud/util/SingletonCache.java","tnLine":289,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.SingletonCache.get(org.dasein.cloud.ProviderContext):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object SingletonCache.get(ProviderContext)` reads without synchronization from `entry.item`. Potentially races with write in method `SingletonCache.get(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/main/java/org/dasein/cloud/util/SingletonCache.java","tnLine":306,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.SingletonCache.get(org.dasein.cloud.ProviderContext):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object SingletonCache.get(ProviderContext)` reads without synchronization from container `this.cloudCache` via call to `get`. Potentially races with write in method `SingletonCache.put(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/main/java/org/dasein/cloud/util/SingletonCache.java","tnLine":272,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.SingletonCache.get(org.dasein.cloud.ProviderContext):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object SingletonCache.get(ProviderContext)` reads without synchronization from container `this.cloudAccountCache` via call to `get`. Potentially races with write in method `SingletonCache.put(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/main/java/org/dasein/cloud/util/SingletonCache.java","tnLine":282,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.SingletonCache.get(org.dasein.cloud.ProviderContext):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Object SingletonCache.get(ProviderContext)` writes to field `entry.item` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"src/main/java/org/dasein/cloud/util/SingletonCache.java","tnLine":303,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.SingletonCache.get(org.dasein.cloud.ProviderContext):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object AsynchronousTask.getResult()` reads without synchronization from `this.result`. Potentially races with write in method `AsynchronousTask.completeWithResult(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/AsynchronousTask.java","tnLine":76,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.AsynchronousTask.getResult():java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `String VirtualMachine.getRootPassword()` indirectly reads without synchronization from `this.rootPassword`. Potentially races with write in method `VirtualMachine.getRootPassword()`.\n Reporting because this access may occur on a background thread.","tnFile":"src/main/java/org/dasein/cloud/compute/VirtualMachine.java","tnLine":148,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.compute.VirtualMachine.getRootPassword():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `String VirtualMachine.getRootPassword(long)` indirectly reads without synchronization from `this.rootPassword`. Potentially races with write in method `VirtualMachine.getRootPassword()`.\n Reporting because this access may occur on a background thread.","tnFile":"src/main/java/org/dasein/cloud/compute/VirtualMachine.java","tnLine":155,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.compute.VirtualMachine.getRootPassword(long):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `String Volume.getTag(String)` indirectly writes to field `this.tags` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/compute/Volume.java","tnLine":323,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.compute.Volume.getTag(java.lang.String):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Map Volume.getTags()` writes to field `this.tags` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/compute/Volume.java","tnLine":329,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.compute.Volume.getTags():java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Map Volume.getTags()` reads without synchronization from `this.tags`. Potentially races with write in method `Volume.setTags(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/compute/Volume.java","tnLine":328,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.compute.Volume.getTags():java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Throwable AsynchronousTask.getTaskError()` reads without synchronization from `this.taskError`. Potentially races with write in method `AsynchronousTask.complete(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/AsynchronousTask.java","tnLine":88,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.AsynchronousTask.getTaskError():java.lang.Throwable","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void CloudProvider.hold()` reads without synchronization from `this.computeCloudProvider`. Potentially races with write in method `CloudProvider.connect(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/main/java/org/dasein/cloud/CloudProvider.java","tnLine":389,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.CloudProvider.hold():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Cache.put(ProviderContext,Iterable)` reads without synchronization from container `this.regionCache` via call to `get`. Potentially races with write in method `Cache.get(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/util/Cache.java","tnLine":331,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.Cache.put(org.dasein.cloud.ProviderContext,java.lang.Iterable):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Cache.put(ProviderContext,Iterable)` reads without synchronization from container `this.cloudAccountCache` via call to `get`. Potentially races with write in method `Cache.get(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/util/Cache.java","tnLine":340,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.Cache.put(org.dasein.cloud.ProviderContext,java.lang.Iterable):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Cache.put(ProviderContext,Iterable)` reads without synchronization from container `this.regionAccountCache` via call to `get`. Potentially races with write in method `Cache.get(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/util/Cache.java","tnLine":349,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.Cache.put(org.dasein.cloud.ProviderContext,java.lang.Iterable):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Cache.put(ProviderContext,Iterable)` mutates container `this.cloudAccountCache` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/util/Cache.java","tnLine":344,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.Cache.put(org.dasein.cloud.ProviderContext,java.lang.Iterable):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Cache.put(ProviderContext,Iterable)` mutates container `this.cloudCache` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/util/Cache.java","tnLine":328,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.Cache.put(org.dasein.cloud.ProviderContext,java.lang.Iterable):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Cache.put(ProviderContext,Iterable)` mutates container `this.regionCache` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/util/Cache.java","tnLine":335,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.Cache.put(org.dasein.cloud.ProviderContext,java.lang.Iterable):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Cache.put(ProviderContext,Iterable)` mutates container `this.regionAccountCache` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/util/Cache.java","tnLine":353,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.Cache.put(org.dasein.cloud.ProviderContext,java.lang.Iterable):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void SingletonCache.put(ProviderContext,Object)` mutates container `this.regionAccountCache` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/util/SingletonCache.java","tnLine":346,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.SingletonCache.put(org.dasein.cloud.ProviderContext,java.lang.Object):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void SingletonCache.put(ProviderContext,Object)` reads without synchronization from container `this.regionCache` via call to `get`. Potentially races with write in method `SingletonCache.clear()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/util/SingletonCache.java","tnLine":324,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.SingletonCache.put(org.dasein.cloud.ProviderContext,java.lang.Object):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void SingletonCache.put(ProviderContext,Object)` reads without synchronization from container `this.cloudAccountCache` via call to `get`. Potentially races with write in method `SingletonCache.clear()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/util/SingletonCache.java","tnLine":333,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.SingletonCache.put(org.dasein.cloud.ProviderContext,java.lang.Object):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void SingletonCache.put(ProviderContext,Object)` mutates container `this.regionCache` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/util/SingletonCache.java","tnLine":328,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.SingletonCache.put(org.dasein.cloud.ProviderContext,java.lang.Object):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void SingletonCache.put(ProviderContext,Object)` reads without synchronization from container `this.regionAccountCache` via call to `get`. Potentially races with write in method `SingletonCache.clear()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/util/SingletonCache.java","tnLine":342,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.SingletonCache.put(org.dasein.cloud.ProviderContext,java.lang.Object):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void SingletonCache.put(ProviderContext,Object)` mutates container `this.cloudCache` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/util/SingletonCache.java","tnLine":321,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.SingletonCache.put(org.dasein.cloud.ProviderContext,java.lang.Object):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void SingletonCache.put(ProviderContext,Object)` mutates container `this.cloudAccountCache` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/util/SingletonCache.java","tnLine":337,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.SingletonCache.put(org.dasein.cloud.ProviderContext,java.lang.Object):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void CloudProvider.release()` reads without synchronization from `this.computeCloudProvider`. Potentially races with write in method `CloudProvider.connect(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/main/java/org/dasein/cloud/CloudProvider.java","tnLine":404,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.CloudProvider.release():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void APITrace.reset()` mutates container `util.APITrace.operations` via call to `clear` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"src/main/java/org/dasein/cloud/util/APITrace.java","tnLine":588,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.APITrace.reset():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void InvoiceLine.setBreakout(String,Double)` reads without synchronization from `this.breakouts`. Potentially races with write in method `InvoiceLine.getBreakouts()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/admin/InvoiceLine.java","tnLine":106,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.admin.InvoiceLine.setBreakout(java.lang.String,java.lang.Double):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void InvoiceLine.setBreakout(String,Double)` writes to field `this.breakouts` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/admin/InvoiceLine.java","tnLine":107,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.admin.InvoiceLine.setBreakout(java.lang.String,java.lang.Double):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void VirtualMachine.setRootPassword(String)` writes to field `this.rootPassword` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/compute/VirtualMachine.java","tnLine":135,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.compute.VirtualMachine.setRootPassword(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Account.setTag(String,String)` reads without synchronization from `this.tags`. Potentially races with write in method `Account.getTags()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/admin/Account.java","tnLine":187,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.admin.Account.setTag(java.lang.String,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Account.setTag(String,String)` writes to field `this.tags` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/admin/Account.java","tnLine":188,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.admin.Account.setTag(java.lang.String,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void InvoiceHeader.setTag(String,String)` reads without synchronization from `this.tags`. Potentially races with write in method `InvoiceHeader.setTags(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/admin/InvoiceHeader.java","tnLine":66,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.admin.InvoiceHeader.setTag(java.lang.String,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void InvoiceHeader.setTag(String,String)` writes to field `this.tags` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/admin/InvoiceHeader.java","tnLine":67,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.admin.InvoiceHeader.setTag(java.lang.String,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void AffinityGroup.setTag(String,String)` reads without synchronization from `this.tags`. Potentially races with write in method `AffinityGroup.setTags(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/compute/AffinityGroup.java","tnLine":95,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.compute.AffinityGroup.setTag(java.lang.String,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void AffinityGroup.setTag(String,String)` writes to field `this.tags` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/compute/AffinityGroup.java","tnLine":96,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.compute.AffinityGroup.setTag(java.lang.String,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void VirtualMachine.setTag(String,String)` reads without synchronization from `this.tags`. Potentially races with write in method `VirtualMachine.setTags(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/compute/VirtualMachine.java","tnLine":559,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.compute.VirtualMachine.setTag(java.lang.String,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void VirtualMachine.setTag(String,String)` writes to field `this.tags` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/compute/VirtualMachine.java","tnLine":560,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.compute.VirtualMachine.setTag(java.lang.String,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Volume.setTag(String,String)` indirectly writes to field `this.tags` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/main/java/org/dasein/cloud/compute/Volume.java","tnLine":336,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.compute.Volume.setTag(java.lang.String,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Cache$CacheDelegate.setTimeoutInSeconds(String,long)` writes to field `c.cacheTimeout` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"src/main/java/org/dasein/cloud/util/Cache.java","tnLine":167,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.Cache$CacheDelegate.setTimeoutInSeconds(java.lang.String,long):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void SingletonCache$CacheDelegate.setTimeoutInSeconds(String,long)` writes to field `c.cacheTimeout` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"src/main/java/org/dasein/cloud/util/SingletonCache.java","tnLine":162,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.SingletonCache$CacheDelegate.setTimeoutInSeconds(java.lang.String,long):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void APITrace.trace(CloudProvider,String)` writes to field `current.apiCalls` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"src/main/java/org/dasein/cloud/util/APITrace.java","tnLine":622,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.APITrace.trace(org.dasein.cloud.CloudProvider,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void APITrace.trace(CloudProvider,String)` reads without synchronization from container `util.APITrace.operations` via call to `get`. Potentially races with write in method `APITrace.begin(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/main/java/org/dasein/cloud/util/APITrace.java","tnLine":603,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.APITrace.trace(org.dasein.cloud.CloudProvider,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void APITrace.trace(CloudProvider,String)` reads without synchronization from `current.apiCalls`. Potentially races with write in method `APITrace.trace(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/main/java/org/dasein/cloud/util/APITrace.java","tnLine":621,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.APITrace.trace(org.dasein.cloud.CloudProvider,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void APITrace.trace(CloudProvider,String)` writes to field `current.calls` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"src/main/java/org/dasein/cloud/util/APITrace.java","tnLine":608,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.dasein.cloud.util.APITrace.trace(org.dasein.cloud.CloudProvider,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}}],null,{"analysisLOC":null,"analysisBuildSys":null,"analysisLang":null}]}],[{"tag":"ErrorProne"},{"tag":"ToolSuccess","contents":[[{"tnType":"Var","tnDesc":"Non-constant variable missing @Var annotation","tnFile":"src/main/java/org/dasein/cloud/CloudProvider.java","tnLine":249,"tnColumn":16,"tnPatch":null,"tnCodeLine":"        String name = baseName;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nonnull is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/util/NamingConstraints.java","tnLine":612,"tnColumn":23,"tnPatch":null,"tnCodeLine":"    NamingConstraints limitedToLatin1() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nonnull is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/util/NamingConstraints.java","tnLine":107,"tnColumn":46,"tnPatch":null,"tnCodeLine":"    static public @Nonnull NamingConstraints getAlphaNumeric(@Nonnegative int minLength, @Nonnegative int maxLength) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nullable is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/CloudProvider.java","tnLine":239,"tnColumn":29,"tnPatch":null,"tnCodeLine":"    public @Nullable String findUniqueName(@Nonnull String baseName, @Nonnull NamingConstraints constraints, @Nonnull ResourceNamespace namespace) throws CloudException, InternalException {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"MultiVariableDeclaration","tnDesc":"Variable declarations should declare only one variable","tnFile":"src/main/java/org/dasein/cloud/util/NamingConstraints.java","tnLine":431,"tnColumn":13,"tnPatch":null,"tnCodeLine":"        int div, mod;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nonnull is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/util/NamingConstraints.java","tnLine":622,"tnColumn":23,"tnPatch":null,"tnCodeLine":"    NamingConstraints lowerCaseOnly() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nonnull is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/network/FirewallCapabilities.java","tnLine":153,"tnColumn":46,"tnPatch":null,"tnCodeLine":"    public @Nonnull Iterable<RuleTargetType> listSupportedSourceTypes(boolean inVlan, Direction direction) throws InternalException, CloudException;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"BooleanParameter","tnDesc":"Use parameter comments to document ambiguous literals","tnFile":"src/main/java/org/dasein/cloud/util/NamingConstraints.java","tnLine":250,"tnColumn":47,"tnPatch":null,"tnCodeLine":"                str.append(getRandomCharacter(true, str.length()));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nullable is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/network/FirewallCapabilities.java","tnLine":62,"tnColumn":35,"tnPatch":null,"tnCodeLine":"    public @Nullable VisibleScope getFirewallVisibleScope();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nonnull is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/util/NamingConstraints.java","tnLine":642,"tnColumn":23,"tnPatch":null,"tnCodeLine":"    NamingConstraints withNoSpaces() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nonnull is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/network/FirewallCapabilities.java","tnLine":103,"tnColumn":46,"tnPatch":null,"tnCodeLine":"    public @Nonnull Iterable<RuleTargetType> listSupportedDestinationTypes(boolean inVlan, Direction direction) throws InternalException, CloudException;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"FieldCanBeFinal","tnDesc":"This field is only assigned during initialization; consider making it final","tnFile":"src/main/java/org/dasein/cloud/util/NamingConstraints.java","tnLine":297,"tnColumn":27,"tnPatch":null,"tnCodeLine":"    static private Random random = new Random();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nonnull is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/util/NamingConstraints.java","tnLine":632,"tnColumn":23,"tnPatch":null,"tnCodeLine":"    NamingConstraints upperCaseOnly() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"Var","tnDesc":"Non-constant variable missing @Var annotation","tnFile":"src/main/java/org/dasein/cloud/CloudProvider.java","tnLine":77,"tnColumn":116,"tnPatch":null,"tnCodeLine":"    static public boolean matchesTags(@Nonnull Map<String, ?> currentValues, @Nonnull String name, @Nonnull String description, @Nullable Map<String, String> valuesToMatch) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"MissingSummary","tnDesc":"A summary fragment is required; consider using the value of the @return block as a summary fragment instead.","tnFile":"src/main/java/org/dasein/cloud/util/NamingConstraints.java","tnLine":490,"tnColumn":8,"tnPatch":null,"tnCodeLine":"     * @return true if these naming conventions allow for letters","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nonnull is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/network/FirewallCapabilities.java","tnLine":48,"tnColumn":41,"tnPatch":null,"tnCodeLine":"    public @Nonnull FirewallConstraints getFirewallConstraintsForCloud() throws InternalException, CloudException;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"FieldMissingNullable","tnDesc":"May assign null to field","tnFile":"src/main/java/org/dasein/cloud/CloudException.java","tnLine":90,"tnColumn":27,"tnPatch":null,"tnCodeLine":"        this.providerCode = providerCode;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"Var","tnDesc":"Non-constant variable missing @Var annotation","tnFile":"src/main/java/org/dasein/cloud/util/NamingConstraints.java","tnLine":216,"tnColumn":64,"tnPatch":null,"tnCodeLine":"    public @Nullable String convertToValidName(@Nonnull String baseName, @Nonnull Locale locale) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nonnegative is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/util/NamingConstraints.java","tnLine":293,"tnColumn":29,"tnPatch":null,"tnCodeLine":"    public @Nonnegative int getMinimumLength() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Deprecated, @Nonnull are not type annotations, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/network/FirewallCapabilities.java","tnLine":142,"tnColumn":46,"tnPatch":null,"tnCodeLine":"    public @Nonnull Iterable<RuleTargetType> listSupportedSourceTypes(boolean inVlan) throws InternalException, CloudException;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"UnusedMethod","tnDesc":"Private method 'getLastItem' is never used.","tnFile":"src/main/java/org/dasein/cloud/CloudProvider.java","tnLine":65,"tnColumn":36,"tnPatch":null,"tnCodeLine":"    static private @Nonnull String getLastItem(@Nonnull String name) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nonnull is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/util/NamingConstraints.java","tnLine":79,"tnColumn":46,"tnPatch":null,"tnCodeLine":"    static public @Nonnull NamingConstraints getAlphaOnly(@Nonnegative int minLength, @Nonnegative int maxLength) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nonnull is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/util/NamingConstraints.java","tnLine":132,"tnColumn":46,"tnPatch":null,"tnCodeLine":"    static public @Nonnull NamingConstraints getHostNameInstance(boolean forWindowsNetwork) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nonnull is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/Capabilities.java","tnLine":44,"tnColumn":28,"tnPatch":null,"tnCodeLine":"    public @Nonnull String getAccountNumber();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"Var","tnDesc":"Non-constant variable missing @Var annotation","tnFile":"src/main/java/org/dasein/cloud/util/NamingConstraints.java","tnLine":375,"tnColumn":59,"tnPatch":null,"tnCodeLine":"    public @Nullable String incrementName(@Nonnull String baseName, @Nonnegative int count) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nonnull is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/network/FirewallConstraints.java","tnLine":145,"tnColumn":27,"tnPatch":null,"tnCodeLine":"    public @Nonnull Level getConstraintLevel(@Nonnull Constraint forConstraint) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"MissingSummary","tnDesc":"A summary fragment is required; consider using the value of the @return block as a summary fragment instead.","tnFile":"src/main/java/org/dasein/cloud/util/NamingConstraints.java","tnLine":504,"tnColumn":8,"tnPatch":null,"tnCodeLine":"     * @return true if the first character in a name is allowed to be a symbol (constrained by {@link #getSymbolConstraints()})","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"MissingSummary","tnDesc":"A summary fragment is required; consider using the value of the @return block as a summary fragment instead.","tnFile":"src/main/java/org/dasein/cloud/util/NamingConstraints.java","tnLine":537,"tnColumn":8,"tnPatch":null,"tnCodeLine":"     * @return true if these naming conventions allow symbols in names (symbols may be constrained by {@link #getSymbolConstraints()})","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"Var","tnDesc":"Non-constant variable missing @Var annotation","tnFile":"src/main/java/org/dasein/cloud/CloudProvider.java","tnLine":77,"tnColumn":94,"tnPatch":null,"tnCodeLine":"    static public boolean matchesTags(@Nonnull Map<String, ?> currentValues, @Nonnull String name, @Nonnull String description, @Nullable Map<String, String> valuesToMatch) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"MissingSummary","tnDesc":"A summary fragment is required; consider using the value of the @return block as a summary fragment instead.","tnFile":"src/main/java/org/dasein/cloud/util/NamingConstraints.java","tnLine":277,"tnColumn":8,"tnPatch":null,"tnCodeLine":"     * @return the case constraints that names supported by these naming conventions must conform","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nonnull is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/network/FirewallConstraints.java","tnLine":154,"tnColumn":42,"tnPatch":null,"tnCodeLine":"    public @Nonnull Iterable<Constraint> getConstraints() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"MissingSummary","tnDesc":"A summary fragment is required; consider using the value of the @return block as a summary fragment instead.","tnFile":"src/main/java/org/dasein/cloud/util/NamingConstraints.java","tnLine":516,"tnColumn":8,"tnPatch":null,"tnCodeLine":"     * @return true if these naming conventions support only Latin 1 characters","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nullable is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/CloudProvider.java","tnLine":261,"tnColumn":45,"tnPatch":null,"tnCodeLine":"    public abstract @Nullable AdminServices getAdminServices();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"MissingOverride","tnDesc":"run overrides method in Thread; expected @Override","tnFile":"src/main/java/org/dasein/cloud/CloudProvider.java","tnLine":147,"tnColumn":29,"tnPatch":null,"tnCodeLine":"                public void run() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"Var","tnDesc":"Non-constant variable missing @Var annotation","tnFile":"src/main/java/org/dasein/cloud/util/NamingConstraints.java","tnLine":431,"tnColumn":13,"tnPatch":null,"tnCodeLine":"        int div, mod;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"MissingSummary","tnDesc":"A summary fragment is required; consider using the value of the @return block as a summary fragment instead.","tnFile":"src/main/java/org/dasein/cloud/util/NamingConstraints.java","tnLine":497,"tnColumn":8,"tnPatch":null,"tnCodeLine":"     * @return true if the first character in a name may be a number","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"MissingSummary","tnDesc":"A summary fragment is required; consider using the value of the @return block as a summary fragment instead.","tnFile":"src/main/java/org/dasein/cloud/util/NamingConstraints.java","tnLine":523,"tnColumn":8,"tnPatch":null,"tnCodeLine":"     * @return true if these naming conventions allow numbers in a name","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"MissingSummary","tnDesc":"A summary fragment is required; consider using the value of the @return block as a summary fragment instead.","tnFile":"src/main/java/org/dasein/cloud/network/FirewallConstraints.java","tnLine":159,"tnColumn":8,"tnPatch":null,"tnCodeLine":"     * @return true if this is an empty set of constraints (an open firewall)","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nonnegative is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/CloudException.java","tnLine":108,"tnColumn":29,"tnPatch":null,"tnCodeLine":"    public @Nonnegative int getHttpCode() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nonnull is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/CloudException.java","tnLine":116,"tnColumn":28,"tnPatch":null,"tnCodeLine":"    public @Nonnull String getProviderCode() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"Var","tnDesc":"Non-constant variable missing @Var annotation","tnFile":"src/main/java/org/dasein/cloud/CloudProvider.java","tnLine":239,"tnColumn":60,"tnPatch":null,"tnCodeLine":"    public @Nullable String findUniqueName(@Nonnull String baseName, @Nonnull NamingConstraints constraints, @Nonnull ResourceNamespace namespace) throws CloudException, InternalException {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"InconsistentOverloads","tnDesc":"The parameters of this method are inconsistent with other overloaded versions. A consistent order would be: <init>(String msg, CloudErrorType type, int httpCode, String providerCode, Throwable cause)","tnFile":"src/main/java/org/dasein/cloud/CloudException.java","tnLine":101,"tnColumn":15,"tnPatch":null,"tnCodeLine":"    protected CloudException(@Nullable CloudErrorType type, @Nonnegative int httpCode, @Nullable String providerCode, @Nullable String msg, @Nonnull Throwable cause) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nonnull is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/network/FirewallCapabilities.java","tnLine":121,"tnColumn":42,"tnPatch":null,"tnCodeLine":"    public @Nonnull Iterable<Permission> listSupportedPermissions(boolean inVlan) throws InternalException, CloudException;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"Var","tnDesc":"Non-constant variable missing @Var annotation","tnFile":"src/main/java/org/dasein/cloud/util/NamingConstraints.java","tnLine":221,"tnColumn":19,"tnPatch":null,"tnCodeLine":"        for( char c : baseName.toCharArray() ) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nonnull is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/util/NamingConstraints.java","tnLine":157,"tnColumn":46,"tnPatch":null,"tnCodeLine":"    static public @Nonnull NamingConstraints getStrictInstance(@Nonnegative int minimumLength, @Nonnegative int maximumLength) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@SuppressWarnings, @Nonnull are not type annotations, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/CloudProvider.java","tnLine":65,"tnColumn":36,"tnPatch":null,"tnCodeLine":"    static private @Nonnull String getLastItem(@Nonnull String name) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Override, @Nonnull are not type annotations, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/network/FirewallConstraints.java","tnLine":177,"tnColumn":28,"tnPatch":null,"tnCodeLine":"    public @Nonnull String toString() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"MissingSummary","tnDesc":"A summary line is required on public/protected Javadocs.","tnFile":"src/main/java/org/dasein/cloud/network/FirewallCapabilities.java","tnLine":156,"tnColumn":8,"tnPatch":null,"tnCodeLine":"     * @return true if the cloud requires a new firewall to be created with an initial set of rules","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nullable is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/util/NamingConstraints.java","tnLine":317,"tnColumn":29,"tnPatch":null,"tnCodeLine":"    public @Nullable char[] getSymbolConstraints() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"FieldMissingNullable","tnDesc":"Assigning null literal to field","tnFile":"src/main/java/org/dasein/cloud/util/NamingConstraints.java","tnLine":170,"tnColumn":29,"tnPatch":null,"tnCodeLine":"        n.symbolConstraints = null;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"Var","tnDesc":"Non-constant variable missing @Var annotation","tnFile":"src/main/java/org/dasein/cloud/util/NamingConstraints.java","tnLine":431,"tnColumn":18,"tnPatch":null,"tnCodeLine":"        int div, mod;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nonnull is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/network/FirewallCapabilities.java","tnLine":71,"tnColumn":33,"tnPatch":null,"tnCodeLine":"    public @Nonnull Requirement identifyPrecedenceRequirement(boolean inVlan) throws InternalException, CloudException;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"WildcardImport","tnDesc":"Wildcard imports, static or otherwise, should not be used","tnFile":"src/main/java/org/dasein/cloud/CloudProvider.java","tnLine":36,"tnColumn":1,"tnPatch":null,"tnCodeLine":"import java.util.*;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"MissingSummary","tnDesc":"A summary fragment is required; consider using the value of the @return block as a summary fragment instead.","tnFile":"src/main/java/org/dasein/cloud/network/FirewallConstraints.java","tnLine":152,"tnColumn":8,"tnPatch":null,"tnCodeLine":"     * @return a list of all constraint fields associated with this set of constraints.","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"MissingSummary","tnDesc":"A summary fragment is required; consider using the value of the @return block as a summary fragment instead.","tnFile":"src/main/java/org/dasein/cloud/Capabilities.java","tnLine":47,"tnColumn":8,"tnPatch":null,"tnCodeLine":"     * @return the region ID under which these capabilities were tested","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nonnull is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/util/NamingConstraints.java","tnLine":657,"tnColumn":39,"tnPatch":null,"tnCodeLine":"    public @Nonnull NamingConstraints withRegularExpression(String regularExpression){","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"Var","tnDesc":"Non-constant variable missing @Var annotation","tnFile":"src/main/java/org/dasein/cloud/util/NamingConstraints.java","tnLine":306,"tnColumn":14,"tnPatch":null,"tnCodeLine":"        char c = (char)random.nextInt(128);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"Var","tnDesc":"Non-constant variable missing @Var annotation","tnFile":"src/main/java/org/dasein/cloud/CloudProvider.java","tnLine":250,"tnColumn":13,"tnPatch":null,"tnCodeLine":"        int i = 1;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nonnull is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/util/NamingConstraints.java","tnLine":279,"tnColumn":26,"tnPatch":null,"tnCodeLine":"    public @Nonnull Case getAlphaCase() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"FieldMissingNullable","tnDesc":"Assigning null literal to field","tnFile":"src/main/java/org/dasein/cloud/util/NamingConstraints.java","tnLine":92,"tnColumn":29,"tnPatch":null,"tnCodeLine":"        n.symbolConstraints = null;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"FieldCanBeFinal","tnDesc":"This field is only assigned during initialization; consider making it final","tnFile":"src/main/java/org/dasein/cloud/network/FirewallConstraints.java","tnLine":136,"tnColumn":39,"tnPatch":null,"tnCodeLine":"    private HashMap<Constraint,Level> constraints = new HashMap<Constraint, Level>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nullable is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/network/FirewallConstraints.java","tnLine":73,"tnColumn":33,"tnPatch":null,"tnCodeLine":"        public @Nullable Object getValue(@Nonnull CloudProvider provider, @Nonnull String firewallId) throws CloudException, InternalException {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"UnusedVariable","tnDesc":"The field 'debug' is never read.","tnFile":"src/main/java/org/dasein/cloud/CloudProvider.java","tnLine":126,"tnColumn":21,"tnPatch":null,"tnCodeLine":"    private boolean debug;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"FieldMissingNullable","tnDesc":"May assign null to field","tnFile":"src/main/java/org/dasein/cloud/CloudProvider.java","tnLine":215,"tnColumn":35,"tnPatch":null,"tnCodeLine":"        this.computeCloudProvider = computeProvider;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nonnull is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/network/FirewallCapabilities.java","tnLine":168,"tnColumn":33,"tnPatch":null,"tnCodeLine":"    public @Nonnull Requirement requiresVLAN() throws CloudException, InternalException;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nonnull is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/util/NamingConstraints.java","tnLine":652,"tnColumn":23,"tnPatch":null,"tnCodeLine":"    NamingConstraints withNoSymbols() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nullable is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/util/NamingConstraints.java","tnLine":375,"tnColumn":29,"tnPatch":null,"tnCodeLine":"    public @Nullable String incrementName(@Nonnull String baseName, @Nonnegative int count) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nonnull is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/CloudException.java","tnLine":112,"tnColumn":36,"tnPatch":null,"tnCodeLine":"    public @Nonnull CloudErrorType getErrorType() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nonnull is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/network/FirewallCapabilities.java","tnLine":56,"tnColumn":28,"tnPatch":null,"tnCodeLine":"    public @Nonnull String getProviderTermForFirewall(@Nonnull Locale locale);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"WildcardImport","tnDesc":"Wildcard imports, static or otherwise, should not be used","tnFile":"src/main/java/org/dasein/cloud/network/FirewallCapabilities.java","tnLine":22,"tnColumn":1,"tnPatch":null,"tnCodeLine":"import org.dasein.cloud.*;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nonnull is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/util/NamingConstraints.java","tnLine":201,"tnColumn":23,"tnPatch":null,"tnCodeLine":"    NamingConstraints constrainedBy(@Nonnull char ... symbols) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"FieldMissingNullable","tnDesc":"May assign null to field","tnFile":"src/main/java/org/dasein/cloud/CloudException.java","tnLine":105,"tnColumn":27,"tnPatch":null,"tnCodeLine":"        this.providerCode = providerCode;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nullable is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/CloudProvider.java","tnLine":277,"tnColumn":44,"tnPatch":null,"tnCodeLine":"    public final @Nullable ProviderContext getContext() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nonnull is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/util/NamingConstraints.java","tnLine":671,"tnColumn":39,"tnPatch":null,"tnCodeLine":"    public @Nonnull NamingConstraints withDescription(String description){","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nonnull is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/Capabilities.java","tnLine":49,"tnColumn":28,"tnPatch":null,"tnCodeLine":"    public @Nonnull String getRegionId();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nullable is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/util/NamingConstraints.java","tnLine":216,"tnColumn":29,"tnPatch":null,"tnCodeLine":"    public @Nullable String convertToValidName(@Nonnull String baseName, @Nonnull Locale locale) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"Var","tnDesc":"Non-constant variable missing @Var annotation","tnFile":"src/main/java/org/dasein/cloud/util/NamingConstraints.java","tnLine":239,"tnColumn":17,"tnPatch":null,"tnCodeLine":"        boolean dashed = false;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nonnull is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/network/FirewallCapabilities.java","tnLine":130,"tnColumn":40,"tnPatch":null,"tnCodeLine":"    public @Nonnull Iterable<Protocol> listSupportedProtocols(boolean inVlan) throws InternalException, CloudException;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nonnegative is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/util/NamingConstraints.java","tnLine":286,"tnColumn":29,"tnPatch":null,"tnCodeLine":"    public @Nonnegative int getMaximumLength() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"FieldMissingNullable","tnDesc":"May assign null to field","tnFile":"src/main/java/org/dasein/cloud/CloudException.java","tnLine":103,"tnColumn":24,"tnPatch":null,"tnCodeLine":"        this.errorType = type;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"MissingSummary","tnDesc":"A summary fragment is required; consider using the value of the @return block as a summary fragment instead.","tnFile":"src/main/java/org/dasein/cloud/util/NamingConstraints.java","tnLine":530,"tnColumn":8,"tnPatch":null,"tnCodeLine":"     * @return true if these naming conventions allow spaces in names (spaces are never allowed at the beginning or end of names)","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nonnull is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/network/FirewallCapabilities.java","tnLine":208,"tnColumn":39,"tnPatch":null,"tnCodeLine":"    public @Nonnull NamingConstraints getFirewallNamingConstraints() throws CloudException, InternalException;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Deprecated, @Nonnull are not type annotations, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/network/FirewallCapabilities.java","tnLine":92,"tnColumn":46,"tnPatch":null,"tnCodeLine":"    public @Nonnull Iterable<RuleTargetType> listSupportedDestinationTypes(boolean inVlan) throws InternalException, CloudException;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"MissingSummary","tnDesc":"A summary fragment is required; consider using the value of the @return block as a summary fragment instead.","tnFile":"src/main/java/org/dasein/cloud/util/NamingConstraints.java","tnLine":284,"tnColumn":8,"tnPatch":null,"tnCodeLine":"     * @return the maximum number of characters allowed in names supported by these naming conventions","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"MissingSummary","tnDesc":"A summary fragment is required; consider using the value of the @return block as a summary fragment instead.","tnFile":"src/main/java/org/dasein/cloud/Capabilities.java","tnLine":42,"tnColumn":8,"tnPatch":null,"tnCodeLine":"     * @return the account number under which these capabilities were tested","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nonnull is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/network/FirewallCapabilities.java","tnLine":112,"tnColumn":41,"tnPatch":null,"tnCodeLine":"    public @Nonnull Iterable<Direction> listSupportedDirections(boolean inVlan) throws InternalException, CloudException;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nonnull is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/util/NamingConstraints.java","tnLine":666,"tnColumn":39,"tnPatch":null,"tnCodeLine":"    public @Nonnull NamingConstraints withLastCharacterSymbolAllowed(boolean lastCharacterSymbolAllowed){","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"MissingSummary","tnDesc":"A summary fragment is required; consider using the value of the @return block as a summary fragment instead.","tnFile":"src/main/java/org/dasein/cloud/util/NamingConstraints.java","tnLine":511,"tnColumn":8,"tnPatch":null,"tnCodeLine":"     * @return true if the last character in a name is allowed to be a symbol","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"FieldMissingNullable","tnDesc":"May assign null to field","tnFile":"src/main/java/org/dasein/cloud/CloudException.java","tnLine":88,"tnColumn":24,"tnPatch":null,"tnCodeLine":"        this.errorType = type;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"InconsistentOverloads","tnDesc":"The parameters of this method are inconsistent with other overloaded versions. A consistent order would be: <init>(String msg, CloudErrorType type, int httpCode, String providerCode)","tnFile":"src/main/java/org/dasein/cloud/CloudException.java","tnLine":86,"tnColumn":15,"tnPatch":null,"tnCodeLine":"    protected CloudException(@Nullable CloudErrorType type, @Nonnegative int httpCode, @Nullable String providerCode, @Nullable String msg) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"FieldMissingNullable","tnDesc":"Assigning null literal to field","tnFile":"src/main/java/org/dasein/cloud/util/NamingConstraints.java","tnLine":120,"tnColumn":29,"tnPatch":null,"tnCodeLine":"        n.symbolConstraints = null;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"FieldMissingNullable","tnDesc":"May assign null to field","tnFile":"src/main/java/org/dasein/cloud/util/NamingConstraints.java","tnLine":143,"tnColumn":29,"tnPatch":null,"tnCodeLine":"        n.symbolConstraints = (forWindowsNetwork ? null : new char[] { '-' });","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"MissingSummary","tnDesc":"A summary fragment is required; consider using the value of the @return block as a summary fragment instead.","tnFile":"src/main/java/org/dasein/cloud/util/NamingConstraints.java","tnLine":291,"tnColumn":8,"tnPatch":null,"tnCodeLine":"     * @return the minimum number of characters allowed in names supported by these naming conventions","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"MissingSummary","tnDesc":"A summary fragment is required; consider using the value of the @return block as a summary fragment instead.","tnFile":"src/main/java/org/dasein/cloud/util/NamingConstraints.java","tnLine":315,"tnColumn":8,"tnPatch":null,"tnCodeLine":"     * @return a list of allowed symbols when {@link #isSymbols()} is true (<code>null</code> if any symbol is allowed)","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"Var","tnDesc":"Non-constant variable missing @Var annotation","tnFile":"src/main/java/org/dasein/cloud/util/NamingConstraints.java","tnLine":597,"tnColumn":13,"tnPatch":null,"tnCodeLine":"        int i = 0;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nullable is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/util/NamingConstraints.java","tnLine":662,"tnColumn":29,"tnPatch":null,"tnCodeLine":"    public @Nullable String getRegularExpression(){","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nonnull is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/network/FirewallConstraints.java","tnLine":171,"tnColumn":41,"tnPatch":null,"tnCodeLine":"    public @Nonnull FirewallConstraints withConstraint(@Nonnull Constraint constraint, @Nonnull Level level) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"Var","tnDesc":"Non-constant variable missing @Var annotation","tnFile":"src/main/java/org/dasein/cloud/util/NamingConstraints.java","tnLine":375,"tnColumn":86,"tnPatch":null,"tnCodeLine":"    public @Nullable String incrementName(@Nonnull String baseName, @Nonnegative int count) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"AnnotationPosition","tnDesc":"@Nonnull is not a type annotation, so should appear before any modifiers and after Javadocs.","tnFile":"src/main/java/org/dasein/cloud/util/NamingConstraints.java","tnLine":62,"tnColumn":32,"tnPatch":null,"tnCodeLine":"        public @Nonnull String convert(@Nonnull String baseName, @Nonnull Locale locale) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}},{"tnType":"Var","tnDesc":"Non-constant variable missing @Var annotation","tnFile":"src/main/java/org/dasein/cloud/util/NamingConstraints.java","tnLine":218,"tnColumn":13,"tnPatch":null,"tnCodeLine":"        int i = 0;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne"}}],null,{"analysisLOC":null,"analysisBuildSys":"Maven []","analysisLang":null}]}]]}}
