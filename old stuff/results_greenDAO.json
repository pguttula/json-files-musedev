{"requestedTools":null,"toolResults":[[{"tag":"Infer"},{"tag":"ToolSuccess","contents":[[{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.greenrobot.greendao.query.LazyList$LazyIterator` acquired by call to `iterator()` at line 89 is not released after line 89.","tnFile":"DaoCore/src/main/java/org/greenrobot/greendao/rx/RxQuery.java","tnLine":89,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void RxQuery$3.call(Subscriber)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `textViewAfterTextChangeEvent.editable()`  at line 87.","tnFile":"examples/RxDaoExample/src/main/java/org/greenrobot/greendao/rxexample/MainActivity.java","tnLine":87,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void MainActivity$3.call(TextViewAfterTextChangeEvent)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `List OrderDao._queryCustomer_Orders(long)` indirectly writes to field `query.org.greenrobot.greendao.query.AbstractQuery.daoAccess.org.greenrobot.greendao.InternalQueryDaoAccess.dao.org.greenrobot.greendao.AbstractDao.identityScopeLong.org.greenrobot.greendao.identityscope.IdentityScopeLong.map.org.greenrobot.greendao.internal.LongHashMap.capacity` outside of synchronization.\n Reporting because this access may occur on a background thread. [wob].","tnFile":"tests/DaoTestEntityAnnotation/build/generated/source/greendao/org/greenrobot/greendao/test/entityannotation/OrderDao.java","tnLine":160,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List OrderDao._queryCustomer_Orders(long)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List OrderDao._queryCustomer_Orders(long)` reads without synchronization from `this.org.greenrobot.greendao.test.entityannotation.OrderDao.customer_OrdersQuery`. Potentially races with write in method `OrderDao._queryCustomer_Orders(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestEntityAnnotation/build/generated/source/greendao/org/greenrobot/greendao/test/entityannotation/OrderDao.java","tnLine":158,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List OrderDao._queryCustomer_Orders(long)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `List OrderDao._queryCustomer_Orders(long)` indirectly writes to field `query.org.greenrobot.greendao.query.AbstractQuery.parameters.[_]` outside of synchronization.\n Reporting because this access may occur on a background thread. [wob].","tnFile":"tests/DaoTestEntityAnnotation/build/generated/source/greendao/org/greenrobot/greendao/test/entityannotation/OrderDao.java","tnLine":159,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List OrderDao._queryCustomer_Orders(long)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `List ToManyTarget2Dao._queryRelationSource2_ToManyTarget2List(Long)` indirectly writes to field `query.org.greenrobot.greendao.query.AbstractQuery.parameters.[_]` outside of synchronization.\n Reporting because this access may occur on a background thread. [wob].","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest2/dao/ToManyTarget2Dao.java","tnLine":143,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List ToManyTarget2Dao._queryRelationSource2_ToManyTarget2List(Long)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `List ToManyTarget2Dao._queryRelationSource2_ToManyTarget2List(Long)` indirectly writes to field `query.org.greenrobot.greendao.query.AbstractQuery.daoAccess.org.greenrobot.greendao.InternalQueryDaoAccess.dao.org.greenrobot.greendao.AbstractDao.identityScopeLong.org.greenrobot.greendao.identityscope.IdentityScopeLong.map.org.greenrobot.greendao.internal.LongHashMap.capacity` outside of synchronization.\n Reporting because this access may occur on a background thread. [wob].","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest2/dao/ToManyTarget2Dao.java","tnLine":144,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List ToManyTarget2Dao._queryRelationSource2_ToManyTarget2List(Long)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List ToManyTarget2Dao._queryRelationSource2_ToManyTarget2List(Long)` reads without synchronization from `this.org.greenrobot.greendao.daotest2.dao.ToManyTarget2Dao.relationSource2_ToManyTarget2ListQuery`. Potentially races with write in method `ToManyTarget2Dao._queryRelationSource2_ToManyTarget2List(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest2/dao/ToManyTarget2Dao.java","tnLine":142,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List ToManyTarget2Dao._queryRelationSource2_ToManyTarget2List(Long)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `List DateEntityDao._queryToManyEntity_DateEntityList(Long)` indirectly writes to field `query.org.greenrobot.greendao.query.AbstractQuery.parameters.[_]` outside of synchronization.\n Reporting because this access may occur on a background thread. [wob].","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/DateEntityDao.java","tnLine":148,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List DateEntityDao._queryToManyEntity_DateEntityList(Long)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List DateEntityDao._queryToManyEntity_DateEntityList(Long)` reads without synchronization from `this.org.greenrobot.greendao.daotest.DateEntityDao.toManyEntity_DateEntityListQuery`. Potentially races with write in method `DateEntityDao._queryToManyEntity_DateEntityList(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/DateEntityDao.java","tnLine":147,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List DateEntityDao._queryToManyEntity_DateEntityList(Long)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `List DateEntityDao._queryToManyEntity_DateEntityList(Long)` indirectly writes to field `query.org.greenrobot.greendao.query.AbstractQuery.daoAccess.org.greenrobot.greendao.InternalQueryDaoAccess.dao.org.greenrobot.greendao.AbstractDao.identityScopeLong.org.greenrobot.greendao.identityscope.IdentityScopeLong.map.org.greenrobot.greendao.internal.LongHashMap.capacity` outside of synchronization.\n Reporting because this access may occur on a background thread. [wob].","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/DateEntityDao.java","tnLine":149,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List DateEntityDao._queryToManyEntity_DateEntityList(Long)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `List ToManyTargetEntityDao._queryToManyEntity_ToManyByJoinProperty(String)` indirectly writes to field `query.org.greenrobot.greendao.query.AbstractQuery.daoAccess.org.greenrobot.greendao.InternalQueryDaoAccess.dao.org.greenrobot.greendao.AbstractDao.identityScopeLong.org.greenrobot.greendao.identityscope.IdentityScopeLong.map.org.greenrobot.greendao.internal.LongHashMap.capacity` outside of synchronization.\n Reporting because this access may occur on a background thread. [wob].","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/ToManyTargetEntityDao.java","tnLine":204,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List ToManyTargetEntityDao._queryToManyEntity_ToManyByJoinProperty(String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `List ToManyTargetEntityDao._queryToManyEntity_ToManyByJoinProperty(String)` indirectly writes to field `query.org.greenrobot.greendao.query.AbstractQuery.parameters.[_]` outside of synchronization.\n Reporting because this access may occur on a background thread. [wob].","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/ToManyTargetEntityDao.java","tnLine":203,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List ToManyTargetEntityDao._queryToManyEntity_ToManyByJoinProperty(String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List ToManyTargetEntityDao._queryToManyEntity_ToManyByJoinProperty(String)` reads without synchronization from `this.org.greenrobot.greendao.daotest.ToManyTargetEntityDao.toManyEntity_ToManyByJoinPropertyQuery`. Potentially races with write in method `ToManyTargetEntityDao._queryToManyEntity_ToManyByJoinProperty(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/ToManyTargetEntityDao.java","tnLine":202,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List ToManyTargetEntityDao._queryToManyEntity_ToManyByJoinProperty(String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List ToManyTargetEntityDao._queryToManyEntity_ToManyDescList(Long)` reads without synchronization from `this.org.greenrobot.greendao.daotest.ToManyTargetEntityDao.toManyEntity_ToManyDescListQuery`. Potentially races with write in method `ToManyTargetEntityDao._queryToManyEntity_ToManyDescList(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/ToManyTargetEntityDao.java","tnLine":187,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List ToManyTargetEntityDao._queryToManyEntity_ToManyDescList(Long)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `List ToManyTargetEntityDao._queryToManyEntity_ToManyDescList(Long)` indirectly writes to field `query.org.greenrobot.greendao.query.AbstractQuery.parameters.[_]` outside of synchronization.\n Reporting because this access may occur on a background thread. [wob].","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/ToManyTargetEntityDao.java","tnLine":188,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List ToManyTargetEntityDao._queryToManyEntity_ToManyDescList(Long)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `List ToManyTargetEntityDao._queryToManyEntity_ToManyDescList(Long)` indirectly writes to field `query.org.greenrobot.greendao.query.AbstractQuery.daoAccess.org.greenrobot.greendao.InternalQueryDaoAccess.dao.org.greenrobot.greendao.AbstractDao.identityScopeLong.org.greenrobot.greendao.identityscope.IdentityScopeLong.map.org.greenrobot.greendao.internal.LongHashMap.capacity` outside of synchronization.\n Reporting because this access may occur on a background thread. [wob].","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/ToManyTargetEntityDao.java","tnLine":189,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List ToManyTargetEntityDao._queryToManyEntity_ToManyDescList(Long)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `List ToManyTargetEntityDao._queryToManyEntity_ToManyJoinTwo(Long,String)` indirectly writes to field `query.org.greenrobot.greendao.query.AbstractQuery.daoAccess.org.greenrobot.greendao.InternalQueryDaoAccess.dao.org.greenrobot.greendao.AbstractDao.identityScopeLong.org.greenrobot.greendao.identityscope.IdentityScopeLong.map.org.greenrobot.greendao.internal.LongHashMap.capacity` outside of synchronization.\n Reporting because this access may occur on a background thread. [wob].","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/ToManyTargetEntityDao.java","tnLine":221,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List ToManyTargetEntityDao._queryToManyEntity_ToManyJoinTwo(Long,String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `List ToManyTargetEntityDao._queryToManyEntity_ToManyJoinTwo(Long,String)` indirectly writes to field `query.org.greenrobot.greendao.query.AbstractQuery.parameters.[_]` outside of synchronization.\n Reporting because this access may occur on a background thread. [wob].","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/ToManyTargetEntityDao.java","tnLine":219,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List ToManyTargetEntityDao._queryToManyEntity_ToManyJoinTwo(Long,String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `List ToManyTargetEntityDao._queryToManyEntity_ToManyJoinTwo(Long,String)` indirectly writes to field `query.org.greenrobot.greendao.query.AbstractQuery.parameters.[_]` outside of synchronization.\n Reporting because this access may occur on a background thread. [wob].","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/ToManyTargetEntityDao.java","tnLine":220,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List ToManyTargetEntityDao._queryToManyEntity_ToManyJoinTwo(Long,String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List ToManyTargetEntityDao._queryToManyEntity_ToManyJoinTwo(Long,String)` reads without synchronization from `this.org.greenrobot.greendao.daotest.ToManyTargetEntityDao.toManyEntity_ToManyJoinTwoQuery`. Potentially races with write in method `ToManyTargetEntityDao._queryToManyEntity_ToManyJoinTwo(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/ToManyTargetEntityDao.java","tnLine":218,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List ToManyTargetEntityDao._queryToManyEntity_ToManyJoinTwo(Long,String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `List ToManyTargetEntityDao._queryToManyEntity_ToManyTargetEntityList(Long)` indirectly writes to field `query.org.greenrobot.greendao.query.AbstractQuery.parameters.[_]` outside of synchronization.\n Reporting because this access may occur on a background thread. [wob].","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/ToManyTargetEntityDao.java","tnLine":173,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List ToManyTargetEntityDao._queryToManyEntity_ToManyTargetEntityList(Long)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List ToManyTargetEntityDao._queryToManyEntity_ToManyTargetEntityList(Long)` reads without synchronization from `this.org.greenrobot.greendao.daotest.ToManyTargetEntityDao.toManyEntity_ToManyTargetEntityListQuery`. Potentially races with write in method `ToManyTargetEntityDao._queryToManyEntity_ToManyTargetEntityList(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/ToManyTargetEntityDao.java","tnLine":172,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List ToManyTargetEntityDao._queryToManyEntity_ToManyTargetEntityList(Long)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `List ToManyTargetEntityDao._queryToManyEntity_ToManyTargetEntityList(Long)` indirectly writes to field `query.org.greenrobot.greendao.query.AbstractQuery.daoAccess.org.greenrobot.greendao.InternalQueryDaoAccess.dao.org.greenrobot.greendao.AbstractDao.identityScopeLong.org.greenrobot.greendao.identityscope.IdentityScopeLong.map.org.greenrobot.greendao.internal.LongHashMap.capacity` outside of synchronization.\n Reporting because this access may occur on a background thread. [wob].","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/ToManyTargetEntityDao.java","tnLine":174,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List ToManyTargetEntityDao._queryToManyEntity_ToManyTargetEntityList(Long)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `List TreeEntityDao._queryTreeEntity_Children(Long)` indirectly writes to field `query.org.greenrobot.greendao.query.AbstractQuery.daoAccess.org.greenrobot.greendao.InternalQueryDaoAccess.dao.org.greenrobot.greendao.AbstractDao.identityScopeLong.org.greenrobot.greendao.identityscope.IdentityScopeLong.map.org.greenrobot.greendao.internal.LongHashMap.capacity` outside of synchronization.\n Reporting because this access may occur on a background thread. [wob].","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/TreeEntityDao.java","tnLine":153,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List TreeEntityDao._queryTreeEntity_Children(Long)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `List TreeEntityDao._queryTreeEntity_Children(Long)` indirectly writes to field `query.org.greenrobot.greendao.query.AbstractQuery.parameters.[_]` outside of synchronization.\n Reporting because this access may occur on a background thread. [wob].","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/TreeEntityDao.java","tnLine":152,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List TreeEntityDao._queryTreeEntity_Children(Long)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List TreeEntityDao._queryTreeEntity_Children(Long)` reads without synchronization from `this.org.greenrobot.greendao.daotest.TreeEntityDao.treeEntity_ChildrenQuery`. Potentially races with write in method `TreeEntityDao._queryTreeEntity_Children(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/TreeEntityDao.java","tnLine":151,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List TreeEntityDao._queryTreeEntity_Children(Long)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void AbstractDao.delete(Object)` indirectly reads without synchronization from `this.org.greenrobot.greendao.AbstractDao.statements.org.greenrobot.greendao.internal.TableStatements.deleteStatement`. Potentially races with write in method `AbstractDao.deleteByKey(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"DaoCore/src/main/java/org/greenrobot/greendao/AbstractDao.java","tnLine":626,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void AbstractDao.delete(Object)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void AbstractDao.deleteByKey(Object)` indirectly reads without synchronization from `this.org.greenrobot.greendao.AbstractDao.statements.org.greenrobot.greendao.internal.TableStatements.deleteStatement`. Potentially races with write in method `AbstractDao.deleteInTx(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"DaoCore/src/main/java/org/greenrobot/greendao/AbstractDao.java","tnLine":632,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void AbstractDao.deleteByKey(Object)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void AbstractDao.deleteByKeyInTx(java.lang.Object[])` indirectly reads without synchronization from `this.org.greenrobot.greendao.AbstractDao.statements.org.greenrobot.greendao.internal.TableStatements.deleteStatement`. Potentially races with write in method `AbstractDao.deleteByKey(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"DaoCore/src/main/java/org/greenrobot/greendao/AbstractDao.java","tnLine":742,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void AbstractDao.deleteByKeyInTx(java.lang.Object[])","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void AbstractDao.deleteByKeyInTx(Iterable)` indirectly reads without synchronization from `this.org.greenrobot.greendao.AbstractDao.statements.org.greenrobot.greendao.internal.TableStatements.deleteStatement`. Potentially races with write in method `AbstractDao.deleteByKey(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"DaoCore/src/main/java/org/greenrobot/greendao/AbstractDao.java","tnLine":733,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void AbstractDao.deleteByKeyInTx(Iterable)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void AbstractDao.deleteInTx(java.lang.Object[])` indirectly reads without synchronization from `this.org.greenrobot.greendao.AbstractDao.statements.org.greenrobot.greendao.internal.TableStatements.deleteStatement`. Potentially races with write in method `AbstractDao.deleteByKey(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"DaoCore/src/main/java/org/greenrobot/greendao/AbstractDao.java","tnLine":724,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void AbstractDao.deleteInTx(java.lang.Object[])","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void AbstractDao.deleteInTx(Iterable)` indirectly reads without synchronization from `this.org.greenrobot.greendao.AbstractDao.statements.org.greenrobot.greendao.internal.TableStatements.deleteStatement`. Potentially races with write in method `AbstractDao.deleteByKey(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"DaoCore/src/main/java/org/greenrobot/greendao/AbstractDao.java","tnLine":715,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void AbstractDao.deleteInTx(Iterable)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object IdentityScopeLong.get2NoLock(long)` indirectly reads without synchronization from `this.org.greenrobot.greendao.identityscope.IdentityScopeLong.map.org.greenrobot.greendao.internal.LongHashMap.table`. Potentially races with write in method `IdentityScopeLong.put2(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"DaoCore/src/main/java/org/greenrobot/greendao/identityscope/IdentityScopeLong.java","tnLine":66,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"Object IdentityScopeLong.get2NoLock(long)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List TreeEntity.getChildren()` reads without synchronization from `this.org.greenrobot.greendao.daotest.TreeEntity.children`. Potentially races with write in method `TreeEntity.resetChildren()`.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/TreeEntity.java","tnLine":115,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List TreeEntity.getChildren()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List TreeEntity.getChildren()` reads without synchronization from `this.org.greenrobot.greendao.daotest.TreeEntity.daoSession`. Potentially races with write in method `TreeEntity.__setDaoSession(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/TreeEntity.java","tnLine":107,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List TreeEntity.getChildren()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List TreeEntity.getChildren()` reads without synchronization from `this.org.greenrobot.greendao.daotest.TreeEntity.id`. Potentially races with write in method `TreeEntity.setId(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/TreeEntity.java","tnLine":108,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List TreeEntity.getChildren()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `List TreeEntity.getChildren()` indirectly writes to field `query.org.greenrobot.greendao.query.AbstractQuery.daoAccess.org.greenrobot.greendao.InternalQueryDaoAccess.dao.org.greenrobot.greendao.AbstractDao.identityScopeLong.org.greenrobot.greendao.identityscope.IdentityScopeLong.map.org.greenrobot.greendao.internal.LongHashMap.capacity` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/TreeEntity.java","tnLine":108,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List TreeEntity.getChildren()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Customer Order.getCustomer()` reads without synchronization from `this.org.greenrobot.greendao.test.entityannotation.Order.daoSession`. Potentially races with write in method `Order.__setDaoSession(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestEntityAnnotation/src/main/java/org/greenrobot/greendao/test/entityannotation/Order.java","tnLine":79,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"Customer Order.getCustomer()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Customer Order.getCustomer()` reads without synchronization from `this.org.greenrobot.greendao.test.entityannotation.Order.customerId`. Potentially races with write in method `Order.setCustomerId(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestEntityAnnotation/src/main/java/org/greenrobot/greendao/test/entityannotation/Order.java","tnLine":77,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"Customer Order.getCustomer()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Customer Order.getCustomer()` reads without synchronization from `this.org.greenrobot.greendao.test.entityannotation.Order.customer__resolvedKey`. Potentially races with write in method `Order.setCustomer(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestEntityAnnotation/src/main/java/org/greenrobot/greendao/test/entityannotation/Order.java","tnLine":78,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"Customer Order.getCustomer()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Customer Order.getCustomer()` reads without synchronization from `this.org.greenrobot.greendao.test.entityannotation.Order.customer`. Potentially races with write in method `Order.setCustomer(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestEntityAnnotation/src/main/java/org/greenrobot/greendao/test/entityannotation/Order.java","tnLine":90,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"Customer Order.getCustomer()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Customer Order.getCustomer()` indirectly writes to field `entry.org.greenrobot.greendao.internal.LongHashMap$Entry.value` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestEntityAnnotation/src/main/java/org/greenrobot/greendao/test/entityannotation/Order.java","tnLine":84,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"Customer Order.getCustomer()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `long Order.getCustomerId()` reads without synchronization from `this.org.greenrobot.greendao.test.entityannotation.Order.customerId`. Potentially races with write in method `Order.setCustomer(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"tests/DaoTestEntityAnnotation/src/main/java/org/greenrobot/greendao/test/entityannotation/Order.java","tnLine":67,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"long Order.getCustomerId()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `List ToManyEntity.getDateEntityList()` indirectly writes to field `query.org.greenrobot.greendao.query.AbstractQuery.daoAccess.org.greenrobot.greendao.InternalQueryDaoAccess.dao.org.greenrobot.greendao.AbstractDao.identityScopeLong.org.greenrobot.greendao.identityscope.IdentityScopeLong.map.org.greenrobot.greendao.internal.LongHashMap.capacity` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/ToManyEntity.java","tnLine":189,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List ToManyEntity.getDateEntityList()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List ToManyEntity.getDateEntityList()` reads without synchronization from `this.org.greenrobot.greendao.daotest.ToManyEntity.daoSession`. Potentially races with write in method `ToManyEntity.__setDaoSession(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/ToManyEntity.java","tnLine":188,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List ToManyEntity.getDateEntityList()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List ToManyEntity.getDateEntityList()` reads without synchronization from `this.org.greenrobot.greendao.daotest.ToManyEntity.id`. Potentially races with write in method `ToManyEntity.setId(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/ToManyEntity.java","tnLine":189,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List ToManyEntity.getDateEntityList()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List ToManyEntity.getDateEntityList()` reads without synchronization from `this.org.greenrobot.greendao.daotest.ToManyEntity.dateEntityList`. Potentially races with write in method `ToManyEntity.resetDateEntityList()`.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/ToManyEntity.java","tnLine":196,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List ToManyEntity.getDateEntityList()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `DatabaseStatement TableStatements.getDeleteStatement()` reads without synchronization from `this.org.greenrobot.greendao.internal.TableStatements.deleteStatement`. Potentially races with write in method `TableStatements.getDeleteStatement()`.\n Reporting because this access may occur on a background thread.","tnFile":"DaoCore/src/main/java/org/greenrobot/greendao/internal/TableStatements.java","tnLine":94,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"DatabaseStatement TableStatements.getDeleteStatement()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `DatabaseStatement TableStatements.getInsertOrReplaceStatement()` reads without synchronization from `this.org.greenrobot.greendao.internal.TableStatements.insertOrReplaceStatement`. Potentially races with write in method `TableStatements.getInsertOrReplaceStatement()`.\n Reporting because this access may occur on a background thread.","tnFile":"DaoCore/src/main/java/org/greenrobot/greendao/internal/TableStatements.java","tnLine":78,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"DatabaseStatement TableStatements.getInsertOrReplaceStatement()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `DatabaseStatement TableStatements.getInsertStatement()` reads without synchronization from `this.org.greenrobot.greendao.internal.TableStatements.insertStatement`. Potentially races with write in method `TableStatements.getInsertStatement()`.\n Reporting because this access may occur on a background thread.","tnFile":"DaoCore/src/main/java/org/greenrobot/greendao/internal/TableStatements.java","tnLine":62,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"DatabaseStatement TableStatements.getInsertStatement()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object IdentityScopeLong.getNoLock(Long)` indirectly reads without synchronization from `this.org.greenrobot.greendao.identityscope.IdentityScopeLong.map.org.greenrobot.greendao.internal.LongHashMap.table`. Potentially races with write in method `IdentityScopeLong.put2(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"DaoCore/src/main/java/org/greenrobot/greendao/identityscope/IdentityScopeLong.java","tnLine":47,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"Object IdentityScopeLong.getNoLock(Long)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object IdentityScopeLong.getNoLock(Object)` indirectly reads without synchronization from `this.org.greenrobot.greendao.identityscope.IdentityScopeLong.map.org.greenrobot.greendao.internal.LongHashMap.table`. Potentially races with write in method `IdentityScopeLong.put2(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"DaoCore/src/main/java/org/greenrobot/greendao/identityscope/IdentityScopeLong.java","tnLine":31,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"Object IdentityScopeLong.getNoLock(Object)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List Customer.getOrders()` reads without synchronization from `this.org.greenrobot.greendao.test.entityannotation.Customer.orders`. Potentially races with write in method `Customer.resetOrders()`.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestEntityAnnotation/src/main/java/org/greenrobot/greendao/test/entityannotation/Customer.java","tnLine":93,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List Customer.getOrders()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List Customer.getOrders()` reads without synchronization from `this.org.greenrobot.greendao.test.entityannotation.Customer.daoSession`. Potentially races with write in method `Customer.__setDaoSession(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestEntityAnnotation/src/main/java/org/greenrobot/greendao/test/entityannotation/Customer.java","tnLine":81,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List Customer.getOrders()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List Customer.getOrders()` reads without synchronization from `this.org.greenrobot.greendao.test.entityannotation.Customer.id`. Potentially races with write in method `Customer.setId(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestEntityAnnotation/src/main/java/org/greenrobot/greendao/test/entityannotation/Customer.java","tnLine":86,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List Customer.getOrders()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `List Customer.getOrders()` indirectly writes to field `query.org.greenrobot.greendao.query.AbstractQuery.daoAccess.org.greenrobot.greendao.InternalQueryDaoAccess.dao.org.greenrobot.greendao.AbstractDao.identityScopeLong.org.greenrobot.greendao.identityscope.IdentityScopeLong.map.org.greenrobot.greendao.internal.LongHashMap.capacity` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestEntityAnnotation/src/main/java/org/greenrobot/greendao/test/entityannotation/Customer.java","tnLine":86,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List Customer.getOrders()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RelationEntity RelationEntity.getParent()` reads without synchronization from `this.org.greenrobot.greendao.daotest.RelationEntity.parent`. Potentially races with write in method `RelationEntity.setParent(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/RelationEntity.java","tnLine":133,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"RelationEntity RelationEntity.getParent()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RelationEntity RelationEntity.getParent()` reads without synchronization from `this.org.greenrobot.greendao.daotest.RelationEntity.daoSession`. Potentially races with write in method `RelationEntity.__setDaoSession(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/RelationEntity.java","tnLine":126,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"RelationEntity RelationEntity.getParent()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `RelationEntity RelationEntity.getParent()` indirectly writes to field `entry.org.greenrobot.greendao.internal.LongHashMap$Entry.value` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/RelationEntity.java","tnLine":127,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"RelationEntity RelationEntity.getParent()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RelationEntity RelationEntity.getParent()` reads without synchronization from `this.org.greenrobot.greendao.daotest.RelationEntity.parent__resolvedKey`. Potentially races with write in method `RelationEntity.setParent(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/RelationEntity.java","tnLine":124,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"RelationEntity RelationEntity.getParent()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RelationEntity RelationEntity.getParent()` reads without synchronization from `this.org.greenrobot.greendao.daotest.RelationEntity.parentId`. Potentially races with write in method `RelationEntity.setParentId(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/RelationEntity.java","tnLine":123,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"RelationEntity RelationEntity.getParent()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `TreeEntity TreeEntity.getParent()` reads without synchronization from `this.org.greenrobot.greendao.daotest.TreeEntity.parent__resolvedKey`. Potentially races with write in method `TreeEntity.setParent(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/TreeEntity.java","tnLine":81,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"TreeEntity TreeEntity.getParent()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `TreeEntity TreeEntity.getParent()` reads without synchronization from `this.org.greenrobot.greendao.daotest.TreeEntity.parent`. Potentially races with write in method `TreeEntity.setParent(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/TreeEntity.java","tnLine":90,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"TreeEntity TreeEntity.getParent()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `TreeEntity TreeEntity.getParent()` indirectly writes to field `entry.org.greenrobot.greendao.internal.LongHashMap$Entry.value` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/TreeEntity.java","tnLine":84,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"TreeEntity TreeEntity.getParent()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `TreeEntity TreeEntity.getParent()` reads without synchronization from `this.org.greenrobot.greendao.daotest.TreeEntity.daoSession`. Potentially races with write in method `TreeEntity.__setDaoSession(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/TreeEntity.java","tnLine":83,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"TreeEntity TreeEntity.getParent()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `TreeEntity TreeEntity.getParent()` reads without synchronization from `this.org.greenrobot.greendao.daotest.TreeEntity.parentId`. Potentially races with write in method `TreeEntity.setParentId(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/TreeEntity.java","tnLine":80,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"TreeEntity TreeEntity.getParent()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `TestEntity RelationEntity.getTestEntity()` reads without synchronization from `this.org.greenrobot.greendao.daotest.RelationEntity.testId`. Potentially races with write in method `RelationEntity.setTestId(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/RelationEntity.java","tnLine":148,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"TestEntity RelationEntity.getTestEntity()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `TestEntity RelationEntity.getTestEntity()` reads without synchronization from `this.org.greenrobot.greendao.daotest.RelationEntity.daoSession`. Potentially races with write in method `RelationEntity.__setDaoSession(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/RelationEntity.java","tnLine":151,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"TestEntity RelationEntity.getTestEntity()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `TestEntity RelationEntity.getTestEntity()` reads without synchronization from `this.org.greenrobot.greendao.daotest.RelationEntity.testEntity__resolvedKey`. Potentially races with write in method `RelationEntity.setTestEntity(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/RelationEntity.java","tnLine":149,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"TestEntity RelationEntity.getTestEntity()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `TestEntity RelationEntity.getTestEntity()` reads without synchronization from `this.org.greenrobot.greendao.daotest.RelationEntity.testEntity`. Potentially races with write in method `RelationEntity.setTestEntity(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/RelationEntity.java","tnLine":158,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"TestEntity RelationEntity.getTestEntity()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `TestEntity RelationEntity.getTestEntity()` indirectly writes to field `entry.org.greenrobot.greendao.internal.LongHashMap$Entry.value` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/RelationEntity.java","tnLine":152,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"TestEntity RelationEntity.getTestEntity()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `long RelationEntity.getTestIdNotNull()` reads without synchronization from `this.org.greenrobot.greendao.daotest.RelationEntity.testIdNotNull`. Potentially races with write in method `RelationEntity.setTestNotNull(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/RelationEntity.java","tnLine":105,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"long RelationEntity.getTestIdNotNull()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `TestEntity RelationEntity.getTestNotNull()` indirectly writes to field `entry.org.greenrobot.greendao.internal.LongHashMap$Entry.value` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/RelationEntity.java","tnLine":177,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"TestEntity RelationEntity.getTestNotNull()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `TestEntity RelationEntity.getTestNotNull()` reads without synchronization from `this.org.greenrobot.greendao.daotest.RelationEntity.testNotNull__resolvedKey`. Potentially races with write in method `RelationEntity.setTestNotNull(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/RelationEntity.java","tnLine":174,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"TestEntity RelationEntity.getTestNotNull()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `TestEntity RelationEntity.getTestNotNull()` reads without synchronization from `this.org.greenrobot.greendao.daotest.RelationEntity.testIdNotNull`. Potentially races with write in method `RelationEntity.setTestNotNull(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/RelationEntity.java","tnLine":173,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"TestEntity RelationEntity.getTestNotNull()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `TestEntity RelationEntity.getTestNotNull()` reads without synchronization from `this.org.greenrobot.greendao.daotest.RelationEntity.daoSession`. Potentially races with write in method `RelationEntity.__setDaoSession(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/RelationEntity.java","tnLine":176,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"TestEntity RelationEntity.getTestNotNull()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `TestEntity RelationEntity.getTestNotNull()` reads without synchronization from `this.org.greenrobot.greendao.daotest.RelationEntity.testNotNull`. Potentially races with write in method `RelationEntity.setTestNotNull(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/RelationEntity.java","tnLine":183,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"TestEntity RelationEntity.getTestNotNull()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `TestEntity RelationEntity.getTestWithoutProperty()` writes to field `this.org.greenrobot.greendao.daotest.RelationEntity.testWithoutProperty__refreshed` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/RelationEntity.java","tnLine":205,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"TestEntity RelationEntity.getTestWithoutProperty()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `TestEntity RelationEntity.getTestWithoutProperty()` reads without synchronization from `this.org.greenrobot.greendao.daotest.RelationEntity.testWithoutProperty`. Potentially races with write in method `RelationEntity.setTestWithoutProperty(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/RelationEntity.java","tnLine":207,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"TestEntity RelationEntity.getTestWithoutProperty()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `TestEntity RelationEntity.getTestWithoutProperty()` reads without synchronization from `this.org.greenrobot.greendao.daotest.RelationEntity.testWithoutProperty__refreshed`. Potentially races with write in method `RelationEntity.setTestWithoutProperty(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/RelationEntity.java","tnLine":201,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"TestEntity RelationEntity.getTestWithoutProperty()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List ToManyEntity.getToManyByJoinProperty()` reads without synchronization from `this.org.greenrobot.greendao.daotest.ToManyEntity.daoSession`. Potentially races with write in method `ToManyEntity.__setDaoSession(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/ToManyEntity.java","tnLine":144,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List ToManyEntity.getToManyByJoinProperty()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List ToManyEntity.getToManyByJoinProperty()` reads without synchronization from `this.org.greenrobot.greendao.daotest.ToManyEntity.sourceJoinProperty`. Potentially races with write in method `ToManyEntity.setSourceJoinProperty(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/ToManyEntity.java","tnLine":145,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List ToManyEntity.getToManyByJoinProperty()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List ToManyEntity.getToManyByJoinProperty()` reads without synchronization from `this.org.greenrobot.greendao.daotest.ToManyEntity.toManyByJoinProperty`. Potentially races with write in method `ToManyEntity.resetToManyByJoinProperty()`.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/ToManyEntity.java","tnLine":152,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List ToManyEntity.getToManyByJoinProperty()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `List ToManyEntity.getToManyByJoinProperty()` indirectly writes to field `query.org.greenrobot.greendao.query.AbstractQuery.daoAccess.org.greenrobot.greendao.InternalQueryDaoAccess.dao.org.greenrobot.greendao.AbstractDao.identityScopeLong.org.greenrobot.greendao.identityscope.IdentityScopeLong.map.org.greenrobot.greendao.internal.LongHashMap.capacity` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/ToManyEntity.java","tnLine":145,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List ToManyEntity.getToManyByJoinProperty()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List ToManyEntity.getToManyDescList()` reads without synchronization from `this.org.greenrobot.greendao.daotest.ToManyEntity.daoSession`. Potentially races with write in method `ToManyEntity.__setDaoSession(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/ToManyEntity.java","tnLine":122,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List ToManyEntity.getToManyDescList()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `List ToManyEntity.getToManyDescList()` indirectly writes to field `query.org.greenrobot.greendao.query.AbstractQuery.daoAccess.org.greenrobot.greendao.InternalQueryDaoAccess.dao.org.greenrobot.greendao.AbstractDao.identityScopeLong.org.greenrobot.greendao.identityscope.IdentityScopeLong.map.org.greenrobot.greendao.internal.LongHashMap.capacity` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/ToManyEntity.java","tnLine":123,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List ToManyEntity.getToManyDescList()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List ToManyEntity.getToManyDescList()` reads without synchronization from `this.org.greenrobot.greendao.daotest.ToManyEntity.id`. Potentially races with write in method `ToManyEntity.setId(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/ToManyEntity.java","tnLine":123,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List ToManyEntity.getToManyDescList()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List ToManyEntity.getToManyDescList()` reads without synchronization from `this.org.greenrobot.greendao.daotest.ToManyEntity.toManyDescList`. Potentially races with write in method `ToManyEntity.resetToManyDescList()`.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/ToManyEntity.java","tnLine":130,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List ToManyEntity.getToManyDescList()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List ToManyEntity.getToManyJoinTwo()` reads without synchronization from `this.org.greenrobot.greendao.daotest.ToManyEntity.daoSession`. Potentially races with write in method `ToManyEntity.__setDaoSession(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/ToManyEntity.java","tnLine":166,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List ToManyEntity.getToManyJoinTwo()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List ToManyEntity.getToManyJoinTwo()` reads without synchronization from `this.org.greenrobot.greendao.daotest.ToManyEntity.toManyJoinTwo`. Potentially races with write in method `ToManyEntity.resetToManyJoinTwo()`.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/ToManyEntity.java","tnLine":174,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List ToManyEntity.getToManyJoinTwo()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List ToManyEntity.getToManyJoinTwo()` reads without synchronization from `this.org.greenrobot.greendao.daotest.ToManyEntity.id`. Potentially races with write in method `ToManyEntity.setId(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/ToManyEntity.java","tnLine":167,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List ToManyEntity.getToManyJoinTwo()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `List ToManyEntity.getToManyJoinTwo()` indirectly writes to field `query.org.greenrobot.greendao.query.AbstractQuery.daoAccess.org.greenrobot.greendao.InternalQueryDaoAccess.dao.org.greenrobot.greendao.AbstractDao.identityScopeLong.org.greenrobot.greendao.identityscope.IdentityScopeLong.map.org.greenrobot.greendao.internal.LongHashMap.capacity` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/ToManyEntity.java","tnLine":167,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List ToManyEntity.getToManyJoinTwo()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List RelationSource2.getToManyTarget2List()` reads without synchronization from `this.org.greenrobot.greendao.daotest2.specialentity.RelationSource2.toManyTarget2List`. Potentially races with write in method `RelationSource2.resetToManyTarget2List()`.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest2/specialentity/RelationSource2.java","tnLine":127,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List RelationSource2.getToManyTarget2List()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List RelationSource2.getToManyTarget2List()` reads without synchronization from `this.org.greenrobot.greendao.daotest2.specialentity.RelationSource2.id`. Potentially races with write in method `RelationSource2.setId(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest2/specialentity/RelationSource2.java","tnLine":120,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List RelationSource2.getToManyTarget2List()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `List RelationSource2.getToManyTarget2List()` indirectly writes to field `query.org.greenrobot.greendao.query.AbstractQuery.daoAccess.org.greenrobot.greendao.InternalQueryDaoAccess.dao.org.greenrobot.greendao.AbstractDao.identityScopeLong.org.greenrobot.greendao.identityscope.IdentityScopeLong.map.org.greenrobot.greendao.internal.LongHashMap.capacity` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest2/specialentity/RelationSource2.java","tnLine":120,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List RelationSource2.getToManyTarget2List()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List RelationSource2.getToManyTarget2List()` reads without synchronization from `this.org.greenrobot.greendao.daotest2.specialentity.RelationSource2.daoSession`. Potentially races with write in method `RelationSource2.__setDaoSession(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest2/specialentity/RelationSource2.java","tnLine":119,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List RelationSource2.getToManyTarget2List()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List ToManyEntity.getToManyTargetEntityList()` reads without synchronization from `this.org.greenrobot.greendao.daotest.ToManyEntity.id`. Potentially races with write in method `ToManyEntity.setId(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/ToManyEntity.java","tnLine":101,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List ToManyEntity.getToManyTargetEntityList()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `List ToManyEntity.getToManyTargetEntityList()` indirectly writes to field `query.org.greenrobot.greendao.query.AbstractQuery.daoAccess.org.greenrobot.greendao.InternalQueryDaoAccess.dao.org.greenrobot.greendao.AbstractDao.identityScopeLong.org.greenrobot.greendao.identityscope.IdentityScopeLong.map.org.greenrobot.greendao.internal.LongHashMap.capacity` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/ToManyEntity.java","tnLine":101,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List ToManyEntity.getToManyTargetEntityList()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List ToManyEntity.getToManyTargetEntityList()` reads without synchronization from `this.org.greenrobot.greendao.daotest.ToManyEntity.toManyTargetEntityList`. Potentially races with write in method `ToManyEntity.resetToManyTargetEntityList()`.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/ToManyEntity.java","tnLine":108,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List ToManyEntity.getToManyTargetEntityList()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List ToManyEntity.getToManyTargetEntityList()` reads without synchronization from `this.org.greenrobot.greendao.daotest.ToManyEntity.daoSession`. Potentially races with write in method `ToManyEntity.__setDaoSession(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/ToManyEntity.java","tnLine":100,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List ToManyEntity.getToManyTargetEntityList()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `ToOneTarget2 RelationSource2.getToOneTarget2()` reads without synchronization from `this.org.greenrobot.greendao.daotest2.specialentity.RelationSource2.toOneTarget2__resolvedKey`. Potentially races with write in method `RelationSource2.setToOneTarget2(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest2/specialentity/RelationSource2.java","tnLine":93,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"ToOneTarget2 RelationSource2.getToOneTarget2()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `ToOneTarget2 RelationSource2.getToOneTarget2()` reads without synchronization from `this.org.greenrobot.greendao.daotest2.specialentity.RelationSource2.daoSession`. Potentially races with write in method `RelationSource2.__setDaoSession(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest2/specialentity/RelationSource2.java","tnLine":95,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"ToOneTarget2 RelationSource2.getToOneTarget2()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `ToOneTarget2 RelationSource2.getToOneTarget2()` indirectly writes to field `entry.org.greenrobot.greendao.internal.LongHashMap$Entry.value` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest2/specialentity/RelationSource2.java","tnLine":96,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"ToOneTarget2 RelationSource2.getToOneTarget2()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `ToOneTarget2 RelationSource2.getToOneTarget2()` reads without synchronization from `this.org.greenrobot.greendao.daotest2.specialentity.RelationSource2.toOneId`. Potentially races with write in method `RelationSource2.setToOneId(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest2/specialentity/RelationSource2.java","tnLine":92,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"ToOneTarget2 RelationSource2.getToOneTarget2()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `ToOneTarget2 RelationSource2.getToOneTarget2()` reads without synchronization from `this.org.greenrobot.greendao.daotest2.specialentity.RelationSource2.toOneTarget2`. Potentially races with write in method `RelationSource2.setToOneTarget2(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest2/specialentity/RelationSource2.java","tnLine":102,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"ToOneTarget2 RelationSource2.getToOneTarget2()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `DatabaseStatement TableStatements.getUpdateStatement()` reads without synchronization from `this.org.greenrobot.greendao.internal.TableStatements.updateStatement`. Potentially races with write in method `TableStatements.getUpdateStatement()`.\n Reporting because this access may occur on a background thread.","tnFile":"DaoCore/src/main/java/org/greenrobot/greendao/internal/TableStatements.java","tnLine":110,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"DatabaseStatement TableStatements.getUpdateStatement()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `List TreeEntityDao.loadAllDeepFromCursor(Cursor)` indirectly writes to field `entry.org.greenrobot.greendao.internal.LongHashMap$Entry.value` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/TreeEntityDao.java","tnLine":221,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List TreeEntityDao.loadAllDeepFromCursor(Cursor)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `List OrderDao.loadAllDeepFromCursor(Cursor)` indirectly writes to field `entry.org.greenrobot.greendao.internal.LongHashMap$Entry.value` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"tests/DaoTestEntityAnnotation/build/generated/source/greendao/org/greenrobot/greendao/test/entityannotation/OrderDao.java","tnLine":230,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List OrderDao.loadAllDeepFromCursor(Cursor)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `TreeEntity TreeEntityDao.loadCurrentDeep(Cursor,boolean)` indirectly reads with synchronization from `entry.org.greenrobot.greendao.internal.LongHashMap$Entry.value`. Potentially races with unsynchronized write in method `TreeEntityDao._queryTreeEntity_Children(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/TreeEntityDao.java","tnLine":173,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"TreeEntity TreeEntityDao.loadCurrentDeep(Cursor,boolean)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `TreeEntity TreeEntityDao.loadCurrentDeep(Cursor,boolean)` indirectly writes to field `entry.org.greenrobot.greendao.internal.LongHashMap$Entry.value` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/TreeEntityDao.java","tnLine":176,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"TreeEntity TreeEntityDao.loadCurrentDeep(Cursor,boolean)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Order OrderDao.loadCurrentDeep(Cursor,boolean)` indirectly writes to field `entry.org.greenrobot.greendao.internal.LongHashMap$Entry.value` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"tests/DaoTestEntityAnnotation/build/generated/source/greendao/org/greenrobot/greendao/test/entityannotation/OrderDao.java","tnLine":183,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"Order OrderDao.loadCurrentDeep(Cursor,boolean)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Order OrderDao.loadCurrentDeep(Cursor,boolean)` indirectly reads with synchronization from `entry.org.greenrobot.greendao.internal.LongHashMap$Entry.value`. Potentially races with unsynchronized write in method `OrderDao._queryCustomer_Orders(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"tests/DaoTestEntityAnnotation/build/generated/source/greendao/org/greenrobot/greendao/test/entityannotation/OrderDao.java","tnLine":180,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"Order OrderDao.loadCurrentDeep(Cursor,boolean)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `TreeEntity TreeEntityDao.loadDeep(Long)` indirectly writes to field `entry.org.greenrobot.greendao.internal.LongHashMap$Entry.value` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/TreeEntityDao.java","tnLine":203,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"TreeEntity TreeEntityDao.loadDeep(Long)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Order OrderDao.loadDeep(Long)` indirectly writes to field `entry.org.greenrobot.greendao.internal.LongHashMap$Entry.value` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"tests/DaoTestEntityAnnotation/build/generated/source/greendao/org/greenrobot/greendao/test/entityannotation/OrderDao.java","tnLine":212,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"Order OrderDao.loadDeep(Long)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `List TreeEntityDao.loadDeepAllAndCloseCursor(Cursor)` indirectly writes to field `entry.org.greenrobot.greendao.internal.LongHashMap$Entry.value` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/TreeEntityDao.java","tnLine":234,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List TreeEntityDao.loadDeepAllAndCloseCursor(Cursor)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `List OrderDao.loadDeepAllAndCloseCursor(Cursor)` indirectly writes to field `entry.org.greenrobot.greendao.internal.LongHashMap$Entry.value` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"tests/DaoTestEntityAnnotation/build/generated/source/greendao/org/greenrobot/greendao/test/entityannotation/OrderDao.java","tnLine":243,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List OrderDao.loadDeepAllAndCloseCursor(Cursor)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Object LazyList.loadEntity(int)` indirectly writes to field `entry.org.greenrobot.greendao.internal.LongHashMap$Entry.value` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"DaoCore/src/main/java/org/greenrobot/greendao/query/LazyList.java","tnLine":268,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"Object LazyList.loadEntity(int)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `TestEntity RelationEntity.peakTestWithoutProperty()` reads without synchronization from `this.org.greenrobot.greendao.daotest.RelationEntity.testWithoutProperty`. Potentially races with write in method `RelationEntity.setTestWithoutProperty(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/RelationEntity.java","tnLine":213,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"TestEntity RelationEntity.peakTestWithoutProperty()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void IdentityScopeLong.put2NoLock(long,Object)` indirectly writes to field `entry.org.greenrobot.greendao.internal.LongHashMap$Entry.value` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"DaoCore/src/main/java/org/greenrobot/greendao/identityscope/IdentityScopeLong.java","tnLine":94,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void IdentityScopeLong.put2NoLock(long,Object)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void IdentityScopeLong.putNoLock(Long,Object)` indirectly writes to field `entry.org.greenrobot.greendao.internal.LongHashMap$Entry.value` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"DaoCore/src/main/java/org/greenrobot/greendao/identityscope/IdentityScopeLong.java","tnLine":81,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void IdentityScopeLong.putNoLock(Long,Object)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void IdentityScopeLong.putNoLock(Object,Object)` indirectly writes to field `entry.org.greenrobot.greendao.internal.LongHashMap$Entry.value` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"DaoCore/src/main/java/org/greenrobot/greendao/identityscope/IdentityScopeLong.java","tnLine":31,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void IdentityScopeLong.putNoLock(Object,Object)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `List TreeEntityDao.queryDeep(String,java.lang.String[])` indirectly writes to field `entry.org.greenrobot.greendao.internal.LongHashMap$Entry.value` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/TreeEntityDao.java","tnLine":244,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List TreeEntityDao.queryDeep(String,java.lang.String[])","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `List OrderDao.queryDeep(String,java.lang.String[])` indirectly writes to field `entry.org.greenrobot.greendao.internal.LongHashMap$Entry.value` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"tests/DaoTestEntityAnnotation/build/generated/source/greendao/org/greenrobot/greendao/test/entityannotation/OrderDao.java","tnLine":253,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List OrderDao.queryDeep(String,java.lang.String[])","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void IdentityScopeLong.reserveRoom(int)` indirectly writes to field `entry.org.greenrobot.greendao.internal.LongHashMap$Entry.next` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"DaoCore/src/main/java/org/greenrobot/greendao/identityscope/IdentityScopeLong.java","tnLine":156,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void IdentityScopeLong.reserveRoom(int)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void AbstractDao.save(Object)` indirectly reads without synchronization from `this.org.greenrobot.greendao.AbstractDao.statements.org.greenrobot.greendao.internal.TableStatements.updateStatement`. Potentially races with write in method `AbstractDao.updateInTx(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"DaoCore/src/main/java/org/greenrobot/greendao/AbstractDao.java","tnLine":395,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void AbstractDao.save(Object)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void AbstractDao.saveInTx(java.lang.Object[])` indirectly reads without synchronization from `this.org.greenrobot.greendao.AbstractDao.statements.org.greenrobot.greendao.internal.TableStatements.updateStatement`. Potentially races with write in method `AbstractDao.updateInTx(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"DaoCore/src/main/java/org/greenrobot/greendao/AbstractDao.java","tnLine":407,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void AbstractDao.saveInTx(java.lang.Object[])","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void AbstractDao.saveInTx(Iterable)` indirectly reads without synchronization from `this.org.greenrobot.greendao.AbstractDao.statements.org.greenrobot.greendao.internal.TableStatements.updateStatement`. Potentially races with write in method `AbstractDao.updateInTx(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"DaoCore/src/main/java/org/greenrobot/greendao/AbstractDao.java","tnLine":447,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void AbstractDao.saveInTx(Iterable)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Order.setCustomerId(long)` writes to field `this.org.greenrobot.greendao.test.entityannotation.Order.customerId` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"tests/DaoTestEntityAnnotation/src/main/java/org/greenrobot/greendao/test/entityannotation/Order.java","tnLine":71,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void Order.setCustomerId(long)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void RelationEntity.setTestIdNotNull(long)` writes to field `this.org.greenrobot.greendao.daotest.RelationEntity.testIdNotNull` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"tests/DaoTestBase/src/main/java/org/greenrobot/greendao/daotest/RelationEntity.java","tnLine":109,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void RelationEntity.setTestIdNotNull(long)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void AbstractDao.update(Object)` indirectly reads without synchronization from `this.org.greenrobot.greendao.AbstractDao.statements.org.greenrobot.greendao.internal.TableStatements.updateStatement`. Potentially races with write in method `AbstractDao.updateInTx(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"DaoCore/src/main/java/org/greenrobot/greendao/AbstractDao.java","tnLine":769,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void AbstractDao.update(Object)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void AbstractDao.updateInTx(java.lang.Object[])` indirectly reads without synchronization from `this.org.greenrobot.greendao.AbstractDao.statements.org.greenrobot.greendao.internal.TableStatements.updateStatement`. Potentially races with write in method `AbstractDao.updateInTx(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"DaoCore/src/main/java/org/greenrobot/greendao/AbstractDao.java","tnLine":912,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void AbstractDao.updateInTx(java.lang.Object[])","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void AbstractDao.updateInTx(Iterable)` indirectly reads without synchronization from `this.org.greenrobot.greendao.AbstractDao.statements.org.greenrobot.greendao.internal.TableStatements.updateStatement`. Potentially races with write in method `AbstractDao.updateInTx(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"DaoCore/src/main/java/org/greenrobot/greendao/AbstractDao.java","tnLine":860,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void AbstractDao.updateInTx(Iterable)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}}],null]}],[{"tag":"ErrorProne"},{"tag":"ToolFailure","contents":{"tag":"ToolSurfacableFailure","contents":"SolverError {solverName = \"infer\", renderError = \"Capture:\\n-----\\nCall Stack: \\n------Execution Failed: \\\"/tmp/analyzing-f2af3ad3bb1f7ca6/examples/DaoExample/src/main/java/org/greenrobot/greendao/example/NoteActivity.java:18: error: package android.os does not exist\\\\nimport android.os.Bundle;\\\\n                 ^\\\\n/tmp/analyzing-f2af3ad3bb1f7ca6/examples/DaoExample/src/main/java/org/greenrobot/greendao/example/NoteActivity.java:22: error: package android.text does not exist\\\\nimport android.text.Editable;\\\\n                   ^\\\\n/tmp/analyzing-f2af3ad3bb1f7ca6/examples/DaoExample/src/main/java/org/greenrobot/greendao/example/NoteActivity.java:23: error: package android.text does not exist\\\\nimport android.text.TextWatcher;\\\\n                   ^\\\\n/tmp/analyzing-f2af3ad3bb1f7ca6/examples/DaoExample/src/main/java/org/greenrobot/greendao/example/NoteActivity.java:24: error: package android.util does not exist\\\\nimport android.util.Log;\\\\n                   ^\\\\n/tmp/analyzing-f2af3ad3bb1f7ca6/examples/DaoExample/src/main/java/org/greenrobot/greendao/example/NoteActivity.java:25: error: package android.view does not exist\\\\nimport android.view.KeyEvent;\\\\n                   ^\\\\n/tmp/analyzing-f2af3ad3bb1f7ca6/examples/DaoExample/src/main/java/org/greenrobot/greendao/example/NoteActivity.java:26: error: package android.view does not exist\\\\nimport android.view.View;\\\\n                   ^\\\\n/tmp/analyzing-f2af3ad3bb1f7ca6/examples/DaoExample/src/main/java/org/greenrobot/greendao/example/NoteActivity.java:27: error: package android.view.inputmethod does not exist\\\\nimport android.view.inputmethod.EditorInfo;\\\\n                               ^\\\\n/tmp/analyzing-f2af3ad3bb1f7ca6/examples/DaoExample/src/main/java/org/greenrobot/greendao/example/NoteActivity.java:28: error: package android.widget does not exist\\\\nimport android.widget.EditText;\\\\n                     ^\\\\n/tmp/analyzing-f2af3ad3bb1f7ca6/examples/DaoExample/src/main/java/org/greenrobot/greendao/example/NoteActivity.java:29: error: package android.widget does not exist\\\\nimport android.widget.TextView;\\\\n                     ^\\\\n/tmp/analyzing-f2af3ad3bb1f7ca6/examples/DaoExample/src/main/java/org/greenrobot/greendao/example/NoteActivity.java:30: error: package android.widget.TextView does not exist\\\\nimport android.widget.TextView.OnEditorActionListener;\\\\n                              ^\\\\n/tmp/analyzing-f2af3ad3bb1f7ca6/examples/DaoExample/src/main/java/org/greenrobot/greendao/example/NoteActivity.java:38: error: cannot access ViewGroup\\\\npublic class NoteActivity extends AppCompatActivity {\\\\n       ^\\\\n  class file for android.view.ViewGroup not found\\\\n11 errors\\\\n\\\"\"}"}}]]}
