{"requestedTools":null,"toolResults":[[{"tag":"Infer"},{"tag":"ToolSuccess","contents":[[{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.springframework.context.support.ClassPathXmlApplicationContext` acquired to `context` by call to `new()` at line 27 is not released after line 28.","tnFile":"dubbo-demo/dubbo-demo-xml/dubbo-demo-xml-provider/src/main/java/org/apache/dubbo/demo/provider/Application.java","tnLine":28,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void Application.main(java.lang.String[])","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.springframework.context.support.ClassPathXmlApplicationContext` acquired to `context` by call to `new()` at line 29 is not released after line 31.","tnFile":"dubbo-demo/dubbo-demo-xml/dubbo-demo-xml-consumer/src/main/java/org/apache/dubbo/demo/consumer/Application.java","tnLine":31,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void Application.main(java.lang.String[])","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getDubboProtocol()` could be null and is dereferenced at line 35.","tnFile":"dubbo-rpc/dubbo-rpc-dubbo/src/main/java/org/apache/dubbo/rpc/protocol/dubbo/status/ServerStatusChecker.java","tnLine":35,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"Status ServerStatusChecker.check()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.OutputStreamWriter` acquired by call to `new()` at line 36 is not released after line 36.","tnFile":"dubbo-serialization/dubbo-serialization-gson/src/main/java/org/apache/dubbo/common/serialize/gson/GsonJsonObjectOutput.java","tnLine":36,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"GsonJsonObjectOutput.<init>(OutputStream)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getDubboProtocol()` could be null and is dereferenced at line 47.","tnFile":"dubbo-rpc/dubbo-rpc-dubbo/src/main/java/org/apache/dubbo/rpc/protocol/dubbo/telnet/ChangeTelnetHandler.java","tnLine":47,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"String ChangeTelnetHandler.telnet(Channel,String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `compiler` last assigned on line 43 could be null and is dereferenced at line 45.","tnFile":"dubbo-common/src/main/java/org/apache/dubbo/common/compiler/support/AdaptiveCompiler.java","tnLine":45,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"Class AdaptiveCompiler.compile(String,ClassLoader)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `parseURLs(address,defaults)` could be null and is dereferenced at line 37.","tnFile":"dubbo-compatible/src/main/java/com/alibaba/dubbo/common/utils/UrlUtils.java","tnLine":37,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List UrlUtils.parseURLs(String,Map)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `dataStore` last assigned on line 38 could be null and is dereferenced at line 39.","tnFile":"dubbo-rpc/dubbo-rpc-dubbo/src/main/java/org/apache/dubbo/rpc/protocol/dubbo/status/ThreadPoolStatusChecker.java","tnLine":39,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"Status ThreadPoolStatusChecker.check()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getDubboProtocol()` could be null and is dereferenced at line 56.","tnFile":"dubbo-rpc/dubbo-rpc-dubbo/src/main/java/org/apache/dubbo/rpc/protocol/dubbo/telnet/PortTelnetHandler.java","tnLine":56,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"String PortTelnetHandler.telnet(Channel,String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.OutputStreamWriter` acquired by call to `new()` at line 39 is not released after line 39.","tnFile":"dubbo-serialization/dubbo-serialization-fastjson/src/main/java/org/apache/dubbo/common/serialize/fastjson/FastJsonObjectOutput.java","tnLine":39,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"FastJsonObjectOutput.<init>(OutputStream)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getDubboProtocol()` could be null and is dereferenced at line 65.","tnFile":"dubbo-rpc/dubbo-rpc-dubbo/src/main/java/org/apache/dubbo/rpc/protocol/dubbo/telnet/TraceTelnetHandler.java","tnLine":65,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"String TraceTelnetHandler.telnet(Channel,String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `command` last assigned on line 45 could be null and is dereferenced at line 46.","tnFile":"dubbo-plugin/dubbo-qos/src/main/java/org/apache/dubbo/qos/command/util/CommandHelper.java","tnLine":46,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List CommandHelper.getAllCommandClass()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `serialization` last assigned on line 47 could be null and is dereferenced at line 48.","tnFile":"dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/transport/CodecSupport.java","tnLine":48,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void CodecSupport.<clinit>()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `networker` last assigned on line 42 could be null and is dereferenced at line 43.","tnFile":"dubbo-remoting/dubbo-remoting-p2p/src/main/java/org/apache/dubbo/remoting/p2p/exchange/ExchangeNetworkers.java","tnLine":43,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"ExchangeGroup ExchangeNetworkers.lookup(URL)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `commandContext` last assigned on line 47 could be null and is dereferenced at line 48.","tnFile":"dubbo-plugin/dubbo-qos/src/main/java/org/apache/dubbo/qos/server/handler/TelnetProcessHandler.java","tnLine":48,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void TelnetProcessHandler.channelRead0(ChannelHandlerContext,String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `clazz` last assigned on line 45 could be null and is dereferenced at line 46.","tnFile":"dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/utils/ReferenceConfigCache.java","tnLine":46,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"String ReferenceConfigCache.lambda$static$0(ReferenceConfig)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `networker` last assigned on line 44 could be null and is dereferenced at line 45.","tnFile":"dubbo-remoting/dubbo-remoting-p2p/src/main/java/org/apache/dubbo/remoting/p2p/Networkers.java","tnLine":45,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"Group Networkers.lookup(URL)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `invoker` last assigned on line 46 could be null and is dereferenced at line 48.","tnFile":"dubbo-cluster/src/main/java/org/apache/dubbo/rpc/cluster/support/FailfastClusterInvoker.java","tnLine":48,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"Result FailfastClusterInvoker.doInvoke(Invocation,List,LoadBalance)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getDubboProtocol()` could be null and is dereferenced at line 74.","tnFile":"dubbo-rpc/dubbo-rpc-dubbo/src/main/java/org/apache/dubbo/rpc/protocol/dubbo/telnet/CountTelnetHandler.java","tnLine":74,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"String CountTelnetHandler.telnet(Channel,String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `clazz` last assigned on line 51 could be null and is dereferenced at line 53.","tnFile":"dubbo-plugin/dubbo-qos/src/main/java/org/apache/dubbo/qos/command/impl/Help.java","tnLine":53,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"String Help.commandHelp(String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileReader` acquired by call to `new()` at line 59 is not released after line 59.","tnFile":"dubbo-cluster/src/main/java/org/apache/dubbo/rpc/cluster/router/file/FileRouterFactory.java","tnLine":59,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"Router FileRouterFactory.getRouter(URL)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `invoker` last assigned on line 49 could be null and is dereferenced at line 50.","tnFile":"dubbo-cluster/src/main/java/org/apache/dubbo/rpc/cluster/support/FailsafeClusterInvoker.java","tnLine":50,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"Result FailsafeClusterInvoker.doInvoke(Invocation,List,LoadBalance)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `handler` last assigned on line 87 could be null and is dereferenced at line 90.","tnFile":"dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/telnet/support/command/StatusTelnetHandler.java","tnLine":90,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"String StatusTelnetHandler.telnet(Channel,String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `dataStore` last assigned on line 59 could be null and is dereferenced at line 60.","tnFile":"dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/transport/dispatcher/WrappedChannelHandler.java","tnLine":60,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"WrappedChannelHandler.<init>(ChannelHandler,URL)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `$T0_31` last assigned on line 52 could be null and is dereferenced by call to `AbstractDirectory(...)` at line 52.","tnFile":"dubbo-cluster/src/main/java/org/apache/dubbo/rpc/cluster/directory/StaticDirectory.java","tnLine":52,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"StaticDirectory.<init>(URL,List,RouterChain)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getExtensionLoader(org.apache.dubbo.qos.command.BaseCommand).getExtension(commandName)` could be null and is dereferenced at line 55.","tnFile":"dubbo-plugin/dubbo-qos/src/main/java/org/apache/dubbo/qos/command/util/CommandHelper.java","tnLine":55,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"Class CommandHelper.getCommandClass(String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.util.Scanner` acquired to `scanner` by call to `new()` at line 62 is not released after line 74.","tnFile":"dubbo-plugin/dubbo-qos/src/main/java/org/apache/dubbo/qos/textui/TKv.java","tnLine":74,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"String TKv.filterEmptyLine(String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.util.Scanner` acquired to `scanner` by call to `new()` at line 81 is not released after line 96.","tnFile":"dubbo-plugin/dubbo-qos/src/main/java/org/apache/dubbo/qos/textui/TTree.java","tnLine":96,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void TTree$1.callback(int,boolean,String,TTree$Node)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `m` last assigned on line 71 could be null and is dereferenced at line 72.","tnFile":"dubbo-cluster/src/main/java/org/apache/dubbo/rpc/cluster/merger/MergerFactory.java","tnLine":72,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void MergerFactory.loadMergers()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `ctx.getChannel()` could be null and is dereferenced at line 79.","tnFile":"dubbo-remoting/dubbo-remoting-netty/src/main/java/org/apache/dubbo/remoting/transport/netty/NettyHandler.java","tnLine":79,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void NettyHandler.channelDisconnected(ChannelHandlerContext,ChannelStateEvent)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `ctx.channel()` could be null and is dereferenced at line 80.","tnFile":"dubbo-remoting/dubbo-remoting-netty4/src/main/java/org/apache/dubbo/remoting/transport/netty4/NettyServerHandler.java","tnLine":80,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void NettyServerHandler.channelInactive(ChannelHandlerContext)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `invoker` last assigned on line 100 could be null and is dereferenced at line 101.","tnFile":"dubbo-cluster/src/main/java/org/apache/dubbo/rpc/cluster/support/FailbackClusterInvoker.java","tnLine":101,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"Result FailbackClusterInvoker.doInvoke(Invocation,List,LoadBalance)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getProperty(\"os.name\")` could be null and is dereferenced at line 100.","tnFile":"dubbo-common/src/main/java/org/apache/dubbo/common/threadpool/support/AbortPolicyWithReport.java","tnLine":100,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void AbortPolicyWithReport.lambda$dumpJStack$0()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `channel` last assigned on line 112 could be null and is dereferenced at line 115.","tnFile":"dubbo-remoting/dubbo-remoting-netty4/src/main/java/org/apache/dubbo/remoting/transport/netty4/NettyServerHandler.java","tnLine":115,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void NettyServerHandler.userEventTriggered(ChannelHandlerContext,Object)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `channel` last assigned on line 118 could be null and is dereferenced at line 126.","tnFile":"dubbo-remoting/dubbo-remoting-netty4/src/main/java/org/apache/dubbo/remoting/transport/netty4/NettyClientHandler.java","tnLine":126,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void NettyClientHandler.userEventTriggered(ChannelHandlerContext,Object)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `retryInvoker` last assigned on line 142 could be null and is dereferenced at line 144.","tnFile":"dubbo-cluster/src/main/java/org/apache/dubbo/rpc/cluster/support/FailbackClusterInvoker.java","tnLine":144,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void FailbackClusterInvoker$RetryTimerTask.run(Timeout)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.apache.http.impl.conn.PoolingHttpClientConnectionManager` acquired to `connectionManager` by call to `new()` at line 143 is not released after line 152.","tnFile":"dubbo-rpc/dubbo-rpc-rest/src/main/java/org/apache/dubbo/rpc/protocol/rest/RestProtocol.java","tnLine":152,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"Object RestProtocol.doRefer(Class,URL)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileInputStream` acquired by call to `FileInputStream(...)` at line 154 is not released after line 154.\n**Note**: potential exception at line 154","tnFile":"dubbo-common/src/main/java/org/apache/dubbo/common/utils/IOUtils.java","tnLine":154,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"java.lang.String[] IOUtils.readLines(File)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getExtensionLoader(org.apache.dubbo.rpc.protocol.thrift.ClassNameGenerator).getExtension(\"thrift\")` could be null and is dereferenced at line 305.","tnFile":"dubbo-rpc/dubbo-rpc-thrift/src/main/java/org/apache/dubbo/rpc/protocol/thrift/ThriftCodec.java","tnLine":305,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"Object ThriftCodec.decode(TProtocol)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `dataStore` last assigned on line 180 could be null and is dereferenced at line 181.","tnFile":"dubbo-monitor/dubbo-monitor-default/src/main/java/org/apache/dubbo/monitor/dubbo/MetricsFilter.java","tnLine":181,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List MetricsFilter.getThreadPoolMessage()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getEnvironment()` could be null and is dereferenced at line 190.","tnFile":"dubbo-config/dubbo-config-spring/src/main/java/org/apache/dubbo/config/spring/beans/factory/annotation/ReferenceAnnotationBeanPostProcessor.java","tnLine":190,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"String ReferenceAnnotationBeanPostProcessor.buildReferencedBeanName(Reference,Class)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getChannel()` could be null and is dereferenced at line 212.","tnFile":"dubbo-remoting/dubbo-remoting-etcd3/src/main/java/org/apache/dubbo/remoting/etcd/jetcd/JEtcdClientWrapper.java","tnLine":212,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"boolean JEtcdClientWrapper.isConnected()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `provider.getProtocol()` could be null and is dereferenced at line 232.","tnFile":"dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/ServiceConfig.java","tnLine":232,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"ProtocolConfig ServiceConfig.convertProviderToProtocol(ProviderConfig)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getDubboProtocol()` could be null and is dereferenced at line 281.","tnFile":"dubbo-rpc/dubbo-rpc-dubbo/src/main/java/org/apache/dubbo/rpc/protocol/dubbo/CallbackServiceCodec.java","tnLine":281,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"Object CallbackServiceCodec.decodeInvocationArgument(Channel,DecodeableRpcInvocation,java.lang.Class[],int,Map)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `AbstractServiceConfig.protocols` last assigned on line 298 could be null and is dereferenced by call to `isOnlyInJvm()` at line 301.","tnFile":"dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/ServiceConfig.java","tnLine":301,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ServiceConfig.checkAndUpdateSubConfigs()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `interfaceClass` last assigned on line 305 could be null and is dereferenced at line 335.","tnFile":"dubbo-config/dubbo-config-spring/src/main/java/org/apache/dubbo/config/spring/beans/factory/annotation/ServiceAnnotationBeanPostProcessor.java","tnLine":335,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"Class ServiceAnnotationBeanPostProcessor.resolveServiceInterfaceClass(Class,Service)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `factories` last assigned on line 313 could be null and is dereferenced at line 314.","tnFile":"dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/AbstractInterfaceConfig.java","tnLine":314,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"DynamicConfiguration AbstractInterfaceConfig.getDynamicConfiguration(URL)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `groupMap.get(group)` could be null and is dereferenced at line 317.","tnFile":"dubbo-registry/dubbo-registry-api/src/main/java/org/apache/dubbo/registry/integration/RegistryDirectory.java","tnLine":317,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List RegistryDirectory.toMergeInvokerList(List)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `interfaceClass` last assigned on line 323 could be null and is dereferenced at line 352.","tnFile":"dubbo-compatible/src/main/java/org/apache/dubbo/config/spring/beans/factory/annotation/CompatibleServiceAnnotationBeanPostProcessor.java","tnLine":352,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"Class CompatibleServiceAnnotationBeanPostProcessor.resolveServiceInterfaceClass(Class,Service)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `directory.getUrl()` could be null and is dereferenced at line 404.","tnFile":"dubbo-registry/dubbo-registry-api/src/main/java/org/apache/dubbo/registry/integration/RegistryProtocol.java","tnLine":404,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"Invoker RegistryProtocol.doRefer(Cluster,Registry,Class,URL)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.util.Scanner` acquired to `scanner` by call to `new()` at line 422 is not released after line 426.","tnFile":"dubbo-plugin/dubbo-qos/src/main/java/org/apache/dubbo/qos/textui/TTable.java","tnLine":426,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"int TTable.width(String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getInjvmProtocol()` could be null and is dereferenced at line 452.","tnFile":"dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/ReferenceConfig.java","tnLine":452,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"boolean ReferenceConfig.shouldJvmRefer(Map)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getExtensionLoader(org.apache.dubbo.rpc.Protocol).getExtension(ProtocolConfig.name)` could be null and is dereferenced at line 539.","tnFile":"dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/ProtocolConfig.java","tnLine":539,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ProtocolConfig.destroy()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getExtensionLoader(org.apache.dubbo.rpc.protocol.thrift.ClassNameGenerator).getExtension(channel.getUrl().getParameter(\"class.name.generator\",\"thrift\"))` could be null and is dereferenced at line 548.","tnFile":"dubbo-rpc/dubbo-rpc-thrift/src/main/java/org/apache/dubbo/rpc/protocol/thrift/ThriftCodec.java","tnLine":548,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ThriftCodec.encodeResponse(Channel,ChannelBuffer,Response)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getExtensionLoader(org.apache.dubbo.rpc.Protocol).getExtension(name)` could be null and is dereferenced at line 751.","tnFile":"dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/ServiceConfig.java","tnLine":751,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"Integer ServiceConfig.findConfigedPorts(ProtocolConfig,String,Map)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int StreamUtils$2.available()` reads without synchronization from `this.org.apache.dubbo.common.io.StreamUtils$2.mInMarked`. Potentially races with write in method `StreamUtils$2.mark(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-common/src/main/java/org/apache/dubbo/common/io/StreamUtils.java","tnLine":208,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"int StreamUtils$2.available()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int StreamUtils$2.available()` reads without synchronization from `this.org.apache.dubbo.common.io.StreamUtils$2.mCount`. Potentially races with write in method `StreamUtils$2.mark(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-common/src/main/java/org/apache/dubbo/common/io/StreamUtils.java","tnLine":209,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"int StreamUtils$2.available()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ReferenceConfig.checkAndUpdateSubConfigs()` indirectly reads without synchronization from `this.org.apache.dubbo.config.ReferenceConfig.consumer`. Potentially races with write in method `ReferenceConfig.get()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/ReferenceConfig.java","tnLine":225,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ReferenceConfig.checkAndUpdateSubConfigs()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ReferenceConfig.checkAndUpdateSubConfigs()` writes to field `this.org.apache.dubbo.config.ReferenceConfig.interfaceClass` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/ReferenceConfig.java","tnLine":231,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ReferenceConfig.checkAndUpdateSubConfigs()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ReferenceConfig.checkAndUpdateSubConfigs()` indirectly writes to field `this.org.apache.dubbo.config.ReferenceConfig.consumer` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/ReferenceConfig.java","tnLine":222,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ReferenceConfig.checkAndUpdateSubConfigs()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ReferenceConfig.checkAndUpdateSubConfigs()` indirectly writes to field `this.org.apache.dubbo.config.AbstractReferenceConfig.generic` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/ReferenceConfig.java","tnLine":225,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ReferenceConfig.checkAndUpdateSubConfigs()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ReferenceConfig.checkAndUpdateSubConfigs()` reads without synchronization from `this.org.apache.dubbo.config.ReferenceConfig.interfaceClass`. Potentially races with write in method `ReferenceConfig.get()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/ReferenceConfig.java","tnLine":236,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ReferenceConfig.checkAndUpdateSubConfigs()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ReferenceConfig.checkAndUpdateSubConfigs()` indirectly writes to field `this.org.apache.dubbo.config.ReferenceConfig.url` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/ReferenceConfig.java","tnLine":238,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ReferenceConfig.checkAndUpdateSubConfigs()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ReferenceConfig.checkAndUpdateSubConfigs()` indirectly reads without synchronization from `this.org.apache.dubbo.config.AbstractReferenceConfig.generic`. Potentially races with write in method `ReferenceConfig.get()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/ReferenceConfig.java","tnLine":227,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ReferenceConfig.checkAndUpdateSubConfigs()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ReferenceConfig.checkAndUpdateSubConfigs()` indirectly writes to field `this.org.apache.dubbo.config.AbstractInterfaceConfig.metadataReportConfig` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/ReferenceConfig.java","tnLine":240,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ReferenceConfig.checkAndUpdateSubConfigs()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ReferenceConfig.checkAndUpdateSubConfigs()` indirectly writes to field `methodBean.org.apache.dubbo.config.MethodConfig.service` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/ReferenceConfig.java","tnLine":236,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ReferenceConfig.checkAndUpdateSubConfigs()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ServiceConfig.checkAndUpdateSubConfigs()` indirectly writes to field `this.org.apache.dubbo.config.AbstractServiceConfig.protocolIds` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/ServiceConfig.java","tnLine":298,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ServiceConfig.checkAndUpdateSubConfigs()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ServiceConfig.checkAndUpdateSubConfigs()` reads without synchronization from `this.org.apache.dubbo.config.AbstractInterfaceConfig.local`. Potentially races with write in method `ServiceConfig.export()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/ServiceConfig.java","tnLine":333,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ServiceConfig.checkAndUpdateSubConfigs()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ServiceConfig.checkAndUpdateSubConfigs()` indirectly writes to field `methodBean.org.apache.dubbo.config.MethodConfig.service` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/ServiceConfig.java","tnLine":323,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ServiceConfig.checkAndUpdateSubConfigs()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ServiceConfig.checkAndUpdateSubConfigs()` indirectly writes to field `this.org.apache.dubbo.config.AbstractInterfaceConfig.registries` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/ServiceConfig.java","tnLine":302,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ServiceConfig.checkAndUpdateSubConfigs()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ServiceConfig.checkAndUpdateSubConfigs()` indirectly writes to field `this.org.apache.dubbo.config.ServiceConfig.provider` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/ServiceConfig.java","tnLine":297,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ServiceConfig.checkAndUpdateSubConfigs()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ServiceConfig.checkAndUpdateSubConfigs()` reads without synchronization from `this.org.apache.dubbo.config.AbstractInterfaceConfig.stub`. Potentially races with write in method `ServiceConfig.export()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/ServiceConfig.java","tnLine":347,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ServiceConfig.checkAndUpdateSubConfigs()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ServiceConfig.checkAndUpdateSubConfigs()` indirectly writes to field `this.org.apache.dubbo.config.AbstractInterfaceConfig.metadataReportConfig` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/ServiceConfig.java","tnLine":305,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ServiceConfig.checkAndUpdateSubConfigs()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ServiceConfig.checkAndUpdateSubConfigs()` writes to field `this.org.apache.dubbo.config.AbstractInterfaceConfig.local` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/ServiceConfig.java","tnLine":329,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ServiceConfig.checkAndUpdateSubConfigs()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ServiceConfig.checkAndUpdateSubConfigs()` reads without synchronization from `this.org.apache.dubbo.config.ServiceConfig.interfaceClass`. Potentially races with write in method `ServiceConfig.export()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/ServiceConfig.java","tnLine":356,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ServiceConfig.checkAndUpdateSubConfigs()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ServiceConfig.checkAndUpdateSubConfigs()` writes to field `this.org.apache.dubbo.config.AbstractInterfaceConfig.stub` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/ServiceConfig.java","tnLine":343,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ServiceConfig.checkAndUpdateSubConfigs()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ServiceConfig.checkAndUpdateSubConfigs()` writes to field `this.org.apache.dubbo.config.ServiceConfig.interfaceClass` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/ServiceConfig.java","tnLine":318,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ServiceConfig.checkAndUpdateSubConfigs()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ServiceConfig.checkAndUpdateSubConfigs()` indirectly reads without synchronization from `this.org.apache.dubbo.config.AbstractServiceConfig.protocols`. Potentially races with write in method `ServiceConfig.export()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/ServiceConfig.java","tnLine":301,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ServiceConfig.checkAndUpdateSubConfigs()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void JEtcdClient$EtcdWatcher.closeWatchRequest()` reads without synchronization from `this.org.apache.dubbo.remoting.etcd.jetcd.JEtcdClient$EtcdWatcher.watchRequest`. Potentially races with write in method `JEtcdClient$EtcdWatcher.reconnect()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-remoting/dubbo-remoting-etcd3/src/main/java/org/apache/dubbo/remoting/etcd/jetcd/JEtcdClient.java","tnLine":443,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void JEtcdClient$EtcdWatcher.closeWatchRequest()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void JEtcdClient$EtcdWatcher.closeWatchRequest()` writes to field `this.org.apache.dubbo.remoting.etcd.jetcd.JEtcdClient$EtcdWatcher.watchRequest` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-remoting/dubbo-remoting-etcd3/src/main/java/org/apache/dubbo/remoting/etcd/jetcd/JEtcdClient.java","tnLine":444,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void JEtcdClient$EtcdWatcher.closeWatchRequest()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List JEtcdClient$EtcdWatcher.forPath(String)` reads without synchronization from `this.org.apache.dubbo.remoting.etcd.jetcd.JEtcdClient$EtcdWatcher.path`. Potentially races with write in method `JEtcdClient$EtcdWatcher.forPath(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"dubbo-remoting/dubbo-remoting-etcd3/src/main/java/org/apache/dubbo/remoting/etcd/jetcd/JEtcdClient.java","tnLine":299,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List JEtcdClient$EtcdWatcher.forPath(String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `List JEtcdClient$EtcdWatcher.forPath(String)` writes to field `this.org.apache.dubbo.remoting.etcd.jetcd.JEtcdClient$EtcdWatcher.path` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"dubbo-remoting/dubbo-remoting-etcd3/src/main/java/org/apache/dubbo/remoting/etcd/jetcd/JEtcdClient.java","tnLine":303,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List JEtcdClient$EtcdWatcher.forPath(String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List JEtcdClient$EtcdWatcher.forPath(String)` indirectly reads without synchronization from `this.org.apache.dubbo.remoting.etcd.jetcd.JEtcdClient$EtcdWatcher.watchRequest`. Potentially races with write in method `JEtcdClient$EtcdWatcher.recreateWatchRequest()`.\n Reporting because this access may occur on a background thread.","tnFile":"dubbo-remoting/dubbo-remoting-etcd3/src/main/java/org/apache/dubbo/remoting/etcd/jetcd/JEtcdClient.java","tnLine":300,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List JEtcdClient$EtcdWatcher.forPath(String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List ExtensionLoader.getActivateExtension(URL,java.lang.String[])` indirectly reads without synchronization from `this.org.apache.dubbo.common.extension.ExtensionLoader.cachedDefaultName`. Potentially races with write in method `ExtensionLoader.getExtension(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-common/src/main/java/org/apache/dubbo/common/extension/ExtensionLoader.java","tnLine":182,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List ExtensionLoader.getActivateExtension(URL,java.lang.String[])","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List ExtensionLoader.getActivateExtension(URL,java.lang.String[],String)` indirectly reads without synchronization from `this.org.apache.dubbo.common.extension.ExtensionLoader.cachedDefaultName`. Potentially races with write in method `ExtensionLoader.getExtension(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-common/src/main/java/org/apache/dubbo/common/extension/ExtensionLoader.java","tnLine":250,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List ExtensionLoader.getActivateExtension(URL,java.lang.String[],String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `ConsumerConfig ReferenceConfig.getConsumer()` reads without synchronization from `this.org.apache.dubbo.config.ReferenceConfig.consumer`. Potentially races with write in method `ReferenceConfig.get()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/ReferenceConfig.java","tnLine":603,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"ConsumerConfig ReferenceConfig.getConsumer()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object ExtensionLoader.getDefaultExtension()` reads without synchronization from `this.org.apache.dubbo.common.extension.ExtensionLoader.cachedDefaultName`. Potentially races with write in method `ExtensionLoader.getExtension(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-common/src/main/java/org/apache/dubbo/common/extension/ExtensionLoader.java","tnLine":367,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"Object ExtensionLoader.getDefaultExtension()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `String ExtensionLoader.getDefaultExtensionName()` reads without synchronization from `this.org.apache.dubbo.common.extension.ExtensionLoader.cachedDefaultName`. Potentially races with write in method `ExtensionLoader.getExtension(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-common/src/main/java/org/apache/dubbo/common/extension/ExtensionLoader.java","tnLine":388,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"String ExtensionLoader.getDefaultExtensionName()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Integer ServiceConfig.getDelay()` reads without synchronization from `this.org.apache.dubbo.config.ServiceConfig.provider`. Potentially races with write in method `ServiceConfig.export()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/ServiceConfig.java","tnLine":400,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"Integer ServiceConfig.getDelay()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Boolean ServiceConfig.getExport()` reads without synchronization from `this.org.apache.dubbo.config.ServiceConfig.provider`. Potentially races with write in method `ServiceConfig.export()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/ServiceConfig.java","tnLine":390,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"Boolean ServiceConfig.getExport()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object ExtensionLoader.getExtension(String)` indirectly reads without synchronization from `this.org.apache.dubbo.common.extension.ExtensionLoader.cachedDefaultName`. Potentially races with write in method `ExtensionLoader.replaceExtension(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"dubbo-common/src/main/java/org/apache/dubbo/common/extension/ExtensionLoader.java","tnLine":343,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"Object ExtensionLoader.getExtension(String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Class ReferenceConfig.getInterfaceClass()` reads without synchronization from `this.org.apache.dubbo.config.ReferenceConfig.interfaceClass`. Potentially races with write in method `ReferenceConfig.get()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/ReferenceConfig.java","tnLine":543,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"Class ReferenceConfig.getInterfaceClass()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Class ReferenceConfig.getInterfaceClass()` indirectly reads without synchronization from `this.org.apache.dubbo.config.AbstractReferenceConfig.generic`. Potentially races with write in method `ReferenceConfig.get()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/ReferenceConfig.java","tnLine":532,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"Class ReferenceConfig.getInterfaceClass()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Class ReferenceConfig.getInterfaceClass()` indirectly reads without synchronization from `this.org.apache.dubbo.config.ReferenceConfig.consumer`. Potentially races with write in method `ReferenceConfig.get()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/ReferenceConfig.java","tnLine":533,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"Class ReferenceConfig.getInterfaceClass()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Class ReferenceConfig.getInterfaceClass()` writes to field `this.org.apache.dubbo.config.ReferenceConfig.interfaceClass` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/ReferenceConfig.java","tnLine":538,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"Class ReferenceConfig.getInterfaceClass()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Class ServiceConfig.getInterfaceClass()` reads without synchronization from `this.org.apache.dubbo.config.ServiceConfig.interfaceClass`. Potentially races with write in method `ServiceConfig.export()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/ServiceConfig.java","tnLine":926,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"Class ServiceConfig.getInterfaceClass()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Class ServiceConfig.getInterfaceClass()` writes to field `this.org.apache.dubbo.config.ServiceConfig.interfaceClass` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/ServiceConfig.java","tnLine":920,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"Class ServiceConfig.getInterfaceClass()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `String ServiceConfig.getPath()` reads without synchronization from `this.org.apache.dubbo.config.ServiceConfig.path`. Potentially races with write in method `ServiceConfig.export()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/ServiceConfig.java","tnLine":967,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"String ServiceConfig.getPath()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `ProviderConfig ServiceConfig.getProvider()` reads without synchronization from `this.org.apache.dubbo.config.ServiceConfig.provider`. Potentially races with write in method `ServiceConfig.export()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/ServiceConfig.java","tnLine":987,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"ProviderConfig ServiceConfig.getProvider()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List ServiceConfig.getProviders()` reads without synchronization from `this.org.apache.dubbo.config.AbstractServiceConfig.protocols`. Potentially races with write in method `ServiceConfig.export()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/ServiceConfig.java","tnLine":1038,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List ServiceConfig.getProviders()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `String ReferenceConfig.getUrl()` reads without synchronization from `this.org.apache.dubbo.config.ReferenceConfig.url`. Potentially races with write in method `ReferenceConfig.get()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/ReferenceConfig.java","tnLine":586,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"String ReferenceConfig.getUrl()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void WebServiceProtocol$WebServiceHandler.handle(HttpServletRequest,HttpServletResponse)` indirectly writes to field `newArray.[_]` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"dubbo-rpc/dubbo-rpc-webservice/src/main/java/org/apache/dubbo/rpc/protocol/webservice/WebServiceProtocol.java","tnLine":159,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void WebServiceProtocol$WebServiceHandler.handle(HttpServletRequest,HttpServletResponse)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean ListenableRouter.isForce()` reads without synchronization from `this.org.apache.dubbo.rpc.cluster.router.condition.config.ListenableRouter.routerRule`. Potentially races with write in method `ListenableRouter.process(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-cluster/src/main/java/org/apache/dubbo/rpc/cluster/router/condition/config/ListenableRouter.java","tnLine":100,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"boolean ListenableRouter.isForce()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean TagRouter.isForce()` reads without synchronization from `this.org.apache.dubbo.rpc.cluster.router.tag.TagRouter.tagRouterRule`. Potentially races with write in method `TagRouter.process(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-cluster/src/main/java/org/apache/dubbo/rpc/cluster/router/tag/TagRouter.java","tnLine":188,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"boolean TagRouter.isForce()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean TagRouter.isRuntime()` reads without synchronization from `this.org.apache.dubbo.rpc.cluster.router.tag.TagRouter.tagRouterRule`. Potentially races with write in method `TagRouter.process(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-cluster/src/main/java/org/apache/dubbo/rpc/cluster/router/tag/TagRouter.java","tnLine":182,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"boolean TagRouter.isRuntime()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Main.main(java.lang.String[])` indirectly reads without synchronization from `container.Main.org.apache.dubbo.container.Main.loader.org.apache.dubbo.common.extension.ExtensionLoader.cachedDefaultName`. Potentially races with write in method `Main.main(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"dubbo-container/dubbo-container-api/src/main/java/org/apache/dubbo/container/Main.java","tnLine":63,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void Main.main(java.lang.String[])","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `WatchRequest JEtcdClient$EtcdWatcher.nextRequest()` reads without synchronization from `this.org.apache.dubbo.remoting.etcd.jetcd.JEtcdClient$EtcdWatcher.path`. Potentially races with write in method `JEtcdClient$EtcdWatcher.forPath(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-remoting/dubbo-remoting-etcd3/src/main/java/org/apache/dubbo/remoting/etcd/jetcd/JEtcdClient.java","tnLine":396,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"WatchRequest JEtcdClient$EtcdWatcher.nextRequest()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void JEtcdClient$EtcdWatcher.onError(Throwable)` indirectly reads without synchronization from `this.org.apache.dubbo.remoting.etcd.jetcd.JEtcdClient$EtcdWatcher.path`. Potentially races with write in method `JEtcdClient$EtcdWatcher.forPath(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-remoting/dubbo-remoting-etcd3/src/main/java/org/apache/dubbo/remoting/etcd/jetcd/JEtcdClient.java","tnLine":270,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void JEtcdClient$EtcdWatcher.onError(Throwable)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void JEtcdClient$EtcdWatcher.onNext(WatchResponse)` indirectly reads without synchronization from `this.org.apache.dubbo.remoting.etcd.jetcd.JEtcdClient$EtcdWatcher.path`. Potentially races with write in method `JEtcdClient$EtcdWatcher.forPath(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-remoting/dubbo-remoting-etcd3/src/main/java/org/apache/dubbo/remoting/etcd/jetcd/JEtcdClient.java","tnLine":251,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void JEtcdClient$EtcdWatcher.onNext(WatchResponse)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void JEtcdClient$EtcdWatcher.onNext(WatchResponse)` reads without synchronization from `this.org.apache.dubbo.remoting.etcd.jetcd.JEtcdClient$EtcdWatcher.listener`. Potentially races with write in method `JEtcdClient$EtcdWatcher.forPath(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-remoting/dubbo-remoting-etcd3/src/main/java/org/apache/dubbo/remoting/etcd/jetcd/JEtcdClient.java","tnLine":236,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void JEtcdClient$EtcdWatcher.onNext(WatchResponse)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void JEtcdClient$EtcdWatcher.onNext(Object)` indirectly reads without synchronization from `this.org.apache.dubbo.remoting.etcd.jetcd.JEtcdClient$EtcdWatcher.path`. Potentially races with write in method `JEtcdClient$EtcdWatcher.forPath(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-remoting/dubbo-remoting-etcd3/src/main/java/org/apache/dubbo/remoting/etcd/jetcd/JEtcdClient.java","tnLine":210,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void JEtcdClient$EtcdWatcher.onNext(Object)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int StreamUtils$2.read()` reads without synchronization from `this.org.apache.dubbo.common.io.StreamUtils$2.mCount`. Potentially races with write in method `StreamUtils$2.mark(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-common/src/main/java/org/apache/dubbo/common/io/StreamUtils.java","tnLine":156,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"int StreamUtils$2.read()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `int StreamUtils$2.read()` writes to field `this.org.apache.dubbo.common.io.StreamUtils$2.mPosition` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-common/src/main/java/org/apache/dubbo/common/io/StreamUtils.java","tnLine":163,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"int StreamUtils$2.read()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `int StreamUtils$2.read()` writes to field `this.org.apache.dubbo.common.io.StreamUtils$2.mInReset` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-common/src/main/java/org/apache/dubbo/common/io/StreamUtils.java","tnLine":162,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"int StreamUtils$2.read()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `int StreamUtils$2.read()` writes to field `this.org.apache.dubbo.common.io.StreamUtils$2.mCount` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-common/src/main/java/org/apache/dubbo/common/io/StreamUtils.java","tnLine":164,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"int StreamUtils$2.read()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int StreamUtils$2.read()` reads without synchronization from `this.org.apache.dubbo.common.io.StreamUtils$2.mInMarked`. Potentially races with write in method `StreamUtils$2.mark(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-common/src/main/java/org/apache/dubbo/common/io/StreamUtils.java","tnLine":129,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"int StreamUtils$2.read()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int StreamUtils$2.read()` reads without synchronization from `this.org.apache.dubbo.common.io.StreamUtils$2.mInReset`. Potentially races with write in method `StreamUtils$2.reset()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-common/src/main/java/org/apache/dubbo/common/io/StreamUtils.java","tnLine":137,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"int StreamUtils$2.read()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int StreamUtils$2.read()` reads without synchronization from `this.org.apache.dubbo.common.io.StreamUtils$2.mPosition`. Potentially races with write in method `StreamUtils$2.reset()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-common/src/main/java/org/apache/dubbo/common/io/StreamUtils.java","tnLine":155,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"int StreamUtils$2.read()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `int StreamUtils$2.read()` writes to field `this.org.apache.dubbo.common.io.StreamUtils$2.mInMarked` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-common/src/main/java/org/apache/dubbo/common/io/StreamUtils.java","tnLine":161,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"int StreamUtils$2.read()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void JEtcdClient$EtcdWatcher.reconnect()` indirectly reads with synchronization from `this.org.apache.dubbo.remoting.etcd.jetcd.JEtcdClient$EtcdWatcher.path`. Potentially races with unsynchronized write in method `JEtcdClient$EtcdWatcher.forPath(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"dubbo-remoting/dubbo-remoting-etcd3/src/main/java/org/apache/dubbo/remoting/etcd/jetcd/JEtcdClient.java","tnLine":426,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void JEtcdClient$EtcdWatcher.reconnect()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void JEtcdClient$EtcdWatcher.recreateWatchRequest()` reads without synchronization from `this.org.apache.dubbo.remoting.etcd.jetcd.JEtcdClient$EtcdWatcher.watchRequest`. Potentially races with write in method `JEtcdClient$EtcdWatcher.reconnect()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-remoting/dubbo-remoting-etcd3/src/main/java/org/apache/dubbo/remoting/etcd/jetcd/JEtcdClient.java","tnLine":434,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void JEtcdClient$EtcdWatcher.recreateWatchRequest()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void JEtcdClient$EtcdWatcher.recreateWatchRequest()` writes to field `this.org.apache.dubbo.remoting.etcd.jetcd.JEtcdClient$EtcdWatcher.watchStub` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-remoting/dubbo-remoting-etcd3/src/main/java/org/apache/dubbo/remoting/etcd/jetcd/JEtcdClient.java","tnLine":431,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void JEtcdClient$EtcdWatcher.recreateWatchRequest()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void JEtcdClient$EtcdWatcher.recreateWatchRequest()` writes to field `this.org.apache.dubbo.remoting.etcd.jetcd.JEtcdClient$EtcdWatcher.throwable` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-remoting/dubbo-remoting-etcd3/src/main/java/org/apache/dubbo/remoting/etcd/jetcd/JEtcdClient.java","tnLine":435,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void JEtcdClient$EtcdWatcher.recreateWatchRequest()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void JEtcdClient$EtcdWatcher.recreateWatchRequest()` writes to field `this.org.apache.dubbo.remoting.etcd.jetcd.JEtcdClient$EtcdWatcher.watchRequest` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-remoting/dubbo-remoting-etcd3/src/main/java/org/apache/dubbo/remoting/etcd/jetcd/JEtcdClient.java","tnLine":432,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void JEtcdClient$EtcdWatcher.recreateWatchRequest()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void JEtcdClient$EtcdWatcher.recreateWatchRequest()` reads without synchronization from `this.org.apache.dubbo.remoting.etcd.jetcd.JEtcdClient$EtcdWatcher.path`. Potentially races with write in method `JEtcdClient$EtcdWatcher.forPath(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-remoting/dubbo-remoting-etcd3/src/main/java/org/apache/dubbo/remoting/etcd/jetcd/JEtcdClient.java","tnLine":436,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void JEtcdClient$EtcdWatcher.recreateWatchRequest()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List ListenableRouter.route(List,URL,Invocation)` reads without synchronization from `this.org.apache.dubbo.rpc.cluster.router.condition.config.ListenableRouter.conditionRouters`. Potentially races with write in method `ListenableRouter.process(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-cluster/src/main/java/org/apache/dubbo/rpc/cluster/router/condition/config/ListenableRouter.java","tnLine":86,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List ListenableRouter.route(List,URL,Invocation)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List TagRouter.route(List,URL,Invocation)` reads without synchronization from `this.org.apache.dubbo.rpc.cluster.router.tag.TagRouter.tagRouterRule`. Potentially races with write in method `TagRouter.process(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-cluster/src/main/java/org/apache/dubbo/rpc/cluster/router/tag/TagRouter.java","tnLine":94,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"List TagRouter.route(List,URL,Invocation)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void TagRouter.setApplication(String)` writes to field `this.org.apache.dubbo.rpc.cluster.router.tag.TagRouter.application` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-cluster/src/main/java/org/apache/dubbo/rpc/cluster/router/tag/TagRouter.java","tnLine":225,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void TagRouter.setApplication(String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ReferenceConfig.setConsumer(ConsumerConfig)` writes to field `this.org.apache.dubbo.config.ReferenceConfig.consumer` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/ReferenceConfig.java","tnLine":608,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ReferenceConfig.setConsumer(ConsumerConfig)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ReferenceConfig.setInterface(Class)` writes to field `this.org.apache.dubbo.config.ReferenceConfig.interfaceClass` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/ReferenceConfig.java","tnLine":571,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ReferenceConfig.setInterface(Class)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ServiceConfig.setInterface(Class)` writes to field `this.org.apache.dubbo.config.ServiceConfig.interfaceClass` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/ServiceConfig.java","tnLine":946,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ServiceConfig.setInterface(Class)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ReferenceConfig.setInterfaceClass(Class)` indirectly writes to field `this.org.apache.dubbo.config.ReferenceConfig.interfaceClass` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/ReferenceConfig.java","tnLine":553,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ReferenceConfig.setInterfaceClass(Class)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ServiceConfig.setInterfaceClass(Class)` indirectly writes to field `this.org.apache.dubbo.config.ServiceConfig.interfaceClass` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/ServiceConfig.java","tnLine":935,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ServiceConfig.setInterfaceClass(Class)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ServiceConfig.setPath(String)` writes to field `this.org.apache.dubbo.config.ServiceConfig.path` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/ServiceConfig.java","tnLine":972,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ServiceConfig.setPath(String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ServiceConfig.setProvider(ProviderConfig)` writes to field `this.org.apache.dubbo.config.ServiceConfig.provider` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/ServiceConfig.java","tnLine":992,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ServiceConfig.setProvider(ProviderConfig)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ServiceConfig.setProviders(List)` writes to field `this.org.apache.dubbo.config.AbstractServiceConfig.protocols` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/ServiceConfig.java","tnLine":1046,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ServiceConfig.setProviders(List)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ReferenceConfig.setUrl(String)` writes to field `this.org.apache.dubbo.config.ReferenceConfig.url` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/ReferenceConfig.java","tnLine":590,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void ReferenceConfig.setUrl(String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean ReferenceConfig.shouldCheck()` indirectly reads without synchronization from `this.org.apache.dubbo.config.ReferenceConfig.consumer`. Potentially races with write in method `ReferenceConfig.get()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/ReferenceConfig.java","tnLine":463,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"boolean ReferenceConfig.shouldCheck()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean ReferenceConfig.shouldInit()` indirectly reads without synchronization from `this.org.apache.dubbo.config.ReferenceConfig.consumer`. Potentially races with write in method `ReferenceConfig.get()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/ReferenceConfig.java","tnLine":475,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"boolean ReferenceConfig.shouldInit()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean ReferenceConfig.shouldJvmRefer(Map)` reads without synchronization from `this.org.apache.dubbo.config.ReferenceConfig.url`. Potentially races with write in method `ReferenceConfig.get()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/ReferenceConfig.java","tnLine":448,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"boolean ReferenceConfig.shouldJvmRefer(Map)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void JEtcdClient$EtcdWatcher.tryReconnect(Throwable)` reads without synchronization from `this.org.apache.dubbo.remoting.etcd.jetcd.JEtcdClient$EtcdWatcher.path`. Potentially races with write in method `JEtcdClient$EtcdWatcher.forPath(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-remoting/dubbo-remoting-etcd3/src/main/java/org/apache/dubbo/remoting/etcd/jetcd/JEtcdClient.java","tnLine":406,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void JEtcdClient$EtcdWatcher.tryReconnect(Throwable)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void JEtcdClient$EtcdWatcher.tryReconnect(Throwable)` writes to field `this.org.apache.dubbo.remoting.etcd.jetcd.JEtcdClient$EtcdWatcher.throwable` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-remoting/dubbo-remoting-etcd3/src/main/java/org/apache/dubbo/remoting/etcd/jetcd/JEtcdClient.java","tnLine":404,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void JEtcdClient$EtcdWatcher.tryReconnect(Throwable)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void JEtcdClient$EtcdWatcher.unwatch()` writes to field `this.org.apache.dubbo.remoting.etcd.jetcd.JEtcdClient$EtcdWatcher.listener` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-remoting/dubbo-remoting-etcd3/src/main/java/org/apache/dubbo/remoting/etcd/jetcd/JEtcdClient.java","tnLine":281,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void JEtcdClient$EtcdWatcher.unwatch()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void JEtcdClient$EtcdWatcher.unwatch()` reads without synchronization from `this.org.apache.dubbo.remoting.etcd.jetcd.JEtcdClient$EtcdWatcher.watchRequest`. Potentially races with write in method `JEtcdClient$EtcdWatcher.reconnect()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"dubbo-remoting/dubbo-remoting-etcd3/src/main/java/org/apache/dubbo/remoting/etcd/jetcd/JEtcdClient.java","tnLine":287,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"void JEtcdClient$EtcdWatcher.unwatch()","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}}],null]}],[{"tag":"ErrorProne"},{"tag":"ToolFailure","contents":{"tag":"ToolSurfacableFailure","contents":"BuildError {renderError = \"Execution Failed: \\\"---STDOUT---\\\\n\\\\nWelcome to Gradle 5.2!\\\\n\\\\nHere are the highlights of this release:\\\\n - Define sets of dependencies that work together with Java Platform plugin\\\\n - New C++ plugins with dependency management built-in\\\\n - New C++ project types for gradle init\\\\n - Service injection into plugins and project extensions\\\\n\\\\nFor more details see https://docs.gradle.org/5.2/release-notes.html\\\\n\\\\nStarting a Gradle Daemon (subsequent builds will be faster)\\\\n> Task :wrapper\\\\n\\\\n> Task :init FAILED\\\\nMaven to Gradle conversion is an incubating feature.\\\\n2 actionable tasks: 2 executed\\\\n---ERR---\\\\n\\\\nFAILURE: Build failed with an exception.\\\\n\\\\n* What went wrong:\\\\nExecution failed for task ':init'.\\\\n> Could not convert Maven POM /tmp/analyzing-c02c9296bef70939/pom.xml to a Gradle build.\\\\n   > Unable to create Maven project model using POM /tmp/analyzing-c02c9296bef70939/pom.xml.\\\\n      > java.lang.NullPointerException (no error message)\\\\n\\\\n* Try:\\\\nRun with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights.\\\\n\\\\n* Get more help at https://help.gradle.org\\\\n\\\\nBUILD FAILED in 10s\\\\n---CMD---\\\\nCreateProcess {cmdspec = RawCommand \\\\\\\"gradle\\\\\\\" [\\\\\\\"init\\\\\\\"], cwd = Just \\\\\\\"/tmp/analyzing-c02c9296bef70939\\\\\\\", env = Nothing, std_in = Inherit, std_out = Inherit, std_err = Inherit, close_fds = False, create_group = False, delegate_ctlc = False, detach_console = False, create_new_console = False, new_session = False, child_group = Nothing, child_user = Nothing, use_process_jobs = False}\\\"\"}"}}]]}
