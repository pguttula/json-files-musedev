{"tag":"AnalysisSuccess","contents":{"requestedTools":null,"toolResults":[[{"tag":"Infer"},{"tag":"ToolSuccess","contents":[[{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Domain TopReport.findOrCreateDomain(String)` reads without synchronization from container `this.m_domains` via call to `get`. Potentially races with write in method `TopReport.findOrCreateDomain(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/top/model/entity/TopReport.java","tnLine":58,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.top.model.entity.TopReport.findOrCreateDomain(java.lang.String):com.dianping.cat.consumer.top.model.entity.Domain","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Domain Domain.addApplicationState(ApplicationState)` mutates container `this.m_applicationStates` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/utilization/entity/Domain.java","tnLine":36,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.utilization.entity.Domain.addApplicationState(com.dianping.cat.home.utilization.entity.ApplicationState):com.dianping.cat.home.utilization.entity.Domain","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `StatusCode EventName.findStatusCode(String)` reads without synchronization from container `this.m_statusCodes` via call to `get`. Potentially races with write in method `EventName.findOrCreateStatusCode(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/event/model/entity/EventName.java","tnLine":77,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.event.model.entity.EventName.findStatusCode(java.lang.String):com.dianping.cat.consumer.event.model.entity.StatusCode","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Entity Entity.addDuration(Duration)` mutates container `this.m_durations` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/problem/model/entity/Entity.java","tnLine":38,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.problem.model.entity.Entity.addDuration(com.dianping.cat.consumer.problem.model.entity.Duration):com.dianping.cat.consumer.problem.model.entity.Entity","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `ExceptionRuleConfig ExceptionRuleConfig.addExceptionExclude(ExceptionExclude)` mutates container `this.m_exceptionExcludes` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/exception/entity/ExceptionRuleConfig.java","tnLine":23,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.exception.entity.ExceptionRuleConfig.addExceptionExclude(com.dianping.cat.home.exception.entity.ExceptionExclude):com.dianping.cat.home.exception.entity.ExceptionRuleConfig","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Domain Machine.findDomain(String)` reads without synchronization from container `this.m_domains` via call to `get`. Potentially races with write in method `Machine.findOrCreateDomain(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/storage/model/entity/Machine.java","tnLine":50,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.storage.model.entity.Machine.findDomain(java.lang.String):com.dianping.cat.consumer.storage.model.entity.Domain","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired to `in` by call to `new()` at line 92 is not released after line 112.\n**Note**: potential exception at line 96","tnFile":"cat-alarm/target/generated-sources/dal-model/com/dianping/cat/alarm/server/transform/DefaultSaxParser.java","tnLine":112,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.alarm.server.transform.DefaultSaxParser.removeBOM(java.io.InputStream):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `new()` at line 193 is not released after line 209.\n**Note**: potential exception at line 199","tnFile":"cat-core/src/main/java/com/dianping/cat/service/IpService.java","tnLine":209,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.service.IpService.initCorpMap(java.io.InputStream):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void LocalIndexManager.close(int)` reads without synchronization from container `this.m_indexes` via call to `entrySet`. Potentially races with write in method `LocalIndexManager.getIndex(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-hadoop/src/main/java/org/unidal/cat/message/storage/local/LocalIndexManager.java","tnLine":60,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.unidal.cat.message.storage.local.LocalIndexManager.close(int):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Machine Machine.addProcessDomain(ProcessDomain)` mutates container `this.m_processDomains` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/state/model/entity/Machine.java","tnLine":67,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.state.model.entity.Machine.addProcessDomain(com.dianping.cat.consumer.state.model.entity.ProcessDomain):com.dianping.cat.consumer.state.model.entity.Machine","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `TopologyNode TopologyGraph.removeTopologyNode(String)` mutates container `this.m_nodes` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/dependency/graph/entity/TopologyGraph.java","tnLine":178,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.dependency.graph.entity.TopologyGraph.removeTopologyNode(java.lang.String):com.dianping.cat.home.dependency.graph.entity.TopologyNode","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Sql Domain.removeSql(String)` mutates container `this.m_sqls` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/storage/model/entity/Domain.java","tnLine":130,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.storage.model.entity.Domain.removeSql(java.lang.String):com.dianping.cat.consumer.storage.model.entity.Sql","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `NetworkPolicy RouterConfig.findNetworkPolicy(String)` reads without synchronization from container `this.m_networkPolicies` via call to `get`. Potentially races with write in method `RouterConfig.findOrCreateNetworkPolicy(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/router/entity/RouterConfig.java","tnLine":87,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.router.entity.RouterConfig.findNetworkPolicy(java.lang.String):com.dianping.cat.home.router.entity.NetworkPolicy","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `NetworkPolicy RouterConfig.removeNetworkPolicy(String)` mutates container `this.m_networkPolicies` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/router/entity/RouterConfig.java","tnLine":218,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.router.entity.RouterConfig.removeNetworkPolicy(java.lang.String):com.dianping.cat.home.router.entity.NetworkPolicy","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Domain ClientReport.removeDomain(String)` mutates container `this.m_domains` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/service/client/entity/ClientReport.java","tnLine":113,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.service.client.entity.ClientReport.removeDomain(java.lang.String):com.dianping.cat.home.service.client.entity.Domain","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Machine Machine.addOperation(Operation)` mutates container `this.m_operations` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/storage/alert/entity/Machine.java","tnLine":34,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.storage.alert.entity.Machine.addOperation(com.dianping.cat.home.storage.alert.entity.Operation):com.dianping.cat.home.storage.alert.entity.Machine","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Group Domain.findGroup(String)` reads without synchronization from container `this.m_groups` via call to `get`. Potentially races with write in method `Domain.findOrCreateGroup(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/router/entity/Domain.java","tnLine":50,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.router.entity.Domain.findGroup(java.lang.String):com.dianping.cat.home.router.entity.Group","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Machine StorageReport.removeMachine(String)` mutates container `this.m_machines` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/storage/model/entity/StorageReport.java","tnLine":168,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.storage.model.entity.StorageReport.removeMachine(java.lang.String):com.dianping.cat.consumer.storage.model.entity.Machine","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `MachineState Domain.removeMachineState(String)` mutates container `this.m_machineStates` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/utilization/entity/Domain.java","tnLine":147,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.utilization.entity.Domain.removeMachineState(java.lang.String):com.dianping.cat.home.utilization.entity.MachineState","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Domain Domain.addMachineState(MachineState)` mutates container `this.m_machineStates` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/utilization/entity/Domain.java","tnLine":41,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.utilization.entity.Domain.addMachineState(com.dianping.cat.home.utilization.entity.MachineState):com.dianping.cat.home.utilization.entity.Domain","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `config` last assigned on line 190 could be null and is dereferenced at line 193.","tnFile":"cat-core/src/main/java/com/dianping/cat/config/business/BusinessConfigManager.java","tnLine":193,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.config.business.BusinessConfigManager.insertBusinessConfigIfNotExist(java.lang.String,java.lang.String,com.dianping.cat.config.business.ConfigItem):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired to `in` by call to `new()` at line 94 is not released after line 114.\n**Note**: potential exception at line 98","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/top/model/transform/DefaultSaxParser.java","tnLine":114,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.top.model.transform.DefaultSaxParser.removeBOM(java.io.InputStream):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired to `in` by call to `new()` at line 90 is not released after line 110.\n**Note**: potential exception at line 94","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/exception/transform/DefaultSaxParser.java","tnLine":110,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.exception.transform.DefaultSaxParser.removeBOM(java.io.InputStream):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ServerStatistic.remove(long)` mutates container `this.m_statistics` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-core/src/main/java/com/dianping/cat/statistic/ServerStatistic.java","tnLine":40,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.statistic.ServerStatistic.remove(long):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `InputStreamReader(...)` at line 46 is not released after line 46.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/service/transform/DefaultJsonParser.java","tnLine":46,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.service.transform.DefaultJsonParser.parse(java.lang.Class,java.io.InputStream):com.dianping.cat.home.service.IEntity","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `RouterConfigManager.m_routerConfig` last assigned on line 305 could be null and is dereferenced by call to `refreshNetInfo()` at line 307.","tnFile":"cat-home/src/main/java/com/dianping/cat/system/page/router/config/RouterConfigManager.java","tnLine":307,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.system.page.router.config.RouterConfigManager.refreshConfigInfo():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void LocalReportBucket.initialize(String,Date,int)` writes to field `this.m_writeDataFileLength` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-core/src/main/java/com/dianping/cat/report/LocalReportBucket.java","tnLine":174,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.LocalReportBucket.initialize(java.lang.String,java.util.Date,int):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Group Type.findOrCreateGroup(String)` reads without synchronization from container `this.m_groups` via call to `get`. Potentially races with write in method `Type.addGroup(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-alarm/target/generated-sources/dal-model/com/dianping/cat/alarm/policy/entity/Type.java","tnLine":54,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.alarm.policy.entity.Type.findOrCreateGroup(java.lang.String):com.dianping.cat.alarm.policy.entity.Group","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `String MessageIdFactory.getNextId()` indirectly reads with synchronization from `this.m_domain`. Potentially races with unsynchronized write in method `MessageIdFactory.initialize(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-client/src/main/java/com/dianping/cat/message/internal/MessageIdFactory.java","tnLine":123,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.message.internal.MessageIdFactory.getNextId():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `MatrixReport MatrixReport.addMatrix(Matrix)` mutates container `this.m_matrixs` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/matrix/model/entity/MatrixReport.java","tnLine":43,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.matrix.model.entity.MatrixReport.addMatrix(com.dianping.cat.consumer.matrix.model.entity.Matrix):com.dianping.cat.consumer.matrix.model.entity.MatrixReport","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Period Period.addExtension(Extension)` mutates container `this.m_extensions` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/heartbeat/model/entity/Period.java","tnLine":71,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.heartbeat.model.entity.Period.addExtension(com.dianping.cat.consumer.heartbeat.model.entity.Extension):com.dianping.cat.consumer.heartbeat.model.entity.Period","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `JavaThread Entity.findOrCreateThread(String)` reads without synchronization from container `this.m_threads` via call to `get`. Potentially races with write in method `Entity.removeThread(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/problem/model/entity/Entity.java","tnLine":88,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.problem.model.entity.Entity.findOrCreateThread(java.lang.String):com.dianping.cat.consumer.problem.model.entity.JavaThread","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired to `in` by call to `new()` at line 97 is not released after line 117.\n**Note**: potential exception at line 101","tnFile":"cat-alarm/target/generated-sources/dal-model/com/dianping/cat/alarm/receiver/transform/DefaultSaxParser.java","tnLine":117,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.alarm.receiver.transform.DefaultSaxParser.removeBOM(java.io.InputStream):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `AllDuration Range2.findOrCreateAllDuration(int)` reads without synchronization from container `this.m_allDurations` via call to `get`. Potentially races with write in method `Range2.addAllDuration(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/transaction/model/entity/Range2.java","tnLine":80,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.transaction.model.entity.Range2.findOrCreateAllDuration(int):com.dianping.cat.consumer.transaction.model.entity.AllDuration","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `InputStreamReader(...)` at line 57 is not released after line 57.\n**Note**: potential exception at line 57","tnFile":"cat-alarm/target/generated-sources/dal-model/com/dianping/cat/alarm/rule/transform/DefaultJsonParser.java","tnLine":57,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.alarm.rule.transform.DefaultJsonParser.parse(java.lang.Class,java.io.InputStream):com.dianping.cat.alarm.rule.IEntity","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void MessageIdFactory.initialize(String)` indirectly reads without synchronization from `this.m_domain`. Potentially races with write in method `MessageIdFactory.setDomain(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-client/src/main/java/com/dianping/cat/message/internal/MessageIdFactory.java","tnLine":228,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.message.internal.MessageIdFactory.initialize(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Range TransactionName.findOrCreateRange(int)` reads without synchronization from container `this.m_ranges` via call to `get`. Potentially races with write in method `TransactionName.findOrCreateRange(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/transaction/model/entity/TransactionName.java","tnLine":191,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.transaction.model.entity.TransactionName.findOrCreateRange(int):com.dianping.cat.consumer.transaction.model.entity.Range","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void MessageIdFactory.saveMark()` reads with synchronization from container `this.m_map` via call to `size`. Potentially races with unsynchronized write in method `MessageIdFactory.initialize(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-client/src/main/java/com/dianping/cat/message/internal/MessageIdFactory.java","tnLine":319,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.message.internal.MessageIdFactory.saveMark():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Method Domain.findOrCreateMethod(String)` reads without synchronization from container `this.m_methods` via call to `get`. Potentially races with write in method `Domain.findOrCreateMethod(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/service/client/entity/Domain.java","tnLine":64,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.service.client.entity.Domain.findOrCreateMethod(java.lang.String):com.dianping.cat.home.service.client.entity.Method","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `SampleConfigManager.m_config` last assigned on line 103 could be null and is dereferenced by call to `storeConfig()` at line 105.","tnFile":"cat-core/src/main/java/com/dianping/cat/config/sample/SampleConfigManager.java","tnLine":105,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.config.sample.SampleConfigManager.insert(java.lang.String):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `businessReportConfig` last assigned on line 97 could be null and is dereferenced at line 99.","tnFile":"cat-core/src/main/java/com/dianping/cat/config/business/BusinessConfigManager.java","tnLine":99,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.config.business.BusinessConfigManager.deleteCustomItem(java.lang.String,java.lang.String):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `JavaThread Entity.removeThread(String)` mutates container `this.m_threads` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/problem/model/entity/Entity.java","tnLine":155,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.problem.model.entity.Entity.removeThread(java.lang.String):com.dianping.cat.consumer.problem.model.entity.JavaThread","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `TransactionName TransactionName.addRange(Range)` mutates container `this.m_ranges` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/transaction/model/entity/TransactionName.java","tnLine":95,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.transaction.model.entity.TransactionName.addRange(com.dianping.cat.consumer.transaction.model.entity.Range):com.dianping.cat.consumer.transaction.model.entity.TransactionName","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `MachineState Domain.findMachineState(String)` reads without synchronization from container `this.m_machineStates` via call to `get`. Potentially races with write in method `Domain.findOrCreateMachineState(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/utilization/entity/Domain.java","tnLine":65,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.utilization.entity.Domain.findMachineState(java.lang.String):com.dianping.cat.home.utilization.entity.MachineState","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired to `in` by call to `new()` at line 96 is not released after line 116.\n**Note**: potential exception at line 100","tnFile":"cat-alarm/target/generated-sources/dal-model/com/dianping/cat/alarm/rule/transform/DefaultSaxParser.java","tnLine":116,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.alarm.rule.transform.DefaultSaxParser.removeBOM(java.io.InputStream):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Segment Operation.findOrCreateSegment(int)` reads without synchronization from container `this.m_segments` via call to `get`. Potentially races with write in method `Operation.findOrCreateSegment(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/storage/model/entity/Operation.java","tnLine":64,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.storage.model.entity.Operation.findOrCreateSegment(int):com.dianping.cat.consumer.storage.model.entity.Segment","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `InputStreamReader(...)` at line 67 is not released after line 67.","tnFile":"cat-core/target/generated-sources/dal-model/com/dianping/cat/configuration/web/url/transform/DefaultJsonParser.java","tnLine":67,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.configuration.web.url.transform.DefaultJsonParser.parseArray(java.lang.Class,java.io.InputStream):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `MonitorRules MonitorRules.addRule(Rule)` mutates container `this.m_rules` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-alarm/target/generated-sources/dal-model/com/dianping/cat/alarm/rule/entity/MonitorRules.java","tnLine":21,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.alarm.rule.entity.MonitorRules.addRule(com.dianping.cat.alarm.rule.entity.Rule):com.dianping.cat.alarm.rule.entity.MonitorRules","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Level Group.findLevel(String)` reads without synchronization from container `this.m_levels` via call to `get`. Potentially races with write in method `Group.findOrCreateLevel(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-alarm/target/generated-sources/dal-model/com/dianping/cat/alarm/policy/entity/Group.java","tnLine":50,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.alarm.policy.entity.Group.findLevel(java.lang.String):com.dianping.cat.alarm.policy.entity.Level","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `HarFileSystem HarConnectionPool.getHarfsConnection(String,Date,FileSystem)` reads without synchronization from container `this.m_hars` via call to `get`. Potentially races with write in method `HarConnectionPool.getHarfsConnection(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-hadoop/src/main/java/com/dianping/cat/hadoop/hdfs/HarConnectionPool.java","tnLine":80,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.hadoop.hdfs.HarConnectionPool.getHarfsConnection(java.lang.String,java.util.Date,org.apache.hadoop.fs.FileSystem):org.apache.hadoop.fs.HarFileSystem","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Ratio Matrix.findOrCreateRatio(String)` reads without synchronization from container `this.m_ratios` via call to `get`. Potentially races with write in method `Matrix.addRatio(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/matrix/model/entity/Matrix.java","tnLine":62,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.matrix.model.entity.Matrix.findOrCreateRatio(java.lang.String):com.dianping.cat.consumer.matrix.model.entity.Ratio","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `BusinessItem BusinessItem.addSegment(Segment)` mutates container `this.m_segments` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/business/model/entity/BusinessItem.java","tnLine":32,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.business.model.entity.BusinessItem.addSegment(com.dianping.cat.consumer.business.model.entity.Segment):com.dianping.cat.consumer.business.model.entity.BusinessItem","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.RandomAccessFile` acquired by call to `MessageBlockReader(...)` at line 85 is not released after line 103.\n**Note**: potential exception at line 90","tnFile":"cat-core/src/main/java/com/dianping/cat/message/storage/LocalMessageBucket.java","tnLine":103,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.message.storage.LocalMessageBucket.findByIndex(int):com.dianping.cat.message.spi.MessageTree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int UrlPattern.hashCode()` reads without synchronization from container `this.m_codes` via call to `hashCode`. Potentially races with write in method `UrlPattern.findOrCreateCode(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-core/target/generated-sources/dal-model/com/dianping/cat/configuration/web/url/entity/UrlPattern.java","tnLine":107,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.configuration.web.url.entity.UrlPattern.hashCode():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired to `in` by call to `new()` at line 200 is not released after line 219.\n**Note**: potential exception at line 212","tnFile":"cat-hadoop/src/main/java/org/unidal/cat/message/storage/internals/DefaultBlock.java","tnLine":219,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.unidal.cat.message.storage.internals.DefaultBlock.unpack(com.dianping.cat.message.internal.MessageId):io.netty.buffer.ByteBuf","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Set HdfsMessageConsumerFinder.findConsumerIps(String,int)` reads without synchronization from container `this.m_caches` via call to `get`. Potentially races with write in method `HdfsMessageConsumerFinder.findConsumerIps(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-hadoop/src/main/java/org/unidal/cat/message/storage/hdfs/HdfsMessageConsumerFinder.java","tnLine":49,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.unidal.cat.message.storage.hdfs.HdfsMessageConsumerFinder.findConsumerIps(java.lang.String,int):java.util.Set","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `tmpConfig` last assigned on line 58 could be null and is dereferenced at line 66.","tnFile":"cat-alarm/src/main/java/com/dianping/cat/alarm/spi/config/AlertConfigManager.java","tnLine":66,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.alarm.spi.config.AlertConfigManager.buildReceiverContentByOnOff(java.lang.String,java.lang.String):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Target Operation.findOrCreateTarget(String)` reads without synchronization from container `this.m_targets` via call to `get`. Potentially races with write in method `Operation.removeTarget(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/storage/alert/entity/Operation.java","tnLine":58,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.storage.alert.entity.Operation.findOrCreateTarget(java.lang.String):com.dianping.cat.home.storage.alert.entity.Target","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Local CrossReport.findLocal(String)` reads without synchronization from container `this.m_locals` via call to `get`. Potentially races with write in method `CrossReport.findOrCreateLocal(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/cross/model/entity/CrossReport.java","tnLine":70,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.cross.model.entity.CrossReport.findLocal(java.lang.String):com.dianping.cat.consumer.cross.model.entity.Local","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `report` last assigned on line 83 could be null and is dereferenced by call to `addFailureInfo(...)` at line 91.","tnFile":"cat-home/src/main/java/com/dianping/cat/report/alert/summary/build/FailureSummaryBuilder.java","tnLine":91,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.alert.summary.build.FailureSummaryBuilder.generateModel(java.lang.String,java.util.Date):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `ByteBuf DefaultMessageFinderManager.find(MessageId)` reads without synchronization from container `this.m_map` via call to `get`. Potentially races with write in method `DefaultMessageFinderManager.close(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-hadoop/src/main/java/org/unidal/cat/message/storage/internals/DefaultMessageFinderManager.java","tnLine":46,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.unidal.cat.message.storage.internals.DefaultMessageFinderManager.find(com.dianping.cat.message.internal.MessageId):io.netty.buffer.ByteBuf","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void MessageIdFactory.close()` reads without synchronization from `this.m_markFile`. Potentially races with write in method `MessageIdFactory.close()`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-client/src/main/java/com/dianping/cat/message/internal/MessageIdFactory.java","tnLine":79,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.message.internal.MessageIdFactory.close():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void LocalTransactionService$TransactionReportFilter.visitRange(Range)` indirectly writes to field `this.m_level` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/src/main/java/com/dianping/cat/report/page/transaction/service/LocalTransactionService.java","tnLine":174,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.page.transaction.service.LocalTransactionService$TransactionReportFilter.visitRange(com.dianping.cat.consumer.transaction.model.entity.Range):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Machine HeartbeatReport.findOrCreateMachine(String)` reads without synchronization from container `this.m_machines` via call to `get`. Potentially races with write in method `HeartbeatReport.findOrCreateMachine(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/heartbeat/model/entity/HeartbeatReport.java","tnLine":74,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.heartbeat.model.entity.HeartbeatReport.findOrCreateMachine(java.lang.String):com.dianping.cat.consumer.heartbeat.model.entity.Machine","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Network NetworkPolicy.removeNetwork(String)` mutates container `this.m_networks` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/router/entity/NetworkPolicy.java","tnLine":125,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.router.entity.NetworkPolicy.removeNetwork(java.lang.String):com.dianping.cat.home.router.entity.Network","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `m1.getId()` could be null and is dereferenced at line 41.","tnFile":"cat-home/src/main/java/com/dianping/cat/report/page/cross/display/NameComparator.java","tnLine":41,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.page.cross.display.NameComparator.compare(com.dianping.cat.report.page.cross.display.NameDetailInfo,com.dianping.cat.report.page.cross.display.NameDetailInfo):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Local CrossReport.findOrCreateLocal(String)` reads without synchronization from container `this.m_locals` via call to `get`. Potentially races with write in method `CrossReport.removeLocal(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/cross/model/entity/CrossReport.java","tnLine":74,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.cross.model.entity.CrossReport.findOrCreateLocal(java.lang.String):com.dianping.cat.consumer.cross.model.entity.Local","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Report Report.addType(Type)` mutates container `this.m_types` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/all/config/entity/Report.java","tnLine":30,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.all.config.entity.Report.addType(com.dianping.cat.consumer.all.config.entity.Type):com.dianping.cat.consumer.all.config.entity.Report","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `DefaultNativeParser(...)` at line 27 is not released after line 40.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/service/transform/DefaultNativeParser.java","tnLine":40,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.service.transform.DefaultNativeParser.parse(java.io.ByteArrayInputStream):com.dianping.cat.home.service.entity.ServiceReport","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `TopologyEdge TopologyGraph.findTopologyEdge(String)` reads without synchronization from container `this.m_edges` via call to `get`. Potentially races with write in method `TopologyGraph.findOrCreateTopologyEdge(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/dependency/graph/entity/TopologyGraph.java","tnLine":77,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.dependency.graph.entity.TopologyGraph.findTopologyEdge(java.lang.String):com.dianping.cat.home.dependency.graph.entity.TopologyEdge","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Storage StorageAlertInfo.findOrCreateStorage(String)` reads without synchronization from container `this.m_storages` via call to `get`. Potentially races with write in method `StorageAlertInfo.removeStorage(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/storage/alert/entity/StorageAlertInfo.java","tnLine":58,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.storage.alert.entity.StorageAlertInfo.findOrCreateStorage(java.lang.String):com.dianping.cat.home.storage.alert.entity.Storage","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `StateReport StateAnalyzer.getReport(String)` indirectly writes to field `temp.m_blockTotal` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/src/main/java/com/dianping/cat/consumer/state/StateAnalyzer.java","tnLine":198,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.state.StateAnalyzer.getReport(java.lang.String):com.dianping.cat.consumer.state.model.entity.StateReport","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void LocalTokenMapping.open(int,String)` reads without synchronization from `this.m_block`. Potentially races with write in method `LocalTokenMapping.map(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-hadoop/src/main/java/org/unidal/cat/message/storage/local/LocalTokenMapping.java","tnLine":180,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.unidal.cat.message.storage.local.LocalTokenMapping.open(int,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int Entry.hashCode()` reads without synchronization from container `this.m_durations` via call to `hashCode`. Potentially races with write in method `Entry.findOrCreateDuration(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/problem/model/entity/Entry.java","tnLine":128,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.problem.model.entity.Entry.hashCode():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `ServerGroup RouterConfig.findServerGroup(String)` reads without synchronization from container `this.m_serverGroups` via call to `get`. Potentially races with write in method `RouterConfig.findOrCreateServerGroup(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/router/entity/RouterConfig.java","tnLine":91,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.router.entity.RouterConfig.findServerGroup(java.lang.String):com.dianping.cat.home.router.entity.ServerGroup","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `InputStreamReader(...)` at line 85 is not released after line 85.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/router/transform/DefaultJsonParser.java","tnLine":85,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.router.transform.DefaultJsonParser.parseArray(java.lang.Class,java.io.InputStream):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `DefaultNativeParser(...)` at line 30 is not released after line 43.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/top/model/transform/DefaultNativeParser.java","tnLine":43,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.top.model.transform.DefaultNativeParser.parse(java.io.ByteArrayInputStream):com.dianping.cat.consumer.top.model.entity.TopReport","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `ExecutorService Threads$ThreadPoolManager.getFixedThreadPool(String,int)` reads with synchronization from container `this.m_services` via call to `get`. Potentially races with unsynchronized write in method `Threads$ThreadPoolManager.getFixedThreadPool(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-client/src/main/java/com/dianping/cat/util/Threads.java","tnLine":492,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.util.Threads$ThreadPoolManager.getFixedThreadPool(java.lang.String,int):java.util.concurrent.ExecutorService","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `FileSystem HdfsSystemManager.getFileSystem()` reads without synchronization from `this.m_fileSystem`. Potentially races with write in method `HdfsSystemManager.getFileSystem()`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-hadoop/src/main/java/org/unidal/cat/message/storage/hdfs/HdfsSystemManager.java","tnLine":69,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.unidal.cat.message.storage.hdfs.HdfsSystemManager.getFileSystem():org.apache.hadoop.fs.FileSystem","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Segment Domain.findOrCreateSegment(Integer)` reads without synchronization from container `this.m_segments` via call to `get`. Potentially races with write in method `Domain.addSegment(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/top/model/entity/Domain.java","tnLine":54,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.top.model.entity.Domain.findOrCreateSegment(java.lang.Integer):com.dianping.cat.consumer.top.model.entity.Segment","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Range EventName.findOrCreateRange(Integer)` reads without synchronization from container `this.m_ranges` via call to `get`. Potentially races with write in method `EventName.addRange(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/event/model/entity/EventName.java","tnLine":81,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.event.model.entity.EventName.findOrCreateRange(java.lang.Integer):com.dianping.cat.consumer.event.model.entity.Range","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int HeavySql.hashCode()` reads without synchronization from container `this.m_urls` via call to `hashCode`. Potentially races with write in method `HeavySql.findOrCreateUrl(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/heavy/entity/HeavySql.java","tnLine":106,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.heavy.entity.HeavySql.hashCode():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `TransactionType Machine.findType(String)` reads without synchronization from container `this.m_types` via call to `get`. Potentially races with write in method `Machine.findOrCreateType(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/transaction/model/entity/Machine.java","tnLine":50,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.transaction.model.entity.Machine.findType(java.lang.String):com.dianping.cat.consumer.transaction.model.entity.TransactionType","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Storage StorageAlertInfo.findStorage(String)` reads without synchronization from container `this.m_storages` via call to `get`. Potentially races with write in method `StorageAlertInfo.findOrCreateStorage(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/storage/alert/entity/StorageAlertInfo.java","tnLine":54,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.storage.alert.entity.StorageAlertInfo.findStorage(java.lang.String):com.dianping.cat.home.storage.alert.entity.Storage","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void LocalTokenMapping.close()` mutates container `this.m_map` via call to `clear` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-hadoop/src/main/java/org/unidal/cat/message/storage/local/LocalTokenMapping.java","tnLine":84,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.unidal.cat.message.storage.local.LocalTokenMapping.close():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `MessageBlockWriter LocalMessageBucket.getWriter()` reads without synchronization from `this.m_writer`. Potentially races with write in method `LocalMessageBucket.close()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-core/src/main/java/com/dianping/cat/message/storage/LocalMessageBucket.java","tnLine":136,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.message.storage.LocalMessageBucket.getWriter():com.dianping.cat.message.storage.MessageBlockWriter","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Code UrlPattern.findCode(Integer)` reads without synchronization from container `this.m_codes` via call to `get`. Potentially races with write in method `UrlPattern.findOrCreateCode(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-core/target/generated-sources/dal-model/com/dianping/cat/configuration/web/url/entity/UrlPattern.java","tnLine":53,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.configuration.web.url.entity.UrlPattern.findCode(java.lang.Integer):com.dianping.cat.configuration.web.url.entity.Code","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void LocalMessageBucket.initialize(String)` writes to field `this.m_writer` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-core/src/main/java/com/dianping/cat/message/storage/LocalMessageBucket.java","tnLine":145,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.message.storage.LocalMessageBucket.initialize(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Domain RouterConfig.findDomain(String)` reads without synchronization from container `this.m_domains` via call to `get`. Potentially races with write in method `RouterConfig.findOrCreateDomain(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/router/entity/RouterConfig.java","tnLine":83,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.router.entity.RouterConfig.findDomain(java.lang.String):com.dianping.cat.home.router.entity.Domain","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Url HeavySql.findOrCreateUrl(String)` reads without synchronization from container `this.m_urls` via call to `get`. Potentially races with write in method `HeavySql.addUrl(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/heavy/entity/HeavySql.java","tnLine":78,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.heavy.entity.HeavySql.findOrCreateUrl(java.lang.String):com.dianping.cat.home.heavy.entity.Url","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object DefaultReportManager.getHourlyReport(long,String,boolean)` reads without synchronization from container `reports` via call to `get`. Potentially races with write in method `DefaultReportManager.getHourlyReport(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-core/src/main/java/com/dianping/cat/report/DefaultReportManager.java","tnLine":133,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.DefaultReportManager.getHourlyReport(long,java.lang.String,boolean):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `tmpConfig` last assigned on line 58 could be null and is dereferenced by call to `turnOnOrOffConfig(...)` at line 61.","tnFile":"cat-alarm/src/main/java/com/dianping/cat/alarm/spi/config/AlertConfigManager.java","tnLine":61,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.alarm.spi.config.AlertConfigManager.buildReceiverContentByOnOff(java.lang.String,java.lang.String):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired to `in` by call to `new()` at line 92 is not released after line 112.\n**Note**: potential exception at line 96","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/all/config/transform/DefaultSaxParser.java","tnLine":112,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.all.config.transform.DefaultSaxParser.removeBOM(java.io.InputStream):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Segment JavaThread.findSegment(Integer)` reads without synchronization from container `this.m_segments` via call to `get`. Potentially races with write in method `JavaThread.findOrCreateSegment(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/problem/model/entity/JavaThread.java","tnLine":54,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.problem.model.entity.JavaThread.findSegment(java.lang.Integer):com.dianping.cat.consumer.problem.model.entity.Segment","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `map` last assigned on line 99 could be null and is dereferenced at line 105.","tnFile":"cat-hadoop/src/main/java/org/unidal/cat/message/storage/local/LocalIndexManager.java","tnLine":105,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.unidal.cat.message.storage.local.LocalIndexManager.getIndex(java.lang.String,java.lang.String,int,boolean):org.unidal.cat.message.storage.Index","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Target Operation.removeTarget(String)` mutates container `this.m_targets` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/storage/alert/entity/Operation.java","tnLine":119,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.storage.alert.entity.Operation.removeTarget(java.lang.String):com.dianping.cat.home.storage.alert.entity.Target","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `HeavySql HeavySql.addService(Service)` mutates container `this.m_services` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/heavy/entity/HeavySql.java","tnLine":23,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.heavy.entity.HeavySql.addService(com.dianping.cat.home.heavy.entity.Service):com.dianping.cat.home.heavy.entity.HeavySql","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `period` last assigned on line 75 could be null and is dereferenced at line 77.","tnFile":"cat-core/src/main/java/com/dianping/cat/analysis/RealtimeConsumer.java","tnLine":77,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.analysis.RealtimeConsumer.doCheckpoint():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void MessageIdFactory.setDomain(String)` writes to field `this.m_domain` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-client/src/main/java/com/dianping/cat/message/internal/MessageIdFactory.java","tnLine":337,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.message.internal.MessageIdFactory.setDomain(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired to `in` by call to `new()` at line 115 is not released after line 135.\n**Note**: potential exception at line 119","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/transaction/model/transform/DefaultSaxParser.java","tnLine":135,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.transaction.model.transform.DefaultSaxParser.removeBOM(java.io.InputStream):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Group Group.addLevel(Level)` mutates container `this.m_levels` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-alarm/target/generated-sources/dal-model/com/dianping/cat/alarm/policy/entity/Group.java","tnLine":30,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.alarm.policy.entity.Group.addLevel(com.dianping.cat.alarm.policy.entity.Level):com.dianping.cat.alarm.policy.entity.Group","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `tmp` last assigned on line 99 could be null and is dereferenced at line 101.","tnFile":"cat-home/src/main/java/com/dianping/cat/report/page/event/service/LocalEventService.java","tnLine":101,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.page.event.service.LocalEventService.getReportFromLocalDisk(long,java.lang.String):com.dianping.cat.consumer.event.model.entity.EventReport","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Domain JarReport.findDomain(String)` reads without synchronization from container `this.m_domains` via call to `get`. Potentially races with write in method `JarReport.findOrCreateDomain(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/jar/entity/JarReport.java","tnLine":60,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.jar.entity.JarReport.findDomain(java.lang.String):com.dianping.cat.home.jar.entity.Domain","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `MessageTree LocalMessageBucket.findByIndex(int)` writes to field `this.m_lastAccessTime` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-core/src/main/java/com/dianping/cat/message/storage/LocalMessageBucket.java","tnLine":88,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.message.storage.LocalMessageBucket.findByIndex(int):com.dianping.cat.message.spi.MessageTree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `boolean LocalBucket.initialize(String,String,int,boolean)` indirectly writes to field `this.m_index.m_file` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-hadoop/src/main/java/org/unidal/cat/message/storage/local/LocalBucket.java","tnLine":124,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.unidal.cat.message.storage.local.LocalBucket.initialize(java.lang.String,java.lang.String,int,boolean):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `ExecutorService Threads$ThreadPoolManager.getCachedThreadPool(String)` reads with synchronization from container `this.m_services` via call to `get`. Potentially races with unsynchronized write in method `Threads$ThreadPoolManager.getFixedThreadPool(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-client/src/main/java/com/dianping/cat/util/Threads.java","tnLine":467,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.util.Threads$ThreadPoolManager.getCachedThreadPool(java.lang.String):java.util.concurrent.ExecutorService","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Machine Machine.addType(TransactionType)` mutates container `this.m_types` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/transaction/model/entity/Machine.java","tnLine":30,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.transaction.model.entity.Machine.addType(com.dianping.cat.consumer.transaction.model.entity.TransactionType):com.dianping.cat.consumer.transaction.model.entity.Machine","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Range EventName.findRange(Integer)` reads without synchronization from container `this.m_ranges` via call to `get`. Potentially races with write in method `EventName.findOrCreateRange(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/event/model/entity/EventName.java","tnLine":73,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.event.model.entity.EventName.findRange(java.lang.Integer):com.dianping.cat.consumer.event.model.entity.Range","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired to `in` by call to `new()` at line 93 is not released after line 113.\n**Note**: potential exception at line 97","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/group/transform/DefaultSaxParser.java","tnLine":113,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.group.transform.DefaultSaxParser.removeBOM(java.io.InputStream):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired to `in` by call to `new()` at line 90 is not released after line 110.\n**Note**: potential exception at line 94","tnFile":"cat-core/target/generated-sources/dal-model/com/dianping/cat/configuration/reload/transform/DefaultSaxParser.java","tnLine":110,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.configuration.reload.transform.DefaultSaxParser.removeBOM(java.io.InputStream):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Machine Machine.addType(EventType)` mutates container `this.m_types` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/event/model/entity/Machine.java","tnLine":30,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.event.model.entity.Machine.addType(com.dianping.cat.consumer.event.model.entity.EventType):com.dianping.cat.consumer.event.model.entity.Machine","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void LocalTransactionService$TransactionReportFilter.visitType(TransactionType)` indirectly writes to field `this.m_level` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/src/main/java/com/dianping/cat/report/page/transaction/service/LocalTransactionService.java","tnLine":195,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.page.transaction.service.LocalTransactionService$TransactionReportFilter.visitType(com.dianping.cat.consumer.transaction.model.entity.TransactionType):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `CrossReport CrossReport.addLocal(Local)` mutates container `this.m_locals` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/cross/model/entity/CrossReport.java","tnLine":50,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.cross.model.entity.CrossReport.addLocal(com.dianping.cat.consumer.cross.model.entity.Local):com.dianping.cat.consumer.cross.model.entity.CrossReport","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `NodeConfig TopologyGraphConfig.findNodeConfig(String)` reads without synchronization from container `this.m_nodeConfigs` via call to `get`. Potentially races with write in method `TopologyGraphConfig.findOrCreateNodeConfig(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/dependency/config/entity/TopologyGraphConfig.java","tnLine":57,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.dependency.config.entity.TopologyGraphConfig.findNodeConfig(java.lang.String):com.dianping.cat.home.dependency.config.entity.NodeConfig","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `AllDuration Range2.removeAllDuration(int)` mutates container `this.m_allDurations` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/transaction/model/entity/Range2.java","tnLine":221,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.transaction.model.entity.Range2.removeAllDuration(int):com.dianping.cat.consumer.transaction.model.entity.AllDuration","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Segment JavaThread.findOrCreateSegment(Integer)` reads without synchronization from container `this.m_segments` via call to `get`. Potentially races with write in method `JavaThread.removeSegment(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/problem/model/entity/JavaThread.java","tnLine":58,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.problem.model.entity.JavaThread.findOrCreateSegment(java.lang.Integer):com.dianping.cat.consumer.problem.model.entity.Segment","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Report AllConfig.removeReport(String)` mutates container `this.m_reports` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/all/config/entity/AllConfig.java","tnLine":80,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.all.config.entity.AllConfig.removeReport(java.lang.String):com.dianping.cat.consumer.all.config.entity.Report","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Domain TopReport.findDomain(String)` reads without synchronization from container `this.m_domains` via call to `get`. Potentially races with write in method `TopReport.findOrCreateDomain(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/top/model/entity/TopReport.java","tnLine":54,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.top.model.entity.TopReport.findDomain(java.lang.String):com.dianping.cat.consumer.top.model.entity.Domain","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `TopologyEdge TopologyGraph.findOrCreateTopologyEdge(String)` reads without synchronization from container `this.m_edges` via call to `get`. Potentially races with write in method `TopologyGraph.addTopologyEdge(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/dependency/graph/entity/TopologyGraph.java","tnLine":85,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.dependency.graph.entity.TopologyGraph.findOrCreateTopologyEdge(java.lang.String):com.dianping.cat.home.dependency.graph.entity.TopologyEdge","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Index Segment.findOrCreateIndex(String)` reads without synchronization from container `this.m_indexs` via call to `get`. Potentially races with write in method `Segment.findOrCreateIndex(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/dependency/model/entity/Segment.java","tnLine":84,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.dependency.model.entity.Segment.findOrCreateIndex(java.lang.String):com.dianping.cat.consumer.dependency.model.entity.Index","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `InputStreamReader(...)` at line 62 is not released after line 62.\n**Note**: potential exception at line 62","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/router/transform/DefaultJsonParser.java","tnLine":62,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.router.transform.DefaultJsonParser.parse(java.lang.Class,java.io.InputStream):com.dianping.cat.home.router.IEntity","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Segment Operation.findSegment(int)` reads without synchronization from container `this.m_segments` via call to `get`. Potentially races with write in method `Operation.findOrCreateSegment(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/storage/model/entity/Operation.java","tnLine":60,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.storage.model.entity.Operation.findSegment(int):com.dianping.cat.consumer.storage.model.entity.Segment","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired to `in` by call to `new()` at line 93 is not released after line 113.\n**Note**: potential exception at line 97","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/matrix/model/transform/DefaultSaxParser.java","tnLine":113,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.matrix.model.transform.DefaultSaxParser.removeBOM(java.io.InputStream):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void LocalReportBucket.loadIndexes(File)` reads without synchronization from `this.m_writeLock`. Potentially races with write in method `LocalReportBucket.initialize(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-core/src/main/java/com/dianping/cat/report/LocalReportBucket.java","tnLine":180,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.LocalReportBucket.loadIndexes(java.io.File):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `ExceptionRuleConfig ExceptionRuleConfig.addExceptionLimit(ExceptionLimit)` mutates container `this.m_exceptionLimits` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/exception/entity/ExceptionRuleConfig.java","tnLine":28,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.exception.entity.ExceptionRuleConfig.addExceptionLimit(com.dianping.cat.home.exception.entity.ExceptionLimit):com.dianping.cat.home.exception.entity.ExceptionRuleConfig","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `CustomInfo StatusInfo.findOrCreateCustomInfo(String)` reads without synchronization from container `this.m_customInfos` via call to `get`. Potentially races with write in method `StatusInfo.removeCustomInfo(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-client/target/generated-sources/dal-model/com/dianping/cat/status/model/entity/StatusInfo.java","tnLine":103,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.status.model.entity.StatusInfo.findOrCreateCustomInfo(java.lang.String):com.dianping.cat.status.model.entity.CustomInfo","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Domain TpValueStatisticConfig.findDomain(String)` reads without synchronization from container `this.m_domains` via call to `get`. Potentially races with write in method `TpValueStatisticConfig.findOrCreateDomain(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-core/target/generated-sources/dal-model/com/dianping/cat/configuration/tp/entity/TpValueStatisticConfig.java","tnLine":42,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.configuration.tp.entity.TpValueStatisticConfig.findDomain(java.lang.String):com.dianping.cat.configuration.tp.entity.Domain","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Domain ClientReport.findDomain(String)` reads without synchronization from container `this.m_domains` via call to `get`. Potentially races with write in method `ClientReport.findOrCreateDomain(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/service/client/entity/ClientReport.java","tnLine":54,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.service.client.entity.ClientReport.findDomain(java.lang.String):com.dianping.cat.home.service.client.entity.Domain","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Cat.initialize(File)` reads without synchronization from `cat.Cat.s_instance`. Potentially races with write in method `Cat.destroy()`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-client/src/main/java/com/dianping/cat/Cat.java","tnLine":176,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.Cat.initialize(java.io.File):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List DefaultMessageAnalyzerManager.getAnalyzer(String,long)` reads with synchronization from container `this.m_analyzers` via call to `get`. Potentially races with unsynchronized write in method `DefaultMessageAnalyzerManager.getAnalyzer(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-core/src/main/java/com/dianping/cat/analysis/DefaultMessageAnalyzerManager.java","tnLine":74,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.analysis.DefaultMessageAnalyzerManager.getAnalyzer(java.lang.String,long):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int JarReport.hashCode()` reads without synchronization from container `this.m_domains` via call to `hashCode`. Potentially races with write in method `JarReport.findOrCreateDomain(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/jar/entity/JarReport.java","tnLine":103,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.jar.entity.JarReport.hashCode():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired to `in` by call to `new()` at line 88 is not released after line 108.\n**Note**: potential exception at line 92","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/resource/transform/DefaultSaxParser.java","tnLine":108,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.resource.transform.DefaultSaxParser.removeBOM(java.io.InputStream):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `DefaultNativeParser(...)` at line 28 is not released after line 41.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/service/client/transform/DefaultNativeParser.java","tnLine":41,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.service.client.transform.DefaultNativeParser.parse(java.io.ByteArrayInputStream):com.dianping.cat.home.service.client.entity.ClientReport","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `ServerConfigManager.m_config` last assigned on line 476 could be null and is dereferenced by call to `storeConfig()` at line 478.","tnFile":"cat-core/src/main/java/com/dianping/cat/config/server/ServerConfigManager.java","tnLine":478,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.config.server.ServerConfigManager.insert(java.lang.String):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `TransactionName TransactionType.findOrCreateName(String)` reads without synchronization from container `this.m_names` via call to `get`. Potentially races with write in method `TransactionType.addName(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/transaction/model/entity/TransactionType.java","tnLine":164,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.transaction.model.entity.TransactionType.findOrCreateName(java.lang.String):com.dianping.cat.consumer.transaction.model.entity.TransactionName","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `String MessageIdFactory.getNextId()` reads without synchronization from `this.m_idPrefix`. Potentially races with write in method `MessageIdFactory.getNextId(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-client/src/main/java/com/dianping/cat/message/internal/MessageIdFactory.java","tnLine":134,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.message.internal.MessageIdFactory.getNextId():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Segment DependencyReport.removeSegment(Integer)` mutates container `this.m_segments` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/dependency/model/entity/DependencyReport.java","tnLine":126,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.dependency.model.entity.DependencyReport.removeSegment(java.lang.Integer):com.dianping.cat.consumer.dependency.model.entity.Segment","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `serverConfig` last assigned on line 558 could be null and is dereferenced at line 559.","tnFile":"cat-core/src/main/java/com/dianping/cat/config/server/ServerConfigManager.java","tnLine":559,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.config.server.ServerConfigManager.refreshConfig():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `CustomInfo StatusInfo.findCustomInfo(String)` reads without synchronization from container `this.m_customInfos` via call to `get`. Potentially races with write in method `StatusInfo.findOrCreateCustomInfo(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-client/target/generated-sources/dal-model/com/dianping/cat/status/model/entity/StatusInfo.java","tnLine":95,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.status.model.entity.StatusInfo.findCustomInfo(java.lang.String):com.dianping.cat.status.model.entity.CustomInfo","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void LocalTransactionService$TransactionReportFilter.visitMachine(Machine)` indirectly writes to field `this.m_level` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/src/main/java/com/dianping/cat/report/page/transaction/service/LocalTransactionService.java","tnLine":155,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.page.transaction.service.LocalTransactionService$TransactionReportFilter.visitMachine(com.dianping.cat.consumer.transaction.model.entity.Machine):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `o1.getName().getId()` could be null and is dereferenced at line 272.","tnFile":"cat-home/src/main/java/com/dianping/cat/report/page/cache/CacheReport.java","tnLine":272,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.page.cache.CacheReport$CacheNameItemCompator.compare(com.dianping.cat.report.page.cache.CacheReport$CacheNameItem,com.dianping.cat.report.page.cache.CacheReport$CacheNameItem):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Service HeavySql.removeService(String)` mutates container `this.m_services` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/heavy/entity/HeavySql.java","tnLine":117,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.heavy.entity.HeavySql.removeService(java.lang.String):com.dianping.cat.home.heavy.entity.Service","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `UrlPattern UrlPattern.addCode(Code)` mutates container `this.m_codes` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-core/target/generated-sources/dal-model/com/dianping/cat/configuration/web/url/entity/UrlPattern.java","tnLine":23,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.configuration.web.url.entity.UrlPattern.addCode(com.dianping.cat.configuration.web.url.entity.Code):com.dianping.cat.configuration.web.url.entity.UrlPattern","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `ExecutorService Threads$ThreadPoolManager.getCachedThreadPool(String)` mutates container `this.m_services` via call to `remove` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"cat-client/src/main/java/com/dianping/cat/util/Threads.java","tnLine":461,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.util.Threads$ThreadPoolManager.getCachedThreadPool(java.lang.String):java.util.concurrent.ExecutorService","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `TpValueStatisticConfig TpValueStatisticConfig.addDomain(Domain)` mutates container `this.m_domains` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-core/target/generated-sources/dal-model/com/dianping/cat/configuration/tp/entity/TpValueStatisticConfig.java","tnLine":21,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.configuration.tp.entity.TpValueStatisticConfig.addDomain(com.dianping.cat.configuration.tp.entity.Domain):com.dianping.cat.configuration.tp.entity.TpValueStatisticConfig","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Sql Domain.findSql(String)` reads without synchronization from container `this.m_sqls` via call to `get`. Potentially races with write in method `Domain.findOrCreateSql(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/storage/model/entity/Domain.java","tnLine":61,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.storage.model.entity.Domain.findSql(java.lang.String):com.dianping.cat.consumer.storage.model.entity.Sql","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `BusinessItem BusinessReport.removeBusinessItem(String)` mutates container `this.m_businessItems` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/business/model/entity/BusinessReport.java","tnLine":113,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.business.model.entity.BusinessReport.removeBusinessItem(java.lang.String):com.dianping.cat.consumer.business.model.entity.BusinessItem","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `AllDuration TransactionName.findAllDuration(int)` reads without synchronization from container `this.m_allDurations` via call to `get`. Potentially races with write in method `TransactionName.findOrCreateAllDuration(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/transaction/model/entity/TransactionName.java","tnLine":120,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.transaction.model.entity.TransactionName.findAllDuration(int):com.dianping.cat.consumer.transaction.model.entity.AllDuration","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Bucket LocalBucketManager.getBucket(String,String,int,boolean)` reads without synchronization from container `map` via call to `get`. Potentially races with write in method `LocalBucketManager.getBucket(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-hadoop/src/main/java/org/unidal/cat/message/storage/local/LocalBucketManager.java","tnLine":120,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.unidal.cat.message.storage.local.LocalBucketManager.getBucket(java.lang.String,java.lang.String,int,boolean):org.unidal.cat.message.storage.Bucket","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `MessageTree LocalMessageBucket.findById(String)` indirectly writes to field `this.m_lastAccessTime` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-core/src/main/java/com/dianping/cat/message/storage/LocalMessageBucket.java","tnLine":80,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.message.storage.LocalMessageBucket.findById(java.lang.String):com.dianping.cat.message.spi.MessageTree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Segment BusinessItem.findOrCreateSegment(Integer)` reads without synchronization from container `this.m_segments` via call to `get`. Potentially races with write in method `BusinessItem.removeSegment(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/business/model/entity/BusinessItem.java","tnLine":56,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.business.model.entity.BusinessItem.findOrCreateSegment(java.lang.Integer):com.dianping.cat.consumer.business.model.entity.Segment","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Range2 Range2.addAllDuration(AllDuration)` mutates container `this.m_allDurations` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/transaction/model/entity/Range2.java","tnLine":56,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.transaction.model.entity.Range2.addAllDuration(com.dianping.cat.consumer.transaction.model.entity.AllDuration):com.dianping.cat.consumer.transaction.model.entity.Range2","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Graph TransactionName.findGraph(int)` reads without synchronization from container `this.m_graphs` via call to `get`. Potentially races with write in method `TransactionName.findOrCreateGraph(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/transaction/model/entity/TransactionName.java","tnLine":128,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.transaction.model.entity.TransactionName.findGraph(int):com.dianping.cat.consumer.transaction.model.entity.Graph","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Url HeavyCache.findUrl(String)` reads without synchronization from container `this.m_urls` via call to `get`. Potentially races with write in method `HeavyCache.findOrCreateUrl(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/heavy/entity/HeavyCache.java","tnLine":57,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.heavy.entity.HeavyCache.findUrl(java.lang.String):com.dianping.cat.home.heavy.entity.Url","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `DefaultNativeParser(...)` at line 33 is not released after line 39.\n**Note**: potential exception at line 37","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/problem/model/transform/DefaultNativeParser.java","tnLine":39,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.problem.model.transform.DefaultNativeParser.parse(java.io.ByteArrayInputStream):com.dianping.cat.consumer.problem.model.entity.ProblemReport","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `InputStreamReader(...)` at line 63 is not released after line 63.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/group/transform/DefaultJsonParser.java","tnLine":63,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.group.transform.DefaultJsonParser.parseArray(java.lang.Class,java.io.InputStream):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Machine Segment.removeMachine(String)` mutates container `this.m_machines` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/top/model/entity/Segment.java","tnLine":307,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.top.model.entity.Segment.removeMachine(java.lang.String):com.dianping.cat.consumer.top.model.entity.Machine","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `DefaultNativeParser(...)` at line 30 is not released after line 43.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/cross/model/transform/DefaultNativeParser.java","tnLine":43,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.cross.model.transform.DefaultNativeParser.parse(java.io.ByteArrayInputStream):com.dianping.cat.consumer.cross.model.entity.CrossReport","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired to `in` by call to `new()` at line 90 is not released after line 110.\n**Note**: potential exception at line 94","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/dependency/format/transform/DefaultSaxParser.java","tnLine":110,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.dependency.format.transform.DefaultSaxParser.removeBOM(java.io.InputStream):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `long LocalTokenMapping.getLastAccessTime()` reads without synchronization from `this.m_lastAccessTime`. Potentially races with write in method `LocalTokenMapping.map(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-hadoop/src/main/java/org/unidal/cat/message/storage/local/LocalTokenMapping.java","tnLine":110,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.unidal.cat.message.storage.local.LocalTokenMapping.getLastAccessTime():long","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `EventName EventType.removeName(String)` mutates container `this.m_names` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/event/model/entity/EventType.java","tnLine":163,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.event.model.entity.EventType.removeName(java.lang.String):com.dianping.cat.consumer.event.model.entity.EventName","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Message Machine.findOrCreateMessage(Long)` reads without synchronization from container `this.m_messages` via call to `get`. Potentially races with write in method `Machine.removeMessage(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/state/model/entity/Machine.java","tnLine":95,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.state.model.entity.Machine.findOrCreateMessage(java.lang.Long):com.dianping.cat.consumer.state.model.entity.Message","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Segment Segment.addIndex(Index)` mutates container `this.m_indexs` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/dependency/model/entity/Segment.java","tnLine":39,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.dependency.model.entity.Segment.addIndex(com.dianping.cat.consumer.dependency.model.entity.Index):com.dianping.cat.consumer.dependency.model.entity.Segment","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Url HeavySql.findUrl(String)` reads without synchronization from container `this.m_urls` via call to `get`. Potentially races with write in method `HeavySql.findOrCreateUrl(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/heavy/entity/HeavySql.java","tnLine":57,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.heavy.entity.HeavySql.findUrl(java.lang.String):com.dianping.cat.home.heavy.entity.Url","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `TransactionType Machine.findOrCreateType(String)` reads without synchronization from container `this.m_types` via call to `get`. Potentially races with write in method `Machine.findOrCreateType(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/transaction/model/entity/Machine.java","tnLine":54,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.transaction.model.entity.Machine.findOrCreateType(java.lang.String):com.dianping.cat.consumer.transaction.model.entity.TransactionType","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Segment Operation.removeSegment(int)` mutates container `this.m_segments` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/storage/model/entity/Operation.java","tnLine":173,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.storage.model.entity.Operation.removeSegment(int):com.dianping.cat.consumer.storage.model.entity.Segment","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Code UrlPattern.findOrCreateCode(Integer)` reads without synchronization from container `this.m_codes` via call to `get`. Potentially races with write in method `UrlPattern.findOrCreateCode(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-core/target/generated-sources/dal-model/com/dianping/cat/configuration/web/url/entity/UrlPattern.java","tnLine":61,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.configuration.web.url.entity.UrlPattern.findOrCreateCode(java.lang.Integer):com.dianping.cat.configuration.web.url.entity.Code","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `HeavyCache HeavyCache.addUrl(Url)` mutates container `this.m_urls` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/heavy/entity/HeavyCache.java","tnLine":28,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.heavy.entity.HeavyCache.addUrl(com.dianping.cat.home.heavy.entity.Url):com.dianping.cat.home.heavy.entity.HeavyCache","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Item Item.addSegment(Segment)` mutates container `this.m_segments` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/server/entity/Item.java","tnLine":30,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.server.entity.Item.addSegment(com.dianping.cat.home.server.entity.Segment):com.dianping.cat.home.server.entity.Item","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `StateReport StateAnalyzer.getReport(String)` indirectly reads without synchronization from container `stateReport.m_machines` via call to `get`. Potentially races with write in method `StateAnalyzer.doCheckpoint(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/src/main/java/com/dianping/cat/consumer/state/StateAnalyzer.java","tnLine":200,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.state.StateAnalyzer.getReport(java.lang.String):com.dianping.cat.consumer.state.model.entity.StateReport","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired to `in` by call to `new()` at line 103 is not released after line 123.\n**Note**: potential exception at line 107","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/storage/model/transform/DefaultSaxParser.java","tnLine":123,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.storage.model.transform.DefaultSaxParser.removeBOM(java.io.InputStream):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Matrix Matrix.addRatio(Ratio)` mutates container `this.m_ratios` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/matrix/model/entity/Matrix.java","tnLine":38,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.matrix.model.entity.Matrix.addRatio(com.dianping.cat.consumer.matrix.model.entity.Ratio):com.dianping.cat.consumer.matrix.model.entity.Matrix","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Message Machine.removeMessage(Long)` mutates container `this.m_messages` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/state/model/entity/Machine.java","tnLine":245,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.state.model.entity.Machine.removeMessage(java.lang.Long):com.dianping.cat.consumer.state.model.entity.Message","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `AllDuration TransactionType.findOrCreateAllDuration(int)` reads without synchronization from container `this.m_allDurations` via call to `get`. Potentially races with write in method `TransactionType.removeAllDuration(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/transaction/model/entity/TransactionType.java","tnLine":130,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.transaction.model.entity.TransactionType.findOrCreateAllDuration(int):com.dianping.cat.consumer.transaction.model.entity.AllDuration","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `TopologyGraphConfig TopologyGraphConfig.addNodeConfig(NodeConfig)` mutates container `this.m_nodeConfigs` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/dependency/config/entity/TopologyGraphConfig.java","tnLine":28,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.dependency.config.entity.TopologyGraphConfig.addNodeConfig(com.dianping.cat.home.dependency.config.entity.NodeConfig):com.dianping.cat.home.dependency.config.entity.TopologyGraphConfig","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `GroupServer ServerGroup.removeGroupServer(String)` mutates container `this.m_groupServers` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/router/entity/ServerGroup.java","tnLine":103,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.router.entity.ServerGroup.removeGroupServer(java.lang.String):com.dianping.cat.home.router.entity.GroupServer","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Range2 TransactionType.findRange2(int)` reads without synchronization from container `this.m_range2s` via call to `get`. Potentially races with write in method `TransactionType.findOrCreateRange2(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/transaction/model/entity/TransactionType.java","tnLine":126,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.transaction.model.entity.TransactionType.findRange2(int):com.dianping.cat.consumer.transaction.model.entity.Range2","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Duration TransactionName.findOrCreateDuration(int)` reads without synchronization from container `this.m_durations` via call to `get`. Potentially races with write in method `TransactionName.addDuration(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/transaction/model/entity/TransactionName.java","tnLine":157,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.transaction.model.entity.TransactionName.findOrCreateDuration(int):com.dianping.cat.consumer.transaction.model.entity.Duration","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void LocalTransactionService$TransactionReportFilter.visitName(TransactionName)` indirectly writes to field `this.m_level` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/src/main/java/com/dianping/cat/report/page/transaction/service/LocalTransactionService.java","tnLine":164,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.page.transaction.service.LocalTransactionService$TransactionReportFilter.visitName(com.dianping.cat.consumer.transaction.model.entity.TransactionName):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int TopologyGraphConfig.hashCode()` reads without synchronization from container `this.m_edgeConfigs` via call to `hashCode`. Potentially races with write in method `TopologyGraphConfig.findOrCreateEdgeConfig(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/dependency/config/entity/TopologyGraphConfig.java","tnLine":107,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.dependency.config.entity.TopologyGraphConfig.hashCode():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `ExceptionExclude ExceptionRuleConfig.findExceptionExclude(String)` reads without synchronization from container `this.m_exceptionExcludes` via call to `get`. Potentially races with write in method `ExceptionRuleConfig.findOrCreateExceptionExclude(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/exception/entity/ExceptionRuleConfig.java","tnLine":53,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.exception.entity.ExceptionRuleConfig.findExceptionExclude(java.lang.String):com.dianping.cat.home.exception.entity.ExceptionExclude","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `ServerGroup ServerGroup.addGroupServer(GroupServer)` mutates container `this.m_groupServers` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/router/entity/ServerGroup.java","tnLine":32,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.router.entity.ServerGroup.addGroupServer(com.dianping.cat.home.router.entity.GroupServer):com.dianping.cat.home.router.entity.ServerGroup","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int MonitorRules.hashCode()` reads without synchronization from container `this.m_rules` via call to `hashCode`. Potentially races with write in method `MonitorRules.findOrCreateRule(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-alarm/target/generated-sources/dal-model/com/dianping/cat/alarm/rule/entity/MonitorRules.java","tnLine":70,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.alarm.rule.entity.MonitorRules.hashCode():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `AllDuration Range2.findAllDuration(int)` reads without synchronization from container `this.m_allDurations` via call to `get`. Potentially races with write in method `Range2.findOrCreateAllDuration(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/transaction/model/entity/Range2.java","tnLine":76,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.transaction.model.entity.Range2.findAllDuration(int):com.dianping.cat.consumer.transaction.model.entity.AllDuration","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Machine EventReport.findMachine(String)` reads without synchronization from container `this.m_machines` via call to `get`. Potentially races with write in method `EventReport.findOrCreateMachine(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/event/model/entity/EventReport.java","tnLine":70,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.event.model.entity.EventReport.findMachine(java.lang.String):com.dianping.cat.consumer.event.model.entity.Machine","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void MessageIdFactory.initialize(String)` mutates container `this.m_map` via call to `put` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"cat-client/src/main/java/com/dianping/cat/message/internal/MessageIdFactory.java","tnLine":248,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.message.internal.MessageIdFactory.initialize(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Segment DependencyReport.findOrCreateSegment(Integer)` reads without synchronization from container `this.m_segments` via call to `get`. Potentially races with write in method `DependencyReport.addSegment(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/dependency/model/entity/DependencyReport.java","tnLine":67,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.dependency.model.entity.DependencyReport.findOrCreateSegment(java.lang.Integer):com.dianping.cat.consumer.dependency.model.entity.Segment","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `DomainConfig NodeConfig.removeDomainConfig(String)` mutates container `this.m_domainConfigs` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/dependency/config/entity/NodeConfig.java","tnLine":141,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.dependency.config.entity.NodeConfig.removeDomainConfig(java.lang.String):com.dianping.cat.home.dependency.config.entity.DomainConfig","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `DefaultNativeParser(...)` at line 34 is not released after line 40.\n**Note**: potential exception at line 38","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/router/transform/DefaultNativeParser.java","tnLine":40,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.router.transform.DefaultNativeParser.parse(java.io.ByteArrayInputStream):com.dianping.cat.home.router.entity.RouterConfig","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `EventReport EventReport.addMachine(Machine)` mutates container `this.m_machines` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/event/model/entity/EventReport.java","tnLine":50,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.event.model.entity.EventReport.addMachine(com.dianping.cat.consumer.event.model.entity.Machine):com.dianping.cat.consumer.event.model.entity.EventReport","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Item Group.findOrCreateItem(String)` reads without synchronization from container `this.m_items` via call to `get`. Potentially races with write in method `Group.removeItem(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/server/entity/Group.java","tnLine":54,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.server.entity.Group.findOrCreateItem(java.lang.String):com.dianping.cat.home.server.entity.Item","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `tmp` last assigned on line 107 could be null and is dereferenced at line 109.","tnFile":"cat-home/src/main/java/com/dianping/cat/report/page/heartbeat/service/LocalHeartbeatService.java","tnLine":109,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.page.heartbeat.service.LocalHeartbeatService.getReportFromLocalDisk(long,java.lang.String):com.dianping.cat.consumer.heartbeat.model.entity.HeartbeatReport","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void DefaultBlockDumperManager.close(int)` mutates container `this.m_map` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-hadoop/src/main/java/org/unidal/cat/message/storage/internals/DefaultBlockDumperManager.java","tnLine":42,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.unidal.cat.message.storage.internals.DefaultBlockDumperManager.close(int):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Domain ClientReport.findOrCreateDomain(String)` reads without synchronization from container `this.m_domains` via call to `get`. Potentially races with write in method `ClientReport.findOrCreateDomain(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/service/client/entity/ClientReport.java","tnLine":58,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.service.client.entity.ClientReport.findOrCreateDomain(java.lang.String):com.dianping.cat.home.service.client.entity.Domain","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired to `in` by call to `new()` at line 92 is not released after line 112.\n**Note**: potential exception at line 96","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/server/transform/DefaultSaxParser.java","tnLine":112,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.server.transform.DefaultSaxParser.removeBOM(java.io.InputStream):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `ExecutorService Threads$ThreadPoolManager.getFixedThreadPool(String,int)` mutates container `this.m_services` via call to `remove` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"cat-client/src/main/java/com/dianping/cat/util/Threads.java","tnLine":486,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.util.Threads$ThreadPoolManager.getFixedThreadPool(java.lang.String,int):java.util.concurrent.ExecutorService","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `HeartbeatDisplayPolicyManager.m_config` last assigned on line 95 could be null and is dereferenced by call to `storeConfig()` at line 97.","tnFile":"cat-home/src/main/java/com/dianping/cat/report/page/heartbeat/config/HeartbeatDisplayPolicyManager.java","tnLine":97,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.page.heartbeat.config.HeartbeatDisplayPolicyManager.insert(java.lang.String):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Machine Segment.findOrCreateMachine(String)` reads without synchronization from container `this.m_machines` via call to `get`. Potentially races with write in method `Segment.removeMachine(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/top/model/entity/Segment.java","tnLine":124,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.top.model.entity.Segment.findOrCreateMachine(java.lang.String):com.dianping.cat.consumer.top.model.entity.Machine","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired to `dataInput` by call to `new()` at line 72 is not released after line 79.\n**Note**: potential exception at line 77","tnFile":"cat-home/src/main/java/com/dianping/cat/report/page/metric/service/DefaultBaselineService.java","tnLine":79,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.page.metric.service.DefaultBaselineService.decodeBaselines(byte[]):double[]","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Category AlertSummary.removeCategory(String)` mutates container `this.m_categories` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/alert/summary/entity/AlertSummary.java","tnLine":109,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.alert.summary.entity.AlertSummary.removeCategory(java.lang.String):com.dianping.cat.home.alert.summary.entity.Category","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Receiver AlertConfig.findReceiver(String)` reads without synchronization from container `this.m_receivers` via call to `get`. Potentially races with write in method `AlertConfig.findOrCreateReceiver(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-alarm/target/generated-sources/dal-model/com/dianping/cat/alarm/receiver/entity/AlertConfig.java","tnLine":48,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.alarm.receiver.entity.AlertConfig.findReceiver(java.lang.String):com.dianping.cat.alarm.receiver.entity.Receiver","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `tmp` last assigned on line 194 could be null and is dereferenced at line 197.","tnFile":"cat-home/src/main/java/com/dianping/cat/report/page/problem/transform/ProblemTrendGraphBuilder.java","tnLine":197,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.page.problem.transform.ProblemTrendGraphBuilder$ProblemReportVisitor.resolveGraphTrend(com.dianping.cat.consumer.problem.model.entity.GraphTrend):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `report` last assigned on line 55 could be null and is dereferenced by call to `buildXml(...)` at line 75.","tnFile":"cat-home/src/main/java/com/dianping/cat/report/page/state/service/LocalStateService.java","tnLine":75,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.page.state.service.LocalStateService.buildReport(com.dianping.cat.report.service.ModelRequest,com.dianping.cat.report.service.ModelPeriod,java.lang.String,com.dianping.cat.mvc.ApiPayload):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Entry Entry.addDuration(Duration)` mutates container `this.m_durations` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/problem/model/entity/Entry.java","tnLine":27,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.problem.model.entity.Entry.addDuration(com.dianping.cat.consumer.problem.model.entity.Duration):com.dianping.cat.consumer.problem.model.entity.Entry","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `SenderConfigManager.m_senderConfig` last assigned on line 90 could be null and is dereferenced by call to `storeConfig()` at line 92.","tnFile":"cat-alarm/src/main/java/com/dianping/cat/alarm/spi/config/SenderConfigManager.java","tnLine":92,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.alarm.spi.config.SenderConfigManager.insert(java.lang.String):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired to `in` by call to `new()` at line 92 is not released after line 112.\n**Note**: potential exception at line 96","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/jar/transform/DefaultSaxParser.java","tnLine":112,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.jar.transform.DefaultSaxParser.removeBOM(java.io.InputStream):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `InputStreamReader(...)` at line 80 is not released after line 80.","tnFile":"cat-alarm/target/generated-sources/dal-model/com/dianping/cat/alarm/rule/transform/DefaultJsonParser.java","tnLine":80,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.alarm.rule.transform.DefaultJsonParser.parseArray(java.lang.Class,java.io.InputStream):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `tmp` last assigned on line 107 could be null and is dereferenced at line 109.","tnFile":"cat-home/src/main/java/com/dianping/cat/report/page/transaction/service/LocalTransactionService.java","tnLine":109,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.page.transaction.service.LocalTransactionService.getReportFromLocalDisk(long,java.lang.String):com.dianping.cat.consumer.transaction.model.entity.TransactionReport","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `AllDuration TransactionName.removeAllDuration(int)` mutates container `this.m_allDurations` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/transaction/model/entity/TransactionName.java","tnLine":401,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.transaction.model.entity.TransactionName.removeAllDuration(int):com.dianping.cat.consumer.transaction.model.entity.AllDuration","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `EventType Machine.removeType(String)` mutates container `this.m_types` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/event/model/entity/Machine.java","tnLine":94,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.event.model.entity.Machine.removeType(java.lang.String):com.dianping.cat.consumer.event.model.entity.EventType","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `AlertSummary AlertSummary.addCategory(Category)` mutates container `this.m_categories` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/alert/summary/entity/AlertSummary.java","tnLine":25,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.alert.summary.entity.AlertSummary.addCategory(com.dianping.cat.home.alert.summary.entity.Category):com.dianping.cat.home.alert.summary.entity.AlertSummary","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `ExceptionExclude ExceptionRuleConfig.findOrCreateExceptionExclude(String)` reads without synchronization from container `this.m_exceptionExcludes` via call to `get`. Potentially races with write in method `ExceptionRuleConfig.addExceptionExclude(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/exception/entity/ExceptionRuleConfig.java","tnLine":61,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.exception.entity.ExceptionRuleConfig.findOrCreateExceptionExclude(java.lang.String):com.dianping.cat.home.exception.entity.ExceptionExclude","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void MessageIdFactory.initialize(String)` indirectly reads with synchronization from `this.m_byteBuffer`. Potentially races with unsynchronized write in method `MessageIdFactory.initialize(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-client/src/main/java/com/dianping/cat/message/internal/MessageIdFactory.java","tnLine":221,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.message.internal.MessageIdFactory.initialize(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Index Segment.removeIndex(String)` mutates container `this.m_indexs` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/dependency/model/entity/Segment.java","tnLine":139,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.dependency.model.entity.Segment.removeIndex(java.lang.String):com.dianping.cat.consumer.dependency.model.entity.Index","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Range2 TransactionType.removeRange2(int)` mutates container `this.m_range2s` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/transaction/model/entity/TransactionType.java","tnLine":388,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.transaction.model.entity.TransactionType.removeRange2(int):com.dianping.cat.consumer.transaction.model.entity.Range2","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Detail ProcessDomain.findOrCreateDetail(Long)` reads without synchronization from container `this.m_details` via call to `get`. Potentially races with write in method `ProcessDomain.addDetail(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/state/model/entity/ProcessDomain.java","tnLine":71,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.state.model.entity.ProcessDomain.findOrCreateDetail(java.lang.Long):com.dianping.cat.consumer.state.model.entity.Detail","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Segment Item.findSegment(String)` reads without synchronization from container `this.m_segments` via call to `get`. Potentially races with write in method `Item.findOrCreateSegment(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/server/entity/Item.java","tnLine":50,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.server.entity.Item.findSegment(java.lang.String):com.dianping.cat.home.server.entity.Segment","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `StatusCode EventName.removeStatusCode(String)` mutates container `this.m_statusCodes` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/event/model/entity/EventName.java","tnLine":207,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.event.model.entity.EventName.removeStatusCode(java.lang.String):com.dianping.cat.consumer.event.model.entity.StatusCode","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `report` last assigned on line 55 could be null and is dereferenced by call to `buildXml(...)` at line 71.","tnFile":"cat-home/src/main/java/com/dianping/cat/report/page/cross/service/LocalCrossService.java","tnLine":71,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.page.cross.service.LocalCrossService.buildReport(com.dianping.cat.report.service.ModelRequest,com.dianping.cat.report.service.ModelPeriod,java.lang.String,com.dianping.cat.mvc.ApiPayload):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `String LocalTokenMapping.find(int)` reads without synchronization from container `this.m_tokens` via call to `size`. Potentially races with write in method `LocalTokenMapping.map(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-hadoop/src/main/java/org/unidal/cat/message/storage/local/LocalTokenMapping.java","tnLine":89,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.unidal.cat.message.storage.local.LocalTokenMapping.find(int):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Dependency Segment.findDependency(String)` reads without synchronization from container `this.m_dependencies` via call to `get`. Potentially races with write in method `Segment.findOrCreateDependency(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/dependency/model/entity/Segment.java","tnLine":59,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.dependency.model.entity.Segment.findDependency(java.lang.String):com.dianping.cat.consumer.dependency.model.entity.Dependency","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired to `in` by call to `new()` at line 113 is not released after line 133.\n**Note**: potential exception at line 117","tnFile":"cat-client/target/generated-sources/dal-model/com/dianping/cat/status/model/transform/DefaultSaxParser.java","tnLine":133,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.status.model.transform.DefaultSaxParser.removeBOM(java.io.InputStream):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `ServerFilterConfigManager.m_config` last assigned on line 146 could be null and is dereferenced by call to `storeConfig()` at line 148.","tnFile":"cat-core/src/main/java/com/dianping/cat/config/server/ServerFilterConfigManager.java","tnLine":148,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.config.server.ServerFilterConfigManager.insert(java.lang.String):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `info` last assigned on line 57 could be null and is dereferenced at line 58.","tnFile":"cat-consumer/src/main/java/com/dianping/cat/consumer/heartbeat/HeartbeatAnalyzer.java","tnLine":58,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.heartbeat.HeartbeatAnalyzer.buildHeartBeatInfo(com.dianping.cat.consumer.heartbeat.model.entity.Machine,com.dianping.cat.message.Heartbeat,long):com.dianping.cat.consumer.heartbeat.model.entity.Period","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired to `in` by call to `new()` at line 88 is not released after line 108.\n**Note**: potential exception at line 92","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/user/transform/DefaultSaxParser.java","tnLine":108,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.user.transform.DefaultSaxParser.removeBOM(java.io.InputStream):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `ByteBuf DefaultBlock.unpack(MessageId)` reads without synchronization from container `this.m_offsets` via call to `get`. Potentially races with write in method `DefaultBlock.pack(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-hadoop/src/main/java/org/unidal/cat/message/storage/internals/DefaultBlock.java","tnLine":194,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.unidal.cat.message.storage.internals.DefaultBlock.unpack(com.dianping.cat.message.internal.MessageId):io.netty.buffer.ByteBuf","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int StatusInfo.hashCode()` reads without synchronization from container `this.m_extensions` via call to `hashCode`. Potentially races with write in method `StatusInfo.findOrCreateExtension(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-client/target/generated-sources/dal-model/com/dianping/cat/status/model/entity/StatusInfo.java","tnLine":183,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.status.model.entity.StatusInfo.hashCode():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired to `in` by call to `new()` at line 90 is not released after line 110.\n**Note**: potential exception at line 94","tnFile":"cat-alarm/target/generated-sources/dal-model/com/dianping/cat/alarm/sender/transform/DefaultSaxParser.java","tnLine":110,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.alarm.sender.transform.DefaultSaxParser.removeBOM(java.io.InputStream):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `NodeConfig TopologyGraphConfig.findOrCreateNodeConfig(String)` reads without synchronization from container `this.m_nodeConfigs` via call to `get`. Potentially races with write in method `TopologyGraphConfig.addNodeConfig(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/dependency/config/entity/TopologyGraphConfig.java","tnLine":78,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.dependency.config.entity.TopologyGraphConfig.findOrCreateNodeConfig(java.lang.String):com.dianping.cat.home.dependency.config.entity.NodeConfig","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Group ServerMetricConfig.findGroup(String)` reads without synchronization from container `this.m_groups` via call to `get`. Potentially races with write in method `ServerMetricConfig.findOrCreateGroup(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/server/entity/ServerMetricConfig.java","tnLine":42,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.server.entity.ServerMetricConfig.findGroup(java.lang.String):com.dianping.cat.home.server.entity.Group","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Group Type.removeGroup(String)` mutates container `this.m_groups` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-alarm/target/generated-sources/dal-model/com/dianping/cat/alarm/policy/entity/Type.java","tnLine":94,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.alarm.policy.entity.Type.removeGroup(java.lang.String):com.dianping.cat.alarm.policy.entity.Group","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `String LocalReportBucket.findById(String)` reads without synchronization from `this.m_readLock`. Potentially races with write in method `LocalReportBucket.initialize(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-core/src/main/java/com/dianping/cat/report/LocalReportBucket.java","tnLine":104,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.LocalReportBucket.findById(java.lang.String):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Url HeavySql.removeUrl(String)` mutates container `this.m_urls` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/heavy/entity/HeavySql.java","tnLine":121,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.heavy.entity.HeavySql.removeUrl(java.lang.String):com.dianping.cat.home.heavy.entity.Url","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `EventName EventType.findName(String)` reads without synchronization from container `this.m_names` via call to `get`. Potentially races with write in method `EventType.findOrCreateName(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/event/model/entity/EventType.java","tnLine":64,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.event.model.entity.EventType.findName(java.lang.String):com.dianping.cat.consumer.event.model.entity.EventName","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Detail Extension.findDetail(String)` reads without synchronization from container `this.m_details` via call to `get`. Potentially races with write in method `Extension.findOrCreateDetail(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/heartbeat/model/entity/Extension.java","tnLine":50,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.heartbeat.model.entity.Extension.findDetail(java.lang.String):com.dianping.cat.consumer.heartbeat.model.entity.Detail","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `ExtensionDetail Extension.findOrCreateExtensionDetail(String)` reads without synchronization from container `this.m_details` via call to `get`. Potentially races with write in method `Extension.addExtensionDetail(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-client/target/generated-sources/dal-model/com/dianping/cat/status/model/entity/Extension.java","tnLine":58,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.status.model.entity.Extension.findOrCreateExtensionDetail(java.lang.String):com.dianping.cat.status.model.entity.ExtensionDetail","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Domain Machine.removeDomain(String)` mutates container `this.m_domains` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/storage/model/entity/Machine.java","tnLine":94,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.storage.model.entity.Machine.removeDomain(java.lang.String):com.dianping.cat.consumer.storage.model.entity.Domain","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Machine TransactionReport.removeMachine(String)` mutates container `this.m_machines` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/transaction/model/entity/TransactionReport.java","tnLine":137,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.transaction.model.entity.TransactionReport.removeMachine(java.lang.String):com.dianping.cat.consumer.transaction.model.entity.Machine","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int ExceptionRuleConfig.hashCode()` reads without synchronization from container `this.m_exceptionLimits` via call to `hashCode`. Potentially races with write in method `ExceptionRuleConfig.findOrCreateExceptionLimit(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/exception/entity/ExceptionRuleConfig.java","tnLine":106,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.exception.entity.ExceptionRuleConfig.hashCode():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `DefaultNativeParser(...)` at line 28 is not released after line 34.\n**Note**: potential exception at line 32","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/dependency/graph/transform/DefaultNativeParser.java","tnLine":34,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.dependency.graph.transform.DefaultNativeParser.parse(java.io.ByteArrayInputStream):com.dianping.cat.home.dependency.graph.entity.TopologyGraph","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `String LocalTokenMapping.find(int)` writes to field `this.m_lastAccessTime` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-hadoop/src/main/java/org/unidal/cat/message/storage/local/LocalTokenMapping.java","tnLine":92,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.unidal.cat.message.storage.local.LocalTokenMapping.find(int):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int AlertConfig.hashCode()` reads without synchronization from container `this.m_receivers` via call to `hashCode`. Potentially races with write in method `AlertConfig.findOrCreateReceiver(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-alarm/target/generated-sources/dal-model/com/dianping/cat/alarm/receiver/entity/AlertConfig.java","tnLine":80,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.alarm.receiver.entity.AlertConfig.hashCode():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Machine ProblemReport.findOrCreateMachine(String)` reads without synchronization from container `this.m_machines` via call to `get`. Potentially races with write in method `ProblemReport.addMachine(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/problem/model/entity/ProblemReport.java","tnLine":74,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.problem.model.entity.ProblemReport.findOrCreateMachine(java.lang.String):com.dianping.cat.consumer.problem.model.entity.Machine","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `HeavySql HeavySql.addUrl(Url)` mutates container `this.m_urls` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/heavy/entity/HeavySql.java","tnLine":28,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.heavy.entity.HeavySql.addUrl(com.dianping.cat.home.heavy.entity.Url):com.dianping.cat.home.heavy.entity.HeavySql","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Entry Entry.addThread(JavaThread)` mutates container `this.m_threads` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/problem/model/entity/Entry.java","tnLine":32,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.problem.model.entity.Entry.addThread(com.dianping.cat.consumer.problem.model.entity.JavaThread):com.dianping.cat.consumer.problem.model.entity.Entry","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `DefaultNativeParser(...)` at line 39 is not released after line 45.\n**Note**: potential exception at line 43","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/transaction/model/transform/DefaultNativeParser.java","tnLine":45,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.transaction.model.transform.DefaultNativeParser.parse(java.io.ByteArrayInputStream):com.dianping.cat.consumer.transaction.model.entity.TransactionReport","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `StateReport StateReport.addMachine(Machine)` mutates container `this.m_machines` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/state/model/entity/StateReport.java","tnLine":34,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.state.model.entity.StateReport.addMachine(com.dianping.cat.consumer.state.model.entity.Machine):com.dianping.cat.consumer.state.model.entity.StateReport","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `JarReport JarReport.addDomain(Domain)` mutates container `this.m_domains` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/jar/entity/JarReport.java","tnLine":27,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.jar.entity.JarReport.addDomain(com.dianping.cat.home.jar.entity.Domain):com.dianping.cat.home.jar.entity.JarReport","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Domain JarReport.findOrCreateDomain(String)` reads without synchronization from container `this.m_domains` via call to `get`. Potentially races with write in method `JarReport.addDomain(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/jar/entity/JarReport.java","tnLine":64,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.jar.entity.JarReport.findOrCreateDomain(java.lang.String):com.dianping.cat.home.jar.entity.Domain","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void MessageIdFactory.initialize(String)` writes to field `this.m_markFile` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"cat-client/src/main/java/com/dianping/cat/message/internal/MessageIdFactory.java","tnLine":225,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.message.internal.MessageIdFactory.initialize(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Local CrossReport.removeLocal(String)` mutates container `this.m_locals` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/cross/model/entity/CrossReport.java","tnLine":137,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.cross.model.entity.CrossReport.removeLocal(java.lang.String):com.dianping.cat.consumer.cross.model.entity.Local","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `TopologyNode TopologyGraph.findTopologyNode(String)` reads without synchronization from container `this.m_nodes` via call to `get`. Potentially races with write in method `TopologyGraph.findOrCreateTopologyNode(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/dependency/graph/entity/TopologyGraph.java","tnLine":81,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.dependency.graph.entity.TopologyGraph.findTopologyNode(java.lang.String):com.dianping.cat.home.dependency.graph.entity.TopologyNode","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Operation Operation.addSegment(Segment)` mutates container `this.m_segments` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/storage/model/entity/Operation.java","tnLine":40,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.storage.model.entity.Operation.addSegment(com.dianping.cat.consumer.storage.model.entity.Segment):com.dianping.cat.consumer.storage.model.entity.Operation","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `PatternItem UrlPattern.removePatternItem(String)` mutates container `this.m_patternItems` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-core/target/generated-sources/dal-model/com/dianping/cat/configuration/web/url/entity/UrlPattern.java","tnLine":121,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.configuration.web.url.entity.UrlPattern.removePatternItem(java.lang.String):com.dianping.cat.configuration.web.url.entity.PatternItem","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired to `in` by call to `new()` at line 105 is not released after line 125.\n**Note**: potential exception at line 109","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/event/model/transform/DefaultSaxParser.java","tnLine":125,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.event.model.transform.DefaultSaxParser.removeBOM(java.io.InputStream):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean DefaultBlock.isFull()` reads without synchronization from `this.m_offset`. Potentially races with write in method `DefaultBlock.pack(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-hadoop/src/main/java/org/unidal/cat/message/storage/internals/DefaultBlock.java","tnLine":171,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.unidal.cat.message.storage.internals.DefaultBlock.isFull():boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Extension Extension.addExtensionDetail(ExtensionDetail)` mutates container `this.m_details` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-client/target/generated-sources/dal-model/com/dianping/cat/status/model/entity/Extension.java","tnLine":34,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.status.model.entity.Extension.addExtensionDetail(com.dianping.cat.status.model.entity.ExtensionDetail):com.dianping.cat.status.model.entity.Extension","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `source` last assigned on line 136 could be null and is dereferenced at line 151.","tnFile":"cat-consumer/src/main/java/com/dianping/cat/consumer/problem/ProblemReportMerger.java","tnLine":151,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.problem.ProblemReportMerger.mergeIntegerValue(java.lang.String,java.lang.String):java.lang.Integer[]","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `config` last assigned on line 571 could be null and is dereferenced at line 572.","tnFile":"cat-core/src/main/java/com/dianping/cat/config/server/ServerConfigManager.java","tnLine":572,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.config.server.ServerConfigManager.refreshServer():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `EventName EventName.addRange(Range)` mutates container `this.m_ranges` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/event/model/entity/EventName.java","tnLine":48,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.event.model.entity.EventName.addRange(com.dianping.cat.consumer.event.model.entity.Range):com.dianping.cat.consumer.event.model.entity.EventName","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Machine EventReport.removeMachine(String)` mutates container `this.m_machines` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/event/model/entity/EventReport.java","tnLine":137,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.event.model.entity.EventReport.removeMachine(java.lang.String):com.dianping.cat.consumer.event.model.entity.Machine","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `report` last assigned on line 56 could be null and is dereferenced by call to `buildXml(...)` at line 78.","tnFile":"cat-home/src/main/java/com/dianping/cat/report/page/business/service/LocalBusinessService.java","tnLine":78,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.page.business.service.LocalBusinessService.buildReport(com.dianping.cat.report.service.ModelRequest,com.dianping.cat.report.service.ModelPeriod,java.lang.String,com.dianping.cat.mvc.ApiPayload):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int HeavyCache.hashCode()` reads without synchronization from container `this.m_urls` via call to `hashCode`. Potentially races with write in method `HeavyCache.findOrCreateUrl(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/heavy/entity/HeavyCache.java","tnLine":106,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.heavy.entity.HeavyCache.hashCode():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Network NetworkPolicy.findOrCreateNetwork(String)` reads without synchronization from container `this.m_networks` via call to `get`. Potentially races with write in method `NetworkPolicy.addNetwork(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/router/entity/NetworkPolicy.java","tnLine":60,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.router.entity.NetworkPolicy.findOrCreateNetwork(java.lang.String):com.dianping.cat.home.router.entity.Network","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Machine Segment.findMachine(String)` reads without synchronization from container `this.m_machines` via call to `get`. Potentially races with write in method `Segment.findOrCreateMachine(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/top/model/entity/Segment.java","tnLine":103,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.top.model.entity.Segment.findMachine(java.lang.String):com.dianping.cat.consumer.top.model.entity.Machine","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired to `in` by call to `new()` at line 92 is not released after line 112.\n**Note**: potential exception at line 96","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/dependency/config/transform/DefaultSaxParser.java","tnLine":112,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.dependency.config.transform.DefaultSaxParser.removeBOM(java.io.InputStream):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `tmp` last assigned on line 92 could be null and is dereferenced at line 94.","tnFile":"cat-home/src/main/java/com/dianping/cat/report/page/state/service/LocalStateService.java","tnLine":94,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.page.state.service.LocalStateService.getReportFromLocalDisk(long,java.lang.String):com.dianping.cat.consumer.state.model.entity.StateReport","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `EdgeConfig TopologyGraphConfig.findOrCreateEdgeConfig(String)` reads without synchronization from container `this.m_edgeConfigs` via call to `get`. Potentially races with write in method `TopologyGraphConfig.addEdgeConfig(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/dependency/config/entity/TopologyGraphConfig.java","tnLine":61,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.dependency.config.entity.TopologyGraphConfig.findOrCreateEdgeConfig(java.lang.String):com.dianping.cat.home.dependency.config.entity.EdgeConfig","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `ExceptionLimit ExceptionRuleConfig.findOrCreateExceptionLimit(String)` reads without synchronization from container `this.m_exceptionLimits` via call to `get`. Potentially races with write in method `ExceptionRuleConfig.addExceptionLimit(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/exception/entity/ExceptionRuleConfig.java","tnLine":78,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.exception.entity.ExceptionRuleConfig.findOrCreateExceptionLimit(java.lang.String):com.dianping.cat.home.exception.entity.ExceptionLimit","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `new()` at line 167 is not released after line 186.\n**Note**: potential exception at line 173","tnFile":"cat-core/src/main/java/com/dianping/cat/service/IpService.java","tnLine":186,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.service.IpService.initAreaMap(java.io.InputStream):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void LocalReportBucket.flush()` reads without synchronization from `this.m_writeLock`. Potentially races with write in method `LocalReportBucket.initialize(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-core/src/main/java/com/dianping/cat/report/LocalReportBucket.java","tnLine":127,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.LocalReportBucket.flush():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `BusinessTagConfigManager.m_tagConfig` last assigned on line 119 could be null and is dereferenced by call to `storeConfig()` at line 121.","tnFile":"cat-home/src/main/java/com/dianping/cat/system/page/business/config/BusinessTagConfigManager.java","tnLine":121,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.system.page.business.config.BusinessTagConfigManager.store(java.lang.String):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `ExceptionExclude ExceptionRuleConfig.removeExceptionExclude(String)` mutates container `this.m_exceptionExcludes` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/exception/entity/ExceptionRuleConfig.java","tnLine":117,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.exception.entity.ExceptionRuleConfig.removeExceptionExclude(java.lang.String):com.dianping.cat.home.exception.entity.ExceptionExclude","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void DefaultReportManager.storeHourlyReports(long,DefaultReportManager$StoragePolicy,int)` indirectly reads without synchronization from container `this.m_reports` via call to `keySet`. Potentially races with write in method `DefaultReportManager.getHourlyReport(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-core/src/main/java/com/dianping/cat/report/DefaultReportManager.java","tnLine":348,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.DefaultReportManager.storeHourlyReports(long,com.dianping.cat.report.DefaultReportManager$StoragePolicy,int):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void DefaultBlock.clear()` mutates container `this.m_offsets` via call to `clear` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-hadoop/src/main/java/org/unidal/cat/message/storage/internals/DefaultBlock.java","tnLine":74,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.unidal.cat.message.storage.internals.DefaultBlock.clear():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `TransactionName TransactionName.addAllDuration(AllDuration)` mutates container `this.m_allDurations` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/transaction/model/entity/TransactionName.java","tnLine":80,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.transaction.model.entity.TransactionName.addAllDuration(com.dianping.cat.consumer.transaction.model.entity.AllDuration):com.dianping.cat.consumer.transaction.model.entity.TransactionName","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Graph TransactionName.findOrCreateGraph(int)` reads without synchronization from container `this.m_graphs` via call to `get`. Potentially races with write in method `TransactionName.addGraph(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/transaction/model/entity/TransactionName.java","tnLine":174,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.transaction.model.entity.TransactionName.findOrCreateGraph(int):com.dianping.cat.consumer.transaction.model.entity.Graph","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired to `in` by call to `new()` at line 90 is not released after line 110.\n**Note**: potential exception at line 94","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/business/transform/DefaultSaxParser.java","tnLine":110,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.business.transform.DefaultSaxParser.removeBOM(java.io.InputStream):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired to `in` by call to `new()` at line 95 is not released after line 115.\n**Note**: potential exception at line 99","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/dependency/model/transform/DefaultSaxParser.java","tnLine":115,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.dependency.model.transform.DefaultSaxParser.removeBOM(java.io.InputStream):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Segment Domain.findSegment(Integer)` reads without synchronization from container `this.m_segments` via call to `get`. Potentially races with write in method `Domain.findOrCreateSegment(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/top/model/entity/Domain.java","tnLine":50,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.top.model.entity.Domain.findSegment(java.lang.Integer):com.dianping.cat.consumer.top.model.entity.Segment","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Machine StorageReport.findOrCreateMachine(String)` reads without synchronization from container `this.m_machines` via call to `get`. Potentially races with write in method `StorageReport.addMachine(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/storage/model/entity/StorageReport.java","tnLine":85,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.storage.model.entity.StorageReport.findOrCreateMachine(java.lang.String):com.dianping.cat.consumer.storage.model.entity.Machine","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `UrlPattern UrlPattern.addPatternItem(PatternItem)` mutates container `this.m_patternItems` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-core/target/generated-sources/dal-model/com/dianping/cat/configuration/web/url/entity/UrlPattern.java","tnLine":28,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.configuration.web.url.entity.UrlPattern.addPatternItem(com.dianping.cat.configuration.web.url.entity.PatternItem):com.dianping.cat.configuration.web.url.entity.UrlPattern","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Url HeavyCall.findOrCreateUrl(String)` reads without synchronization from container `this.m_urls` via call to `get`. Potentially races with write in method `HeavyCall.removeUrl(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/heavy/entity/HeavyCall.java","tnLine":78,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.heavy.entity.HeavyCall.findOrCreateUrl(java.lang.String):com.dianping.cat.home.heavy.entity.Url","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `GroupServer ServerGroup.findGroupServer(String)` reads without synchronization from container `this.m_groupServers` via call to `get`. Potentially races with write in method `ServerGroup.findOrCreateGroupServer(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/router/entity/ServerGroup.java","tnLine":52,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.router.entity.ServerGroup.findGroupServer(java.lang.String):com.dianping.cat.home.router.entity.GroupServer","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Machine Storage.findOrCreateMachine(String)` reads without synchronization from container `this.m_machines` via call to `get`. Potentially races with write in method `Storage.addMachine(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/storage/alert/entity/Storage.java","tnLine":58,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.storage.alert.entity.Storage.findOrCreateMachine(java.lang.String):com.dianping.cat.home.storage.alert.entity.Machine","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Extension Period.findExtension(String)` reads without synchronization from container `this.m_extensions` via call to `get`. Potentially races with write in method `Period.findOrCreateExtension(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/heartbeat/model/entity/Period.java","tnLine":103,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.heartbeat.model.entity.Period.findExtension(java.lang.String):com.dianping.cat.consumer.heartbeat.model.entity.Extension","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int HeavyCall.hashCode()` reads without synchronization from container `this.m_services` via call to `hashCode`. Potentially races with write in method `HeavyCall.findOrCreateService(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/heavy/entity/HeavyCall.java","tnLine":107,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.heavy.entity.HeavyCall.hashCode():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Duration Entity.findOrCreateDuration(int)` reads without synchronization from container `this.m_durations` via call to `get`. Potentially races with write in method `Entity.addDuration(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/problem/model/entity/Entity.java","tnLine":71,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.problem.model.entity.Entity.findOrCreateDuration(int):com.dianping.cat.consumer.problem.model.entity.Duration","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int HeavySql.hashCode()` reads without synchronization from container `this.m_services` via call to `hashCode`. Potentially races with write in method `HeavySql.findOrCreateService(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/heavy/entity/HeavySql.java","tnLine":107,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.heavy.entity.HeavySql.hashCode():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `UserConfigManager.m_config` last assigned on line 131 could be null and is dereferenced by call to `storeConfig()` at line 133.","tnFile":"cat-home/src/main/java/com/dianping/cat/system/page/permission/UserConfigManager.java","tnLine":133,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.system.page.permission.UserConfigManager.insert(java.lang.String):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired to `in` by call to `new()` at line 98 is not released after line 118.\n**Note**: potential exception at line 102","tnFile":"cat-client/target/generated-sources/dal-model/com/dianping/cat/configuration/client/transform/DefaultSaxParser.java","tnLine":118,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.configuration.client.transform.DefaultSaxParser.removeBOM(java.io.InputStream):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Bucket LocalBucketManager.getBucket(String,String,int,boolean)` indirectly reads without synchronization from container `this.m_buckets` via call to `get`. Potentially races with write in method `LocalBucketManager.getBucket(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-hadoop/src/main/java/org/unidal/cat/message/storage/local/LocalBucketManager.java","tnLine":119,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.unidal.cat.message.storage.local.LocalBucketManager.getBucket(java.lang.String,java.lang.String,int,boolean):org.unidal.cat.message.storage.Bucket","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Extension StatusInfo.findExtension(String)` reads without synchronization from container `this.m_extensions` via call to `get`. Potentially races with write in method `StatusInfo.findOrCreateExtension(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-client/target/generated-sources/dal-model/com/dianping/cat/status/model/entity/StatusInfo.java","tnLine":99,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.status.model.entity.StatusInfo.findExtension(java.lang.String):com.dianping.cat.status.model.entity.Extension","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `DefaultNativeParser(...)` at line 31 is not released after line 44.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/storage/model/transform/DefaultNativeParser.java","tnLine":44,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.storage.model.transform.DefaultNativeParser.parse(java.io.ByteArrayInputStream):com.dianping.cat.consumer.storage.model.entity.StorageReport","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `NetworkPolicy RouterConfig.findOrCreateNetworkPolicy(String)` reads without synchronization from container `this.m_networkPolicies` via call to `get`. Potentially races with write in method `RouterConfig.addNetworkPolicy(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/router/entity/RouterConfig.java","tnLine":112,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.router.entity.RouterConfig.findOrCreateNetworkPolicy(java.lang.String):com.dianping.cat.home.router.entity.NetworkPolicy","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int LocalTokenMapping.map(String)` reads without synchronization from container `this.m_map` via call to `get`. Potentially races with write in method `LocalTokenMapping.open(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-hadoop/src/main/java/org/unidal/cat/message/storage/local/LocalTokenMapping.java","tnLine":140,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.unidal.cat.message.storage.local.LocalTokenMapping.map(java.lang.String):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired to `in` by call to `new()` at line 90 is not released after line 110.\n**Note**: potential exception at line 94","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/graph/transform/DefaultSaxParser.java","tnLine":110,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.graph.transform.DefaultSaxParser.removeBOM(java.io.InputStream):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `EdgeConfig TopologyGraphConfig.findEdgeConfig(String)` reads without synchronization from container `this.m_edgeConfigs` via call to `get`. Potentially races with write in method `TopologyGraphConfig.findOrCreateEdgeConfig(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/dependency/config/entity/TopologyGraphConfig.java","tnLine":53,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.dependency.config.entity.TopologyGraphConfig.findEdgeConfig(java.lang.String):com.dianping.cat.home.dependency.config.entity.EdgeConfig","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `DefaultNativeParser(...)` at line 31 is not released after line 44.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/heavy/transform/DefaultNativeParser.java","tnLine":44,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.heavy.transform.DefaultNativeParser.parse(java.io.ByteArrayInputStream):com.dianping.cat.home.heavy.entity.HeavyReport","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Operation Machine.removeOperation(String)` mutates container `this.m_operations` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/storage/alert/entity/Machine.java","tnLine":119,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.storage.alert.entity.Machine.removeOperation(java.lang.String):com.dianping.cat.home.storage.alert.entity.Operation","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int TopologyGraph.hashCode()` reads without synchronization from container `this.m_edges` via call to `hashCode`. Potentially races with write in method `TopologyGraph.findOrCreateTopologyEdge(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/dependency/graph/entity/TopologyGraph.java","tnLine":151,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.dependency.graph.entity.TopologyGraph.hashCode():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Machine Machine.addEntity(Entity)` mutates container `this.m_entities` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/problem/model/entity/Machine.java","tnLine":34,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.problem.model.entity.Machine.addEntity(com.dianping.cat.consumer.problem.model.entity.Entity):com.dianping.cat.consumer.problem.model.entity.Machine","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void DefaultMessageFinderManager.register(int,MessageFinder)` reads without synchronization from container `this.m_map` via call to `get`. Potentially races with write in method `DefaultMessageFinderManager.close(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-hadoop/src/main/java/org/unidal/cat/message/storage/internals/DefaultMessageFinderManager.java","tnLine":63,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.unidal.cat.message.storage.internals.DefaultMessageFinderManager.register(int,org.unidal.cat.message.storage.MessageFinder):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void LocalMessageBucket.initialize(String,Date)` indirectly writes to field `this.m_block` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-core/src/main/java/com/dianping/cat/message/storage/LocalMessageBucket.java","tnLine":179,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.message.storage.LocalMessageBucket.initialize(java.lang.String,java.util.Date):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `tmp` last assigned on line 88 could be null and is dereferenced at line 90.","tnFile":"cat-home/src/main/java/com/dianping/cat/report/page/cross/service/LocalCrossService.java","tnLine":90,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.page.cross.service.LocalCrossService.getReportFromLocalDisk(long,java.lang.String):com.dianping.cat.consumer.cross.model.entity.CrossReport","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Detail ProcessDomain.removeDetail(Long)` mutates container `this.m_details` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/state/model/entity/ProcessDomain.java","tnLine":138,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.state.model.entity.ProcessDomain.removeDetail(java.lang.Long):com.dianping.cat.consumer.state.model.entity.Detail","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Item Group.removeItem(String)` mutates container `this.m_items` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/server/entity/Group.java","tnLine":94,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.server.entity.Group.removeItem(java.lang.String):com.dianping.cat.home.server.entity.Item","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired to `in` by call to `new()` at line 95 is not released after line 115.\n**Note**: potential exception at line 99","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/storage/transform/DefaultSaxParser.java","tnLine":115,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.storage.transform.DefaultSaxParser.removeBOM(java.io.InputStream):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void HdfsTokenMappingManager.close(int)` reads without synchronization from container `this.m_cache` via call to `entrySet`. Potentially races with write in method `HdfsTokenMappingManager.getTokenMapping(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-hadoop/src/main/java/org/unidal/cat/message/storage/hdfs/HdfsTokenMappingManager.java","tnLine":51,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.unidal.cat.message.storage.hdfs.HdfsTokenMappingManager.close(int):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `AtomicMessageConfigManager.m_config` last assigned on line 106 could be null and is dereferenced by call to `storeConfig()` at line 108.","tnFile":"cat-core/src/main/java/com/dianping/cat/config/AtomicMessageConfigManager.java","tnLine":108,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.config.AtomicMessageConfigManager.insert(java.lang.String):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Dependency Segment.findOrCreateDependency(String)` reads without synchronization from container `this.m_dependencies` via call to `get`. Potentially races with write in method `Segment.findOrCreateDependency(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/dependency/model/entity/Segment.java","tnLine":67,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.dependency.model.entity.Segment.findOrCreateDependency(java.lang.String):com.dianping.cat.consumer.dependency.model.entity.Dependency","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `DefaultNativeParser(...)` at line 28 is not released after line 41.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/business/model/transform/DefaultNativeParser.java","tnLine":41,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.business.model.transform.DefaultNativeParser.parse(java.io.ByteArrayInputStream):com.dianping.cat.consumer.business.model.entity.BusinessReport","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `ExceptionLimit ExceptionRuleConfig.removeExceptionLimit(String)` mutates container `this.m_exceptionLimits` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/exception/entity/ExceptionRuleConfig.java","tnLine":121,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.exception.entity.ExceptionRuleConfig.removeExceptionLimit(java.lang.String):com.dianping.cat.home.exception.entity.ExceptionLimit","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `MachineState Domain.findOrCreateMachineState(String)` reads without synchronization from container `this.m_machineStates` via call to `get`. Potentially races with write in method `Domain.addMachineState(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/utilization/entity/Domain.java","tnLine":86,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.utilization.entity.Domain.findOrCreateMachineState(java.lang.String):com.dianping.cat.home.utilization.entity.MachineState","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void LocalTokenMapping.close()` indirectly reads without synchronization from `this.m_block`. Potentially races with write in method `LocalTokenMapping.map(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-hadoop/src/main/java/org/unidal/cat/message/storage/local/LocalTokenMapping.java","tnLine":72,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.unidal.cat.message.storage.local.LocalTokenMapping.close():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int UrlPattern.hashCode()` reads without synchronization from container `this.m_patternItems` via call to `hashCode`. Potentially races with write in method `UrlPattern.findOrCreatePatternItem(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-core/target/generated-sources/dal-model/com/dianping/cat/configuration/web/url/entity/UrlPattern.java","tnLine":106,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.configuration.web.url.entity.UrlPattern.hashCode():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `DefaultNativeParser(...)` at line 28 is not released after line 41.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/group/transform/DefaultNativeParser.java","tnLine":41,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.group.transform.DefaultNativeParser.parse(java.io.ByteArrayInputStream):com.dianping.cat.home.group.entity.DomainGroup","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `AllDuration TransactionType.removeAllDuration(int)` mutates container `this.m_allDurations` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/transaction/model/entity/TransactionType.java","tnLine":376,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.transaction.model.entity.TransactionType.removeAllDuration(int):com.dianping.cat.consumer.transaction.model.entity.AllDuration","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Error Segment.removeError(String)` mutates container `this.m_errors` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/top/model/entity/Segment.java","tnLine":303,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.top.model.entity.Segment.removeError(java.lang.String):com.dianping.cat.consumer.top.model.entity.Error","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Domain TopReport.removeDomain(String)` mutates container `this.m_domains` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/top/model/entity/TopReport.java","tnLine":113,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.top.model.entity.TopReport.removeDomain(java.lang.String):com.dianping.cat.consumer.top.model.entity.Domain","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Domain Domain.addGroup(Group)` mutates container `this.m_groups` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/router/entity/Domain.java","tnLine":30,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.router.entity.Domain.addGroup(com.dianping.cat.home.router.entity.Group):com.dianping.cat.home.router.entity.Domain","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `ScheduledExecutorService Threads$ThreadPoolManager.getScheduledThreadPool(String,int)` reads with synchronization from container `this.m_services` via call to `get`. Potentially races with unsynchronized write in method `Threads$ThreadPoolManager.getFixedThreadPool(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-client/src/main/java/com/dianping/cat/util/Threads.java","tnLine":517,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.util.Threads$ThreadPoolManager.getScheduledThreadPool(java.lang.String,int):java.util.concurrent.ScheduledExecutorService","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Segment Segment.addError(Error)` mutates container `this.m_errors` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/top/model/entity/Segment.java","tnLine":74,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.top.model.entity.Segment.addError(com.dianping.cat.consumer.top.model.entity.Error):com.dianping.cat.consumer.top.model.entity.Segment","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `TransactionName TransactionType.removeName(String)` mutates container `this.m_names` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/transaction/model/entity/TransactionType.java","tnLine":384,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.transaction.model.entity.TransactionType.removeName(java.lang.String):com.dianping.cat.consumer.transaction.model.entity.TransactionName","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `TransactionType TransactionType.addGraph2(Graph2)` mutates container `this.m_graph2s` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/transaction/model/entity/TransactionType.java","tnLine":84,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.transaction.model.entity.TransactionType.addGraph2(com.dianping.cat.consumer.transaction.model.entity.Graph2):com.dianping.cat.consumer.transaction.model.entity.TransactionType","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Segment DependencyReport.findSegment(Integer)` reads without synchronization from container `this.m_segments` via call to `get`. Potentially races with write in method `DependencyReport.findOrCreateSegment(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/dependency/model/entity/DependencyReport.java","tnLine":63,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.dependency.model.entity.DependencyReport.findSegment(java.lang.Integer):com.dianping.cat.consumer.dependency.model.entity.Segment","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `TransactionName TransactionName.addDuration(Duration)` mutates container `this.m_durations` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/transaction/model/entity/TransactionName.java","tnLine":85,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.transaction.model.entity.TransactionName.addDuration(com.dianping.cat.consumer.transaction.model.entity.Duration):com.dianping.cat.consumer.transaction.model.entity.TransactionName","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Entity Machine.findOrCreateEntity(String)` reads without synchronization from container `this.m_entities` via call to `get`. Potentially races with write in method `Machine.addEntity(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/problem/model/entity/Machine.java","tnLine":63,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.problem.model.entity.Machine.findOrCreateEntity(java.lang.String):com.dianping.cat.consumer.problem.model.entity.Entity","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Index LocalIndexManager.getIndex(String,String,int,boolean)` indirectly reads without synchronization from container `this.m_indexes` via call to `get`. Potentially races with write in method `LocalIndexManager.getIndex(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-hadoop/src/main/java/org/unidal/cat/message/storage/local/LocalIndexManager.java","tnLine":99,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.unidal.cat.message.storage.local.LocalIndexManager.getIndex(java.lang.String,java.lang.String,int,boolean):org.unidal.cat.message.storage.Index","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Type Report.findType(String)` reads without synchronization from container `this.m_types` via call to `get`. Potentially races with write in method `Report.findOrCreateType(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/all/config/entity/Report.java","tnLine":50,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.all.config.entity.Report.findType(java.lang.String):com.dianping.cat.consumer.all.config.entity.Type","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `ApplicationState Domain.removeApplicationState(String)` mutates container `this.m_applicationStates` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/utilization/entity/Domain.java","tnLine":143,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.utilization.entity.Domain.removeApplicationState(java.lang.String):com.dianping.cat.home.utilization.entity.ApplicationState","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Machine Machine.addMessage(Message)` mutates container `this.m_messages` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/state/model/entity/Machine.java","tnLine":62,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.state.model.entity.Machine.addMessage(com.dianping.cat.consumer.state.model.entity.Message):com.dianping.cat.consumer.state.model.entity.Machine","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `AlertConfig AlertConfig.addReceiver(Receiver)` mutates container `this.m_receivers` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-alarm/target/generated-sources/dal-model/com/dianping/cat/alarm/receiver/entity/AlertConfig.java","tnLine":23,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.alarm.receiver.entity.AlertConfig.addReceiver(com.dianping.cat.alarm.receiver.entity.Receiver):com.dianping.cat.alarm.receiver.entity.AlertConfig","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `TopologyGraph TopologyGraph.addTopologyNode(TopologyNode)` mutates container `this.m_nodes` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/dependency/graph/entity/TopologyGraph.java","tnLine":36,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.dependency.graph.entity.TopologyGraph.addTopologyNode(com.dianping.cat.home.dependency.graph.entity.TopologyNode):com.dianping.cat.home.dependency.graph.entity.TopologyGraph","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `StatusCode TransactionName.findStatusCode(String)` reads without synchronization from container `this.m_statusCodes` via call to `get`. Potentially races with write in method `TransactionName.findOrCreateStatusCode(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/transaction/model/entity/TransactionName.java","tnLine":136,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.transaction.model.entity.TransactionName.findStatusCode(java.lang.String):com.dianping.cat.consumer.transaction.model.entity.StatusCode","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired to `in` by call to `new()` at line 90 is not released after line 110.\n**Note**: potential exception at line 94","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/alert/summary/transform/DefaultSaxParser.java","tnLine":110,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.alert.summary.transform.DefaultSaxParser.removeBOM(java.io.InputStream):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `ProcessDomain ProcessDomain.addDetail(Detail)` mutates container `this.m_details` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/state/model/entity/ProcessDomain.java","tnLine":42,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.state.model.entity.ProcessDomain.addDetail(com.dianping.cat.consumer.state.model.entity.Detail):com.dianping.cat.consumer.state.model.entity.ProcessDomain","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `InputStreamReader(...)` at line 72 is not released after line 72.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/dependency/graph/transform/DefaultJsonParser.java","tnLine":72,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.dependency.graph.transform.DefaultJsonParser.parseArray(java.lang.Class,java.io.InputStream):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Range TransactionName.findRange(int)` reads without synchronization from container `this.m_ranges` via call to `get`. Potentially races with write in method `TransactionName.findOrCreateRange(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/transaction/model/entity/TransactionName.java","tnLine":132,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.transaction.model.entity.TransactionName.findRange(int):com.dianping.cat.consumer.transaction.model.entity.Range","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `PatternItem UrlPattern.findPatternItem(String)` reads without synchronization from container `this.m_patternItems` via call to `get`. Potentially races with write in method `UrlPattern.findOrCreatePatternItem(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-core/target/generated-sources/dal-model/com/dianping/cat/configuration/web/url/entity/UrlPattern.java","tnLine":57,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.configuration.web.url.entity.UrlPattern.findPatternItem(java.lang.String):com.dianping.cat.configuration.web.url.entity.PatternItem","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Service HeavyCache.findService(String)` reads without synchronization from container `this.m_services` via call to `get`. Potentially races with write in method `HeavyCache.findOrCreateService(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/heavy/entity/HeavyCache.java","tnLine":53,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.heavy.entity.HeavyCache.findService(java.lang.String):com.dianping.cat.home.heavy.entity.Service","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void MessageIdFactory.setIpAddress(String)` writes to field `this.m_ipAddress` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-client/src/main/java/com/dianping/cat/message/internal/MessageIdFactory.java","tnLine":341,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.message.internal.MessageIdFactory.setIpAddress(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `BusinessItem BusinessReport.findOrCreateBusinessItem(String)` reads without synchronization from container `this.m_businessItems` via call to `get`. Potentially races with write in method `BusinessReport.findOrCreateBusinessItem(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/business/model/entity/BusinessReport.java","tnLine":58,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.business.model.entity.BusinessReport.findOrCreateBusinessItem(java.lang.String):com.dianping.cat.consumer.business.model.entity.BusinessItem","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `report` last assigned on line 58 could be null and is dereferenced by call to `buildXml(...)` at line 76.","tnFile":"cat-home/src/main/java/com/dianping/cat/report/page/storage/service/LocalStorageService.java","tnLine":76,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.page.storage.service.LocalStorageService.buildReport(com.dianping.cat.report.service.ModelRequest,com.dianping.cat.report.service.ModelPeriod,java.lang.String,com.dianping.cat.mvc.ApiPayload):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Type Report.findOrCreateType(String)` reads without synchronization from container `this.m_types` via call to `get`. Potentially races with write in method `Report.removeType(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/all/config/entity/Report.java","tnLine":54,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.all.config.entity.Report.findOrCreateType(java.lang.String):com.dianping.cat.consumer.all.config.entity.Type","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `CustomInfo StatusInfo.removeCustomInfo(String)` mutates container `this.m_customInfos` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-client/target/generated-sources/dal-model/com/dianping/cat/status/model/entity/StatusInfo.java","tnLine":197,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.status.model.entity.StatusInfo.removeCustomInfo(java.lang.String):com.dianping.cat.status.model.entity.CustomInfo","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Index LocalIndexManager.getIndex(String,String,int,boolean)` reads without synchronization from container `map` via call to `get`. Potentially races with write in method `LocalIndexManager.getIndex(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-hadoop/src/main/java/org/unidal/cat/message/storage/local/LocalIndexManager.java","tnLine":100,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.unidal.cat.message.storage.local.LocalIndexManager.getIndex(java.lang.String,java.lang.String,int,boolean):org.unidal.cat.message.storage.Index","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `TransactionName TransactionType.findName(String)` reads without synchronization from container `this.m_names` via call to `get`. Potentially races with write in method `TransactionType.findOrCreateName(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/transaction/model/entity/TransactionType.java","tnLine":122,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.transaction.model.entity.TransactionType.findName(java.lang.String):com.dianping.cat.consumer.transaction.model.entity.TransactionName","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Type AlertPolicy.removeType(String)` mutates container `this.m_types` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-alarm/target/generated-sources/dal-model/com/dianping/cat/alarm/policy/entity/AlertPolicy.java","tnLine":80,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.alarm.policy.entity.AlertPolicy.removeType(java.lang.String):com.dianping.cat.alarm.policy.entity.Type","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Collection LocalReportBucket.getIds()` reads without synchronization from container `this.m_idToOffsets` via call to `keySet`. Potentially races with write in method `LocalReportBucket.storeById(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-core/src/main/java/com/dianping/cat/report/LocalReportBucket.java","tnLine":143,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.LocalReportBucket.getIds():java.util.Collection","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `DomainConfig NodeConfig.findDomainConfig(String)` reads without synchronization from container `this.m_domainConfigs` via call to `get`. Potentially races with write in method `NodeConfig.findOrCreateDomainConfig(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/dependency/config/entity/NodeConfig.java","tnLine":60,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.dependency.config.entity.NodeConfig.findDomainConfig(java.lang.String):com.dianping.cat.home.dependency.config.entity.DomainConfig","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Message Machine.findMessage(Long)` reads without synchronization from container `this.m_messages` via call to `get`. Potentially races with write in method `Machine.findOrCreateMessage(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/state/model/entity/Machine.java","tnLine":87,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.state.model.entity.Machine.findMessage(java.lang.Long):com.dianping.cat.consumer.state.model.entity.Message","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void MessageIdFactory.initialize(String)` reads without synchronization from `this.m_markFile`. Potentially races with write in method `MessageIdFactory.close()`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-client/src/main/java/com/dianping/cat/message/internal/MessageIdFactory.java","tnLine":219,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.message.internal.MessageIdFactory.initialize(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `UtilizationReport UtilizationReport.addDomain(Domain)` mutates container `this.m_domains` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/utilization/entity/UtilizationReport.java","tnLine":34,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.utilization.entity.UtilizationReport.addDomain(com.dianping.cat.home.utilization.entity.Domain):com.dianping.cat.home.utilization.entity.UtilizationReport","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `DefaultNativeParser(...)` at line 31 is not released after line 37.\n**Note**: potential exception at line 35","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/storage/model/transform/DefaultNativeParser.java","tnLine":37,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.storage.model.transform.DefaultNativeParser.parse(java.io.ByteArrayInputStream):com.dianping.cat.consumer.storage.model.entity.StorageReport","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `ByteBuf DefaultBlock.find(MessageId)` reads without synchronization from container `this.m_offsets` via call to `get`. Potentially races with write in method `DefaultBlock.pack(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-hadoop/src/main/java/org/unidal/cat/message/storage/internals/DefaultBlock.java","tnLine":97,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.unidal.cat.message.storage.internals.DefaultBlock.find(com.dianping.cat.message.internal.MessageId):io.netty.buffer.ByteBuf","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `TpValueStatisticConfigManager.m_config` last assigned on line 113 could be null and is dereferenced by call to `storeConfig()` at line 115.","tnFile":"cat-core/src/main/java/com/dianping/cat/config/transaction/TpValueStatisticConfigManager.java","tnLine":115,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.config.transaction.TpValueStatisticConfigManager.insert(java.lang.String):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Category AlertSummary.findOrCreateCategory(String)` reads without synchronization from container `this.m_categories` via call to `get`. Potentially races with write in method `AlertSummary.removeCategory(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/alert/summary/entity/AlertSummary.java","tnLine":58,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.alert.summary.entity.AlertSummary.findOrCreateCategory(java.lang.String):com.dianping.cat.home.alert.summary.entity.Category","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Detail ProcessDomain.findDetail(Long)` reads without synchronization from container `this.m_details` via call to `get`. Potentially races with write in method `ProcessDomain.findOrCreateDetail(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/state/model/entity/ProcessDomain.java","tnLine":67,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.state.model.entity.ProcessDomain.findDetail(java.lang.Long):com.dianping.cat.consumer.state.model.entity.Detail","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `AllConfig AllConfig.addReport(Report)` mutates container `this.m_reports` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/all/config/entity/AllConfig.java","tnLine":21,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.all.config.entity.AllConfig.addReport(com.dianping.cat.consumer.all.config.entity.Report):com.dianping.cat.consumer.all.config.entity.AllConfig","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Extension Period.removeExtension(String)` mutates container `this.m_extensions` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/heartbeat/model/entity/Period.java","tnLine":268,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.heartbeat.model.entity.Period.removeExtension(java.lang.String):com.dianping.cat.consumer.heartbeat.model.entity.Extension","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Map DefaultReportManager.getHourlyReports(long)` reads without synchronization from container `this.m_reports` via call to `get`. Potentially races with write in method `DefaultReportManager.getHourlyReport(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-core/src/main/java/com/dianping/cat/report/DefaultReportManager.java","tnLine":151,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.DefaultReportManager.getHourlyReports(long):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `DefaultNativeParser(...)` at line 39 is not released after line 52.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/transaction/model/transform/DefaultNativeParser.java","tnLine":52,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.transaction.model.transform.DefaultNativeParser.parse(java.io.ByteArrayInputStream):com.dianping.cat.consumer.transaction.model.entity.TransactionReport","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Duration TransactionName.findDuration(int)` reads without synchronization from container `this.m_durations` via call to `get`. Potentially races with write in method `TransactionName.findOrCreateDuration(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/transaction/model/entity/TransactionName.java","tnLine":124,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.transaction.model.entity.TransactionName.findDuration(int):com.dianping.cat.consumer.transaction.model.entity.Duration","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `DefaultNativeParser(...)` at line 29 is not released after line 42.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/jar/transform/DefaultNativeParser.java","tnLine":42,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.jar.transform.DefaultNativeParser.parse(java.io.ByteArrayInputStream):com.dianping.cat.home.jar.entity.JarReport","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Ratio Matrix.removeRatio(String)` mutates container `this.m_ratios` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/matrix/model/entity/Matrix.java","tnLine":139,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.matrix.model.entity.Matrix.removeRatio(java.lang.String):com.dianping.cat.consumer.matrix.model.entity.Ratio","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Group ServerMetricConfig.findOrCreateGroup(String)` reads without synchronization from container `this.m_groups` via call to `get`. Potentially races with write in method `ServerMetricConfig.addGroup(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/server/entity/ServerMetricConfig.java","tnLine":46,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.server.entity.ServerMetricConfig.findOrCreateGroup(java.lang.String):com.dianping.cat.home.server.entity.Group","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Machine ProblemReport.removeMachine(String)` mutates container `this.m_machines` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/problem/model/entity/ProblemReport.java","tnLine":137,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.problem.model.entity.ProblemReport.removeMachine(java.lang.String):com.dianping.cat.consumer.problem.model.entity.Machine","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Remote Local.findRemote(String)` reads without synchronization from container `this.m_remotes` via call to `get`. Potentially races with write in method `Local.findOrCreateRemote(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/cross/model/entity/Local.java","tnLine":50,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.cross.model.entity.Local.findRemote(java.lang.String):com.dianping.cat.consumer.cross.model.entity.Remote","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Entity Entity.addThread(JavaThread)` mutates container `this.m_threads` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/problem/model/entity/Entity.java","tnLine":43,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.problem.model.entity.Entity.addThread(com.dianping.cat.consumer.problem.model.entity.JavaThread):com.dianping.cat.consumer.problem.model.entity.Entity","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Service HeavySql.findService(String)` reads without synchronization from container `this.m_services` via call to `get`. Potentially races with write in method `HeavySql.findOrCreateService(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/heavy/entity/HeavySql.java","tnLine":53,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.heavy.entity.HeavySql.findService(java.lang.String):com.dianping.cat.home.heavy.entity.Service","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Machine StateReport.removeMachine(String)` mutates container `this.m_machines` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/state/model/entity/StateReport.java","tnLine":113,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.state.model.entity.StateReport.removeMachine(java.lang.String):com.dianping.cat.consumer.state.model.entity.Machine","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `StatusCode EventName.findOrCreateStatusCode(String)` reads without synchronization from container `this.m_statusCodes` via call to `get`. Potentially races with write in method `EventName.findOrCreateStatusCode(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/event/model/entity/EventName.java","tnLine":98,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.event.model.entity.EventName.findOrCreateStatusCode(java.lang.String):com.dianping.cat.consumer.event.model.entity.StatusCode","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Name Type.findOrCreateName(String)` reads without synchronization from container `this.m_names` via call to `get`. Potentially races with write in method `Type.addName(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/cross/model/entity/Type.java","tnLine":88,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.cross.model.entity.Type.findOrCreateName(java.lang.String):com.dianping.cat.consumer.cross.model.entity.Name","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Machine Machine.addDomain(Domain)` mutates container `this.m_domains` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/storage/model/entity/Machine.java","tnLine":30,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.storage.model.entity.Machine.addDomain(com.dianping.cat.consumer.storage.model.entity.Domain):com.dianping.cat.consumer.storage.model.entity.Machine","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `ApplicationState Domain.findOrCreateApplicationState(String)` reads without synchronization from container `this.m_applicationStates` via call to `get`. Potentially races with write in method `Domain.removeApplicationState(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/utilization/entity/Domain.java","tnLine":69,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.utilization.entity.Domain.findOrCreateApplicationState(java.lang.String):com.dianping.cat.home.utilization.entity.ApplicationState","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `JavaThread Entry.findOrCreateThread(String)` reads without synchronization from container `this.m_threads` via call to `get`. Potentially races with write in method `Entry.removeThread(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/problem/model/entity/Entry.java","tnLine":90,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.problem.model.entity.Entry.findOrCreateThread(java.lang.String):com.dianping.cat.consumer.problem.model.entity.JavaThread","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `AllDuration TransactionName.findOrCreateAllDuration(int)` reads without synchronization from container `this.m_allDurations` via call to `get`. Potentially races with write in method `TransactionName.addAllDuration(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/transaction/model/entity/TransactionName.java","tnLine":140,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.transaction.model.entity.TransactionName.findOrCreateAllDuration(int):com.dianping.cat.consumer.transaction.model.entity.AllDuration","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `String LocalReportBucket.findById(String)` reads without synchronization from container `this.m_idToOffsets` via call to `get`. Potentially races with write in method `LocalReportBucket.storeById(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-core/src/main/java/com/dianping/cat/report/LocalReportBucket.java","tnLine":101,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.LocalReportBucket.findById(java.lang.String):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `String MessageIdFactory.getNextId(String)` reads with synchronization from container `this.m_map` via call to `get`. Potentially races with unsynchronized write in method `MessageIdFactory.initialize(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-client/src/main/java/com/dianping/cat/message/internal/MessageIdFactory.java","tnLine":158,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.message.internal.MessageIdFactory.getNextId(java.lang.String):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `tmp` last assigned on line 87 could be null and is dereferenced at line 89.","tnFile":"cat-home/src/main/java/com/dianping/cat/report/page/matrix/service/LocalMatrixService.java","tnLine":89,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.page.matrix.service.LocalMatrixService.getReportFromLocalDisk(long,java.lang.String):com.dianping.cat.consumer.matrix.model.entity.MatrixReport","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Url HeavyCache.findOrCreateUrl(String)` reads without synchronization from container `this.m_urls` via call to `get`. Potentially races with write in method `HeavyCache.findOrCreateUrl(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/heavy/entity/HeavyCache.java","tnLine":78,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.heavy.entity.HeavyCache.findOrCreateUrl(java.lang.String):com.dianping.cat.home.heavy.entity.Url","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `HeartbeatReport HeartbeatReport.addMachine(Machine)` mutates container `this.m_machines` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/heartbeat/model/entity/HeartbeatReport.java","tnLine":50,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.heartbeat.model.entity.HeartbeatReport.addMachine(com.dianping.cat.consumer.heartbeat.model.entity.Machine):com.dianping.cat.consumer.heartbeat.model.entity.HeartbeatReport","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Range EventName.removeRange(Integer)` mutates container `this.m_ranges` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/event/model/entity/EventName.java","tnLine":203,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.event.model.entity.EventName.removeRange(java.lang.Integer):com.dianping.cat.consumer.event.model.entity.Range","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `StorageGroupConfigManager.m_config` last assigned on line 111 could be null and is dereferenced by call to `storeConfig()` at line 113.","tnFile":"cat-home/src/main/java/com/dianping/cat/report/page/storage/config/StorageGroupConfigManager.java","tnLine":113,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.page.storage.config.StorageGroupConfigManager.insert(java.lang.String):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Service HeavyCall.findOrCreateService(String)` reads without synchronization from container `this.m_services` via call to `get`. Potentially races with write in method `HeavyCall.addService(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/heavy/entity/HeavyCall.java","tnLine":61,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.heavy.entity.HeavyCall.findOrCreateService(java.lang.String):com.dianping.cat.home.heavy.entity.Service","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Range TransactionName.removeRange(int)` mutates container `this.m_ranges` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/transaction/model/entity/TransactionName.java","tnLine":413,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.transaction.model.entity.TransactionName.removeRange(int):com.dianping.cat.consumer.transaction.model.entity.Range","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Domain ServiceReport.findDomain(String)` reads without synchronization from container `this.m_domains` via call to `get`. Potentially races with write in method `ServiceReport.findOrCreateDomain(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/service/entity/ServiceReport.java","tnLine":54,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.service.entity.ServiceReport.findDomain(java.lang.String):com.dianping.cat.home.service.entity.Domain","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Segment Item.findOrCreateSegment(String)` reads without synchronization from container `this.m_segments` via call to `get`. Potentially races with write in method `Item.removeSegment(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/server/entity/Item.java","tnLine":54,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.server.entity.Item.findOrCreateSegment(java.lang.String):com.dianping.cat.home.server.entity.Segment","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Level Group.removeLevel(String)` mutates container `this.m_levels` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-alarm/target/generated-sources/dal-model/com/dianping/cat/alarm/policy/entity/Group.java","tnLine":94,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.alarm.policy.entity.Group.removeLevel(java.lang.String):com.dianping.cat.alarm.policy.entity.Level","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `JavaThread JavaThread.addSegment(Segment)` mutates container `this.m_segments` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/problem/model/entity/JavaThread.java","tnLine":34,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.problem.model.entity.JavaThread.addSegment(com.dianping.cat.consumer.problem.model.entity.Segment):com.dianping.cat.consumer.problem.model.entity.JavaThread","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Service HeavyCache.findOrCreateService(String)` reads without synchronization from container `this.m_services` via call to `get`. Potentially races with write in method `HeavyCache.addService(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/heavy/entity/HeavyCache.java","tnLine":61,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.heavy.entity.HeavyCache.findOrCreateService(java.lang.String):com.dianping.cat.home.heavy.entity.Service","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `tmp` last assigned on line 87 could be null and is dereferenced at line 89.","tnFile":"cat-home/src/main/java/com/dianping/cat/report/page/dependency/service/LocalDependencyService.java","tnLine":89,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.page.dependency.service.LocalDependencyService.getReportFromLocalDisk(long,java.lang.String):com.dianping.cat.consumer.dependency.model.entity.DependencyReport","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void MessageIdFactory.initialize(String)` writes to field `this.m_ipAddress` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"cat-client/src/main/java/com/dianping/cat/message/internal/MessageIdFactory.java","tnLine":218,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.message.internal.MessageIdFactory.initialize(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Matrix MatrixReport.removeMatrix(String)` mutates container `this.m_matrixs` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/matrix/model/entity/MatrixReport.java","tnLine":126,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.matrix.model.entity.MatrixReport.removeMatrix(java.lang.String):com.dianping.cat.consumer.matrix.model.entity.Matrix","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `InputStreamReader(...)` at line 44 is not released after line 44.","tnFile":"cat-core/target/generated-sources/dal-model/com/dianping/cat/configuration/web/url/transform/DefaultJsonParser.java","tnLine":44,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.configuration.web.url.transform.DefaultJsonParser.parse(java.lang.Class,java.io.InputStream):com.dianping.cat.configuration.web.url.IEntity","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Domain Domain.addMachine(Machine)` mutates container `this.m_machines` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/jar/entity/Domain.java","tnLine":30,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.jar.entity.Domain.addMachine(com.dianping.cat.home.jar.entity.Machine):com.dianping.cat.home.jar.entity.Domain","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void LocalTokenMapping.close()` mutates container `this.m_tokens` via call to `clear` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-hadoop/src/main/java/org/unidal/cat/message/storage/local/LocalTokenMapping.java","tnLine":83,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.unidal.cat.message.storage.local.LocalTokenMapping.close():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `DefaultNativeParser(...)` at line 33 is not released after line 46.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/problem/model/transform/DefaultNativeParser.java","tnLine":46,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.problem.model.transform.DefaultNativeParser.parse(java.io.ByteArrayInputStream):com.dianping.cat.consumer.problem.model.entity.ProblemReport","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Sql Domain.findOrCreateSql(String)` reads without synchronization from container `this.m_sqls` via call to `get`. Potentially races with write in method `Domain.findOrCreateSql(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/storage/model/entity/Domain.java","tnLine":82,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.storage.model.entity.Domain.findOrCreateSql(java.lang.String):com.dianping.cat.consumer.storage.model.entity.Sql","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Segment Segment.addDependency(Dependency)` mutates container `this.m_dependencies` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/dependency/model/entity/Segment.java","tnLine":34,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.dependency.model.entity.Segment.addDependency(com.dianping.cat.consumer.dependency.model.entity.Dependency):com.dianping.cat.consumer.dependency.model.entity.Segment","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Operation Domain.findOrCreateOperation(String)` reads without synchronization from container `this.m_operations` via call to `get`. Potentially races with write in method `Domain.addOperation(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/storage/model/entity/Domain.java","tnLine":65,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.storage.model.entity.Domain.findOrCreateOperation(java.lang.String):com.dianping.cat.consumer.storage.model.entity.Operation","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Domain UtilizationReport.removeDomain(String)` mutates container `this.m_domains` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/utilization/entity/UtilizationReport.java","tnLine":113,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.utilization.entity.UtilizationReport.removeDomain(java.lang.String):com.dianping.cat.home.utilization.entity.Domain","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `StorageAlertInfo StorageAlertInfo.addStorage(Storage)` mutates container `this.m_storages` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/storage/alert/entity/StorageAlertInfo.java","tnLine":34,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.storage.alert.entity.StorageAlertInfo.addStorage(com.dianping.cat.home.storage.alert.entity.Storage):com.dianping.cat.home.storage.alert.entity.StorageAlertInfo","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.util.zip.ZipOutputStream` acquired to `zos` by call to `new()` at line 101 is not released after line 117.\n**Note**: potential exception at line 104","tnFile":"cat-home/src/main/java/com/dianping/cat/system/page/plugin/Handler.java","tnLine":117,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.system.page.plugin.Handler.downloadChromeExtension(com.dianping.cat.system.page.plugin.Context):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `sortDomain(storageReport.getIds())` could be null and is dereferenced by call to `queryStorageDepartments(...)` at line 163.","tnFile":"cat-home/src/main/java/com/dianping/cat/report/page/storage/Handler.java","tnLine":163,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.page.storage.Handler.buildDepartments(com.dianping.cat.report.page.storage.Payload,com.dianping.cat.report.page.storage.Model,com.dianping.cat.consumer.storage.model.entity.StorageReport):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `configsByType` last assigned on line 299 could be null and is dereferenced by call to `decorateConfigOnRead(...)` at line 301.","tnFile":"cat-home/src/main/java/com/dianping/cat/report/alert/spi/config/BaseRuleConfigManager.java","tnLine":301,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.alert.spi.config.BaseRuleConfigManager.extractMaxPriorityConfigs(java.util.HashMap):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `businessReportConfig` last assigned on line 76 could be null and is dereferenced at line 78.","tnFile":"cat-core/src/main/java/com/dianping/cat/config/business/BusinessConfigManager.java","tnLine":78,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.config.business.BusinessConfigManager.deleteBusinessItem(java.lang.String,java.lang.String):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Range2 TransactionType.findOrCreateRange2(int)` reads without synchronization from container `this.m_range2s` via call to `get`. Potentially races with write in method `TransactionType.findOrCreateRange2(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/transaction/model/entity/TransactionType.java","tnLine":181,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.transaction.model.entity.TransactionType.findOrCreateRange2(int):com.dianping.cat.consumer.transaction.model.entity.Range2","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired to `in` by call to `new()` at line 92 is not released after line 112.\n**Note**: potential exception at line 96","tnFile":"cat-core/target/generated-sources/dal-model/com/dianping/cat/configuration/business/transform/DefaultSaxParser.java","tnLine":112,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.configuration.business.transform.DefaultSaxParser.removeBOM(java.io.InputStream):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired to `in` by call to `new()` at line 88 is not released after line 108.\n**Note**: potential exception at line 92","tnFile":"cat-client/target/generated-sources/dal-model/com/dianping/cat/configuration/property/transform/DefaultSaxParser.java","tnLine":108,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.configuration.property.transform.DefaultSaxParser.removeBOM(java.io.InputStream):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `HeavyCache HeavyCache.addService(Service)` mutates container `this.m_services` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/heavy/entity/HeavyCache.java","tnLine":23,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.heavy.entity.HeavyCache.addService(com.dianping.cat.home.heavy.entity.Service):com.dianping.cat.home.heavy.entity.HeavyCache","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `boolean LocalBucket.initialize(String,String,int,boolean)` indirectly writes to field `this.m_data.m_offset` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-hadoop/src/main/java/org/unidal/cat/message/storage/local/LocalBucket.java","tnLine":125,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.unidal.cat.message.storage.local.LocalBucket.initialize(java.lang.String,java.lang.String,int,boolean):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int TopologyGraphConfig.hashCode()` reads without synchronization from container `this.m_nodeConfigs` via call to `hashCode`. Potentially races with write in method `TopologyGraphConfig.findOrCreateNodeConfig(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/dependency/config/entity/TopologyGraphConfig.java","tnLine":106,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.dependency.config.entity.TopologyGraphConfig.hashCode():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `BusinessItem BusinessReport.findBusinessItem(String)` reads without synchronization from container `this.m_businessItems` via call to `get`. Potentially races with write in method `BusinessReport.findOrCreateBusinessItem(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/business/model/entity/BusinessReport.java","tnLine":54,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.business.model.entity.BusinessReport.findBusinessItem(java.lang.String):com.dianping.cat.consumer.business.model.entity.BusinessItem","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Error Segment.findError(String)` reads without synchronization from container `this.m_errors` via call to `get`. Potentially races with write in method `Segment.findOrCreateError(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/top/model/entity/Segment.java","tnLine":99,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.top.model.entity.Segment.findError(java.lang.String):com.dianping.cat.consumer.top.model.entity.Error","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `DefaultNativeParser(...)` at line 34 is not released after line 47.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/router/transform/DefaultNativeParser.java","tnLine":47,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.router.transform.DefaultNativeParser.parse(java.io.ByteArrayInputStream):com.dianping.cat.home.router.entity.RouterConfig","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Url HeavyCall.removeUrl(String)` mutates container `this.m_urls` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/heavy/entity/HeavyCall.java","tnLine":121,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.heavy.entity.HeavyCall.removeUrl(java.lang.String):com.dianping.cat.home.heavy.entity.Url","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int StatusInfo.hashCode()` reads without synchronization from container `this.m_customInfos` via call to `hashCode`. Potentially races with write in method `StatusInfo.findOrCreateCustomInfo(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-client/target/generated-sources/dal-model/com/dianping/cat/status/model/entity/StatusInfo.java","tnLine":184,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.status.model.entity.StatusInfo.hashCode():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `EventType Machine.findOrCreateType(String)` reads without synchronization from container `this.m_types` via call to `get`. Potentially races with write in method `Machine.removeType(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/event/model/entity/Machine.java","tnLine":54,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.event.model.entity.Machine.findOrCreateType(java.lang.String):com.dianping.cat.consumer.event.model.entity.EventType","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object DefaultReportManager.getHourlyReport(long,String,boolean)` reads without synchronization from `this.m_reportDelegate`. Potentially races with write in method `DefaultReportManager.setReportDelegate(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-core/src/main/java/com/dianping/cat/report/DefaultReportManager.java","tnLine":143,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.DefaultReportManager.getHourlyReport(long,java.lang.String,boolean):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Machine StorageReport.findMachine(String)` reads without synchronization from container `this.m_machines` via call to `get`. Potentially races with write in method `StorageReport.findOrCreateMachine(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/storage/model/entity/StorageReport.java","tnLine":81,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.storage.model.entity.StorageReport.findMachine(java.lang.String):com.dianping.cat.consumer.storage.model.entity.Machine","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Machine Storage.findMachine(String)` reads without synchronization from container `this.m_machines` via call to `get`. Potentially races with write in method `Storage.findOrCreateMachine(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/storage/alert/entity/Storage.java","tnLine":54,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.storage.alert.entity.Storage.findMachine(java.lang.String):com.dianping.cat.home.storage.alert.entity.Machine","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `TopologyGraphConfig TopologyGraphConfig.addEdgeConfig(EdgeConfig)` mutates container `this.m_edgeConfigs` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/dependency/config/entity/TopologyGraphConfig.java","tnLine":23,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.dependency.config.entity.TopologyGraphConfig.addEdgeConfig(com.dianping.cat.home.dependency.config.entity.EdgeConfig):com.dianping.cat.home.dependency.config.entity.TopologyGraphConfig","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Threads$ThreadPoolManager.shutdownAll()` reads without synchronization from container `this.m_services` via call to `values`. Potentially races with write in method `Threads$ThreadPoolManager.getFixedThreadPool(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-client/src/main/java/com/dianping/cat/util/Threads.java","tnLine":540,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.util.Threads$ThreadPoolManager.shutdownAll():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `RouterConfig RouterConfig.addDomain(Domain)` mutates container `this.m_domains` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/router/entity/RouterConfig.java","tnLine":49,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.router.entity.RouterConfig.addDomain(com.dianping.cat.home.router.entity.Domain):com.dianping.cat.home.router.entity.RouterConfig","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `ServerGroup RouterConfig.removeServerGroup(String)` mutates container `this.m_serverGroups` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/router/entity/RouterConfig.java","tnLine":222,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.router.entity.RouterConfig.removeServerGroup(java.lang.String):com.dianping.cat.home.router.entity.ServerGroup","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void LocalMessageBucket.initialize(String)` writes to field `this.m_buf` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-core/src/main/java/com/dianping/cat/message/storage/LocalMessageBucket.java","tnLine":147,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.message.storage.LocalMessageBucket.initialize(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Index Segment.findIndex(String)` reads without synchronization from container `this.m_indexs` via call to `get`. Potentially races with write in method `Segment.findOrCreateIndex(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/dependency/model/entity/Segment.java","tnLine":63,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.dependency.model.entity.Segment.findIndex(java.lang.String):com.dianping.cat.consumer.dependency.model.entity.Index","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int AlertPolicy.hashCode()` reads without synchronization from container `this.m_types` via call to `hashCode`. Potentially races with write in method `AlertPolicy.findOrCreateType(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-alarm/target/generated-sources/dal-model/com/dianping/cat/alarm/policy/entity/AlertPolicy.java","tnLine":70,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.alarm.policy.entity.AlertPolicy.hashCode():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `RouterConfig RouterConfig.addServerGroup(ServerGroup)` mutates container `this.m_serverGroups` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/router/entity/RouterConfig.java","tnLine":59,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.router.entity.RouterConfig.addServerGroup(com.dianping.cat.home.router.entity.ServerGroup):com.dianping.cat.home.router.entity.RouterConfig","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `businessReportConfig` last assigned on line 141 could be null and is dereferenced at line 142.","tnFile":"cat-core/src/main/java/com/dianping/cat/config/business/BusinessConfigManager.java","tnLine":142,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.config.business.BusinessConfigManager.loadData():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `InputStreamReader(...)` at line 69 is not released after line 69.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/service/transform/DefaultJsonParser.java","tnLine":69,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.service.transform.DefaultJsonParser.parseArray(java.lang.Class,java.io.InputStream):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `HeavyCall HeavyCall.addUrl(Url)` mutates container `this.m_urls` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/heavy/entity/HeavyCall.java","tnLine":28,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.heavy.entity.HeavyCall.addUrl(com.dianping.cat.home.heavy.entity.Url):com.dianping.cat.home.heavy.entity.HeavyCall","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `JavaThread Entity.findThread(String)` reads without synchronization from container `this.m_threads` via call to `get`. Potentially races with write in method `Entity.findOrCreateThread(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/problem/model/entity/Entity.java","tnLine":67,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.problem.model.entity.Entity.findThread(java.lang.String):com.dianping.cat.consumer.problem.model.entity.JavaThread","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `ResourceConfigManager.m_config` last assigned on line 137 could be null and is dereferenced by call to `storeConfig()` at line 139.","tnFile":"cat-home/src/main/java/com/dianping/cat/system/page/permission/ResourceConfigManager.java","tnLine":139,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.system.page.permission.ResourceConfigManager.insert(java.lang.String):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Service HeavyCache.removeService(String)` mutates container `this.m_services` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/heavy/entity/HeavyCache.java","tnLine":117,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.heavy.entity.HeavyCache.removeService(java.lang.String):com.dianping.cat.home.heavy.entity.Service","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void MessageIdFactory.close()` indirectly reads with synchronization from `this.m_byteBuffer`. Potentially races with unsynchronized write in method `MessageIdFactory.initialize(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-client/src/main/java/com/dianping/cat/message/internal/MessageIdFactory.java","tnLine":68,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.message.internal.MessageIdFactory.close():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `StorageReport StorageReport.addMachine(Machine)` mutates container `this.m_machines` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/storage/model/entity/StorageReport.java","tnLine":56,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.storage.model.entity.StorageReport.addMachine(com.dianping.cat.consumer.storage.model.entity.Machine):com.dianping.cat.consumer.storage.model.entity.StorageReport","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `EventType Machine.findType(String)` reads without synchronization from container `this.m_types` via call to `get`. Potentially races with write in method `Machine.findOrCreateType(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/event/model/entity/Machine.java","tnLine":50,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.event.model.entity.Machine.findType(java.lang.String):com.dianping.cat.consumer.event.model.entity.EventType","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Operation Machine.findOperation(String)` reads without synchronization from container `this.m_operations` via call to `get`. Potentially races with write in method `Machine.findOrCreateOperation(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/storage/alert/entity/Machine.java","tnLine":54,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.storage.alert.entity.Machine.findOperation(java.lang.String):com.dianping.cat.home.storage.alert.entity.Operation","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `DefaultNativeParser(...)` at line 30 is not released after line 43.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/state/model/transform/DefaultNativeParser.java","tnLine":43,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.state.model.transform.DefaultNativeParser.parse(java.io.ByteArrayInputStream):com.dianping.cat.consumer.state.model.entity.StateReport","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int HeavyCall.hashCode()` reads without synchronization from container `this.m_urls` via call to `hashCode`. Potentially races with write in method `HeavyCall.findOrCreateUrl(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/heavy/entity/HeavyCall.java","tnLine":106,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.heavy.entity.HeavyCall.hashCode():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `ProcessDomain Machine.removeProcessDomain(String)` mutates container `this.m_processDomains` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/state/model/entity/Machine.java","tnLine":249,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.state.model.entity.Machine.removeProcessDomain(java.lang.String):com.dianping.cat.consumer.state.model.entity.ProcessDomain","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `DefaultNativeParser(...)` at line 33 is not released after line 39.\n**Note**: potential exception at line 37","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/heartbeat/model/transform/DefaultNativeParser.java","tnLine":39,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.heartbeat.model.transform.DefaultNativeParser.parse(java.io.ByteArrayInputStream):com.dianping.cat.consumer.heartbeat.model.entity.HeartbeatReport","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `TransactionType TransactionType.addName(TransactionName)` mutates container `this.m_names` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/transaction/model/entity/TransactionType.java","tnLine":89,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.transaction.model.entity.TransactionType.addName(com.dianping.cat.consumer.transaction.model.entity.TransactionName):com.dianping.cat.consumer.transaction.model.entity.TransactionType","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired to `in` by call to `new()` at line 90 is not released after line 110.\n**Note**: potential exception at line 94","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/dependency/graph/transform/DefaultSaxParser.java","tnLine":110,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.dependency.graph.transform.DefaultSaxParser.removeBOM(java.io.InputStream):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired to `in` by call to `new()` at line 88 is not released after line 108.\n**Note**: potential exception at line 92","tnFile":"cat-core/target/generated-sources/dal-model/com/dianping/cat/sample/transform/DefaultSaxParser.java","tnLine":108,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.sample.transform.DefaultSaxParser.removeBOM(java.io.InputStream):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int TopologyGraph.hashCode()` reads without synchronization from container `this.m_nodes` via call to `hashCode`. Potentially races with write in method `TopologyGraph.findOrCreateTopologyNode(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/dependency/graph/entity/TopologyGraph.java","tnLine":150,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.dependency.graph.entity.TopologyGraph.hashCode():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Detail Extension.removeDetail(String)` mutates container `this.m_details` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/heartbeat/model/entity/Extension.java","tnLine":94,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.heartbeat.model.entity.Extension.removeDetail(java.lang.String):com.dianping.cat.consumer.heartbeat.model.entity.Detail","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `ProblemReport ProblemReport.addMachine(Machine)` mutates container `this.m_machines` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/problem/model/entity/ProblemReport.java","tnLine":50,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.problem.model.entity.ProblemReport.addMachine(com.dianping.cat.consumer.problem.model.entity.Machine):com.dianping.cat.consumer.problem.model.entity.ProblemReport","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Range Range.addAllDuration(AllDuration)` mutates container `this.m_allDurations` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/transaction/model/entity/Range.java","tnLine":56,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.transaction.model.entity.Range.addAllDuration(com.dianping.cat.consumer.transaction.model.entity.AllDuration):com.dianping.cat.consumer.transaction.model.entity.Range","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void MessageIdFactory.initialize(String)` writes to field `this.m_markChannel` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"cat-client/src/main/java/com/dianping/cat/message/internal/MessageIdFactory.java","tnLine":226,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.message.internal.MessageIdFactory.initialize(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `MessageDumper DefaultMessageDumperManager.findOrCreate(int)` reads without synchronization from container `this.m_dumpers` via call to `get`. Potentially races with write in method `DefaultMessageDumperManager.findOrCreate(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-hadoop/src/main/java/org/unidal/cat/message/storage/internals/DefaultMessageDumperManager.java","tnLine":70,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.unidal.cat.message.storage.internals.DefaultMessageDumperManager.findOrCreate(int):org.unidal.cat.message.storage.MessageDumper","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Target Operation.findTarget(String)` reads without synchronization from container `this.m_targets` via call to `get`. Potentially races with write in method `Operation.findOrCreateTarget(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/storage/alert/entity/Operation.java","tnLine":54,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.storage.alert.entity.Operation.findTarget(java.lang.String):com.dianping.cat.home.storage.alert.entity.Target","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `TopologyGraph TopologyGraph.addTopologyEdge(TopologyEdge)` mutates container `this.m_edges` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/dependency/graph/entity/TopologyGraph.java","tnLine":31,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.dependency.graph.entity.TopologyGraph.addTopologyEdge(com.dianping.cat.home.dependency.graph.entity.TopologyEdge):com.dianping.cat.home.dependency.graph.entity.TopologyGraph","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `DefaultNativeParser(...)` at line 29 is not released after line 42.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/utilization/transform/DefaultNativeParser.java","tnLine":42,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.utilization.transform.DefaultNativeParser.parse(java.io.ByteArrayInputStream):com.dianping.cat.home.utilization.entity.UtilizationReport","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Segment Domain.removeSegment(Integer)` mutates container `this.m_segments` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/top/model/entity/Domain.java","tnLine":94,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.top.model.entity.Domain.removeSegment(java.lang.Integer):com.dianping.cat.consumer.top.model.entity.Segment","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `String MessageIdFactory.getNextId(String)` indirectly reads with synchronization from `this.m_domain`. Potentially races with unsynchronized write in method `MessageIdFactory.initialize(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-client/src/main/java/com/dianping/cat/message/internal/MessageIdFactory.java","tnLine":142,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.message.internal.MessageIdFactory.getNextId(java.lang.String):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void LocalTokenMappingManager.close(int)` reads without synchronization from container `this.m_cache` via call to `entrySet`. Potentially races with write in method `LocalTokenMappingManager.getTokenMapping(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-hadoop/src/main/java/org/unidal/cat/message/storage/local/LocalTokenMappingManager.java","tnLine":42,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.unidal.cat.message.storage.local.LocalTokenMappingManager.close(int):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `ByteBuf LocalBucket.get(MessageId)` indirectly writes to field `cache.m_maxSegmentId` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-hadoop/src/main/java/org/unidal/cat/message/storage/local/LocalBucket.java","tnLine":96,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.unidal.cat.message.storage.local.LocalBucket.get(com.dianping.cat.message.internal.MessageId):io.netty.buffer.ByteBuf","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `result` last assigned on line 45 could be null and is dereferenced at line 53.","tnFile":"cat-consumer/src/main/java/com/dianping/cat/consumer/transaction/TransactionReportMerger.java","tnLine":53,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.transaction.TransactionReportMerger.mergeDoubleValue(java.lang.String,java.lang.String):double[]","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `ip` last assigned on line 198 could be null and is dereferenced at line 218.","tnFile":"cat-home/src/main/java/com/dianping/cat/report/page/problem/Handler.java","tnLine":218,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.page.problem.Handler.handleOutbound(com.dianping.cat.report.page.problem.Context):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `GroupServer ServerGroup.findOrCreateGroupServer(String)` reads without synchronization from container `this.m_groupServers` via call to `get`. Potentially races with write in method `ServerGroup.addGroupServer(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/router/entity/ServerGroup.java","tnLine":56,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.router.entity.ServerGroup.findOrCreateGroupServer(java.lang.String):com.dianping.cat.home.router.entity.GroupServer","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired to `in` by call to `new()` at line 103 is not released after line 123.\n**Note**: potential exception at line 107","tnFile":"cat-core/target/generated-sources/dal-model/com/dianping/cat/configuration/server/transform/DefaultSaxParser.java","tnLine":123,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.configuration.server.transform.DefaultSaxParser.removeBOM(java.io.InputStream):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `TimerSyncTask TimerSyncTask.getInstance()` reads without synchronization from `task.TimerSyncTask.m_active`. Potentially races with write in method `TimerSyncTask.getInstance()`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-core/src/main/java/com/dianping/cat/task/TimerSyncTask.java","tnLine":44,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.task.TimerSyncTask.getInstance():com.dianping.cat.task.TimerSyncTask","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Machine ProblemReport.findMachine(String)` reads without synchronization from container `this.m_machines` via call to `get`. Potentially races with write in method `ProblemReport.findOrCreateMachine(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/problem/model/entity/ProblemReport.java","tnLine":70,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.problem.model.entity.ProblemReport.findMachine(java.lang.String):com.dianping.cat.consumer.problem.model.entity.Machine","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `ExtensionDetail Extension.findExtensionDetail(String)` reads without synchronization from container `this.m_details` via call to `get`. Potentially races with write in method `Extension.findOrCreateExtensionDetail(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-client/target/generated-sources/dal-model/com/dianping/cat/status/model/entity/Extension.java","tnLine":54,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.status.model.entity.Extension.findExtensionDetail(java.lang.String):com.dianping.cat.status.model.entity.ExtensionDetail","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Map DefaultReportManager.loadHourlyReports(long,DefaultReportManager$StoragePolicy,int)` reads without synchronization from container `this.m_reports` via call to `get`. Potentially races with write in method `DefaultReportManager.getHourlyReport(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-core/src/main/java/com/dianping/cat/report/DefaultReportManager.java","tnLine":167,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.DefaultReportManager.loadHourlyReports(long,com.dianping.cat.report.DefaultReportManager$StoragePolicy,int):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `ProcessDomain Machine.findOrCreateProcessDomain(String)` reads without synchronization from container `this.m_processDomains` via call to `get`. Potentially races with write in method `Machine.findOrCreateProcessDomain(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/state/model/entity/Machine.java","tnLine":112,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.state.model.entity.Machine.findOrCreateProcessDomain(java.lang.String):com.dianping.cat.consumer.state.model.entity.ProcessDomain","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `InputStreamReader(...)` at line 73 is not released after line 73.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/service/client/transform/DefaultJsonParser.java","tnLine":73,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.service.client.transform.DefaultJsonParser.parseArray(java.lang.Class,java.io.InputStream):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Group ServerMetricConfig.removeGroup(String)` mutates container `this.m_groups` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/server/entity/ServerMetricConfig.java","tnLine":80,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.server.entity.ServerMetricConfig.removeGroup(java.lang.String):com.dianping.cat.home.server.entity.Group","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void LocalTokenMapping.open(int,String)` indirectly mutates container `this.m_map` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-hadoop/src/main/java/org/unidal/cat/message/storage/local/LocalTokenMapping.java","tnLine":188,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.unidal.cat.message.storage.local.LocalTokenMapping.open(int,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `EventType EventType.addName(EventName)` mutates container `this.m_names` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/event/model/entity/EventType.java","tnLine":44,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.event.model.entity.EventType.addName(com.dianping.cat.consumer.event.model.entity.EventName):com.dianping.cat.consumer.event.model.entity.EventType","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `config` last assigned on line 117 could be null and is dereferenced by call to `buildLineChartTitle(...)` at line 120.","tnFile":"cat-home/src/main/java/com/dianping/cat/report/page/business/graph/BusinessGraphCreator.java","tnLine":120,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.page.business.graph.BusinessGraphCreator.buildCharts(java.util.LinkedHashMap,java.util.LinkedHashMap,java.util.Date,java.util.Date,java.util.HashMap):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired to `in` by call to `new()` at line 92 is not released after line 112.\n**Note**: potential exception at line 96","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/utilization/transform/DefaultSaxParser.java","tnLine":112,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.utilization.transform.DefaultSaxParser.removeBOM(java.io.InputStream):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `tmp` last assigned on line 93 could be null and is dereferenced at line 95.","tnFile":"cat-home/src/main/java/com/dianping/cat/report/page/top/service/LocalTopService.java","tnLine":95,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.page.top.service.LocalTopService.getReportFromLocalDisk(long,java.lang.String):com.dianping.cat.consumer.top.model.entity.TopReport","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired to `in` by call to `new()` at line 96 is not released after line 116.\n**Note**: potential exception at line 100","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/heavy/transform/DefaultSaxParser.java","tnLine":116,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.heavy.transform.DefaultSaxParser.removeBOM(java.io.InputStream):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int HeavyCache.hashCode()` reads without synchronization from container `this.m_services` via call to `hashCode`. Potentially races with write in method `HeavyCache.findOrCreateService(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/heavy/entity/HeavyCache.java","tnLine":107,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.heavy.entity.HeavyCache.hashCode():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void MessageIdFactory.initialize(String)` writes to field `this.m_domain` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"cat-client/src/main/java/com/dianping/cat/message/internal/MessageIdFactory.java","tnLine":217,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.message.internal.MessageIdFactory.initialize(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Segment BusinessItem.removeSegment(Integer)` mutates container `this.m_segments` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/business/model/entity/BusinessItem.java","tnLine":103,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.business.model.entity.BusinessItem.removeSegment(java.lang.Integer):com.dianping.cat.consumer.business.model.entity.Segment","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired to `in` by call to `new()` at line 94 is not released after line 114.\n**Note**: potential exception at line 98","tnFile":"cat-core/target/generated-sources/dal-model/com/dianping/cat/configuration/message/transform/DefaultSaxParser.java","tnLine":114,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.configuration.message.transform.DefaultSaxParser.removeBOM(java.io.InputStream):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void MessageIdFactory.saveMark()` reads with synchronization from `this.m_byteBuffer`. Potentially races with unsynchronized write in method `MessageIdFactory.initialize(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-client/src/main/java/com/dianping/cat/message/internal/MessageIdFactory.java","tnLine":312,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.message.internal.MessageIdFactory.saveMark():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Entity Machine.removeEntity(String)` mutates container `this.m_entities` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/problem/model/entity/Machine.java","tnLine":107,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.problem.model.entity.Machine.removeEntity(java.lang.String):com.dianping.cat.consumer.problem.model.entity.Entity","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `DefaultNativeParser(...)` at line 28 is not released after line 41.","tnFile":"cat-core/target/generated-sources/dal-model/com/dianping/cat/configuration/web/url/transform/DefaultNativeParser.java","tnLine":41,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.configuration.web.url.transform.DefaultNativeParser.parse(java.io.ByteArrayInputStream):com.dianping.cat.configuration.web.url.entity.UrlPattern","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void MessageIdFactory.initialize(String)` writes to field `this.m_byteBuffer` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"cat-client/src/main/java/com/dianping/cat/message/internal/MessageIdFactory.java","tnLine":227,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.message.internal.MessageIdFactory.initialize(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Report AllConfig.findOrCreateReport(String)` reads without synchronization from container `this.m_reports` via call to `get`. Potentially races with write in method `AllConfig.addReport(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/all/config/entity/AllConfig.java","tnLine":46,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.all.config.entity.AllConfig.findOrCreateReport(java.lang.String):com.dianping.cat.consumer.all.config.entity.Report","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Machine Storage.removeMachine(String)` mutates container `this.m_machines` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/storage/alert/entity/Storage.java","tnLine":119,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.storage.alert.entity.Storage.removeMachine(java.lang.String):com.dianping.cat.home.storage.alert.entity.Machine","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Segment JavaThread.removeSegment(Integer)` mutates container `this.m_segments` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/problem/model/entity/JavaThread.java","tnLine":113,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.problem.model.entity.JavaThread.removeSegment(java.lang.Integer):com.dianping.cat.consumer.problem.model.entity.Segment","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `tmp` last assigned on line 93 could be null and is dereferenced at line 95.","tnFile":"cat-home/src/main/java/com/dianping/cat/report/page/storage/service/LocalStorageService.java","tnLine":95,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.page.storage.service.LocalStorageService.getReportFromLocalDisk(long,java.lang.String):com.dianping.cat.consumer.storage.model.entity.StorageReport","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `EventName EventType.findOrCreateName(String)` reads without synchronization from container `this.m_names` via call to `get`. Potentially races with write in method `EventType.addName(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/event/model/entity/EventType.java","tnLine":68,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.event.model.entity.EventType.findOrCreateName(java.lang.String):com.dianping.cat.consumer.event.model.entity.EventName","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired to `in` by call to `new()` at line 91 is not released after line 111.\n**Note**: potential exception at line 95","tnFile":"cat-core/target/generated-sources/dal-model/com/dianping/cat/configuration/tp/transform/DefaultSaxParser.java","tnLine":111,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.configuration.tp.transform.DefaultSaxParser.removeBOM(java.io.InputStream):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired to `return` by call to `new()` at line 200 is not released after line 207.","tnFile":"cat-hadoop/src/main/java/org/unidal/cat/message/storage/internals/DefaultBlock.java","tnLine":207,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.unidal.cat.message.storage.internals.DefaultBlock.unpack(com.dianping.cat.message.internal.MessageId):io.netty.buffer.ByteBuf","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Machine Domain.findMachine(String)` reads without synchronization from container `this.m_machines` via call to `get`. Potentially races with write in method `Domain.findOrCreateMachine(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/jar/entity/Domain.java","tnLine":50,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.jar.entity.Domain.findMachine(java.lang.String):com.dianping.cat.home.jar.entity.Machine","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Group Domain.findOrCreateGroup(String)` reads without synchronization from container `this.m_groups` via call to `get`. Potentially races with write in method `Domain.findOrCreateGroup(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/router/entity/Domain.java","tnLine":54,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.router.entity.Domain.findOrCreateGroup(java.lang.String):com.dianping.cat.home.router.entity.Group","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Method Domain.findMethod(String)` reads without synchronization from container `this.m_methods` via call to `get`. Potentially races with write in method `Domain.findOrCreateMethod(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/service/client/entity/Domain.java","tnLine":60,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.service.client.entity.Domain.findMethod(java.lang.String):com.dianping.cat.home.service.client.entity.Method","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Remote Local.removeRemote(String)` mutates container `this.m_remotes` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/cross/model/entity/Local.java","tnLine":94,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.cross.model.entity.Local.removeRemote(java.lang.String):com.dianping.cat.consumer.cross.model.entity.Remote","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `InputStreamReader(...)` at line 48 is not released after line 48.\n**Note**: potential exception at line 48","tnFile":"cat-alarm/target/generated-sources/dal-model/com/dianping/cat/alarm/server/transform/DefaultJsonParser.java","tnLine":48,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.alarm.server.transform.DefaultJsonParser.parse(java.lang.Class,java.io.InputStream):com.dianping.cat.alarm.server.IEntity","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `categories` last assigned on line 47 could be null and is dereferenced at line 48.","tnFile":"cat-home/src/main/java/com/dianping/cat/report/alert/summary/build/RelatedSummaryBuilder.java","tnLine":48,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.alert.summary.build.RelatedSummaryBuilder.gatherDomainsForDependBusiness(java.util.HashMap):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int ExceptionRuleConfig.hashCode()` reads without synchronization from container `this.m_exceptionExcludes` via call to `hashCode`. Potentially races with write in method `ExceptionRuleConfig.findOrCreateExceptionExclude(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/exception/entity/ExceptionRuleConfig.java","tnLine":107,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.exception.entity.ExceptionRuleConfig.hashCode():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Duration Entry.removeDuration(int)` mutates container `this.m_durations` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/problem/model/entity/Entry.java","tnLine":146,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.problem.model.entity.Entry.removeDuration(int):com.dianping.cat.consumer.problem.model.entity.Duration","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Network NetworkPolicy.findNetwork(String)` reads without synchronization from container `this.m_networks` via call to `get`. Potentially races with write in method `NetworkPolicy.findOrCreateNetwork(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/router/entity/NetworkPolicy.java","tnLine":56,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.router.entity.NetworkPolicy.findNetwork(java.lang.String):com.dianping.cat.home.router.entity.Network","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Domain UtilizationReport.findOrCreateDomain(String)` reads without synchronization from container `this.m_domains` via call to `get`. Potentially races with write in method `UtilizationReport.addDomain(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/utilization/entity/UtilizationReport.java","tnLine":58,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.utilization.entity.UtilizationReport.findOrCreateDomain(java.lang.String):com.dianping.cat.home.utilization.entity.Domain","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Domain Domain.addOperation(Operation)` mutates container `this.m_operations` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/storage/model/entity/Domain.java","tnLine":32,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.storage.model.entity.Domain.addOperation(com.dianping.cat.consumer.storage.model.entity.Operation):com.dianping.cat.consumer.storage.model.entity.Domain","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Local Local.addRemote(Remote)` mutates container `this.m_remotes` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/cross/model/entity/Local.java","tnLine":30,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.cross.model.entity.Local.addRemote(com.dianping.cat.consumer.cross.model.entity.Remote):com.dianping.cat.consumer.cross.model.entity.Local","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Domain Domain.addSegment(Segment)` mutates container `this.m_segments` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/top/model/entity/Domain.java","tnLine":30,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.top.model.entity.Domain.addSegment(com.dianping.cat.consumer.top.model.entity.Segment):com.dianping.cat.consumer.top.model.entity.Domain","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Detail Extension.findOrCreateDetail(String)` reads without synchronization from container `this.m_details` via call to `get`. Potentially races with write in method `Extension.addDetail(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/heartbeat/model/entity/Extension.java","tnLine":54,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.heartbeat.model.entity.Extension.findOrCreateDetail(java.lang.String):com.dianping.cat.consumer.heartbeat.model.entity.Detail","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Operation Domain.removeOperation(String)` mutates container `this.m_operations` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/storage/model/entity/Domain.java","tnLine":126,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.storage.model.entity.Domain.removeOperation(java.lang.String):com.dianping.cat.consumer.storage.model.entity.Operation","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `DefaultNativeParser(...)` at line 32 is not released after line 38.\n**Note**: potential exception at line 36","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/event/model/transform/DefaultNativeParser.java","tnLine":38,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.event.model.transform.DefaultNativeParser.parse(java.io.ByteArrayInputStream):com.dianping.cat.consumer.event.model.entity.EventReport","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Operation Machine.findOrCreateOperation(String)` reads without synchronization from container `this.m_operations` via call to `get`. Potentially races with write in method `Machine.findOrCreateOperation(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/storage/alert/entity/Machine.java","tnLine":58,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.storage.alert.entity.Machine.findOrCreateOperation(java.lang.String):com.dianping.cat.home.storage.alert.entity.Operation","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `ScheduledExecutorService Threads$ThreadPoolManager.getScheduledThreadPool(String,int)` mutates container `this.m_services` via call to `remove` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"cat-client/src/main/java/com/dianping/cat/util/Threads.java","tnLine":511,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.util.Threads$ThreadPoolManager.getScheduledThreadPool(java.lang.String,int):java.util.concurrent.ScheduledExecutorService","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Code UrlPattern.removeCode(Integer)` mutates container `this.m_codes` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-core/target/generated-sources/dal-model/com/dianping/cat/configuration/web/url/entity/UrlPattern.java","tnLine":117,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.configuration.web.url.entity.UrlPattern.removeCode(java.lang.Integer):com.dianping.cat.configuration.web.url.entity.Code","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Segment BusinessItem.findSegment(Integer)` reads without synchronization from container `this.m_segments` via call to `get`. Potentially races with write in method `BusinessItem.findOrCreateSegment(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/business/model/entity/BusinessItem.java","tnLine":52,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.business.model.entity.BusinessItem.findSegment(java.lang.Integer):com.dianping.cat.consumer.business.model.entity.Segment","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Domain RouterConfig.removeDomain(String)` mutates container `this.m_domains` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/router/entity/RouterConfig.java","tnLine":214,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.router.entity.RouterConfig.removeDomain(java.lang.String):com.dianping.cat.home.router.entity.Domain","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `AlertPolicyManager.m_config` last assigned on line 97 could be null and is dereferenced by call to `storeConfig()` at line 99.","tnFile":"cat-alarm/src/main/java/com/dianping/cat/alarm/spi/config/AlertPolicyManager.java","tnLine":99,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.alarm.spi.config.AlertPolicyManager.insert(java.lang.String):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Machine Domain.removeMachine(String)` mutates container `this.m_machines` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/jar/entity/Domain.java","tnLine":94,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.jar.entity.Domain.removeMachine(java.lang.String):com.dianping.cat.home.jar.entity.Machine","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void LocalTransactionService$TransactionReportFilter.visitDuration(Duration)` indirectly writes to field `this.m_level` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/src/main/java/com/dianping/cat/report/page/transaction/service/LocalTransactionService.java","tnLine":148,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.page.transaction.service.LocalTransactionService$TransactionReportFilter.visitDuration(com.dianping.cat.consumer.transaction.model.entity.Duration):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `List DefaultMessageAnalyzerManager.getAnalyzer(String,long)` mutates container `this.m_analyzers` via call to `remove` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"cat-core/src/main/java/com/dianping/cat/analysis/DefaultMessageAnalyzerManager.java","tnLine":57,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.analysis.DefaultMessageAnalyzerManager.getAnalyzer(java.lang.String,long):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `TopologyEdge TopologyGraph.removeTopologyEdge(String)` mutates container `this.m_edges` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/dependency/graph/entity/TopologyGraph.java","tnLine":174,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.dependency.graph.entity.TopologyGraph.removeTopologyEdge(java.lang.String):com.dianping.cat.home.dependency.graph.entity.TopologyEdge","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Name Type.findName(String)` reads without synchronization from container `this.m_names` via call to `get`. Potentially races with write in method `Type.findOrCreateName(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/cross/model/entity/Type.java","tnLine":84,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.cross.model.entity.Type.findName(java.lang.String):com.dianping.cat.consumer.cross.model.entity.Name","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean LocalReportBucket.storeById(String,String)` reads without synchronization from `this.m_writeLock`. Potentially races with write in method `LocalReportBucket.initialize(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-core/src/main/java/com/dianping/cat/report/LocalReportBucket.java","tnLine":219,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.LocalReportBucket.storeById(java.lang.String,java.lang.String):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Group Domain.removeGroup(String)` mutates container `this.m_groups` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/router/entity/Domain.java","tnLine":94,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.router.entity.Domain.removeGroup(java.lang.String):com.dianping.cat.home.router.entity.Group","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired to `in` by call to `new()` at line 90 is not released after line 110.\n**Note**: potential exception at line 94","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/service/client/transform/DefaultSaxParser.java","tnLine":110,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.service.client.transform.DefaultSaxParser.removeBOM(java.io.InputStream):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `DefaultNativeParser(...)` at line 29 is not released after line 42.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/dependency/model/transform/DefaultNativeParser.java","tnLine":42,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.dependency.model.transform.DefaultNativeParser.parse(java.io.ByteArrayInputStream):com.dianping.cat.consumer.dependency.model.entity.DependencyReport","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Domain TpValueStatisticConfig.removeDomain(String)` mutates container `this.m_domains` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-core/target/generated-sources/dal-model/com/dianping/cat/configuration/tp/entity/TpValueStatisticConfig.java","tnLine":80,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.configuration.tp.entity.TpValueStatisticConfig.removeDomain(java.lang.String):com.dianping.cat.configuration.tp.entity.Domain","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int AlertSummary.hashCode()` reads without synchronization from container `this.m_categories` via call to `hashCode`. Potentially races with write in method `AlertSummary.findOrCreateCategory(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/alert/summary/entity/AlertSummary.java","tnLine":92,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.alert.summary.entity.AlertSummary.hashCode():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Duration Entry.findOrCreateDuration(int)` reads without synchronization from container `this.m_durations` via call to `get`. Potentially races with write in method `Entry.findOrCreateDuration(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/problem/model/entity/Entry.java","tnLine":73,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.problem.model.entity.Entry.findOrCreateDuration(int):com.dianping.cat.consumer.problem.model.entity.Duration","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Type Type.addName(Name)` mutates container `this.m_names` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/cross/model/entity/Type.java","tnLine":35,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.cross.model.entity.Type.addName(com.dianping.cat.consumer.cross.model.entity.Name):com.dianping.cat.consumer.cross.model.entity.Type","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `String MessageIdFactory.getNextId()` reads without synchronization from `this.m_idPrefixOfMultiMode`. Potentially races with write in method `MessageIdFactory.getNextId(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-client/src/main/java/com/dianping/cat/message/internal/MessageIdFactory.java","tnLine":132,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.message.internal.MessageIdFactory.getNextId():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Machine TransactionReport.findMachine(String)` reads without synchronization from container `this.m_machines` via call to `get`. Potentially races with write in method `TransactionReport.findOrCreateMachine(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/transaction/model/entity/TransactionReport.java","tnLine":70,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.transaction.model.entity.TransactionReport.findMachine(java.lang.String):com.dianping.cat.consumer.transaction.model.entity.Machine","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `RouterConfig RouterConfig.addNetworkPolicy(NetworkPolicy)` mutates container `this.m_networkPolicies` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/router/entity/RouterConfig.java","tnLine":54,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.router.entity.RouterConfig.addNetworkPolicy(com.dianping.cat.home.router.entity.NetworkPolicy):com.dianping.cat.home.router.entity.RouterConfig","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Domain ServiceReport.findOrCreateDomain(String)` reads without synchronization from container `this.m_domains` via call to `get`. Potentially races with write in method `ServiceReport.addDomain(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/service/entity/ServiceReport.java","tnLine":58,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.service.entity.ServiceReport.findOrCreateDomain(java.lang.String):com.dianping.cat.home.service.entity.Domain","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `StatusInfo StatusInfo.addCustomInfo(CustomInfo)` mutates container `this.m_customInfos` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-client/target/generated-sources/dal-model/com/dianping/cat/status/model/entity/StatusInfo.java","tnLine":37,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.status.model.entity.StatusInfo.addCustomInfo(com.dianping.cat.status.model.entity.CustomInfo):com.dianping.cat.status.model.entity.StatusInfo","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Url HeavyCall.findUrl(String)` reads without synchronization from container `this.m_urls` via call to `get`. Potentially races with write in method `HeavyCall.findOrCreateUrl(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/heavy/entity/HeavyCall.java","tnLine":57,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.heavy.entity.HeavyCall.findUrl(java.lang.String):com.dianping.cat.home.heavy.entity.Url","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Graph2 TransactionType.findGraph2(int)` reads without synchronization from container `this.m_graph2s` via call to `get`. Potentially races with write in method `TransactionType.findOrCreateGraph2(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/transaction/model/entity/TransactionType.java","tnLine":118,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.transaction.model.entity.TransactionType.findGraph2(int):com.dianping.cat.consumer.transaction.model.entity.Graph2","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired to `in` by call to `new()` at line 97 is not released after line 117.\n**Note**: potential exception at line 101","tnFile":"cat-core/target/generated-sources/dal-model/com/dianping/cat/configuration/server/filter/transform/DefaultSaxParser.java","tnLine":117,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.configuration.server.filter.transform.DefaultSaxParser.removeBOM(java.io.InputStream):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Type AlertPolicy.findType(String)` reads without synchronization from container `this.m_types` via call to `get`. Potentially races with write in method `AlertPolicy.findOrCreateType(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-alarm/target/generated-sources/dal-model/com/dianping/cat/alarm/policy/entity/AlertPolicy.java","tnLine":42,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.alarm.policy.entity.AlertPolicy.findType(java.lang.String):com.dianping.cat.alarm.policy.entity.Type","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Threads$Manager.shutdownAll()` reads without synchronization from container `this.m_groupManagers` via call to `values`. Potentially races with write in method `Threads$Manager.getThreadGroupManager(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-client/src/main/java/com/dianping/cat/util/Threads.java","tnLine":265,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.util.Threads$Manager.shutdownAll():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Machine TransactionReport.findOrCreateMachine(String)` reads without synchronization from container `this.m_machines` via call to `get`. Potentially races with write in method `TransactionReport.removeMachine(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/transaction/model/entity/TransactionReport.java","tnLine":74,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.transaction.model.entity.TransactionReport.findOrCreateMachine(java.lang.String):com.dianping.cat.consumer.transaction.model.entity.Machine","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Group Type.findGroup(String)` reads without synchronization from container `this.m_groups` via call to `get`. Potentially races with write in method `Type.findOrCreateGroup(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-alarm/target/generated-sources/dal-model/com/dianping/cat/alarm/policy/entity/Type.java","tnLine":50,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.alarm.policy.entity.Type.findGroup(java.lang.String):com.dianping.cat.alarm.policy.entity.Group","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Graph2 TransactionType.removeGraph2(int)` mutates container `this.m_graph2s` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/transaction/model/entity/TransactionType.java","tnLine":380,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.transaction.model.entity.TransactionType.removeGraph2(int):com.dianping.cat.consumer.transaction.model.entity.Graph2","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Graph2 TransactionType.findOrCreateGraph2(int)` reads without synchronization from container `this.m_graph2s` via call to `get`. Potentially races with write in method `TransactionType.addGraph2(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/transaction/model/entity/TransactionType.java","tnLine":147,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.transaction.model.entity.TransactionType.findOrCreateGraph2(int):com.dianping.cat.consumer.transaction.model.entity.Graph2","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Remote Local.findOrCreateRemote(String)` reads without synchronization from container `this.m_remotes` via call to `get`. Potentially races with write in method `Local.removeRemote(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/cross/model/entity/Local.java","tnLine":54,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.cross.model.entity.Local.findOrCreateRemote(java.lang.String):com.dianping.cat.consumer.cross.model.entity.Remote","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Threads$ThreadGroupManager Threads$Manager.getThreadGroupManager(String)` reads without synchronization from container `this.m_groupManagers` via call to `get`. Potentially races with write in method `Threads$Manager.getThreadGroupManager(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-client/src/main/java/com/dianping/cat/util/Threads.java","tnLine":193,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.util.Threads$Manager.getThreadGroupManager(java.lang.String):com.dianping.cat.util.Threads$ThreadGroupManager","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `AllDuration Range.findOrCreateAllDuration(int)` reads without synchronization from container `this.m_allDurations` via call to `get`. Potentially races with write in method `Range.addAllDuration(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/transaction/model/entity/Range.java","tnLine":80,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.transaction.model.entity.Range.findOrCreateAllDuration(int):com.dianping.cat.consumer.transaction.model.entity.AllDuration","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `DefaultNativeParser(...)` at line 29 is not released after line 35.\n**Note**: potential exception at line 33","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/dependency/model/transform/DefaultNativeParser.java","tnLine":35,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.dependency.model.transform.DefaultNativeParser.parse(java.io.ByteArrayInputStream):com.dianping.cat.consumer.dependency.model.entity.DependencyReport","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Operation Operation.addTarget(Target)` mutates container `this.m_targets` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/storage/alert/entity/Operation.java","tnLine":34,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.storage.alert.entity.Operation.addTarget(com.dianping.cat.home.storage.alert.entity.Target):com.dianping.cat.home.storage.alert.entity.Operation","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `long LocalMessageBucket.getLastAccessTime()` reads without synchronization from `this.m_lastAccessTime`. Potentially races with write in method `LocalMessageBucket.storeMessage(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-core/src/main/java/com/dianping/cat/message/storage/LocalMessageBucket.java","tnLine":132,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.message.storage.LocalMessageBucket.getLastAccessTime():long","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Dependency Segment.removeDependency(String)` mutates container `this.m_dependencies` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/dependency/model/entity/Segment.java","tnLine":135,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.dependency.model.entity.Segment.removeDependency(java.lang.String):com.dianping.cat.consumer.dependency.model.entity.Dependency","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Extension StatusInfo.findOrCreateExtension(String)` reads without synchronization from container `this.m_extensions` via call to `get`. Potentially races with write in method `StatusInfo.addExtension(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-client/target/generated-sources/dal-model/com/dianping/cat/status/model/entity/StatusInfo.java","tnLine":120,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.status.model.entity.StatusInfo.findOrCreateExtension(java.lang.String):com.dianping.cat.status.model.entity.Extension","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `InputStreamReader(...)` at line 49 is not released after line 49.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/dependency/graph/transform/DefaultJsonParser.java","tnLine":49,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.dependency.graph.transform.DefaultJsonParser.parse(java.lang.Class,java.io.InputStream):com.dianping.cat.home.dependency.graph.IEntity","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Storage Storage.addMachine(Machine)` mutates container `this.m_machines` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/storage/alert/entity/Storage.java","tnLine":34,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.storage.alert.entity.Storage.addMachine(com.dianping.cat.home.storage.alert.entity.Machine):com.dianping.cat.home.storage.alert.entity.Storage","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `TransactionType Machine.removeType(String)` mutates container `this.m_types` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/transaction/model/entity/Machine.java","tnLine":94,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.transaction.model.entity.Machine.removeType(java.lang.String):com.dianping.cat.consumer.transaction.model.entity.TransactionType","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `tmp` last assigned on line 194 could be null and is dereferenced at line 201.","tnFile":"cat-home/src/main/java/com/dianping/cat/report/page/problem/transform/ProblemTrendGraphBuilder.java","tnLine":201,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.page.problem.transform.ProblemTrendGraphBuilder$ProblemReportVisitor.resolveGraphTrend(com.dianping.cat.consumer.problem.model.entity.GraphTrend):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void MessageIdFactory.initialize(String)` writes to field `this.m_idPrefixOfMultiMode` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"cat-client/src/main/java/com/dianping/cat/message/internal/MessageIdFactory.java","tnLine":229,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.message.internal.MessageIdFactory.initialize(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Duration Entity.removeDuration(int)` mutates container `this.m_durations` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/problem/model/entity/Entity.java","tnLine":151,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.problem.model.entity.Entity.removeDuration(int):com.dianping.cat.consumer.problem.model.entity.Duration","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Name Type.removeName(String)` mutates container `this.m_names` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/cross/model/entity/Type.java","tnLine":192,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.cross.model.entity.Type.removeName(java.lang.String):com.dianping.cat.consumer.cross.model.entity.Name","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.RandomAccessFile` acquired by call to `MessageBlockWriter(...)` at line 145 is not released after line 145.\n**Note**: potential exception at line 145","tnFile":"cat-core/src/main/java/com/dianping/cat/message/storage/LocalMessageBucket.java","tnLine":145,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.message.storage.LocalMessageBucket.initialize(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Machine StateReport.findOrCreateMachine(String)` reads without synchronization from container `this.m_machines` via call to `get`. Potentially races with write in method `StateReport.findOrCreateMachine(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/state/model/entity/StateReport.java","tnLine":58,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.state.model.entity.StateReport.findOrCreateMachine(java.lang.String):com.dianping.cat.consumer.state.model.entity.Machine","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Rule MonitorRules.findOrCreateRule(String)` reads without synchronization from container `this.m_rules` via call to `get`. Potentially races with write in method `MonitorRules.addRule(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-alarm/target/generated-sources/dal-model/com/dianping/cat/alarm/rule/entity/MonitorRules.java","tnLine":46,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.alarm.rule.entity.MonitorRules.findOrCreateRule(java.lang.String):com.dianping.cat.alarm.rule.entity.Rule","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Entity Machine.findEntity(String)` reads without synchronization from container `this.m_entities` via call to `get`. Potentially races with write in method `Machine.findOrCreateEntity(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/problem/model/entity/Machine.java","tnLine":59,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.problem.model.entity.Machine.findEntity(java.lang.String):com.dianping.cat.consumer.problem.model.entity.Entity","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `EventName EventName.addStatusCode(StatusCode)` mutates container `this.m_statusCodes` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/event/model/entity/EventName.java","tnLine":53,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.event.model.entity.EventName.addStatusCode(com.dianping.cat.consumer.event.model.entity.StatusCode):com.dianping.cat.consumer.event.model.entity.EventName","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `EdgeConfig TopologyGraphConfig.removeEdgeConfig(String)` mutates container `this.m_edgeConfigs` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/dependency/config/entity/TopologyGraphConfig.java","tnLine":117,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.dependency.config.entity.TopologyGraphConfig.removeEdgeConfig(java.lang.String):com.dianping.cat.home.dependency.config.entity.EdgeConfig","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `ServerGroup RouterConfig.findOrCreateServerGroup(String)` reads without synchronization from container `this.m_serverGroups` via call to `get`. Potentially races with write in method `RouterConfig.addServerGroup(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/router/entity/RouterConfig.java","tnLine":129,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.router.entity.RouterConfig.findOrCreateServerGroup(java.lang.String):com.dianping.cat.home.router.entity.ServerGroup","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `ApplicationState Domain.findApplicationState(String)` reads without synchronization from container `this.m_applicationStates` via call to `get`. Potentially races with write in method `Domain.findOrCreateApplicationState(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/utilization/entity/Domain.java","tnLine":61,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.utilization.entity.Domain.findApplicationState(java.lang.String):com.dianping.cat.home.utilization.entity.ApplicationState","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `DependencyReport DependencyReport.addSegment(Segment)` mutates container `this.m_segments` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/dependency/model/entity/DependencyReport.java","tnLine":43,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.dependency.model.entity.DependencyReport.addSegment(com.dianping.cat.consumer.dependency.model.entity.Segment):com.dianping.cat.consumer.dependency.model.entity.DependencyReport","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Storage StorageAlertInfo.removeStorage(String)` mutates container `this.m_storages` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/storage/alert/entity/StorageAlertInfo.java","tnLine":113,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.storage.alert.entity.StorageAlertInfo.removeStorage(java.lang.String):com.dianping.cat.home.storage.alert.entity.Storage","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `TopoGraphFormatConfigManager.m_config` last assigned on line 104 could be null and is dereferenced by call to `storeConfig()` at line 105.","tnFile":"cat-home/src/main/java/com/dianping/cat/report/page/dependency/config/TopoGraphFormatConfigManager.java","tnLine":105,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.page.dependency.config.TopoGraphFormatConfigManager.insert(java.lang.String):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Method Domain.removeMethod(String)` mutates container `this.m_methods` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/service/client/entity/Domain.java","tnLine":163,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.service.client.entity.Domain.removeMethod(java.lang.String):com.dianping.cat.home.service.client.entity.Method","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Domain TpValueStatisticConfig.findOrCreateDomain(String)` reads without synchronization from container `this.m_domains` via call to `get`. Potentially races with write in method `TpValueStatisticConfig.findOrCreateDomain(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-core/target/generated-sources/dal-model/com/dianping/cat/configuration/tp/entity/TpValueStatisticConfig.java","tnLine":46,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.configuration.tp.entity.TpValueStatisticConfig.findOrCreateDomain(java.lang.String):com.dianping.cat.configuration.tp.entity.Domain","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void TimerSyncTask.run()` reads without synchronization from container `this.m_handlers` via call to `iterator`. Potentially races with write in method `TimerSyncTask.register(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-core/src/main/java/com/dianping/cat/task/TimerSyncTask.java","tnLine":74,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.task.TimerSyncTask.run():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `TokenMapping LocalTokenMappingManager.getTokenMapping(int,String)` reads without synchronization from container `this.m_cache` via call to `get`. Potentially races with write in method `LocalTokenMappingManager.getTokenMapping(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-hadoop/src/main/java/org/unidal/cat/message/storage/local/LocalTokenMappingManager.java","tnLine":68,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.unidal.cat.message.storage.local.LocalTokenMappingManager.getTokenMapping(int,java.lang.String):org.unidal.cat.message.storage.TokenMapping","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `AllDuration Range.removeAllDuration(int)` mutates container `this.m_allDurations` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/transaction/model/entity/Range.java","tnLine":221,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.transaction.model.entity.Range.removeAllDuration(int):com.dianping.cat.consumer.transaction.model.entity.AllDuration","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `TopReport TopReport.addDomain(Domain)` mutates container `this.m_domains` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/top/model/entity/TopReport.java","tnLine":34,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.top.model.entity.TopReport.addDomain(com.dianping.cat.consumer.top.model.entity.Domain):com.dianping.cat.consumer.top.model.entity.TopReport","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `String MessageIdFactory.getNextId(String)` reads without synchronization from `this.m_ipAddress`. Potentially races with write in method `MessageIdFactory.setIpAddress(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-client/src/main/java/com/dianping/cat/message/internal/MessageIdFactory.java","tnLine":171,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.message.internal.MessageIdFactory.getNextId(java.lang.String):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `TransactionReport TransactionReport.addMachine(Machine)` mutates container `this.m_machines` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/transaction/model/entity/TransactionReport.java","tnLine":50,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.transaction.model.entity.TransactionReport.addMachine(com.dianping.cat.consumer.transaction.model.entity.Machine):com.dianping.cat.consumer.transaction.model.entity.TransactionReport","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `DefaultNativeParser(...)` at line 28 is not released after line 34.\n**Note**: potential exception at line 32","tnFile":"cat-core/target/generated-sources/dal-model/com/dianping/cat/configuration/web/url/transform/DefaultNativeParser.java","tnLine":34,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.configuration.web.url.transform.DefaultNativeParser.parse(java.io.ByteArrayInputStream):com.dianping.cat.configuration.web.url.entity.UrlPattern","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Domain Machine.findOrCreateDomain(String)` reads without synchronization from container `this.m_domains` via call to `get`. Potentially races with write in method `Machine.removeDomain(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/storage/model/entity/Machine.java","tnLine":54,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.storage.model.entity.Machine.findOrCreateDomain(java.lang.String):com.dianping.cat.consumer.storage.model.entity.Domain","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Item Group.findItem(String)` reads without synchronization from container `this.m_items` via call to `get`. Potentially races with write in method `Group.findOrCreateItem(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/server/entity/Group.java","tnLine":50,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.server.entity.Group.findItem(java.lang.String):com.dianping.cat.home.server.entity.Item","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `InputStreamReader(...)` at line 40 is not released after line 40.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/group/transform/DefaultJsonParser.java","tnLine":40,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.group.transform.DefaultJsonParser.parse(java.lang.Class,java.io.InputStream):com.dianping.cat.home.group.IEntity","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `DefaultNativeParser(...)` at line 28 is not released after line 41.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/matrix/model/transform/DefaultNativeParser.java","tnLine":41,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.matrix.model.transform.DefaultNativeParser.parse(java.io.ByteArrayInputStream):com.dianping.cat.consumer.matrix.model.entity.MatrixReport","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Segment Segment.addMachine(Machine)` mutates container `this.m_machines` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/top/model/entity/Segment.java","tnLine":79,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.top.model.entity.Segment.addMachine(com.dianping.cat.consumer.top.model.entity.Machine):com.dianping.cat.consumer.top.model.entity.Segment","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `ServerMetricConfig ServerMetricConfig.addGroup(Group)` mutates container `this.m_groups` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/server/entity/ServerMetricConfig.java","tnLine":21,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.server.entity.ServerMetricConfig.addGroup(com.dianping.cat.home.server.entity.Group):com.dianping.cat.home.server.entity.ServerMetricConfig","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `BusinessReport BusinessReport.addBusinessItem(BusinessItem)` mutates container `this.m_businessItems` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/business/model/entity/BusinessReport.java","tnLine":34,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.business.model.entity.BusinessReport.addBusinessItem(com.dianping.cat.consumer.business.model.entity.BusinessItem):com.dianping.cat.consumer.business.model.entity.BusinessReport","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `AlertPolicy AlertPolicy.addType(Type)` mutates container `this.m_types` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-alarm/target/generated-sources/dal-model/com/dianping/cat/alarm/policy/entity/AlertPolicy.java","tnLine":21,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.alarm.policy.entity.AlertPolicy.addType(com.dianping.cat.alarm.policy.entity.Type):com.dianping.cat.alarm.policy.entity.AlertPolicy","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired to `in` by call to `new()` at line 107 is not released after line 127.\n**Note**: potential exception at line 111","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/problem/model/transform/DefaultSaxParser.java","tnLine":127,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.problem.model.transform.DefaultSaxParser.removeBOM(java.io.InputStream):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Type Type.addGroup(Group)` mutates container `this.m_groups` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-alarm/target/generated-sources/dal-model/com/dianping/cat/alarm/policy/entity/Type.java","tnLine":30,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.alarm.policy.entity.Type.addGroup(com.dianping.cat.alarm.policy.entity.Group):com.dianping.cat.alarm.policy.entity.Type","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `TransactionName TransactionName.addGraph(Graph)` mutates container `this.m_graphs` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/transaction/model/entity/TransactionName.java","tnLine":90,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.transaction.model.entity.TransactionName.addGraph(com.dianping.cat.consumer.transaction.model.entity.Graph):com.dianping.cat.consumer.transaction.model.entity.TransactionName","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `tmp` last assigned on line 95 could be null and is dereferenced at line 97.","tnFile":"cat-home/src/main/java/com/dianping/cat/report/page/business/service/LocalBusinessService.java","tnLine":97,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.page.business.service.LocalBusinessService.getReportFromLocalDisk(long,java.lang.String):com.dianping.cat.consumer.business.model.entity.BusinessReport","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `ReportReloadConfigManager.m_config` last assigned on line 113 could be null and is dereferenced by call to `storeConfig()` at line 115.","tnFile":"cat-core/src/main/java/com/dianping/cat/config/ReportReloadConfigManager.java","tnLine":115,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.config.ReportReloadConfigManager.insert(java.lang.String):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void MessageIdFactory.close()` reads without synchronization from `this.m_markChannel`. Potentially races with write in method `MessageIdFactory.close()`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-client/src/main/java/com/dianping/cat/message/internal/MessageIdFactory.java","tnLine":75,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.message.internal.MessageIdFactory.close():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Duration Entry.findDuration(int)` reads without synchronization from container `this.m_durations` via call to `get`. Potentially races with write in method `Entry.findOrCreateDuration(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/problem/model/entity/Entry.java","tnLine":65,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.problem.model.entity.Entry.findDuration(int):com.dianping.cat.consumer.problem.model.entity.Duration","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Type AlertPolicy.findOrCreateType(String)` reads without synchronization from container `this.m_types` via call to `get`. Potentially races with write in method `AlertPolicy.findOrCreateType(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-alarm/target/generated-sources/dal-model/com/dianping/cat/alarm/policy/entity/AlertPolicy.java","tnLine":46,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.alarm.policy.entity.AlertPolicy.findOrCreateType(java.lang.String):com.dianping.cat.alarm.policy.entity.Type","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `o1.getName()` could be null and is dereferenced at line 243.","tnFile":"cat-home/src/main/java/com/dianping/cat/report/page/state/StateDisplay.java","tnLine":243,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.page.state.StateDisplay$DomainCompartor.compare(com.dianping.cat.consumer.state.model.entity.ProcessDomain,com.dianping.cat.consumer.state.model.entity.ProcessDomain):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Duration TransactionName.removeDuration(int)` mutates container `this.m_durations` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/transaction/model/entity/TransactionName.java","tnLine":405,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.transaction.model.entity.TransactionName.removeDuration(int):com.dianping.cat.consumer.transaction.model.entity.Duration","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Machine Domain.findOrCreateMachine(String)` reads without synchronization from container `this.m_machines` via call to `get`. Potentially races with write in method `Domain.addMachine(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/jar/entity/Domain.java","tnLine":54,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.jar.entity.Domain.findOrCreateMachine(java.lang.String):com.dianping.cat.home.jar.entity.Machine","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Duration Entity.findDuration(int)` reads without synchronization from container `this.m_durations` via call to `get`. Potentially races with write in method `Entity.findOrCreateDuration(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/problem/model/entity/Entity.java","tnLine":63,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.problem.model.entity.Entity.findDuration(int):com.dianping.cat.consumer.problem.model.entity.Duration","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `new()` at line 216 is not released after line 235.\n**Note**: potential exception at line 222","tnFile":"cat-core/src/main/java/com/dianping/cat/service/IpService.java","tnLine":235,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.service.IpService.initForeignAreaMap(java.io.InputStream):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Machine HeartbeatReport.removeMachine(String)` mutates container `this.m_machines` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/heartbeat/model/entity/HeartbeatReport.java","tnLine":137,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.heartbeat.model.entity.HeartbeatReport.removeMachine(java.lang.String):com.dianping.cat.consumer.heartbeat.model.entity.Machine","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Matrix MatrixReport.findOrCreateMatrix(String)` reads without synchronization from container `this.m_matrixs` via call to `get`. Potentially races with write in method `MatrixReport.removeMatrix(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/matrix/model/entity/MatrixReport.java","tnLine":67,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.matrix.model.entity.MatrixReport.findOrCreateMatrix(java.lang.String):com.dianping.cat.consumer.matrix.model.entity.Matrix","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int TpValueStatisticConfig.hashCode()` reads without synchronization from container `this.m_domains` via call to `hashCode`. Potentially races with write in method `TpValueStatisticConfig.findOrCreateDomain(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-core/target/generated-sources/dal-model/com/dianping/cat/configuration/tp/entity/TpValueStatisticConfig.java","tnLine":70,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.configuration.tp.entity.TpValueStatisticConfig.hashCode():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired to `in` by call to `new()` at line 102 is not released after line 122.\n**Note**: potential exception at line 106","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/router/transform/DefaultSaxParser.java","tnLine":122,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.router.transform.DefaultSaxParser.removeBOM(java.io.InputStream):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `DomainGroupConfigManager.m_domainGroup` last assigned on line 92 could be null and is dereferenced by call to `storeConfig()` at line 94.","tnFile":"cat-home/src/main/java/com/dianping/cat/report/page/DomainGroupConfigManager.java","tnLine":94,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.page.DomainGroupConfigManager.insert(java.lang.String):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `ProcessDomain Machine.findProcessDomain(String)` reads without synchronization from container `this.m_processDomains` via call to `get`. Potentially races with write in method `Machine.findOrCreateProcessDomain(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/state/model/entity/Machine.java","tnLine":91,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.state.model.entity.Machine.findProcessDomain(java.lang.String):com.dianping.cat.consumer.state.model.entity.ProcessDomain","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `ClientReport ClientReport.addDomain(Domain)` mutates container `this.m_domains` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/service/client/entity/ClientReport.java","tnLine":34,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.service.client.entity.ClientReport.addDomain(com.dianping.cat.home.service.client.entity.Domain):com.dianping.cat.home.service.client.entity.ClientReport","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `DomainConfig NodeConfig.findOrCreateDomainConfig(String)` reads without synchronization from container `this.m_domainConfigs` via call to `get`. Potentially races with write in method `NodeConfig.findOrCreateDomainConfig(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/dependency/config/entity/NodeConfig.java","tnLine":64,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.dependency.config.entity.NodeConfig.findOrCreateDomainConfig(java.lang.String):com.dianping.cat.home.dependency.config.entity.DomainConfig","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Level Group.findOrCreateLevel(String)` reads without synchronization from container `this.m_levels` via call to `get`. Potentially races with write in method `Group.removeLevel(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-alarm/target/generated-sources/dal-model/com/dianping/cat/alarm/policy/entity/Group.java","tnLine":54,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.alarm.policy.entity.Group.findOrCreateLevel(java.lang.String):com.dianping.cat.alarm.policy.entity.Level","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Domain JarReport.removeDomain(String)` mutates container `this.m_domains` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/jar/entity/JarReport.java","tnLine":124,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.jar.entity.JarReport.removeDomain(java.lang.String):com.dianping.cat.home.jar.entity.Domain","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int ServerMetricConfig.hashCode()` reads without synchronization from container `this.m_groups` via call to `hashCode`. Potentially races with write in method `ServerMetricConfig.findOrCreateGroup(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/server/entity/ServerMetricConfig.java","tnLine":70,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.server.entity.ServerMetricConfig.hashCode():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `source` last assigned on line 181 could be null and is dereferenced at line 193.","tnFile":"cat-consumer/src/main/java/com/dianping/cat/consumer/transaction/TransactionReportMerger.java","tnLine":193,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.transaction.TransactionReportMerger.mergeLongValue(java.lang.String,java.lang.String):long[]","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `DefaultNativeParser(...)` at line 32 is not released after line 45.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/event/model/transform/DefaultNativeParser.java","tnLine":45,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.event.model.transform.DefaultNativeParser.parse(java.io.ByteArrayInputStream):com.dianping.cat.consumer.event.model.entity.EventReport","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `BaseRuleConfigManager.m_config` last assigned on line 333 could be null and is dereferenced by call to `storeConfig()` at line 335.","tnFile":"cat-home/src/main/java/com/dianping/cat/report/alert/spi/config/BaseRuleConfigManager.java","tnLine":335,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.alert.spi.config.BaseRuleConfigManager.insert(java.lang.String):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `new()` at line 72 is not released after line 79.","tnFile":"cat-home/src/main/java/com/dianping/cat/report/page/metric/service/DefaultBaselineService.java","tnLine":79,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.page.metric.service.DefaultBaselineService.decodeBaselines(byte[]):double[]","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `JavaThread Entry.findThread(String)` reads without synchronization from container `this.m_threads` via call to `get`. Potentially races with write in method `Entry.findOrCreateThread(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/problem/model/entity/Entry.java","tnLine":69,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.problem.model.entity.Entry.findThread(java.lang.String):com.dianping.cat.consumer.problem.model.entity.JavaThread","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Matrix MatrixReport.findMatrix(String)` reads without synchronization from container `this.m_matrixs` via call to `get`. Potentially races with write in method `MatrixReport.findOrCreateMatrix(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/matrix/model/entity/MatrixReport.java","tnLine":63,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.matrix.model.entity.MatrixReport.findMatrix(java.lang.String):com.dianping.cat.consumer.matrix.model.entity.Matrix","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List DefaultMessageAnalyzerManager.getAnalyzer(String,long)` reads without synchronization from container `map` via call to `get`. Potentially races with write in method `DefaultMessageAnalyzerManager.getAnalyzer(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-core/src/main/java/com/dianping/cat/analysis/DefaultMessageAnalyzerManager.java","tnLine":83,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.analysis.DefaultMessageAnalyzerManager.getAnalyzer(java.lang.String,long):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired to `in` by call to `new()` at line 101 is not released after line 121.\n**Note**: potential exception at line 105","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/heartbeat/model/transform/DefaultSaxParser.java","tnLine":121,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.heartbeat.model.transform.DefaultSaxParser.removeBOM(java.io.InputStream):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Service HeavySql.findOrCreateService(String)` reads without synchronization from container `this.m_services` via call to `get`. Potentially races with write in method `HeavySql.findOrCreateService(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/heavy/entity/HeavySql.java","tnLine":61,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.heavy.entity.HeavySql.findOrCreateService(java.lang.String):com.dianping.cat.home.heavy.entity.Service","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `sources` last assigned on line 124 could be null and is dereferenced at line 128.","tnFile":"cat-home/src/main/java/com/dianping/cat/report/alert/heartbeat/HeartbeatAlert.java","tnLine":128,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.alert.heartbeat.HeartbeatAlert.buildBaseValue(com.dianping.cat.consumer.heartbeat.model.entity.Machine):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Type Report.removeType(String)` mutates container `this.m_types` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/all/config/entity/Report.java","tnLine":94,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.all.config.entity.Report.removeType(java.lang.String):com.dianping.cat.consumer.all.config.entity.Type","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void LocalTokenMapping.open(int,String)` reads without synchronization from container `this.m_map` via call to `isEmpty`. Potentially races with write in method `LocalTokenMapping.map(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-hadoop/src/main/java/org/unidal/cat/message/storage/local/LocalTokenMapping.java","tnLine":194,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.unidal.cat.message.storage.local.LocalTokenMapping.open(int,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void DefaultMessageFinderManager.register(int,MessageFinder)` mutates container `finders` via call to `add` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"cat-hadoop/src/main/java/org/unidal/cat/message/storage/internals/DefaultMessageFinderManager.java","tnLine":77,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.unidal.cat.message.storage.internals.DefaultMessageFinderManager.register(int,org.unidal.cat.message.storage.MessageFinder):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Machine EventReport.findOrCreateMachine(String)` reads without synchronization from container `this.m_machines` via call to `get`. Potentially races with write in method `EventReport.findOrCreateMachine(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/event/model/entity/EventReport.java","tnLine":74,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.event.model.entity.EventReport.findOrCreateMachine(java.lang.String):com.dianping.cat.consumer.event.model.entity.Machine","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Report AllConfig.findReport(String)` reads without synchronization from container `this.m_reports` via call to `get`. Potentially races with write in method `AllConfig.findOrCreateReport(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/all/config/entity/AllConfig.java","tnLine":42,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.all.config.entity.AllConfig.findReport(java.lang.String):com.dianping.cat.consumer.all.config.entity.Report","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Domain UtilizationReport.findDomain(String)` reads without synchronization from container `this.m_domains` via call to `get`. Potentially races with write in method `UtilizationReport.findOrCreateDomain(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/utilization/entity/UtilizationReport.java","tnLine":54,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.utilization.entity.UtilizationReport.findDomain(java.lang.String):com.dianping.cat.home.utilization.entity.Domain","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `tmpConfig` last assigned on line 58 could be null and is dereferenced by call to `turnOnOrOffConfig(...)` at line 63.","tnFile":"cat-alarm/src/main/java/com/dianping/cat/alarm/spi/config/AlertConfigManager.java","tnLine":63,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.alarm.spi.config.AlertConfigManager.buildReceiverContentByOnOff(java.lang.String,java.lang.String):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Segment Item.removeSegment(String)` mutates container `this.m_segments` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/server/entity/Item.java","tnLine":94,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.server.entity.Item.removeSegment(java.lang.String):com.dianping.cat.home.server.entity.Segment","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `ip` last assigned on line 198 could be null and is dereferenced at line 229.","tnFile":"cat-home/src/main/java/com/dianping/cat/report/page/problem/Handler.java","tnLine":229,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.page.problem.Handler.handleOutbound(com.dianping.cat.report.page.problem.Context):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Extension Period.findOrCreateExtension(String)` reads without synchronization from container `this.m_extensions` via call to `get`. Potentially races with write in method `Period.removeExtension(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/heartbeat/model/entity/Period.java","tnLine":107,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.heartbeat.model.entity.Period.findOrCreateExtension(java.lang.String):com.dianping.cat.consumer.heartbeat.model.entity.Extension","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `DefaultNativeParser(...)` at line 33 is not released after line 46.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/heartbeat/model/transform/DefaultNativeParser.java","tnLine":46,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.heartbeat.model.transform.DefaultNativeParser.parse(java.io.ByteArrayInputStream):com.dianping.cat.consumer.heartbeat.model.entity.HeartbeatReport","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `StatusCode TransactionName.removeStatusCode(String)` mutates container `this.m_statusCodes` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/transaction/model/entity/TransactionName.java","tnLine":417,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.transaction.model.entity.TransactionName.removeStatusCode(java.lang.String):com.dianping.cat.consumer.transaction.model.entity.StatusCode","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void MessageIdFactory.close()` writes to field `this.m_markChannel` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"cat-client/src/main/java/com/dianping/cat/message/internal/MessageIdFactory.java","tnLine":77,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.message.internal.MessageIdFactory.close():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `ServiceReport ServiceReport.addDomain(Domain)` mutates container `this.m_domains` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/service/entity/ServiceReport.java","tnLine":34,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.service.entity.ServiceReport.addDomain(com.dianping.cat.home.service.entity.Domain):com.dianping.cat.home.service.entity.ServiceReport","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Rule MonitorRules.removeRule(String)` mutates container `this.m_rules` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-alarm/target/generated-sources/dal-model/com/dianping/cat/alarm/rule/entity/MonitorRules.java","tnLine":80,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.alarm.rule.entity.MonitorRules.removeRule(java.lang.String):com.dianping.cat.alarm.rule.entity.Rule","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `tmp` last assigned on line 101 could be null and is dereferenced at line 103.","tnFile":"cat-home/src/main/java/com/dianping/cat/report/page/problem/service/LocalProblemService.java","tnLine":103,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.page.problem.service.LocalProblemService.getReportFromLocalDisk(long,java.lang.String):com.dianping.cat.consumer.problem.model.entity.ProblemReport","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `report` last assigned on line 55 could be null and is dereferenced by call to `buildXml(...)` at line 76.","tnFile":"cat-home/src/main/java/com/dianping/cat/report/page/top/service/LocalTopService.java","tnLine":76,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.page.top.service.LocalTopService.buildReport(com.dianping.cat.report.service.ModelRequest,com.dianping.cat.report.service.ModelPeriod,java.lang.String,com.dianping.cat.mvc.ApiPayload):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `source` last assigned on line 122 could be null and is dereferenced at line 137.","tnFile":"cat-consumer/src/main/java/com/dianping/cat/consumer/event/EventReportMerger.java","tnLine":137,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.event.EventReportMerger.mergeIntegerValue(java.lang.String,java.lang.String):java.lang.Integer[]","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `ByteBuf LocalBucket.get(MessageId)` indirectly reads without synchronization from `this.m_data.m_offset`. Potentially races with write in method `LocalBucket.puts(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-hadoop/src/main/java/org/unidal/cat/message/storage/local/LocalBucket.java","tnLine":103,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.unidal.cat.message.storage.local.LocalBucket.get(com.dianping.cat.message.internal.MessageId):io.netty.buffer.ByteBuf","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void LocalTokenMapping.open(int,String)` writes to field `this.m_block` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-hadoop/src/main/java/org/unidal/cat/message/storage/local/LocalTokenMapping.java","tnLine":177,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.unidal.cat.message.storage.local.LocalTokenMapping.open(int,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired to `in` by call to `new()` at line 95 is not released after line 115.\n**Note**: potential exception at line 99","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/service/transform/DefaultSaxParser.java","tnLine":115,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.service.transform.DefaultSaxParser.removeBOM(java.io.InputStream):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired to `in` by call to `new()` at line 90 is not released after line 110.\n**Note**: potential exception at line 94","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/heartbeat/transform/DefaultSaxParser.java","tnLine":110,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.heartbeat.transform.DefaultSaxParser.removeBOM(java.io.InputStream):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired to `in` by call to `new()` at line 98 is not released after line 118.\n**Note**: potential exception at line 102","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/state/model/transform/DefaultSaxParser.java","tnLine":118,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.state.model.transform.DefaultSaxParser.removeBOM(java.io.InputStream):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void DefaultReportManager.cleanup(long)` reads without synchronization from container `this.m_reports` via call to `keySet`. Potentially races with write in method `DefaultReportManager.storeHourlyReports(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-core/src/main/java/com/dianping/cat/report/DefaultReportManager.java","tnLine":75,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.DefaultReportManager.cleanup(long):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `BlockDumper DefaultBlockDumperManager.findOrCreate(int)` reads without synchronization from container `this.m_map` via call to `get`. Potentially races with write in method `DefaultBlockDumperManager.close(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-hadoop/src/main/java/org/unidal/cat/message/storage/internals/DefaultBlockDumperManager.java","tnLine":61,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.unidal.cat.message.storage.internals.DefaultBlockDumperManager.findOrCreate(int):org.unidal.cat.message.storage.BlockDumper","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `InputStreamReader(...)` at line 50 is not released after line 50.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/service/client/transform/DefaultJsonParser.java","tnLine":50,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.service.client.transform.DefaultJsonParser.parse(java.lang.Class,java.io.InputStream):com.dianping.cat.home.service.client.IEntity","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `PatternItem UrlPattern.findOrCreatePatternItem(String)` reads without synchronization from container `this.m_patternItems` via call to `get`. Potentially races with write in method `UrlPattern.removePatternItem(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-core/target/generated-sources/dal-model/com/dianping/cat/configuration/web/url/entity/UrlPattern.java","tnLine":78,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.configuration.web.url.entity.UrlPattern.findOrCreatePatternItem(java.lang.String):com.dianping.cat.configuration.web.url.entity.PatternItem","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired to `in` by call to `new()` at line 92 is not released after line 112.\n**Note**: potential exception at line 96","tnFile":"cat-alarm/target/generated-sources/dal-model/com/dianping/cat/alarm/policy/transform/DefaultSaxParser.java","tnLine":112,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.alarm.policy.transform.DefaultSaxParser.removeBOM(java.io.InputStream):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Machine StateReport.findMachine(String)` reads without synchronization from container `this.m_machines` via call to `get`. Potentially races with write in method `StateReport.findOrCreateMachine(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/state/model/entity/StateReport.java","tnLine":54,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.state.model.entity.StateReport.findMachine(java.lang.String):com.dianping.cat.consumer.state.model.entity.Machine","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void LocalMessageBucket.initialize(String)` writes to field `this.m_block` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-core/src/main/java/com/dianping/cat/message/storage/LocalMessageBucket.java","tnLine":146,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.message.storage.LocalMessageBucket.initialize(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `routerConfig` last assigned on line 166 could be null and is dereferenced by call to `validate(...)` at line 168.","tnFile":"cat-home/src/main/java/com/dianping/cat/system/page/router/config/RouterConfigManager.java","tnLine":168,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.system.page.router.config.RouterConfigManager.insert(java.lang.String):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `report` last assigned on line 55 could be null and is dereferenced by call to `buildXml(...)` at line 70.","tnFile":"cat-home/src/main/java/com/dianping/cat/report/page/matrix/service/LocalMatrixService.java","tnLine":70,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.page.matrix.service.LocalMatrixService.buildReport(com.dianping.cat.report.service.ModelRequest,com.dianping.cat.report.service.ModelPeriod,java.lang.String,com.dianping.cat.mvc.ApiPayload):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `report` last assigned on line 55 could be null and is dereferenced by call to `buildXml(...)` at line 70.","tnFile":"cat-home/src/main/java/com/dianping/cat/report/page/dependency/service/LocalDependencyService.java","tnLine":70,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.page.dependency.service.LocalDependencyService.buildReport(com.dianping.cat.report.service.ModelRequest,com.dianping.cat.report.service.ModelPeriod,java.lang.String,com.dianping.cat.mvc.ApiPayload):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired to `in` by call to `new()` at line 99 is not released after line 119.\n**Note**: potential exception at line 103","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/cross/model/transform/DefaultSaxParser.java","tnLine":119,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.cross.model.transform.DefaultSaxParser.removeBOM(java.io.InputStream):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Map DefaultReportManager.loadHourlyReports(long,DefaultReportManager$StoragePolicy,int)` mutates container `this.m_reports` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-core/src/main/java/com/dianping/cat/report/DefaultReportManager.java","tnLine":173,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.DefaultReportManager.loadHourlyReports(long,com.dianping.cat.report.DefaultReportManager$StoragePolicy,int):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `StatusInfo StatusInfo.addExtension(Extension)` mutates container `this.m_extensions` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-client/target/generated-sources/dal-model/com/dianping/cat/status/model/entity/StatusInfo.java","tnLine":42,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.status.model.entity.StatusInfo.addExtension(com.dianping.cat.status.model.entity.Extension):com.dianping.cat.status.model.entity.StatusInfo","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object DefaultReportManager.getHourlyReport(long,String,boolean)` reads without synchronization from container `this.m_reports` via call to `get`. Potentially races with write in method `DefaultReportManager.storeHourlyReports(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-core/src/main/java/com/dianping/cat/report/DefaultReportManager.java","tnLine":116,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.DefaultReportManager.getHourlyReport(long,java.lang.String,boolean):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Ratio Matrix.findRatio(String)` reads without synchronization from container `this.m_ratios` via call to `get`. Potentially races with write in method `Matrix.findOrCreateRatio(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/matrix/model/entity/Matrix.java","tnLine":58,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.matrix.model.entity.Matrix.findRatio(java.lang.String):com.dianping.cat.consumer.matrix.model.entity.Ratio","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `JavaThread Entry.removeThread(String)` mutates container `this.m_threads` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/problem/model/entity/Entry.java","tnLine":150,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.problem.model.entity.Entry.removeThread(java.lang.String):com.dianping.cat.consumer.problem.model.entity.JavaThread","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int Entry.hashCode()` reads without synchronization from container `this.m_threads` via call to `hashCode`. Potentially races with write in method `Entry.findOrCreateThread(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/problem/model/entity/Entry.java","tnLine":129,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.problem.model.entity.Entry.hashCode():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int Type.hashCode()` reads without synchronization from container `this.m_names` via call to `hashCode`. Potentially races with write in method `Type.findOrCreateName(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/cross/model/entity/Type.java","tnLine":147,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.cross.model.entity.Type.hashCode():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired to `in` by call to `new()` at line 90 is not released after line 110.\n**Note**: potential exception at line 94","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/business/model/transform/DefaultSaxParser.java","tnLine":110,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.business.model.transform.DefaultSaxParser.removeBOM(java.io.InputStream):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `MessageDumper DefaultMessageDumperManager.find(int)` reads without synchronization from container `this.m_dumpers` via call to `get`. Potentially races with write in method `DefaultMessageDumperManager.findOrCreate(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-hadoop/src/main/java/org/unidal/cat/message/storage/internals/DefaultMessageDumperManager.java","tnLine":65,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.unidal.cat.message.storage.internals.DefaultMessageDumperManager.find(int):org.unidal.cat.message.storage.MessageDumper","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Domain ServiceReport.removeDomain(String)` mutates container `this.m_domains` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/service/entity/ServiceReport.java","tnLine":113,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.service.entity.ServiceReport.removeDomain(java.lang.String):com.dianping.cat.home.service.entity.Domain","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `AlertConfigManager.m_config` last assigned on line 109 could be null and is dereferenced by call to `storeConfig()` at line 111.","tnFile":"cat-alarm/src/main/java/com/dianping/cat/alarm/spi/config/AlertConfigManager.java","tnLine":111,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.alarm.spi.config.AlertConfigManager.insert(java.lang.String):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `TransactionType TransactionType.addRange2(Range2)` mutates container `this.m_range2s` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/transaction/model/entity/TransactionType.java","tnLine":94,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.transaction.model.entity.TransactionType.addRange2(com.dianping.cat.consumer.transaction.model.entity.Range2):com.dianping.cat.consumer.transaction.model.entity.TransactionType","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `NodeConfig NodeConfig.addDomainConfig(DomainConfig)` mutates container `this.m_domainConfigs` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/dependency/config/entity/NodeConfig.java","tnLine":40,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.dependency.config.entity.NodeConfig.addDomainConfig(com.dianping.cat.home.dependency.config.entity.DomainConfig):com.dianping.cat.home.dependency.config.entity.NodeConfig","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `HeavyCall HeavyCall.addService(Service)` mutates container `this.m_services` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/heavy/entity/HeavyCall.java","tnLine":23,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.heavy.entity.HeavyCall.addService(com.dianping.cat.home.heavy.entity.Service):com.dianping.cat.home.heavy.entity.HeavyCall","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `ip` last assigned on line 198 could be null and is dereferenced at line 267.","tnFile":"cat-home/src/main/java/com/dianping/cat/report/page/problem/Handler.java","tnLine":267,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.page.problem.Handler.handleOutbound(com.dianping.cat.report.page.problem.Context):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Domain Domain.addSql(Sql)` mutates container `this.m_sqls` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/storage/model/entity/Domain.java","tnLine":37,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.storage.model.entity.Domain.addSql(com.dianping.cat.consumer.storage.model.entity.Sql):com.dianping.cat.consumer.storage.model.entity.Domain","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void LocalMessageBucket.initialize(String)` reads without synchronization from `this.m_buf`. Potentially races with write in method `LocalMessageBucket.close()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-core/src/main/java/com/dianping/cat/message/storage/LocalMessageBucket.java","tnLine":148,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.message.storage.LocalMessageBucket.initialize(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void CurrentWeeklyMonthlyReportTask.run()` indirectly reads without synchronization from container `this.m_tasks` via call to `iterator`. Potentially races with write in method `CurrentWeeklyMonthlyReportTask.register(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/src/main/java/com/dianping/cat/report/task/current/CurrentWeeklyMonthlyReportTask.java","tnLine":86,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.task.current.CurrentWeeklyMonthlyReportTask.run():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Object StateAnalyzer.getReport(String)` indirectly writes to field `temp.m_blockTotal` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/src/main/java/com/dianping/cat/consumer/state/StateAnalyzer.java","tnLine":46,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.state.StateAnalyzer.getReport(java.lang.String):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Operation Domain.findOperation(String)` reads without synchronization from container `this.m_operations` via call to `get`. Potentially races with write in method `Domain.findOrCreateOperation(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/storage/model/entity/Domain.java","tnLine":57,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.storage.model.entity.Domain.findOperation(java.lang.String):com.dianping.cat.consumer.storage.model.entity.Operation","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Category AlertSummary.findCategory(String)` reads without synchronization from container `this.m_categories` via call to `get`. Potentially races with write in method `AlertSummary.findOrCreateCategory(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/alert/summary/entity/AlertSummary.java","tnLine":54,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.alert.summary.entity.AlertSummary.findCategory(java.lang.String):com.dianping.cat.home.alert.summary.entity.Category","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `TopologyNode TopologyGraph.findOrCreateTopologyNode(String)` reads without synchronization from container `this.m_nodes` via call to `get`. Potentially races with write in method `TopologyGraph.addTopologyNode(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/dependency/graph/entity/TopologyGraph.java","tnLine":102,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.dependency.graph.entity.TopologyGraph.findOrCreateTopologyNode(java.lang.String):com.dianping.cat.home.dependency.graph.entity.TopologyNode","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `InputStreamReader(...)` at line 71 is not released after line 71.","tnFile":"cat-alarm/target/generated-sources/dal-model/com/dianping/cat/alarm/server/transform/DefaultJsonParser.java","tnLine":71,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.alarm.server.transform.DefaultJsonParser.parseArray(java.lang.Class,java.io.InputStream):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `TransactionType TransactionType.addAllDuration(AllDuration)` mutates container `this.m_allDurations` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/transaction/model/entity/TransactionType.java","tnLine":79,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.transaction.model.entity.TransactionType.addAllDuration(com.dianping.cat.consumer.transaction.model.entity.AllDuration):com.dianping.cat.consumer.transaction.model.entity.TransactionType","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `TransactionName TransactionName.addStatusCode(StatusCode)` mutates container `this.m_statusCodes` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/transaction/model/entity/TransactionName.java","tnLine":100,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.transaction.model.entity.TransactionName.addStatusCode(com.dianping.cat.consumer.transaction.model.entity.StatusCode):com.dianping.cat.consumer.transaction.model.entity.TransactionName","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `AllDuration Range.findAllDuration(int)` reads without synchronization from container `this.m_allDurations` via call to `get`. Potentially races with write in method `Range.findOrCreateAllDuration(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/transaction/model/entity/Range.java","tnLine":76,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.transaction.model.entity.Range.findAllDuration(int):com.dianping.cat.consumer.transaction.model.entity.AllDuration","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Service HeavyCall.findService(String)` reads without synchronization from container `this.m_services` via call to `get`. Potentially races with write in method `HeavyCall.findOrCreateService(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/heavy/entity/HeavyCall.java","tnLine":53,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.heavy.entity.HeavyCall.findService(java.lang.String):com.dianping.cat.home.heavy.entity.Service","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `os` last assigned on line 48 could be null and is dereferenced at line 50.","tnFile":"cat-client/src/main/java/com/dianping/cat/message/internal/MilliSecondTimer.java","tnLine":50,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.message.internal.MilliSecondTimer.initialize():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Machine HeartbeatReport.findMachine(String)` reads without synchronization from container `this.m_machines` via call to `get`. Potentially races with write in method `HeartbeatReport.findOrCreateMachine(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/heartbeat/model/entity/HeartbeatReport.java","tnLine":70,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.heartbeat.model.entity.HeartbeatReport.findMachine(java.lang.String):com.dianping.cat.consumer.heartbeat.model.entity.Machine","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Receiver AlertConfig.removeReceiver(String)` mutates container `this.m_receivers` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-alarm/target/generated-sources/dal-model/com/dianping/cat/alarm/receiver/entity/AlertConfig.java","tnLine":98,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.alarm.receiver.entity.AlertConfig.removeReceiver(java.lang.String):com.dianping.cat.alarm.receiver.entity.Receiver","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void MessageIdFactory.close()` writes to field `this.m_markFile` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"cat-client/src/main/java/com/dianping/cat/message/internal/MessageIdFactory.java","tnLine":81,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.message.internal.MessageIdFactory.close():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void LocalReportBucket.close()` reads without synchronization from `this.m_writeLock`. Potentially races with write in method `LocalReportBucket.initialize(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-core/src/main/java/com/dianping/cat/report/LocalReportBucket.java","tnLine":81,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.LocalReportBucket.close():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.xerial.snappy.SnappyOutputStream` acquired by call to `DefaultBlock(...)` at line 131 is not released after line 135.","tnFile":"cat-hadoop/src/main/java/org/unidal/cat/message/storage/internals/DefaultMessageProcessor.java","tnLine":135,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.unidal.cat.message.storage.internals.DefaultMessageProcessor.processMessage(com.dianping.cat.message.spi.MessageTree):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `DefaultNativeParser(...)` at line 30 is not released after line 36.\n**Note**: potential exception at line 34","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/cross/model/transform/DefaultNativeParser.java","tnLine":36,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.cross.model.transform.DefaultNativeParser.parse(java.io.ByteArrayInputStream):com.dianping.cat.consumer.cross.model.entity.CrossReport","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Set DefaultReportManager.getDomains(long)` reads without synchronization from container `this.m_reports` via call to `get`. Potentially races with write in method `DefaultReportManager.getHourlyReport(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-core/src/main/java/com/dianping/cat/report/DefaultReportManager.java","tnLine":97,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.report.DefaultReportManager.getDomains(long):java.util.Set","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Domain Domain.addMethod(Method)` mutates container `this.m_methods` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/service/client/entity/Domain.java","tnLine":40,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.service.client.entity.Domain.addMethod(com.dianping.cat.home.service.client.entity.Method):com.dianping.cat.home.service.client.entity.Domain","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `AllDuration TransactionType.findAllDuration(int)` reads without synchronization from container `this.m_allDurations` via call to `get`. Potentially races with write in method `TransactionType.findOrCreateAllDuration(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/transaction/model/entity/TransactionType.java","tnLine":114,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.transaction.model.entity.TransactionType.findAllDuration(int):com.dianping.cat.consumer.transaction.model.entity.AllDuration","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int AllConfig.hashCode()` reads without synchronization from container `this.m_reports` via call to `hashCode`. Potentially races with write in method `AllConfig.findOrCreateReport(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/all/config/entity/AllConfig.java","tnLine":70,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.all.config.entity.AllConfig.hashCode():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Service HeavyCall.removeService(String)` mutates container `this.m_services` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/heavy/entity/HeavyCall.java","tnLine":117,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.heavy.entity.HeavyCall.removeService(java.lang.String):com.dianping.cat.home.heavy.entity.Service","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `ExtensionDetail Extension.removeExtensionDetail(String)` mutates container `this.m_details` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-client/target/generated-sources/dal-model/com/dianping/cat/status/model/entity/Extension.java","tnLine":114,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.status.model.entity.Extension.removeExtensionDetail(java.lang.String):com.dianping.cat.status.model.entity.ExtensionDetail","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Rule MonitorRules.findRule(String)` reads without synchronization from container `this.m_rules` via call to `get`. Potentially races with write in method `MonitorRules.findOrCreateRule(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-alarm/target/generated-sources/dal-model/com/dianping/cat/alarm/rule/entity/MonitorRules.java","tnLine":42,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.alarm.rule.entity.MonitorRules.findRule(java.lang.String):com.dianping.cat.alarm.rule.entity.Rule","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `NetworkPolicy NetworkPolicy.addNetwork(Network)` mutates container `this.m_networks` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/router/entity/NetworkPolicy.java","tnLine":36,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.router.entity.NetworkPolicy.addNetwork(com.dianping.cat.home.router.entity.Network):com.dianping.cat.home.router.entity.NetworkPolicy","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `DefaultNativeParser(...)` at line 28 is not released after line 41.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/dependency/graph/transform/DefaultNativeParser.java","tnLine":41,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.dependency.graph.transform.DefaultNativeParser.parse(java.io.ByteArrayInputStream):com.dianping.cat.home.dependency.graph.entity.TopologyGraph","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Receiver AlertConfig.findOrCreateReceiver(String)` reads without synchronization from container `this.m_receivers` via call to `get`. Potentially races with write in method `AlertConfig.addReceiver(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-alarm/target/generated-sources/dal-model/com/dianping/cat/alarm/receiver/entity/AlertConfig.java","tnLine":52,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.alarm.receiver.entity.AlertConfig.findOrCreateReceiver(java.lang.String):com.dianping.cat.alarm.receiver.entity.Receiver","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Graph TransactionName.removeGraph(int)` mutates container `this.m_graphs` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/transaction/model/entity/TransactionName.java","tnLine":409,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.transaction.model.entity.TransactionName.removeGraph(int):com.dianping.cat.consumer.transaction.model.entity.Graph","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Url HeavyCache.removeUrl(String)` mutates container `this.m_urls` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/heavy/entity/HeavyCache.java","tnLine":121,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.heavy.entity.HeavyCache.removeUrl(java.lang.String):com.dianping.cat.home.heavy.entity.Url","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `AllReportConfigManager.m_config` last assigned on line 126 could be null and is dereferenced by call to `storeConfig()` at line 127.","tnFile":"cat-consumer/src/main/java/com/dianping/cat/consumer/config/AllReportConfigManager.java","tnLine":127,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.config.AllReportConfigManager.insert(java.lang.String):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Error Segment.findOrCreateError(String)` reads without synchronization from container `this.m_errors` via call to `get`. Potentially races with write in method `Segment.findOrCreateError(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/top/model/entity/Segment.java","tnLine":107,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.top.model.entity.Segment.findOrCreateError(java.lang.String):com.dianping.cat.consumer.top.model.entity.Error","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `ExceptionLimit ExceptionRuleConfig.findExceptionLimit(String)` reads without synchronization from container `this.m_exceptionLimits` via call to `get`. Potentially races with write in method `ExceptionRuleConfig.findOrCreateExceptionLimit(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/exception/entity/ExceptionRuleConfig.java","tnLine":57,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.exception.entity.ExceptionRuleConfig.findExceptionLimit(java.lang.String):com.dianping.cat.home.exception.entity.ExceptionLimit","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired to `in` by call to `new()` at line 90 is not released after line 110.\n**Note**: potential exception at line 94","tnFile":"cat-core/target/generated-sources/dal-model/com/dianping/cat/configuration/web/url/transform/DefaultSaxParser.java","tnLine":110,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.configuration.web.url.transform.DefaultSaxParser.removeBOM(java.io.InputStream):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Extension StatusInfo.removeExtension(String)` mutates container `this.m_extensions` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-client/target/generated-sources/dal-model/com/dianping/cat/status/model/entity/StatusInfo.java","tnLine":201,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.status.model.entity.StatusInfo.removeExtension(java.lang.String):com.dianping.cat.status.model.entity.Extension","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `StatusCode TransactionName.findOrCreateStatusCode(String)` reads without synchronization from container `this.m_statusCodes` via call to `get`. Potentially races with write in method `TransactionName.removeStatusCode(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/transaction/model/entity/TransactionName.java","tnLine":208,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.transaction.model.entity.TransactionName.findOrCreateStatusCode(java.lang.String):com.dianping.cat.consumer.transaction.model.entity.StatusCode","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `NodeConfig TopologyGraphConfig.removeNodeConfig(String)` mutates container `this.m_nodeConfigs` via call to `remove` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/dependency/config/entity/TopologyGraphConfig.java","tnLine":121,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.dependency.config.entity.TopologyGraphConfig.removeNodeConfig(java.lang.String):com.dianping.cat.home.dependency.config.entity.NodeConfig","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Group Group.addItem(Item)` mutates container `this.m_items` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/server/entity/Group.java","tnLine":30,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.server.entity.Group.addItem(com.dianping.cat.home.server.entity.Item):com.dianping.cat.home.server.entity.Group","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `TokenMapping HdfsTokenMappingManager.getTokenMapping(int,String)` reads without synchronization from container `this.m_cache` via call to `get`. Potentially races with write in method `HdfsTokenMappingManager.getTokenMapping(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-hadoop/src/main/java/org/unidal/cat/message/storage/hdfs/HdfsTokenMappingManager.java","tnLine":77,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.unidal.cat.message.storage.hdfs.HdfsTokenMappingManager.getTokenMapping(int,java.lang.String):org.unidal.cat.message.storage.TokenMapping","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Domain RouterConfig.findOrCreateDomain(String)` reads without synchronization from container `this.m_domains` via call to `get`. Potentially races with write in method `RouterConfig.findOrCreateDomain(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"cat-home/target/generated-sources/dal-model/com/dianping/cat/home/router/entity/RouterConfig.java","tnLine":95,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.home.router.entity.RouterConfig.findOrCreateDomain(java.lang.String):com.dianping.cat.home.router.entity.Domain","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Extension Extension.addDetail(Detail)` mutates container `this.m_details` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"cat-consumer/target/generated-sources/dal-model/com/dianping/cat/consumer/heartbeat/model/entity/Extension.java","tnLine":30,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"com.dianping.cat.consumer.heartbeat.model.entity.Extension.addDetail(com.dianping.cat.consumer.heartbeat.model.entity.Detail):com.dianping.cat.consumer.heartbeat.model.entity.Extension","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}}],null,{"analysisLOC":null,"analysisBuildSys":"Maven []","analysisLang":null}]}]],"debugLog":"orm/DefaultLinker.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/cache/JspViewer.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/server/entity/Item.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/business/graph/CustomInfo.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/overload/Handler.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/storage/Model.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/transaction/JspFile.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/dependency/graph/TopologyGraphConfigManager.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/transaction/Handler.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-jdbc/com/dianping/cat/home/dal/report/OverloadEntity.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/monitor/Payload.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/task/reload/ReportReloadTask.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/system/page/router/service/CachedRouterConfigService.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/overload/JspFile.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/problem/transform/DetailStatistics.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/alert/summary/build/RelatedSummaryBuilder.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/group/transform/DefaultJsonParser.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/business/Handler.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/business/JspFile.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/task/reload/AbstractReportReloader.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/system/page/login/service/Credential.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/monitor/Context.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/utilization/entity/Domain.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/alert/business/BusinessContactor.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/utilization/transform/DefaultLinker.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/graph/metric/impl/DataExtractorImpl.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/router/Constants.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/metric/task/BaselineCreator.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/alert/transaction/TransactionAlert.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/group/transform/ILinker.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/business/Model.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/system/page/project/Payload.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/dependency/graph/IEntity.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/storage/transform/DefaultSaxParser.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/group/IVisitor.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/event/DisplayNames.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/matrix/Handler.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/business/Action.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/event/transform/PieGraphChartVisitor.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/matrix/JspFile.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/heartbeat/JspViewer.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/dependency/service/DependencyReportService.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/system/page/login/spi/ISession.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/alert/AlarmManager.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/graph/svg/GraphBuilder.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/overload/JspViewer.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/service/client/BaseEntity.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/overload/task/HourlyCapacityUpdater.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/state/StateDistirbutionVisitor.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/statistics/Payload.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/dependency/Handler.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/group/transform/DefaultNativeParser.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/ReportPage.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/system/page/project/Context.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/model/Handler.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/problem/service/CompositeProblemService.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/system/page/business/JspViewer.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/task/DefaultRemoteServersUpdater.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/dependency/format/transform/DefaultLinker.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/cross/display/TypeComparator.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/system/page/login/LoginAction.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/router/transform/DefaultJsonParser.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/system/page/login/service/CookieManager.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/alert/spi/config/BaseRuleConfigManager.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/server/IVisitor.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/model/JspViewer.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/task/current/CurrentReportBuilder.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/heartbeat/IEntity.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/alert/event/EventRuleConfigManager.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/group/IEntity.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/alert/JspViewer.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/event/JspFile.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/system/page/router/config/RouterConfigHandler.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/state/task/HistoryStateReportMerger.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/heartbeat/Model.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/statistics/task/heavy/HeavyReportBuilder.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/storage/IEntity.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/system/page/plugin/JspFile.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/server/transform/IMaker.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/group/Constants.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/view/DomainFilter.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/event/task/EventReportHourlyGraphCreator.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/problem/task/ProblemReportHourlyGraphCreator.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/service/client/Constants.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/user/entity/User.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/system/page/business/Model.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/jar/entity/JarReport.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/task/ReportFacade.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/overload/task/CapacityUpdateStatusManager.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/service/client/transform/DefaultJsonBuilder.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/system/page/login/spi/ISigninService.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/logview/service/RemoteLogViewService.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/state/Handler.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/dependency/graph/transform/BaseVisitor.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/exception/IEntity.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/heartbeat/entity/Metric.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/task/reload/impl/TopReportReloader.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/service/client/transform/DefaultXmlBuilder.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/alert/exception/ExceptionAlert.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/system/page/login/Model.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/dependency/format/transform/IMaker.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/dependency/Model.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/cross/Model.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/problem/transform/PieGraphChartVisitor.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-jdbc/com/dianping/cat/home/dal/report/MetricScreenEntity.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/graph/transform/DefaultLinker.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/storage/Context.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/alteration/JspViewer.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/heartbeat/HistoryGraphs.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/transaction/DisplayTypes.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/system/page/login/service/TokenBuilder.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/service/client/IEntity.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/dependency/graph/TopologyGraphManager.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/alert/business/BusinessDecorator.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/alert/exception/AlertExceptionBuilder.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/task/reload/ReportReloader.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/router/entity/NetworkPolicy.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/router/transform/DefaultJsonBuilder.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/business/transform/ILinker.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/state/StateBuilder.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/alert/summary/build/FailureSummaryBuilder.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/server/BaseEntity.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/jar/Constants.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/dependency/format/transform/DefaultXmlBuilder.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/heartbeat/config/HeartbeatDisplayPolicyManager.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/alert/heartbeat/HeartbeatContactor.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/system/page/permission/UserConfigManager.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/heartbeat/transform/DefaultSaxMaker.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/server/transform/DefaultXmlBuilder.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/dependency/service/RemoteDependencyService.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/transaction/Action.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/task/reload/impl/TransactionReportReloader.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/event/Action.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/problem/Model.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/transaction/task/TransactionReportDailyGraphCreator.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/graph/BarChart.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/graph/svg/AbstractGraphPayload.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/service/IEntity.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/system/page/business/Handler.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/system/page/business/JspFile.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/dependency/graph/TopologyGraphBuilder.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/alert/business/BusinessRuleConfigManager.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/dependency/graph/transform/DefaultJsonParser.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/server/transform/ILinker.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/system/page/login/service/TokenManager.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/router/transform/DefaultSaxParser.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/transaction/XmlViewer.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/heavy/transform/DefaultMerger.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/top/TopMetric.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/task/TaskHelper.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/heartbeat/Context.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/monitor/Model.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/service/client/transform/DefaultNativeBuilder.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/utilization/transform/BaseVisitor.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/build/CatDatabaseConfigurator.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/router/transform/ILinker.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/system/page/router/JspViewer.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/system/page/permission/Model.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/problem/LongConfig.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/system/page/router/config/StateReportVisitor.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/task/reload/impl/StateReportReloader.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/business/transform/DefaultSaxParser.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/dependency/graph/transform/DefaultNativeParser.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/alert/summary/transform/ILinker.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/service/transform/DefaultSaxMaker.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/alteration/Model.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/matrix/service/HistoricalMatrixService.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/system/page/login/spi/IContext.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/service/client/transform/ILinker.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/heartbeat/transform/IParser.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/alert/transaction/TransactionRuleConfigManager.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/system/page/config/Payload.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/router/IVisitor.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-jdbc/com/dianping/cat/home/dal/report/OverloadDao.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/heartbeat/entity/HeartbeatDisplayPolicy.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/task/reload/impl/EventReportReloader.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/storage/alert/entity/Storage.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/resource/transform/IMaker.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/top/JspViewer.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/resource/entity/ResourceConfig.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/dependency/format/entity/TopoGraphFormatConfig.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/alert/summary/entity/Alert.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/jar/transform/DefaultNativeBuilder.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/exception/IVisitor.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/top/Payload.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/service/transform/IMaker.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/storage/entity/StorageGroupConfig.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/group/transform/DefaultXmlBuilder.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/cross/display/NameComparator.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-jdbc/com/dianping/cat/home/dal/report/BaselineDao.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/utilization/transform/DefaultSaxParser.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/dependency/graph/Constants.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/user/transform/DefaultSaxMaker.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/heavy/transform/ILinker.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/problem/transform/ProblemStatistics.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/build/report/MetricComponentConfigurator.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/dependency/task/DependencyReportBuilder.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/transaction/task/TransactionReportHourlyGraphCreator.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-jdbc/com/dianping/cat/home/dal/report/ConfigModification.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/dependency/graph/transform/DefaultSaxParser.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-jdbc/com/dianping/cat/home/dal/report/BaselineEntity.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/user/transform/IMaker.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/DataSequence.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/system/page/permission/Action.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/system/page/config/processor/TransactionConfigProcessor.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/utilization/transform/DefaultMerger.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/dependency/config/entity/DomainConfig.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/transaction/transform/DistributionDetailVisitor.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/system/page/plugin/Handler.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/system/page/login/service/SigninService.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/logview/service/LocalMessageService.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/storage/Payload.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/state/StateDisplay.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/matrix/service/LocalMatrixService.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/business/entity/BusinessItem.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/task/reload/ReportReloadEntity.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/heartbeat/task/HeartbeatReportBuilder.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/jar/transform/DefaultMerger.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/logview/Model.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/heartbeat/service/LocalHeartbeatService.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/dependency/service/CompositeDependencyService.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/business/transform/DefaultSaxMaker.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/home/Context.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/storage/transform/PieChartVisitor.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/heartbeat/service/HistoricalHeartbeatService.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/jar/transform/IParser.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/heavy/transform/DefaultSaxParser.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/alert/exception/ExceptionRuleConfigManager.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/exception/BaseEntity.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/service/transform/DefaultSaxParser.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/matrix/service/CompositeMatrixService.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/dependency/format/BaseEntity.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-jdbc/com/dianping/cat/home/dal/report/MetricScreenDao.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/jar/entity/Machine.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/system/page/plugin/Payload.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/graph/PieChart.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/alert/summary/transform/DefaultXmlBuilder.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/dependency/format/entity/ProductLine.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/jar/transform/DefaultNativeParser.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/storage/service/CompositeStorageService.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/overload/task/OverloadReport.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/heartbeat/Handler.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/event/JspViewer.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/dependency/graph/LineGraphBuilder.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/home/Model.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/exception/transform/DefaultSaxParser.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/service/BaseEntity.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/dependency/config/IVisitor.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/heartbeat/HeartbeatSvgGraph.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/transaction/service/LocalTransactionService.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/router/entity/Domain.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/build/report/OfflineComponentConfigurator.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/dependency/Action.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/overload/task/CapacityUpdater.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/cross/Action.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/build/report/HeartbeatComponentConfigurator.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/graph/transform/DefaultSaxMaker.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/dependency/graph/transform/DefaultXmlBuilder.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/top/DomainInfo.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/business/graph/BusinessDataFetcher.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/alert/Action.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/utilization/transform/DefaultNativeParser.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/router/IEntity.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/monitor/JspViewer.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/system/page/business/Context.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/storage/transform/DefaultMerger.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/problem/service/RemoteProblemService.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/storage/alert/entity/Detail.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/alert/business/BusinessReportGroup.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/system/page/business/Payload.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/alert/Model.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/top/ProblemReportVisitor.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/state/Model.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/exception/entity/ExceptionExclude.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/dependency/graph/transform/IParser.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/business/JspViewer.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/storage/transform/DefaultXmlBuilder.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/system/page/project/Action.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/system/page/business/Action.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/overload/task/MonthlyCapacityUpdater.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/system/page/project/JspFile.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/alert/spi/AlarmRule.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/router/entity/Server.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/heavy/entity/Url.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/top/service/RemoteTopService.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/top/Context.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/model/Context.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-jdbc/com/dianping/cat/home/dal/report/MetricGraphDao.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/storage/Constants.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/graph/transform/IParser.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/alteration/Handler.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/event/transform/EventTrendGraphBuilder.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/metric/service/BaselineService.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/graph/BaseEntity.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/statistics/service/ClientReportService.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/alert/Handler.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/transaction/DisplayNames.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/system/page/login/JspViewer.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/storage/display/StorageAlertInfoBuilder.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-jdbc/com/dianping/cat/home/dal/report/ConfigModificationDao.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/event/AbstractPayload.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/statistics/JspFile.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/user/transform/DefaultSaxParser.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/dependency/config/transform/DefaultXmlBuilder.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/router/transform/DefaultSaxMaker.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/heavy/BaseEntity.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/system/page/config/processor/DependencyConfigProcessor.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/event/task/EventReportDailyGraphCreator.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/dependency/config/entity/EdgeConfig.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/model/Model.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/system/page/login/service/LoginMember.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/dependency/graph/BaseEntity.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/system/page/config/processor/GlobalConfigProcessor.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/overload/task/CapacityUpdateTask.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/jar/transform/IMaker.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/storage/Action.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/utilization/transform/DefaultNativeBuilder.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/heavy/entity/HeavyReport.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/service/client/transform/DefaultMerger.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/home/Payload.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/system/page/router/Handler.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/exception/entity/ExceptionLimit.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/dependency/config/entity/TopologyGraphConfig.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/dependency/service/LocalDependencyService.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/matrix/task/MatrixReportBuilder.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/system/page/login/spi/IToken.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/user/transform/IParser.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/dependency/graph/transform/IMaker.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/overload/task/DailyCapacityUpdater.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/jar/entity/Jar.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/dependency/config/transform/IMaker.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/task/cmdb/ProjectUpdateTask.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/system/page/login/service/Token.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/top/service/TopReportService.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/metric/task/BaselineConfigManager.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/system/page/login/spi/ICredential.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/matrix/Payload.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/graph/transform/ILinker.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/utilization/IVisitor.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/system/page/router/JspFile.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/service/transform/DefaultNativeBuilder.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/server/transform/DefaultSaxMaker.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-jdbc/com/dianping/cat/home/dal/report/TopologyGraphDao.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/router/transform/DefaultLinker.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/alert/summary/IEntity.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/router/entity/GroupServer.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/storage/alert/IVisitor.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/build/report/TransactionComponentConfigurator.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/system/page/permission/Context.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/matrix/Context.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/router/transform/BaseVisitor.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/state/StateHourlyGraphVisitor.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/transaction/Model.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/business/task/BusinessKeyHelper.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/state/service/RemoteStateService.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/router/entity/RouterConfig.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/problem/task/ProblemReportDailyGraphCreator.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/heavy/transform/DefaultNativeParser.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/heavy/transform/BaseVisitor.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/service/client/transform/DefaultNativeParser.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/utilization/transform/ILinker.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/transaction/Payload.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/system/page/config/processor/StorageConfigProcessor.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/service/transform/DefaultLinker.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/dependency/TopExceptionExclude.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/exception/transform/DefaultSaxMaker.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/heartbeat/transform/IMaker.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/user/transform/ILinker.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/service/client/entity/Domain.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-jdbc/com/dianping/cat/home/dal/report/TopologyGraphEntity.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/overload/Model.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/task/reload/impl/DependencyReportReloader.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/statistics/service/ServiceReportService.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/storage/service/RemoteStorageService.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/system/page/config/Context.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/event/Payload.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/alert/summary/transform/IMaker.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/graph/GraphLine.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/system/page/router/service/RouterConfigService.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/heavy/Constants.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/alert/summary/Constants.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/state/service/LocalStateService.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/task/TaskBuilder.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/cross/display/TypeDetailInfo.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/resource/BaseEntity.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-jdbc/com/dianping/cat/home/dal/report/AlertSummary.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/heartbeat/entity/Group.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/transaction/transform/TransactionTrendGraphBuilder.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/monitor/HttpStatus.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/router/transform/IParser.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/dependency/JspFile.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/statistics/service/UtilizationReportService.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/problem/Payload.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/transaction/transform/AllMachineMerger.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/heartbeat/service/HeartbeatReportService.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/jar/transform/ILinker.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/dependency/graph/GraphConstrant.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/router/transform/DefaultNativeParser.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/logview/Action.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/business/service/LocalBusinessService.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/system/SystemContext.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/alert/summary/build/AlertSummaryVisitor.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/dependency/TopMetric.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/problem/ThreadLevelInfo.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/service/transform/DefaultJsonBuilder.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/heartbeat/Action.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/dependency/format/transform/IParser.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/exception/transform/DefaultLinker.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/dependency/LineGraphBuilder.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/server/transform/IParser.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/dependency/config/transform/IParser.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/task/reload/impl/ProblemReportReloader.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/business/graph/CustomDataCalculator.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/business/transform/IParser.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/event/transform/AllNameMerger.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/alert/JspFile.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/dependency/graph/transform/DefaultNativeBuilder.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/storage/task/StorageReportBuilder.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/statistics/Handler.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/cross/task/CrossReportBuilder.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/router/transform/IMaker.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/service/transform/IParser.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/alert/spi/config/UserDefinedRuleManager.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/dependency/config/Constants.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/jar/transform/BaseVisitor.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/system/page/project/JspViewer.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/storage/entity/StorageGroup.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/group/transform/DefaultNativeBuilder.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/top/service/LocalTopService.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/graph/IEntity.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/dependency/graph/entity/TopologyGraph.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/build/report/StorageComponentConfigurator.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/cache/JspFile.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/group/transform/BaseVisitor.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/business/service/CompositeBusinessService.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/service/client/transform/DefaultSaxParser.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/server/Constants.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/alert/summary/entity/Category.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/service/client/entity/Method.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/group/BaseEntity.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/business/task/BusinessBaselineReportBuilder.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/statistics/task/service/ClientReportBuilder.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/view/ProblemReportHelper.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/task/reload/impl/BusinessReportReloader.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/server/transform/DefaultMerger.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/alteration/Action.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/system/page/config/Model.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/src/main/java/com/dianping/cat/report/page/matrix/service/RemoteMatrixService.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/group/transform/IMaker.java\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/generated-sources/dal-model/com/dianping/cat/home/group/entity/Group.java\\\"],\\\"classpath\\\":[\\\"/root/.m2/repository/org/apache/httpcomponents/httpmime/4.5.3/httpmime-4.5.3.jar\\\",\\\"/root/.m2/repository/io/netty/netty-all/4.0.24.Final/netty-all-4.0.24.Final.jar\\\",\\\"/root/.m2/repository/ant/ant/1.6.5/ant-1.6.5.jar\\\",\\\"/root/.m2/repository/org/codehaus/plexus/plexus-classworlds/2.5.1/plexus-classworlds-2.5.1.jar\\\",\\\"/root/.m2/repository/org/apache/zookeeper/zookeeper/3.4.5/zookeeper-3.4.5.jar\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-core/target/cat-core-3.0.0.jar\\\",\\\"/root/.m2/repository/commons-beanutils/commons-beanutils-core/1.8.0/commons-beanutils-core-1.8.0.jar\\\",\\\"/root/.m2/repository/org/unidal/webres/WebResTagLibrary/1.2.1/WebResTagLibrary-1.2.1.jar\\\",\\\"/root/.m2/repository/com/sun/jersey/jersey-client/1.9/jersey-client-1.9.jar\\\",\\\"/root/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar\\\",\\\"/root/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.8.8/jackson-core-asl-1.8.8.jar\\\",\\\"/root/.m2/repository/org/apache/avro/avro/1.7.4/avro-1.7.4.jar\\\",\\\"/root/.m2/repository/org/unidal/webres/WebResTag/1.2.1/WebResTag-1.2.1.jar\\\",\\\"/root/.m2/repository/org/unidal/framework/web-framework/2.4.0/web-framework-2.4.0.jar\\\",\\\"/root/.m2/repository/log4j/log4j/1.2.14/log4j-1.2.14.jar\\\",\\\"/root/.m2/repository/commons-net/commons-net/3.1/commons-net-3.1.jar\\\",\\\"/root/.m2/repository/org/unidal/webres/WebResBase/1.2.1/WebResBase-1.2.1.jar\\\",\\\"/root/.m2/repository/org/mortbay/jetty/jetty/6.1.14/jetty-6.1.14.jar\\\",\\\"/root/.m2/repository/org/apache/commons/commons-math3/3.1.1/commons-math3-3.1.1.jar\\\",\\\"/root/.m2/repository/com/mchange/c3p0/0.9.5.1/c3p0-0.9.5.1.jar\\\",\\\"/root/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar\\\",\\\"/root/.m2/repository/org/freemarker/freemarker/2.3.9/freemarker-2.3.9.jar\\\",\\\"/root/.m2/repository/org/unidal/framework/test-framework/2.4.0/test-framework-2.4.0.jar\\\",\\\"/root/.m2/repository/com/google/code/gson/gson/2.3.1/gson-2.3.1.jar\\\",\\\"/root/.m2/repository/javax/mail/mail/1.4.4/mail-1.4.4.jar\\\",\\\"/root/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar\\\",\\\"/root/.m2/repository/com/alibaba/fastjson/1.2.47/fastjson-1.2.47.jar\\\",\\\"/root/.m2/repository/com/mchange/mchange-commons-java/0.2.10/mchange-commons-java-0.2.10.jar\\\",\\\"/root/.m2/repository/org/apache/hadoop/hadoop-client/2.4.1/hadoop-client-2.4.1.jar\\\",\\\"/root/.m2/repository/commons-configuration/commons-configuration/1.6/commons-configuration-1.6.jar\\\",\\\"/root/.m2/repository/commons-io/commons-io/2.4/commons-io-2.4.jar\\\",\\\"/root/.m2/repository/org/unidal/framework/dal-jdbc/2.4.0/dal-jdbc-2.4.0.jar\\\",\\\"/root/.m2/repository/org/apache/hadoop/hadoop-hdfs/2.4.1/hadoop-hdfs-2.4.1.jar\\\",\\\"/root/.m2/repository/org/aspectj/aspectjrt/1.5.4/aspectjrt-1.5.4.jar\\\",\\\"/root/.m2/repository/commons-digester/commons-digester/1.8/commons-digester-1.8.jar\\\",\\\"/root/.m2/repository/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar\\\",\\\"/root/.m2/repository/org/apache/hadoop/hadoop-annotations/2.4.1/hadoop-annotations-2.4.1.jar\\\",\\\"/root/.m2/repository/org/apache/hadoop/hadoop-auth/2.4.1/hadoop-auth-2.4.1.jar\\\",\\\"/root/.m2/repository/org/apache/hadoop/hadoop-mapreduce-client-common/2.4.1/hadoop-mapreduce-client-common-2.4.1.jar\\\",\\\"/root/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar\\\",\\\"/root/.m2/repository/com/google/guava/guava/19.0/guava-19.0.jar\\\",\\\"/root/.m2/repository/mysql/mysql-connector-java/5.1.20/mysql-connector-java-5.1.20.jar\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-hadoop/target/cat-hadoop-3.0.0.jar\\\",\\\"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar\\\",\\\"/root/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.8.8/jackson-mapper-asl-1.8.8.jar\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-alarm/target/cat-alarm-3.0.0.jar\\\",\\\"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar\\\",\\\"/root/.m2/repository/commons-cli/commons-cli/1.2/commons-cli-1.2.jar\\\",\\\"/root/.m2/repository/org/apache/hadoop/hadoop-yarn-client/2.4.1/hadoop-yarn-client-2.4.1.jar\\\",\\\"/root/.m2/repository/org/unidal/framework/foundation-service/2.5.0/foundation-service-2.5.0.jar\\\",\\\"/root/.m2/repository/org/mortbay/jetty/jetty-util/6.1.14/jetty-util-6.1.14.jar\\\",\\\"/root/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar\\\",\\\"/root/.m2/repository/org/unidal/webres/WebResServer/1.2.1/WebResServer-1.2.1.jar\\\",\\\"/root/.m2/repository/joda-time/joda-time/2.9.4/joda-time-2.9.4.jar\\\",\\\"/root/.m2/repository/org/apache/httpcomponents/httpcore/4.4.6/httpcore-4.4.6.jar\\\",\\\"/root/.m2/repository/com/google/code/javaparser/javaparser/1.0.8/javaparser-1.0.8.jar\\\",\\\"/root/.m2/repository/com/onelogin/java-saml/2.2.0/java-saml-2.2.0.jar\\\",\\\"/root/.m2/repository/org/slf4j/slf4j-api/1.7.12/slf4j-api-1.7.12.jar\\\",\\\"/root/.m2/repository/org/codehaus/plexus/plexus-utils/3.0.24/plexus-utils-3.0.24.jar\\\",\\\"/root/.m2/repository/javax/xml/bind/jaxb-api/2.2.2/jaxb-api-2.2.2.jar\\\",\\\"/root/.m2/repository/org/apache/hadoop/hadoop-common/2.4.1/hadoop-common-2.4.1.jar\\\",\\\"/root/.m2/repository/com/thoughtworks/paranamer/paranamer/2.3/paranamer-2.3.jar\\\",\\\"/root/.m2/repository/org/xerial/snappy/snappy-java/1.1.2/snappy-java-1.1.2.jar\\\",\\\"/root/.m2/repository/org/apache/hadoop/hadoop-mapreduce-client-jobclient/2.4.1/hadoop-mapreduce-client-jobclient-2.4.1.jar\\\",\\\"/root/.m2/repository/org/mortbay/jetty/jsp-api-2.1/6.1.14/jsp-api-2.1-6.1.14.jar\\\",\\\"/root/.m2/repository/org/unidal/webres/WebResRuntime/1.2.1/WebResRuntime-1.2.1.jar\\\",\\\"/root/.m2/repository/org/apache/httpcomponents/httpclient/4.5.3/httpclient-4.5.3.jar\\\",\\\"/root/.m2/repository/org/unidal/webres/WebResApi/1.2.1/WebResApi-1.2.1.jar\\\",\\\"/root/.m2/repository/org/apache/hadoop/hadoop-yarn-api/2.4.1/hadoop-yarn-api-2.4.1.jar\\\",\\\"/root/.m2/repository/org/apache/santuario/xmlsec/2.0.7/xmlsec-2.0.7.jar\\\",\\\"/root/.m2/repository/org/apache/commons/commons-email/1.1/commons-email-1.1.jar\\\",\\\"/root/.m2/repository/org/apache/commons/commons-jexl3/3.0/commons-jexl3-3.0.jar\\\",\\\"/root/.m2/repository/org/apache/commons/commons-lang3/3.4/commons-lang3-3.4.jar\\\",\\\"/root/.m2/repository/com/onelogin/java-saml-core/2.2.0/java-saml-core-2.2.0.jar\\\",\\\"/root/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar\\\",\\\"/root/.m2/repository/junit/junit/4.8.1/junit-4.8.1.jar\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-consumer/target/cat-consumer-3.0.0.jar\\\",\\\"/root/.m2/repository/org/mortbay/jetty/servlet-api-2.5/6.1.14/servlet-api-2.5-6.1.14.jar\\\",\\\"/root/.m2/repository/org/tukaani/xz/1.0/xz-1.0.jar\\\",\\\"/root/.m2/repository/commons-codec/commons-codec/1.8/commons-codec-1.8.jar\\\",\\\"/root/.m2/repository/org/mortbay/jetty/jsp-2.1/6.1.14/jsp-2.1-6.1.14.jar\\\",\\\"/root/.m2/repository/com/google/protobuf/protobuf-java/2.5.0/protobuf-java-2.5.0.jar\\\",\\\"/root/.m2/repository/commons-fileupload/commons-fileupload/1.2.2/commons-fileupload-1.2.2.jar\\\",\\\"/root/.m2/repository/org/codehaus/woodstox/woodstox-core-asl/4.4.1/woodstox-core-asl-4.4.1.jar\\\",\\\"/root/.m2/repository/org/apache/commons/commons-compress/1.4.1/commons-compress-1.4.1.jar\\\",\\\"/root/.m2/repository/xmlenc/xmlenc/0.52/xmlenc-0.52.jar\\\",\\\"/root/.m2/repository/org/codehaus/plexus/plexus-container-default/1.6/plexus-container-default-1.6.jar\\\",\\\"/root/.m2/repository/org/eclipse/jdt/core/3.1.1/core-3.1.1.jar\\\",\\\"/root/.m2/repository/com/sun/jersey/jersey-core/1.9/jersey-core-1.9.jar\\\",\\\"/root/.m2/repository/xmlunit/xmlunit/1.6/xmlunit-1.6.jar\\\",\\\"/root/.m2/repository/org/apache/hadoop/hadoop-yarn-common/2.4.1/hadoop-yarn-common-2.4.1.jar\\\",\\\"/root/.m2/repository/org/apache/xbean/xbean-reflect/3.7/xbean-reflect-3.7.jar\\\",\\\"/root/.m2/repository/org/apache/hadoop/hadoop-mapreduce-client-core/2.4.1/hadoop-mapreduce-client-core-2.4.1.jar\\\",\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-client/target/cat-client-3.0.0.jar\\\",\\\"/root/.m2/repository/commons-lang/commons-lang/2.6/commons-lang-2.6.jar\\\",\\\"/root/.m2/repository/org/slf4j/slf4j-log4j12/1.7.5/slf4j-log4j12-1.7.5.jar\\\",\\\"/root/.m2/repository/org/apache/hadoop/hadoop-mapreduce-client-app/2.4.1/hadoop-mapreduce-client-app-2.4.1.jar\\\",\\\"/root/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar\\\",\\\"/root/.m2/repository/org/apache/hadoop/hadoop-yarn-server-common/2.4.1/hadoop-yarn-server-common-2.4.1.jar\\\",\\\"/root/.m2/repository/org/apache/hadoop/hadoop-mapreduce-client-shuffle/2.4.1/hadoop-mapreduce-client-shuffle-2.4.1.jar\\\"],\\\"output_dir\\\":\\\"/tmp/analyzing-b4a84c0d7bf6da8f/cat-home/target/classes\\\",\\\"jdk\\\":\\\"JDK1.7\\\"}]\"\n[DEBUG] [26/Jun/2019:18:27:30 +0000] [()] Done generating compilation database.\n[DEBUG] [26/Jun/2019:18:27:30 +0000] [()] Trying to autodetect the build system based on files present in the repository.\n[DEBUG] [26/Jun/2019:18:27:30 +0000] [()] Errorprone JDK1.8 and jceJDK \"JDK1.7\" are not compatible.\n[DEBUG] [26/Jun/2019:18:51:30 +0000] [()] Tool completed with 710 but only reporting up to 1200.\n[DEBUG] [26/Jun/2019:18:51:30 +0000] [()] All tools complete for commit \"master\"\n[DEBUG] [26/Jun/2019:18:51:33 +0000] [()] Analysis has completed.\n"}}
