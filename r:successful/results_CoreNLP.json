{"tag":"AnalysisSuccess","contents":{"requestedTools":null,"toolResults":[[{"tag":"Infer"},{"tag":"ToolSuccess","contents":[[{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `getBufferedFileReader(...)` at line 1893 is not released after line 1904.\n**Note**: potential exception at line 1896","tnFile":"src/edu/stanford/nlp/stats/Counters.java","tnLine":1904,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.stats.Counters.loadIncInto2DCounter(java.lang.String,java.lang.Class,java.lang.Class,edu.stanford.nlp.stats.TwoDimensionalCounterInterface):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Dataset.changeFeatureIndex(Index)` writes to field `this.featureIndex` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/classify/Dataset.java","tnLine":577,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.Dataset.changeFeatureIndex(edu.stanford.nlp.util.Index):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Collection FileBackedCache.locksHeld()` reads without synchronization from container `util.FileBackedCache.fileLocks` via call to `entrySet`. Potentially races with write in method `FileBackedCache.acquireFileLock(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/util/FileBackedCache.java","tnLine":551,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.util.FileBackedCache.locksHeld():java.util.Collection","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `tree.label()` could be null and is dereferenced at line 1409.","tnFile":"src/edu/stanford/nlp/parser/lexparser/SplittingGrammarExtractor.java","tnLine":1409,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.SplittingGrammarExtractor.countMergeEffects(edu.stanford.nlp.trees.Tree,java.util.Map,java.util.Map,java.util.IdentityHashMap,java.util.IdentityHashMap):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `doc.get(edu.stanford.nlp.coref.CorefCoreAnnotations$CorefChainAnnotation)` could be null and is dereferenced at line 386.","tnFile":"src/edu/stanford/nlp/quoteattribution/QuoteAttributionUtils.java","tnLine":386,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.quoteattribution.QuoteAttributionUtils.setupCoref(java.lang.String,java.util.HashMap,edu.stanford.nlp.pipeline.Annotation):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `sentences` last assigned on line 229 could be null and is dereferenced at line 232.","tnFile":"src/edu/stanford/nlp/dcoref/CoNLLMentionExtractor.java","tnLine":232,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.dcoref.CoNLLMentionExtractor.extractGoldMentions(edu.stanford.nlp.dcoref.CoNLL2011DocumentReader$Document):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileReader` acquired by call to `new()` at line 63 is not released after line 65.","tnFile":"src/edu/stanford/nlp/ie/pascal/Prior.java","tnLine":65,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.pascal.Prior.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `getDataOutputStream(...)` at line 732 is not released after line 735.\n**Note**: potential exception at line 733","tnFile":"src/edu/stanford/nlp/tagger/maxent/MaxentTagger.java","tnLine":735,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.tagger.maxent.MaxentTagger.saveModel(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileReader` acquired by call to `new()` at line 126 is not released after line 166.\n**Note**: potential exception at line 129","tnFile":"src/edu/stanford/nlp/classify/SVMLightClassifierFactory.java","tnLine":166,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.SVMLightClassifierFactory.readModel(java.io.File,boolean):edu.stanford.nlp.util.Pair","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.value()` could be null and is dereferenced at line 419.","tnFile":"src/edu/stanford/nlp/international/spanish/pipeline/MultiWordPreprocessor.java","tnLine":419,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.international.spanish.pipeline.MultiWordPreprocessor.traverseAndFix(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.Tree,edu.stanford.nlp.stats.TwoDimensionalCounter,boolean):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Collection UniversalEnglishGrammaticalRelations.getObls()` reads without synchronization from container `trees.UniversalEnglishGrammaticalRelations.obls` via call to `values`. Potentially races with write in method `UniversalEnglishGrammaticalRelations.getObl(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/trees/UniversalEnglishGrammaticalRelations.java","tnLine":1728,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.UniversalEnglishGrammaticalRelations.getObls():java.util.Collection","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `getBufferedFileReader(...)` at line 1637 is not released after line 1644.\n**Note**: potential exception at line 1639","tnFile":"src/edu/stanford/nlp/io/IOUtils.java","tnLine":1644,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.io.IOUtils.readMap(java.lang.String):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.label()` could be null and is dereferenced at line 411.","tnFile":"src/edu/stanford/nlp/parser/lexparser/TreeBinarizer.java","tnLine":411,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.TreeBinarizer.insideBinarizeLocalTree(edu.stanford.nlp.trees.Tree,int,edu.stanford.nlp.ling.TaggedWord,int,int):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.util.zip.GZIPInputStream` acquired by call to `GZIPInputStream(...)` at line 58 is not released after line 63.","tnFile":"src/edu/stanford/nlp/pipeline/GenericAnnotationSerializer.java","tnLine":63,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.GenericAnnotationSerializer.read(java.io.InputStream):edu.stanford.nlp.util.Pair","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `intree.label()` could be null and is dereferenced at line 1168.","tnFile":"src/edu/stanford/nlp/semgraph/SemanticGraphUtils.java","tnLine":1168,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.semgraph.SemanticGraphUtils$TreeNodeProxy.create(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.Tree):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `double[] Dataset.getInformationGains()` reads without synchronization from `this.featureIndex`. Potentially races with write in method `Dataset.selectFeatures(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/classify/Dataset.java","tnLine":643,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.Dataset.getInformationGains():double[]","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `sentences` last assigned on line 64 could be null and is dereferenced at line 66.","tnFile":"src/edu/stanford/nlp/ie/machinereading/structure/AnnotationUtils.java","tnLine":66,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.machinereading.structure.AnnotationUtils.entityMentionsToCoreLabels(edu.stanford.nlp.pipeline.Annotation,java.util.Set,boolean,boolean):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `InputStreamReader(...)` at line 63 is not released after line 63.","tnFile":"src/edu/stanford/nlp/international/arabic/pipeline/IBMMTArabicDataset.java","tnLine":63,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.international.arabic.pipeline.IBMMTArabicDataset.build():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `match.label()` could be null and is dereferenced at line 209.","tnFile":"src/edu/stanford/nlp/trees/international/arabic/ArabicTreeNormalizer.java","tnLine":209,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.international.arabic.ArabicTreeNormalizer.normalizeWholeTree(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.TreeFactory):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Dataset Dataset.getRandomSubDataset(double,int)` reads without synchronization from `this.data`. Potentially races with write in method `Dataset.ensureSize()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/classify/Dataset.java","tnLine":158,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.Dataset.getRandomSubDataset(double,int):edu.stanford.nlp.classify.Dataset","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Dataset.initialize(int)` writes to field `this.featureIndex` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/classify/Dataset.java","tnLine":374,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.Dataset.initialize(int):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `m.getNode(ArabicTreebankParserParams$AddEquivalencedNodeFunctionVar.key).label()` could be null and is dereferenced at line 585.","tnFile":"src/edu/stanford/nlp/parser/lexparser/ArabicTreebankParserParams.java","tnLine":585,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.ArabicTreebankParserParams$AddEquivalencedNodeFunctionVar.apply(edu.stanford.nlp.trees.tregex.TregexMatcher):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.label()` could be null and is dereferenced at line 179.","tnFile":"src/edu/stanford/nlp/trees/international/negra/NegraHeadFinder.java","tnLine":179,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.international.negra.NegraHeadFinder.determineNonTrivialHead(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.Tree):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `currNode` last assigned on line 134 could be null and is dereferenced at line 143.","tnFile":"src/edu/stanford/nlp/quoteattribution/Sieves/Sieve.java","tnLine":143,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.quoteattribution.Sieves.Sieve.createNameMatcher():edu.stanford.nlp.quoteattribution.Sieves.Sieve$TokenNode","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `sentences` last assigned on line 111 could be null and is dereferenced at line 112.","tnFile":"src/edu/stanford/nlp/dcoref/CoNLLMentionExtractor.java","tnLine":112,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.dcoref.CoNLLMentionExtractor.nextDoc():edu.stanford.nlp.dcoref.Document","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int Sentence.length()` indirectly reads without synchronization from `this.impl.token_`. Potentially races with write in method `Sentence.serialize()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/simple/Sentence.java","tnLine":837,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.simple.Sentence.length():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `sent.get((m.startIndex-1)).get(edu.stanford.nlp.ling.CoreAnnotations$TextAnnotation)` could be null and is dereferenced at line 622.","tnFile":"src/edu/stanford/nlp/dcoref/RuleBasedCorefMentionFinder.java","tnLine":622,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.dcoref.RuleBasedCorefMentionFinder.partitiveRule(edu.stanford.nlp.dcoref.Mention,java.util.List,edu.stanford.nlp.dcoref.Dictionaries):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `SemanticGraph AnnotationSerializer$IntermediateSemanticGraph.convertIntermediateGraph(List)` indirectly mutates container `m` via call to `put` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/pipeline/AnnotationSerializer.java","tnLine":154,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.AnnotationSerializer$IntermediateSemanticGraph.convertIntermediateGraph(java.util.List):edu.stanford.nlp.semgraph.SemanticGraph","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `head.label()` could be null and is dereferenced at line 686.","tnFile":"src/edu/stanford/nlp/coref/md/CorefMentionFinder.java","tnLine":686,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.coref.md.CorefMentionFinder.safeHead(edu.stanford.nlp.trees.Tree,int):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void WeightedDataset.randomize(long)` reads without synchronization from `this.labels`. Potentially races with write in method `WeightedDataset.ensureSize()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/classify/WeightedDataset.java","tnLine":114,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.WeightedDataset.randomize(long):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `sentences` last assigned on line 501 could be null and is dereferenced at line 502.","tnFile":"src/edu/stanford/nlp/quoteattribution/Sieves/Sieve.java","tnLine":502,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.quoteattribution.Sieves.Sieve.getQuoteParagraph(edu.stanford.nlp.util.CoreMap):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `null` is dereferenced by call to `addDependencyInfo(...)` at line 285.","tnFile":"src/edu/stanford/nlp/pipeline/XMLOutputter.java","tnLine":285,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.XMLOutputter.buildDependencyTreeInfo(java.lang.String,edu.stanford.nlp.semgraph.SemanticGraph,java.util.List,java.lang.String):nu.xom.Element","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `sentences` last assigned on line 31 could be null and is dereferenced at line 34.","tnFile":"src/edu/stanford/nlp/quoteattribution/ChapterAnnotator.java","tnLine":34,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.quoteattribution.ChapterAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.net.Socket` acquired to `socket` by call to `new()` at line 133 is not released after line 143.\n**Note**: potential exception at line 142","tnFile":"src/edu/stanford/nlp/parser/server/LexicalizedParserClient.java","tnLine":143,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.server.LexicalizedParserClient.getTree(java.lang.String):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileInputStream` acquired by call to `FileInputStream(...)` at line 935 is not released after line 935.","tnFile":"src/edu/stanford/nlp/trees/GrammaticalStructureConversionUtils.java","tnLine":935,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.GrammaticalStructureConversionUtils$LazyLoadTreesByParsing.iterator():java.util.Iterator","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `m.originalSpan.get(i).get(edu.stanford.nlp.ling.CoreAnnotations$TextAnnotation)` could be null and is dereferenced at line 408.","tnFile":"src/edu/stanford/nlp/dcoref/Rules.java","tnLine":408,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.dcoref.Rules.entityHaveIncompatibleModifier(edu.stanford.nlp.dcoref.Mention,edu.stanford.nlp.dcoref.Mention):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `coreMaps` last assigned on line 199 could be null and is dereferenced at line 202.","tnFile":"src/edu/stanford/nlp/dcoref/CoNLLMentionExtractor.java","tnLine":202,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.dcoref.CoNLLMentionExtractor.recallErrors(java.util.List,java.util.List,edu.stanford.nlp.pipeline.Annotation):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `CRFLogConditionalObjectiveFunctionWithDropout.currNextLabelsMap.get(valueOf(prev))` could be null and is dereferenced at line 98.","tnFile":"src/edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunctionWithDropout.java","tnLine":98,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunctionWithDropout.initEdgeLabels():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `ann.get(edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation)` could be null and is dereferenced at line 705.","tnFile":"src/edu/stanford/nlp/pipeline/KBPAnnotator.java","tnLine":705,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.KBPAnnotator.lambda$main$6(edu.stanford.nlp.pipeline.StanfordCoreNLP,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `parent.label()` could be null and is dereferenced at line 45.","tnFile":"src/edu/stanford/nlp/parser/lexparser/PostSplitter.java","tnLine":45,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.PostSplitter.transformTreeHelper(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.TreeFactory):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `tree.label()` could be null and is dereferenced at line 70.","tnFile":"src/edu/stanford/nlp/parser/tools/ParseAndSetLabels.java","tnLine":70,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.tools.ParseAndSetLabels.setLabels(edu.stanford.nlp.trees.Tree,java.util.Map,edu.stanford.nlp.parser.tools.ParseAndSetLabels$MissingLabels,java.lang.String,java.util.Set):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `InputStreamReader(...)` at line 164 is not released after line 205.\n**Note**: potential exception at line 168","tnFile":"src/edu/stanford/nlp/international/morph/AddMorphoAnnotations.java","tnLine":205,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.international.morph.AddMorphoAnnotations.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `GrammaticalRelation UniversalEnglishGrammaticalRelations.getObl(String)` reads without synchronization from container `trees.UniversalEnglishGrammaticalRelations.obls` via call to `get`. Potentially races with write in method `UniversalEnglishGrammaticalRelations.getObl(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/trees/UniversalEnglishGrammaticalRelations.java","tnLine":1782,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.UniversalEnglishGrammaticalRelations.getObl(java.lang.String):edu.stanford.nlp.trees.GrammaticalRelation","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 1540 is not released after line 1540.","tnFile":"src/edu/stanford/nlp/io/IOUtils.java","tnLine":1540,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.io.IOUtils.getPrintWriter(java.io.File,java.lang.String):java.io.PrintWriter","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List Sentence.mentions(String)` indirectly reads without synchronization from `this.impl.token_`. Potentially races with write in method `Sentence.serialize()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/simple/Sentence.java","tnLine":571,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.simple.Sentence.mentions(java.lang.String):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `RandomWalk.hiddenToSeen.get(hidden)` could be null and is dereferenced at line 67.","tnFile":"src/edu/stanford/nlp/parser/lexparser/RandomWalk.java","tnLine":67,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.RandomWalk.train(java.util.Collection):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `env.get(label)` could be null and is dereferenced at line 3549.","tnFile":"src/edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass.java","tnLine":3549,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.patterns.GetPatternsFromDataMultiClass.readClassesInEnv(java.lang.String,java.util.Map,edu.stanford.nlp.ling.tokensregex.Env):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `dataset.get(edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation)` could be null and is dereferenced at line 547.","tnFile":"src/edu/stanford/nlp/ie/machinereading/MachineReading.java","tnLine":547,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.machinereading.MachineReading.changeGoldRelationArgsToPredicted(edu.stanford.nlp.pipeline.Annotation):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired by call to `readStreamFromString(...)` at line 598 is not released after line 604.\n**Note**: potential exception at line 599","tnFile":"src/edu/stanford/nlp/parser/lexparser/LexicalizedParser.java","tnLine":604,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.LexicalizedParser.getParserFromSerializedFile(java.lang.String):edu.stanford.nlp.parser.lexparser.LexicalizedParser","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Sentence.<init>(Document,CoreNLPProtos$Sentence$Builder,Properties)` indirectly reads without synchronization from container `this.impl.token_` via call to `get`. Potentially races with write in method `Sentence.serialize()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/simple/Sentence.java","tnLine":211,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.simple.Sentence.<init>(edu.stanford.nlp.simple.Document,edu.stanford.nlp.pipeline.CoreNLPProtos$Sentence$Builder,java.util.Properties)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileInputStream` acquired by call to `FileInputStream(...)` at line 26 is not released after line 26.","tnFile":"src/edu/stanford/nlp/tagger/io/TextTaggedFileReader.java","tnLine":26,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.tagger.io.TextTaggedFileReader.<init>(edu.stanford.nlp.tagger.io.TaggedFileRecord)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Lazy.simulateGC()` reads without synchronization from `this.implOrNullCache`. Potentially races with write in method `Lazy.get()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/util/Lazy.java","tnLine":20,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.util.Lazy.simulateGC():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `new()` at line 2070 is not released after line 2074.","tnFile":"src/edu/stanford/nlp/io/IOUtils.java","tnLine":2074,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.io.IOUtils.console(java.lang.String,java.util.function.Consumer):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `edge` last assigned on line 203 could be null and is dereferenced at line 204.","tnFile":"src/edu/stanford/nlp/coref/md/DependencyCorefMentionFinder.java","tnLine":204,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.coref.md.DependencyCorefMentionFinder.getNPSpan(edu.stanford.nlp.ling.IndexedWord,edu.stanford.nlp.semgraph.SemanticGraph,java.util.List):edu.stanford.nlp.util.IntPair","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getProperty(\"model\")` could be null and is dereferenced at line 197.","tnFile":"src/edu/stanford/nlp/tagger/maxent/TaggerConfig.java","tnLine":197,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.tagger.maxent.TaggerConfig.setProperties(java.util.Properties):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 29 is not released after line 29.","tnFile":"src/edu/stanford/nlp/international/arabic/pipeline/LabeledATBDataset.java","tnLine":29,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.international.arabic.pipeline.LabeledATBDataset.build():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `doc.get(edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation)` could be null and is dereferenced at line 1140.","tnFile":"src/edu/stanford/nlp/pipeline/StanfordCoreNLPServer.java","tnLine":1140,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.StanfordCoreNLPServer$SemgrexHandler.lambda$null$5(boolean,edu.stanford.nlp.pipeline.Annotation,edu.stanford.nlp.semgraph.semgrex.SemgrexPattern,boolean,edu.stanford.nlp.pipeline.JSONOutputter$Writer):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `corpus.get(edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation)` could be null and is dereferenced at line 645.","tnFile":"src/edu/stanford/nlp/ie/machinereading/MachineReading.java","tnLine":645,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.machinereading.MachineReading.assignSyntacticHeadToEntities(edu.stanford.nlp.pipeline.Annotation):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.net.Socket` acquired to `socket` by call to `new()` at line 74 is not released after line 82.\n**Note**: potential exception at line 77","tnFile":"src/edu/stanford/nlp/parser/server/LexicalizedParserClient.java","tnLine":82,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.server.LexicalizedParserClient.getLemmas(java.lang.String):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object GrammaticalRelation.readResolve()` indirectly reads with synchronization from `child.neg`. Potentially races with unsynchronized write in method `GrammaticalRelation.valueOf(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/trees/GrammaticalRelation.java","tnLine":568,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.GrammaticalRelation.readResolve():java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `annotation.get(edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation)` could be null and is dereferenced at line 150.","tnFile":"src/edu/stanford/nlp/pipeline/HybridCorefAnnotator.java","tnLine":150,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.HybridCorefAnnotator.hasSpeakerAnnotations(edu.stanford.nlp.pipeline.Annotation):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `corpusSentences.get(edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation)` could be null and is dereferenced at line 902.","tnFile":"src/edu/stanford/nlp/ie/machinereading/MachineReading.java","tnLine":902,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.machinereading.MachineReading.loadOrMakeSerializedSentences(java.lang.String,edu.stanford.nlp.ie.machinereading.GenericDataSetReader,java.io.File):edu.stanford.nlp.pipeline.Annotation","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RVFDatum Dataset.getRVFDatum(int)` reads without synchronization from `this.labels`. Potentially races with write in method `Dataset.ensureSize()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/classify/Dataset.java","tnLine":397,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.Dataset.getRVFDatum(int):edu.stanford.nlp.ling.RVFDatum","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `lowestNP.label()` could be null and is dereferenced at line 977.","tnFile":"src/edu/stanford/nlp/coref/data/Mention.java","tnLine":977,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.coref.data.Mention.lowestNPIncludesHead():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `m` last assigned on line 1500 could be null and is dereferenced at line 1501.","tnFile":"src/edu/stanford/nlp/classify/ColumnDataClassifier.java","tnLine":1501,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.ColumnDataClassifier.regexpTokenize(java.util.regex.Pattern,java.util.regex.Pattern,java.lang.String):java.lang.String[]","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired to `in` by call to `getDataInputStream(...)` at line 352 is not released after line 355.\n**Note**: potential exception at line 353","tnFile":"src/edu/stanford/nlp/tagger/maxent/TTags.java","tnLine":355,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.tagger.maxent.TTags.read(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 101 is not released after line 101.","tnFile":"src/edu/stanford/nlp/io/IOUtils.java","tnLine":101,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.io.IOUtils.writeObjectToFileNoExceptions(java.lang.Object,java.lang.String):java.io.File","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired to `pw` by call to `getPrintWriter(...)` at line 983 is not released after line 988.\n**Note**: potential exception at line 986","tnFile":"src/edu/stanford/nlp/time/SUTimeMain.java","tnLine":988,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.time.SUTimeMain.processTextFile(edu.stanford.nlp.pipeline.AnnotationPipeline,java.lang.String,java.lang.String,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `label()` could be null and is dereferenced at line 2836.","tnFile":"src/edu/stanford/nlp/trees/Tree.java","tnLine":2836,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.Tree.percolateHeadIndices():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.getChild(headLoc).label()` could be null and is dereferenced at line 183.","tnFile":"src/edu/stanford/nlp/parser/lexparser/TreeBinarizer.java","tnLine":183,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.TreeBinarizer.markovOutsideBinarizeLocalTree(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.ling.TaggedWord,int,java.lang.String,java.util.LinkedList,boolean):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `wordVectors.get(\"*UNK*\")` could be null and is dereferenced at line 280.","tnFile":"src/edu/stanford/nlp/neural/Embedding.java","tnLine":280,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.neural.Embedding.getEmbeddingSize(java.util.Map):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `ann.get(edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation)` could be null and is dereferenced at line 166.","tnFile":"src/edu/stanford/nlp/naturalli/demo/OpenIEServlet.java","tnLine":166,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.naturalli.demo.OpenIEServlet.runWithPipeline(edu.stanford.nlp.pipeline.StanfordCoreNLP,edu.stanford.nlp.pipeline.Annotation,java.util.LinkedHashSet,java.util.HashSet):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 77 is not released after line 79.","tnFile":"src/edu/stanford/nlp/io/IOUtils.java","tnLine":79,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.io.IOUtils.writeObjectToFile(java.lang.Object,java.io.File,boolean):java.io.File","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `String Document.toString()` indirectly writes to field `this.impl.text_` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/simple/Document.java","tnLine":1152,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.simple.Document.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Pair Dataset.split(int,int)` reads without synchronization from `this.featureIndex`. Potentially races with write in method `Dataset.selectFeatures(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/classify/Dataset.java","tnLine":132,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.Dataset.split(int,int):edu.stanford.nlp.util.Pair","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List PhraseTable.findMatches(String)` indirectly reads without synchronization from container `this.normalizedCache` via call to `get`. Potentially races with write in method `PhraseTable.getNormalizedForm(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/ling/tokensregex/PhraseTable.java","tnLine":664,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ling.tokensregex.PhraseTable.findMatches(java.lang.String):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `goldTree` last assigned on line 30 could be null and is dereferenced at line 33.","tnFile":"src/edu/stanford/nlp/parser/lexparser/GrammarCoverageChecker.java","tnLine":33,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.GrammarCoverageChecker.testOnTreebank(edu.stanford.nlp.parser.lexparser.LexicalizedParser,edu.stanford.nlp.parser.lexparser.EnglishTreebankParserParams,edu.stanford.nlp.trees.MemoryTreebank,java.lang.String,edu.stanford.nlp.util.Index):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `label()` could be null and is dereferenced at line 2694.","tnFile":"src/edu/stanford/nlp/trees/Tree.java","tnLine":2694,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.Tree.rightCharEdge(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.util.MutableInteger):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `res` last assigned on line 141 could be null and is dereferenced at line 155.","tnFile":"src/edu/stanford/nlp/ling/tokensregex/types/Expressions.java","tnLine":155,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ling.tokensregex.types.Expressions.convertValueToBoolean(edu.stanford.nlp.ling.tokensregex.types.Value,boolean):java.lang.Boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired by call to `new()` at line 264 is not released after line 264.","tnFile":"src/edu/stanford/nlp/pipeline/XMLOutputter.java","tnLine":264,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.XMLOutputter.addConstituentTreeInfo(nu.xom.Element,edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.TreePrint):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `sentences` last assigned on line 664 could be null and is dereferenced at line 670.","tnFile":"src/edu/stanford/nlp/coref/data/DocumentPreprocessor.java","tnLine":670,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.coref.data.DocumentPreprocessor.findSpeakersInArticle(edu.stanford.nlp.coref.data.Document,edu.stanford.nlp.coref.data.Dictionaries):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `label` last assigned on line 448 could be null and is dereferenced at line 456.","tnFile":"src/edu/stanford/nlp/coref/data/Mention.java","tnLine":456,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.coref.data.Mention.isListLike():boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `bd` last assigned on line 1771 could be null and is dereferenced at line 1778.","tnFile":"src/edu/stanford/nlp/time/SUTime.java","tnLine":1778,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.time.SUTime$CompositePartialTime.getDuration():edu.stanford.nlp.time.SUTime$Duration","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `Dictionary.partTakingVerbs.get(valueOf(i))` could be null and is dereferenced at line 91.","tnFile":"src/edu/stanford/nlp/tagger/maxent/Dictionary.java","tnLine":91,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.tagger.maxent.Dictionary.getCountPart(java.lang.String):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `input.annotation.get(edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation)` could be null and is dereferenced at line 83.","tnFile":"src/edu/stanford/nlp/coref/data/DocumentMaker.java","tnLine":83,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.coref.data.DocumentMaker.makeDocument(edu.stanford.nlp.coref.data.InputDoc):edu.stanford.nlp.coref.data.Document","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `iterator()` at line 1602 is not released after line 1607.","tnFile":"src/edu/stanford/nlp/ie/crf/CRFClassifier.java","tnLine":1607,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.crf.CRFClassifier.train(edu.stanford.nlp.sequences.ObjectBankWrapper,edu.stanford.nlp.international.arabic.process.ArabicDocumentReaderAndWriter):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileInputStream` acquired by call to `FileInputStream(...)` at line 1852 is not released after line 1866.\n**Note**: potential exception at line 1853","tnFile":"src/edu/stanford/nlp/io/IOUtils.java","tnLine":1866,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.io.IOUtils.copyFile(java.io.File,java.io.File):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `candidate` last assigned on line 731 could be null and is dereferenced at line 737.","tnFile":"src/edu/stanford/nlp/ie/ChineseQuantifiableEntityNormalizer.java","tnLine":737,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.ChineseQuantifiableEntityNormalizer.normalizeMonthOrDay(java.lang.String,java.lang.String):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `DateTimeZone TimeFormatter$TimeZoneComponent.parseDateTimeZone(String)` reads without synchronization from container `time.TimeFormatter$TimeZoneComponent.timeZonesByName` via call to `get`. Potentially races with write in method `TimeFormatter$TimeZoneComponent(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/time/TimeFormatter.java","tnLine":659,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.time.TimeFormatter$TimeZoneComponent.parseDateTimeZone(java.lang.String):org.joda.time.DateTimeZone","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `iterator()` at line 362 is not released after line 369.","tnFile":"src/edu/stanford/nlp/classify/LogisticClassifier.java","tnLine":369,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.LogisticClassifier.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `iterator()` at line 202 is not released after line 211.","tnFile":"src/edu/stanford/nlp/classify/Dataset.java","tnLine":211,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.Dataset.readSVMLightFormat(java.lang.String,edu.stanford.nlp.util.HashIndex,edu.stanford.nlp.util.HashIndex,java.util.List):edu.stanford.nlp.classify.Dataset","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `document.sentences()` could be null and is dereferenced at line 43.","tnFile":"src/edu/stanford/nlp/examples/BasicPipelineExample.java","tnLine":43,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.examples.BasicPipelineExample.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Dataset.printSparseFeatureMatrix(PrintWriter)` reads without synchronization from `this.labels`. Potentially races with write in method `Dataset.ensureSize()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/classify/Dataset.java","tnLine":536,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.Dataset.printSparseFeatureMatrix(java.io.PrintWriter):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileInputStream` acquired by call to `findStreamInClasspathOrFileSystem(...)` at line 471 is not released after line 489.","tnFile":"src/edu/stanford/nlp/io/IOUtils.java","tnLine":489,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.io.IOUtils.getInputStreamFromURLOrClasspathOrFileSystem(java.lang.String):java.io.InputStream","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedWriter` acquired by call to `TreeRecorder(...)` at line 202 is not released after line 202.","tnFile":"src/edu/stanford/nlp/parser/shiftreduce/ShiftReduceParser.java","tnLine":202,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.shiftreduce.ShiftReduceParser.getParserQueryEvals():java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `tree.label()` could be null and is dereferenced at line 94.","tnFile":"src/edu/stanford/nlp/trees/international/tuebadz/TueBaDZPennTreeNormalizer.java","tnLine":94,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.international.tuebadz.TueBaDZPennTreeNormalizer.normalizeWholeTree(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.TreeFactory):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `quotes` last assigned on line 23 could be null and is dereferenced at line 27.","tnFile":"src/edu/stanford/nlp/quoteattribution/Sieves/MSSieves/LooseConversationalSpeakerSieve.java","tnLine":27,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.quoteattribution.Sieves.MSSieves.LooseConversationalSpeakerSieve.doMentionToSpeaker(edu.stanford.nlp.pipeline.Annotation):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileReader` acquired by call to `new()` at line 249 is not released after line 272.\n**Note**: potential exception at line 253","tnFile":"src/edu/stanford/nlp/loglinear/benchmarks/CoNLLBenchmark.java","tnLine":272,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.loglinear.benchmarks.CoNLLBenchmark.loadEmbeddingsFromFile(java.lang.String):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `new()` at line 135 is not released after line 136.","tnFile":"src/edu/stanford/nlp/util/MemoryMonitor.java","tnLine":136,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.util.MemoryMonitor.pollFree(boolean):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void AbstractBatchOptimizer$TrainingWorker.run()` indirectly reads without synchronization from `this.weights.pointers`. Potentially races with write in method `AbstractBatchOptimizer$TrainingWorker.run()`.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/loglinear/learning/AbstractBatchOptimizer.java","tnLine":302,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.loglinear.learning.AbstractBatchOptimizer$TrainingWorker.run():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Dataset.initialize(int)` writes to field `this.data` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/classify/Dataset.java","tnLine":376,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.Dataset.initialize(int):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `c` last assigned on line 405 could be null and is dereferenced at line 406.","tnFile":"src/edu/stanford/nlp/stats/TwoDimensionalIntCounter.java","tnLine":406,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.stats.TwoDimensionalIntCounter.clean():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `int Document.hashCode()` indirectly writes to field `this.impl.bitField0_` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/simple/Document.java","tnLine":1146,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.simple.Document.hashCode():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileReader` acquired by call to `RecordIterator(...)` at line 267 is not released after line 267.","tnFile":"src/edu/stanford/nlp/stats/DataSeries.java","tnLine":267,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.stats.DataSeries$ListDataSeries.readDataSeries(java.lang.String,boolean):edu.stanford.nlp.stats.DataSeries[]","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileInputStream` acquired by call to `FileInputStream(...)` at line 50 is not released after line 50.","tnFile":"src/edu/stanford/nlp/international/spanish/pipeline/AnCoraPOSStats.java","tnLine":50,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.international.spanish.pipeline.AnCoraPOSStats.process():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `readerFromString(...)` at line 465 is not released after line 468.","tnFile":"src/edu/stanford/nlp/trees/ud/UniversalDependenciesFeatureAnnotator.java","tnLine":468,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.ud.UniversalDependenciesFeatureAnnotator.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Redwood.endTrack()` indirectly reads with synchronization from `logging.Redwood.isThreaded`. Potentially races with unsynchronized write in method `Redwood.endThreads(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/util/logging/Redwood.java","tnLine":415,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.util.logging.Redwood.endTrack():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `GraphicalModel GraphicalModel.cloneModel()` reads without synchronization from container `this.variableMetaData` via call to `size`. Potentially races with write in method `GraphicalModel.getVariableMetaDataByReference(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/loglinear/model/GraphicalModel.java","tnLine":309,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.loglinear.model.GraphicalModel.cloneModel():edu.stanford.nlp.loglinear.model.GraphicalModel","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `lab` last assigned on line 64 could be null and is dereferenced at line 70.","tnFile":"src/edu/stanford/nlp/parser/lexparser/AbstractTreebankParserParams.java","tnLine":70,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.AbstractTreebankParserParams$SubcategoryStripper.transformTree(edu.stanford.nlp.trees.Tree):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedWriter` acquired by call to `new()` at line 208 is not released after line 214.","tnFile":"src/edu/stanford/nlp/sentiment/ReadSentimentDataset.java","tnLine":214,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.sentiment.ReadSentimentDataset.writeTrees(java.lang.String,java.util.List,java.util.List):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.label()` could be null and is dereferenced at line 343.","tnFile":"src/edu/stanford/nlp/parser/lexparser/TreeBinarizer.java","tnLine":343,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.TreeBinarizer.makeSyntheticLabel2(edu.stanford.nlp.trees.Tree,int,int,int,int):edu.stanford.nlp.ling.Label","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `m.originalSpan.get(i).get(edu.stanford.nlp.ling.CoreAnnotations$TextAnnotation)` could be null and is dereferenced at line 475.","tnFile":"src/edu/stanford/nlp/coref/CorefRules.java","tnLine":475,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.coref.CorefRules.entityHaveIncompatibleModifier(edu.stanford.nlp.coref.data.Mention,edu.stanford.nlp.coref.data.Mention):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `l` last assigned on line 35 could be null and is dereferenced at line 39.","tnFile":"src/edu/stanford/nlp/parser/lexparser/NegraPennCollinizer.java","tnLine":39,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.NegraPennCollinizer.transformTree(edu.stanford.nlp.trees.Tree):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `tree.label()` could be null and is dereferenced at line 691.","tnFile":"src/edu/stanford/nlp/parser/lexparser/SplittingGrammarExtractor.java","tnLine":691,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.SplittingGrammarExtractor.recalculateTemporaryBetas(edu.stanford.nlp.trees.Tree,double[],int,java.util.IdentityHashMap,java.util.IdentityHashMap,java.util.Map,edu.stanford.nlp.util.TwoDimensionalMap,edu.stanford.nlp.util.ThreeDimensionalMap):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedWriter` acquired to `out` by call to `new()` at line 709 is not released after line 714.\n**Note**: potential exception at line 710","tnFile":"src/edu/stanford/nlp/trees/tregex/gui/TregexGUI.java","tnLine":714,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.tregex.gui.TregexGUI$4.run():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `novel.get(edu.stanford.nlp.ling.CoreAnnotations$TokensAnnotation)` could be null and is dereferenced at line 55.","tnFile":"src/edu/stanford/nlp/quoteattribution/BammanCorefReader.java","tnLine":55,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.quoteattribution.BammanCorefReader.readTokenFile(java.lang.String,edu.stanford.nlp.pipeline.Annotation):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired by call to `new()` at line 354 is not released after line 354.","tnFile":"src/edu/stanford/nlp/io/IOUtils.java","tnLine":354,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.io.IOUtils.readObjectFromFileNoExceptions(java.io.File):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `mostGeneral` last assigned on line 3065 could be null and is dereferenced at line 3066.","tnFile":"src/edu/stanford/nlp/time/SUTime.java","tnLine":3066,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.time.SUTime$PartialTime.getPeriod():edu.stanford.nlp.time.SUTime$Duration","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `*daughterTrees[headIdx].label()` could be null and is dereferenced at line 339.","tnFile":"src/edu/stanford/nlp/trees/AbstractCollinsHeadFinder.java","tnLine":339,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.AbstractCollinsHeadFinder.findLeftDisHead(edu.stanford.nlp.trees.Tree[],java.lang.String[]):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `label()` could be null and is dereferenced at line 2096.","tnFile":"src/edu/stanford/nlp/trees/Tree.java","tnLine":2096,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.Tree.skipRoot():edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `mostGeneral` last assigned on line 1800 could be null and is dereferenced at line 1801.","tnFile":"src/edu/stanford/nlp/time/SUTime.java","tnLine":1801,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.time.SUTime$CompositePartialTime.getPeriod():edu.stanford.nlp.time.SUTime$Duration","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `Morphology()` at line 1769 is not released after line 1780.","tnFile":"src/edu/stanford/nlp/tagger/maxent/MaxentTagger.java","tnLine":1780,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.tagger.maxent.MaxentTagger.runTagger(edu.stanford.nlp.process.DocumentPreprocessor,java.io.BufferedWriter,edu.stanford.nlp.sequences.PlainTextDocumentReaderAndWriter$OutputStyle):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `node.label()` could be null and is dereferenced at line 194.","tnFile":"src/edu/stanford/nlp/trees/tregex/tsurgeon/AuxiliaryTree.java","tnLine":194,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.tregex.tsurgeon.AuxiliaryTree.initializeNamesNodesMaps(edu.stanford.nlp.trees.Tree):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `InputStreamReader(...)` at line 125 is not released after line 151.","tnFile":"src/edu/stanford/nlp/international/french/scripts/MungeTreesWithMorfetteAnalyses.java","tnLine":151,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.international.french.scripts.MungeTreesWithMorfetteAnalyses.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `sentence` last assigned on line 821 could be null and is dereferenced at line 826.","tnFile":"src/edu/stanford/nlp/naturalli/QuestionToStatementTranslator.java","tnLine":826,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.naturalli.QuestionToStatementTranslator.processWhoDid(edu.stanford.nlp.ling.tokensregex.TokenSequenceMatcher):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `sentences` last assigned on line 58 could be null and is dereferenced at line 59.","tnFile":"src/edu/stanford/nlp/quoteattribution/QuoteAttributionEvaluation.java","tnLine":59,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.quoteattribution.QuoteAttributionEvaluation.getQuoteChapter(edu.stanford.nlp.pipeline.Annotation,edu.stanford.nlp.util.CoreMap):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `dataset.get(edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation)` could be null and is dereferenced at line 66.","tnFile":"src/edu/stanford/nlp/ie/machinereading/ExtractorMerger.java","tnLine":66,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.machinereading.ExtractorMerger.annotate(edu.stanford.nlp.pipeline.Annotation):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.OutputStreamWriter` acquired by call to `OutputStreamWriter(...)` at line 58 is not released after line 60.","tnFile":"src/edu/stanford/nlp/parser/server/LexicalizedParserClient.java","tnLine":60,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.server.LexicalizedParserClient.getTokenizedText(java.lang.String):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Redwood.endThreads(String)` indirectly reads with synchronization from `logging.Redwood.isThreaded`. Potentially races with unsynchronized write in method `Redwood.endThreads(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/util/logging/Redwood.java","tnLine":462,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.util.logging.Redwood.endThreads(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `edu.stanford.nlp.trees.PennTreeReader` acquired by call to `PennTreeReader(...)` at line 287 is not released after line 294.","tnFile":"src/edu/stanford/nlp/trees/PennTreeReader.java","tnLine":294,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.PennTreeReader.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileInputStream` acquired by call to `FileInputStream(...)` at line 1481 is not released after line 1483.","tnFile":"src/edu/stanford/nlp/io/IOUtils.java","tnLine":1483,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.io.IOUtils.getFileInputStream(java.lang.String):java.io.InputStream","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `tokens` last assigned on line 485 could be null and is dereferenced at line 486.","tnFile":"src/edu/stanford/nlp/quoteattribution/Sieves/Sieve.java","tnLine":486,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.quoteattribution.Sieves.Sieve.rangeContainsCharIndex(edu.stanford.nlp.util.Pair,int):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.util.zip.GZIPInputStream` acquired to `return` by call to `GZIPInputStream(...)` at line 58 is not released after line 61.","tnFile":"src/edu/stanford/nlp/pipeline/GenericAnnotationSerializer.java","tnLine":61,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.GenericAnnotationSerializer.read(java.io.InputStream):edu.stanford.nlp.util.Pair","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void WebServiceAnnotator.ensureServer()` writes to field `this.everLive` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/pipeline/WebServiceAnnotator.java","tnLine":268,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.WebServiceAnnotator.ensureServer():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `tree.label()` could be null and is dereferenced at line 32.","tnFile":"src/edu/stanford/nlp/trees/tregex/tsurgeon/AdjoinToHeadNode.java","tnLine":32,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.tregex.tsurgeon.AdjoinToHeadNode$Matcher.evaluate(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.tregex.TregexMatcher):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `tree.label()` could be null and is dereferenced at line 187.","tnFile":"src/edu/stanford/nlp/parser/lexparser/SplittingGrammarExtractor.java","tnLine":187,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.SplittingGrammarExtractor.outputTransitions(edu.stanford.nlp.trees.Tree,int,java.util.IdentityHashMap,java.util.IdentityHashMap):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Document Document.runOpenie(Properties)` indirectly reads with synchronization from `this.sentences`. Potentially races with unsynchronized write in method `Document.forceSentences(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/simple/Document.java","tnLine":969,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.simple.Document.runOpenie(java.util.Properties):edu.stanford.nlp.simple.Document","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `doc.get(edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation)` could be null and is dereferenced at line 157.","tnFile":"src/edu/stanford/nlp/ie/machinereading/GenericDataSetReader.java","tnLine":157,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.machinereading.GenericDataSetReader.modifyUsingCoreNLPNER(edu.stanford.nlp.pipeline.Annotation):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `ann.get(edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation)` could be null and is dereferenced at line 343.","tnFile":"src/edu/stanford/nlp/pipeline/EntityMentionsAnnotator.java","tnLine":343,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.EntityMentionsAnnotator.addAcronyms(edu.stanford.nlp.pipeline.Annotation):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `AddMorphoAnnotations$YieldIterator.fileReader` last assigned on line 61 could be null and is dereferenced by call to `primeNext()` at line 77.","tnFile":"src/edu/stanford/nlp/international/morph/AddMorphoAnnotations.java","tnLine":77,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.international.morph.AddMorphoAnnotations$YieldIterator.<init>(java.lang.String,boolean)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `dataset.get(edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation)` could be null and is dereferenced at line 280.","tnFile":"src/edu/stanford/nlp/ie/machinereading/BasicRelationExtractor.java","tnLine":280,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.machinereading.BasicRelationExtractor.annotate(edu.stanford.nlp.pipeline.Annotation):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired to `pw` by call to `getPrintWriter(...)` at line 991 is not released after line 996.\n**Note**: potential exception at line 994","tnFile":"src/edu/stanford/nlp/time/SUTimeMain.java","tnLine":996,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.time.SUTimeMain.processText(edu.stanford.nlp.pipeline.AnnotationPipeline,java.lang.String,java.lang.String,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `cl.get(edu.stanford.nlp.ling.CoreAnnotations$CharacterOffsetEndAnnotation)` could be null and is dereferenced at line 375.","tnFile":"src/edu/stanford/nlp/international/arabic/process/IOBUtils.java","tnLine":375,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.international.arabic.process.IOBUtils.createDatum(edu.stanford.nlp.ling.CoreLabel,java.lang.String,java.lang.String):edu.stanford.nlp.ling.CoreLabel","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `SUTime$InexactTime.range.getTime()` could be null and is dereferenced at line 2229.","tnFile":"src/edu/stanford/nlp/time/SUTime.java","tnLine":2229,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.time.SUTime$InexactTime.compareTo(edu.stanford.nlp.time.SUTime$Time):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `getDataOutputStream(...)` at line 732 is not released after line 734.","tnFile":"src/edu/stanford/nlp/tagger/maxent/MaxentTagger.java","tnLine":734,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.tagger.maxent.MaxentTagger.saveModel(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `iterator()` at line 650 is not released after line 654.","tnFile":"src/edu/stanford/nlp/ie/ner/CMMClassifier.java","tnLine":654,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.ner.CMMClassifier.getDataset(edu.stanford.nlp.objectbank.ObjectBank,edu.stanford.nlp.util.Index,edu.stanford.nlp.util.Index):edu.stanford.nlp.classify.Dataset","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `new()` at line 57 is not released after line 65.\n**Note**: potential exception at line 60","tnFile":"src/edu/stanford/nlp/ie/crf/CRFClassifierNoisyLabel.java","tnLine":65,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.crf.CRFClassifierNoisyLabel.readErrorMatrix(java.lang.String,edu.stanford.nlp.util.Index,boolean):double[][]","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getTimexType()` could be null and is dereferenced at line 430.","tnFile":"src/edu/stanford/nlp/time/SUTime.java","tnLine":430,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.time.SUTime$Temporal.getTimexAttributes(edu.stanford.nlp.time.SUTime$TimeIndex):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.OutputStreamWriter` acquired by call to `new()` at line 299 is not released after line 299.","tnFile":"src/edu/stanford/nlp/process/TransformXML.java","tnLine":299,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.process.TransformXML.transformXML(java.lang.String[],java.util.function.Function,java.io.InputStream,java.io.OutputStream):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `ht.value()` could be null and is dereferenced at line 414.","tnFile":"src/edu/stanford/nlp/trees/NPTmpRetainingTreeNormalizer.java","tnLine":414,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.NPTmpRetainingTreeNormalizer.lambda$normalizeWholeTree$1(edu.stanford.nlp.trees.Tree):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.net.Socket` acquired by call to `new()` at line 133 is not released after line 147.","tnFile":"src/edu/stanford/nlp/parser/server/LexicalizedParserClient.java","tnLine":147,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.server.LexicalizedParserClient.getTree(java.lang.String):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.label()` could be null and is dereferenced at line 23.","tnFile":"src/edu/stanford/nlp/parser/lexparser/CNFTransformers.java","tnLine":23,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.CNFTransformers$ToCNFTransformer.transformTree(edu.stanford.nlp.trees.Tree):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `initStaticLexer()` at line 210 is not released after line 211.","tnFile":"src/edu/stanford/nlp/process/Morphology.java","tnLine":211,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.process.Morphology.lemmaStatic(java.lang.String,java.lang.String,boolean):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.util.zip.GZIPInputStream` acquired by call to `GZIPInputStream(...)` at line 238 is not released after line 238.","tnFile":"src/edu/stanford/nlp/loglinear/benchmarks/CoNLLBenchmark.java","tnLine":238,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.loglinear.benchmarks.CoNLLBenchmark.getEmbeddings(java.lang.String,java.util.ArrayList):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Dataset.applyFeatureCountThreshold(List)` writes to field `this.data.[_]` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/classify/Dataset.java","tnLine":488,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.Dataset.applyFeatureCountThreshold(java.util.List):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `grand.label()` could be null and is dereferenced at line 816.","tnFile":"src/edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass.java","tnLine":816,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.patterns.GetPatternsFromDataMultiClass.inferParentParseTag(edu.stanford.nlp.trees.Tree):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `new()` at line 41 is not released after line 61.\n**Note**: potential exception at line 42","tnFile":"src/edu/stanford/nlp/trees/international/hebrew/SplitMaker.java","tnLine":61,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.international.hebrew.SplitMaker.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `edge` last assigned on line 1828 could be null and is dereferenced at line 1829.","tnFile":"src/edu/stanford/nlp/trees/UniversalEnglishGrammaticalStructure.java","tnLine":1829,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.UniversalEnglishGrammaticalStructure.demoteQmodParentHelper(edu.stanford.nlp.semgraph.SemanticGraph,edu.stanford.nlp.ling.IndexedWord,edu.stanford.nlp.ling.IndexedWord):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired by call to `readStreamFromString(...)` at line 1042 is not released after line 1043.","tnFile":"src/edu/stanford/nlp/dcoref/SieveCoreferenceSystem.java","tnLine":1043,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.dcoref.SieveCoreferenceSystem.getSingletonPredictorFromSerializedFile(java.lang.String):edu.stanford.nlp.classify.LogisticClassifier","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 30 is not released after line 30.","tnFile":"src/edu/stanford/nlp/international/arabic/pipeline/LabeledATBDataset.java","tnLine":30,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.international.arabic.pipeline.LabeledATBDataset.build():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Dataset.add(Collection,Object,boolean)` indirectly reads without synchronization from `this.data`. Potentially races with write in method `Dataset.ensureSize()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/classify/Dataset.java","tnLine":307,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.Dataset.add(java.util.Collection,java.lang.Object,boolean):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `crt.get(edu.stanford.nlp.ling.CoreAnnotations$AnswerAnnotation)` could be null and is dereferenced at line 446.","tnFile":"src/edu/stanford/nlp/ie/regexp/NumberSequenceClassifier.java","tnLine":446,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.regexp.NumberSequenceClassifier.changeRightToLeft(java.util.List,int,java.lang.String,java.lang.String,java.lang.String):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `InputStreamReader(...)` at line 553 is not released after line 555.","tnFile":"src/edu/stanford/nlp/international/spanish/pipeline/MultiWordPreprocessor.java","tnLine":555,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.international.spanish.pipeline.MultiWordPreprocessor.resolveDummyTags(java.io.File,edu.stanford.nlp.stats.TwoDimensionalCounter,boolean,edu.stanford.nlp.trees.TreeNormalizer):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `annotation.get(edu.stanford.nlp.ling.CoreAnnotations$TokensAnnotation)` could be null and is dereferenced at line 824.","tnFile":"src/edu/stanford/nlp/ie/NumberNormalizer.java","tnLine":824,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.NumberNormalizer.findAndMergeNumbers(edu.stanford.nlp.util.CoreMap):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.net.Socket` acquired to `socket` by call to `new()` at line 254 is not released after line 272.\n**Note**: potential exception at line 255","tnFile":"src/edu/stanford/nlp/ie/NERServer.java","tnLine":272,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.NERServer$NERClient.communicateWithNERServer(java.lang.String,int,java.lang.String,java.io.BufferedReader,java.io.BufferedWriter,boolean):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.OutputStreamWriter` acquired by call to `OutputStreamWriter(...)` at line 58 is not released after line 64.\n**Note**: potential exception at line 59","tnFile":"src/edu/stanford/nlp/parser/server/LexicalizedParserClient.java","tnLine":64,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.server.LexicalizedParserClient.getTokenizedText(java.lang.String):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `dataset.get(edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation)` could be null and is dereferenced at line 167.","tnFile":"src/edu/stanford/nlp/ie/machinereading/structure/AnnotationUtils.java","tnLine":167,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.machinereading.structure.AnnotationUtils.getSentence(edu.stanford.nlp.pipeline.Annotation,int):edu.stanford.nlp.util.CoreMap","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `SystemUtils$WriterThread(...)` at line 86 is not released after line 90.","tnFile":"src/edu/stanford/nlp/util/SystemUtils.java","tnLine":90,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.util.SystemUtils.consume(java.lang.Process,java.io.Writer,java.io.Writer):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 60 is not released after line 60.","tnFile":"src/edu/stanford/nlp/io/FileSystem.java","tnLine":60,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.io.FileSystem.gzipFile(java.io.File,java.io.File):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 1853 is not released after line 1866.\n**Note**: potential exception at line 1864","tnFile":"src/edu/stanford/nlp/io/IOUtils.java","tnLine":1866,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.io.IOUtils.copyFile(java.io.File,java.io.File):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `tree.label()` could be null and is dereferenced at line 657.","tnFile":"src/edu/stanford/nlp/parser/lexparser/SplittingGrammarExtractor.java","tnLine":657,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.SplittingGrammarExtractor.recalculateTemporaryBetas(edu.stanford.nlp.trees.Tree,double[],int,java.util.IdentityHashMap,java.util.IdentityHashMap,java.util.Map,edu.stanford.nlp.util.TwoDimensionalMap,edu.stanford.nlp.util.ThreeDimensionalMap):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `type` last assigned on line 169 could be null and is dereferenced at line 170.","tnFile":"src/edu/stanford/nlp/ie/machinereading/BasicEntityExtractor.java","tnLine":170,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.machinereading.BasicEntityExtractor.extractEntities(edu.stanford.nlp.util.CoreMap,int):edu.stanford.nlp.util.CoreMap","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Ssurgeon Ssurgeon.inst()` reads without synchronization from `ssurgeon.Ssurgeon.instance`. Potentially races with write in method `Ssurgeon.main(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/semgraph/semgrex/ssurgeon/Ssurgeon.java","tnLine":54,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.semgraph.semgrex.ssurgeon.Ssurgeon.inst():edu.stanford.nlp.semgraph.semgrex.ssurgeon.Ssurgeon","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `tree.label()` could be null and is dereferenced at line 843.","tnFile":"src/edu/stanford/nlp/parser/lexparser/SplittingGrammarExtractor.java","tnLine":843,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.SplittingGrammarExtractor.recountWeights(edu.stanford.nlp.trees.Tree,java.util.IdentityHashMap,java.util.IdentityHashMap,java.util.IdentityHashMap,java.util.IdentityHashMap):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `readerFromString(...)` at line 1705 is not released after line 1717.\n**Note**: potential exception at line 1708","tnFile":"src/edu/stanford/nlp/io/IOUtils.java","tnLine":1717,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.io.IOUtils.linesFromFile(java.lang.String,java.lang.String,boolean):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.net.HttpURLConnection` acquired to `connection` by call to `openConnection()` at line 533 is not released after line 544.\n**Note**: potential exception at line 537","tnFile":"src/edu/stanford/nlp/pipeline/StanfordCoreNLPClient.java","tnLine":544,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.StanfordCoreNLPClient.checkStatus(java.net.URL):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `tokens` last assigned on line 82 could be null and is dereferenced at line 91.","tnFile":"src/edu/stanford/nlp/pipeline/CorefAnnotator.java","tnLine":91,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.CorefAnnotator.setNamedEntityTagGranularity(edu.stanford.nlp.pipeline.Annotation,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `cl.get(edu.stanford.nlp.ling.CoreAnnotations$UtteranceAnnotation)` could be null and is dereferenced at line 721.","tnFile":"src/edu/stanford/nlp/coref/data/DocumentPreprocessor.java","tnLine":721,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.coref.data.DocumentPreprocessor.findSpeaker(edu.stanford.nlp.coref.data.Document,int,int,java.util.List,int,int,edu.stanford.nlp.coref.data.Dictionaries):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `tag` last assigned on line 583 could be null and is dereferenced at line 584.","tnFile":"src/edu/stanford/nlp/dcoref/Mention.java","tnLine":584,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.dcoref.Mention.setNumber(edu.stanford.nlp.dcoref.Dictionaries):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `ht.label()` could be null and is dereferenced at line 468.","tnFile":"src/edu/stanford/nlp/trees/NPTmpRetainingTreeNormalizer.java","tnLine":468,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.NPTmpRetainingTreeNormalizer.lambda$normalizeWholeTree$1(edu.stanford.nlp.trees.Tree):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `l.get(edu.stanford.nlp.ling.CoreAnnotations$CharacterOffsetBeginAnnotation)` could be null and is dereferenced at line 523.","tnFile":"src/edu/stanford/nlp/ie/machinereading/structure/AnnotationUtils.java","tnLine":523,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.machinereading.structure.AnnotationUtils.updateOffsetsInCoreLabels(java.util.List,int):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `words` last assigned on line 2358 could be null and is dereferenced at line 2369.","tnFile":"src/edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass.java","tnLine":2369,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.patterns.GetPatternsFromDataMultiClass.readLearnedWordsFromFile(java.io.File):java.util.TreeMap","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 60 is not released after line 60.","tnFile":"src/edu/stanford/nlp/international/arabic/pipeline/IBMMTArabicDataset.java","tnLine":60,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.international.arabic.pipeline.IBMMTArabicDataset.build():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `label` last assigned on line 19 could be null and is dereferenced at line 21.","tnFile":"src/edu/stanford/nlp/parser/shiftreduce/ShiftReduceUtils.java","tnLine":21,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.shiftreduce.ShiftReduceUtils.getBinarySide(edu.stanford.nlp.trees.Tree):edu.stanford.nlp.parser.shiftreduce.BinaryTransition$Side","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `word` last assigned on line 874 could be null and is dereferenced at line 875.","tnFile":"src/edu/stanford/nlp/coref/data/DocumentPreprocessor.java","tnLine":875,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.coref.data.DocumentPreprocessor.isSpeaker(edu.stanford.nlp.coref.data.Mention,edu.stanford.nlp.coref.data.Mention,edu.stanford.nlp.coref.data.Dictionaries):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `doc.annotation.get(edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation)` could be null and is dereferenced at line 421.","tnFile":"src/edu/stanford/nlp/coref/data/DocumentPreprocessor.java","tnLine":421,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.coref.data.DocumentPreprocessor.findDocType(edu.stanford.nlp.coref.data.Document):edu.stanford.nlp.coref.data.Document$DocType","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 206 is not released after line 206.","tnFile":"src/edu/stanford/nlp/io/IOUtils.java","tnLine":206,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.io.IOUtils.writeStringToTempFile(java.lang.String,java.lang.String,java.lang.String):java.io.File","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 134 is not released after line 141.\n**Note**: potential exception at line 137","tnFile":"src/edu/stanford/nlp/classify/MultinomialLogisticClassifier.java","tnLine":141,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.MultinomialLogisticClassifier.save(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileInputStream` acquired by call to `FileInputStream(...)` at line 46 is not released after line 46.","tnFile":"src/edu/stanford/nlp/io/EncodingFileReader.java","tnLine":46,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.io.EncodingFileReader.<init>(java.lang.String,java.lang.String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired by call to `new()` at line 788 is not released after line 799.","tnFile":"src/edu/stanford/nlp/parser/lexparser/BaseLexicon.java","tnLine":799,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.BaseLexicon.writeData(java.io.Writer):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `root.label()` could be null and is dereferenced at line 240.","tnFile":"src/edu/stanford/nlp/naturalli/CreateClauseDataset.java","tnLine":240,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.naturalli.CreateClauseDataset.findTraceTargets(edu.stanford.nlp.trees.Tree):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `arcs` last assigned on line 93 could be null and is dereferenced at line 94.","tnFile":"src/edu/stanford/nlp/fsm/QuasiDeterminizer.java","tnLine":94,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.fsm.QuasiDeterminizer.pushLambdas(edu.stanford.nlp.fsm.TransducerGraph,edu.stanford.nlp.stats.ClassicCounter):edu.stanford.nlp.fsm.TransducerGraph","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedWriter` acquired by call to `WebServiceAnnotator$RunningProcess(...)` at line 223 is not released after line 223.","tnFile":"src/edu/stanford/nlp/pipeline/WebServiceAnnotator.java","tnLine":223,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.WebServiceAnnotator.startServer(java.lang.String[]):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `word` last assigned on line 841 could be null and is dereferenced at line 842.","tnFile":"src/edu/stanford/nlp/dcoref/Document.java","tnLine":842,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.dcoref.Document.isSpeaker(edu.stanford.nlp.dcoref.Mention,edu.stanford.nlp.dcoref.Mention,edu.stanford.nlp.dcoref.Dictionaries):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `GetPatternsFromDataMultiClass.constVars.goldEntities.get(label)` could be null and is dereferenced by call to `getPrecisionRecall(...)` at line 3244.","tnFile":"src/edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass.java","tnLine":3244,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.patterns.GetPatternsFromDataMultiClass.evaluate(java.util.Map):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.label()` could be null and is dereferenced at line 135.","tnFile":"src/edu/stanford/nlp/trees/TreeFunctions.java","tnLine":135,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.TreeFunctions$LabeledToDescriptiveCoreLabelTreeFunction.apply(edu.stanford.nlp.trees.Tree):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Dataset.changeFeatureIndex(Index)` reads without synchronization from `this.featureIndex`. Potentially races with write in method `Dataset.selectFeatures(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/classify/Dataset.java","tnLine":566,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.Dataset.changeFeatureIndex(edu.stanford.nlp.util.Index):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 147 is not released after line 149.","tnFile":"src/edu/stanford/nlp/io/IOUtils.java","tnLine":149,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.io.IOUtils.getBufferedOutputStream(java.lang.String):java.io.OutputStream","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.net.Socket` acquired to `socket` by call to `new()` at line 133 is not released after line 152.\n**Note**: potential exception at line 136","tnFile":"src/edu/stanford/nlp/parser/server/LexicalizedParserClient.java","tnLine":152,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.server.LexicalizedParserClient.getTree(java.lang.String):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `map.get(typedDep.dep())` could be null and is dereferenced at line 575.","tnFile":"src/edu/stanford/nlp/trees/EnglishGrammaticalStructure.java","tnLine":575,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.EnglishGrammaticalStructure.treatCC(java.util.Collection):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 1498 is not released after line 1500.","tnFile":"src/edu/stanford/nlp/io/IOUtils.java","tnLine":1500,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.io.IOUtils.getFileOutputStream(java.lang.String):java.io.OutputStream","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `headLabel` last assigned on line 1142 could be null and is dereferenced at line 1157.","tnFile":"src/edu/stanford/nlp/trees/Tree.java","tnLine":1157,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.Tree.percolateHeads(edu.stanford.nlp.trees.CollinsHeadFinder):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 57 is not released after line 57.","tnFile":"src/edu/stanford/nlp/international/arabic/pipeline/ATBArabicDataset.java","tnLine":57,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.international.arabic.pipeline.ATBArabicDataset.build():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `tokens` last assigned on line 83 could be null and is dereferenced at line 92.","tnFile":"src/edu/stanford/nlp/pipeline/DeterministicCorefAnnotator.java","tnLine":92,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.DeterministicCorefAnnotator.setNamedEntityTagGranularity(edu.stanford.nlp.pipeline.Annotation,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `edu.stanford.nlp.pipeline.GenericAnnotationSerializer$AppendingObjectOutputStream` acquired by call to `new()` at line 42 is not released after line 48.\n**Note**: potential exception at line 43","tnFile":"src/edu/stanford/nlp/pipeline/GenericAnnotationSerializer.java","tnLine":48,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.GenericAnnotationSerializer.write(edu.stanford.nlp.pipeline.Annotation,java.io.OutputStream):java.io.OutputStream","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.net.HttpURLConnection` acquired by call to `openConnection()` at line 483 is not released after line 503.","tnFile":"src/edu/stanford/nlp/pipeline/StanfordCoreNLPClient.java","tnLine":503,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.StanfordCoreNLPClient.doAnnotation(edu.stanford.nlp.pipeline.Annotation,edu.stanford.nlp.pipeline.StanfordCoreNLPClient$Backend,java.net.URL,byte[],int):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `tree.label()` could be null and is dereferenced at line 37.","tnFile":"src/edu/stanford/nlp/sentiment/SentimentUtils.java","tnLine":37,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.sentiment.SentimentUtils.attachLabels(edu.stanford.nlp.trees.Tree,java.lang.Class):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 529 is not released after line 530.","tnFile":"src/edu/stanford/nlp/quoteattribution/Sieves/training/SupervisedSieveTraining.java","tnLine":530,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.quoteattribution.Sieves.training.SupervisedSieveTraining.outputModel(java.lang.String,edu.stanford.nlp.classify.Classifier):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `getBufferedFileReader(...)` at line 1872 is not released after line 1883.\n**Note**: potential exception at line 1875","tnFile":"src/edu/stanford/nlp/stats/Counters.java","tnLine":1883,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.stats.Counters.loadInto2DCounter(java.lang.String,java.lang.Class,java.lang.Class,edu.stanford.nlp.stats.TwoDimensionalCounter):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getChildByName(node,\"extent\")` could be null and is dereferenced by call to `parseCharSeq(...)` at line 57.","tnFile":"src/edu/stanford/nlp/ie/machinereading/domains/ace/reader/AceDomReader.java","tnLine":57,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.machinereading.domains.ace.reader.AceDomReader.parseRelationMention(org.w3c.dom.Node,edu.stanford.nlp.ie.machinereading.domains.ace.reader.AceDocument):edu.stanford.nlp.ie.machinereading.domains.ace.reader.AceRelationMention","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `*kids[i].label()` could be null and is dereferenced at line 104.","tnFile":"src/edu/stanford/nlp/parser/lexparser/SisterAnnotationStats.java","tnLine":104,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.SisterAnnotationStats.rightSisterLabels(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.Tree):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `getBufferedOutputStream(...)` at line 165 is not released after line 168.\n**Note**: potential exception at line 166","tnFile":"src/edu/stanford/nlp/io/IOUtils.java","tnLine":168,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.io.IOUtils.writeStringToFile(java.lang.String,java.lang.String,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `annotation.get(edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation)` could be null and is dereferenced at line 94.","tnFile":"src/edu/stanford/nlp/pipeline/MWTAnnotator.java","tnLine":94,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.MWTAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `getBufferedFileReader(...)` at line 1824 is not released after line 1827.","tnFile":"src/edu/stanford/nlp/stats/Counters.java","tnLine":1827,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.stats.Counters.loadIntoCounter(java.lang.String,java.lang.Class,edu.stanford.nlp.stats.IntCounter):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 77 is not released after line 85.\n**Note**: potential exception at line 83","tnFile":"src/edu/stanford/nlp/io/IOUtils.java","tnLine":85,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.io.IOUtils.writeObjectToFile(java.lang.Object,java.io.File,boolean):java.io.File","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `doc.get(edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation)` could be null and is dereferenced at line 707.","tnFile":"src/edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass.java","tnLine":707,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.patterns.GetPatternsFromDataMultiClass.tokenize(java.util.Iterator,java.lang.String,boolean,boolean,java.lang.String,boolean,java.lang.String,boolean,int,java.io.File,java.util.Map,int,edu.stanford.nlp.patterns.PatternFactory$PatternType):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `new()` at line 1842 is not released after line 1846.","tnFile":"src/edu/stanford/nlp/stats/Counters.java","tnLine":1846,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.stats.Counters.saveCounter(edu.stanford.nlp.stats.Counter,java.io.FileOutputStream):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `sent.get((m.startIndex-1)).get(edu.stanford.nlp.ling.CoreAnnotations$TextAnnotation)` could be null and is dereferenced at line 748.","tnFile":"src/edu/stanford/nlp/coref/md/CorefMentionFinder.java","tnLine":748,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.coref.md.CorefMentionFinder.partitiveRule(edu.stanford.nlp.coref.data.Mention,java.util.List,edu.stanford.nlp.coref.data.Dictionaries):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileInputStream` acquired by call to `FileInputStream(...)` at line 1523 is not released after line 1523.","tnFile":"src/edu/stanford/nlp/tagger/maxent/MaxentTagger.java","tnLine":1523,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.tagger.maxent.MaxentTagger.tagFromXML():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired by call to `new()` at line 40 is not released after line 45.","tnFile":"src/edu/stanford/nlp/classify/demo/MnistConverter.java","tnLine":45,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.demo.MnistConverter.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `highestScoringState` last assigned on line 319 could be null and is dereferenced by call to `areTransitionsEqual(...)` at line 358.","tnFile":"src/edu/stanford/nlp/parser/shiftreduce/PerceptronModel.java","tnLine":358,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.shiftreduce.PerceptronModel.trainTree(int,java.util.List,java.util.List,java.util.List,edu.stanford.nlp.parser.shiftreduce.Oracle):edu.stanford.nlp.util.Pair","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired to `out` by call to `new()` at line 57 is not released after line 83.\n**Note**: potential exception at line 64","tnFile":"src/edu/stanford/nlp/ling/tokensregex/demo/TokensRegexRetokenizeDemo.java","tnLine":83,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ling.tokensregex.demo.TokensRegexRetokenizeDemo.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `iterator()` at line 481 is not released after line 506.","tnFile":"src/edu/stanford/nlp/ie/NERFeatureFactory.java","tnLine":506,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.NERFeatureFactory.initLexicon(edu.stanford.nlp.sequences.SeqClassifierFlags):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `label` last assigned on line 82 could be null and is dereferenced at line 83.","tnFile":"src/edu/stanford/nlp/time/TimexTreeAnnotator.java","tnLine":83,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.time.TimexTreeAnnotator.beginOffset(edu.stanford.nlp.trees.Tree,java.util.List):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `iterator()` at line 1488 is not released after line 1492.","tnFile":"src/edu/stanford/nlp/ie/crf/CRFClassifier.java","tnLine":1492,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.crf.CRFClassifier.getCliqueTrees(java.lang.String,edu.stanford.nlp.sequences.DocumentReaderAndWriter):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `span.value()` could be null and is dereferenced at line 22.","tnFile":"src/edu/stanford/nlp/trees/WordCatEqualityChecker.java","tnLine":22,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.WordCatEqualityChecker.areEqual(java.lang.Object,java.lang.Object):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `readerFromString(...)` at line 49 is not released after line 54.","tnFile":"src/edu/stanford/nlp/international/arabic/ArabicVerbStemBank.java","tnLine":54,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.international.arabic.ArabicVerbStemBank.load(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 1990 is not released after line 1990.","tnFile":"src/edu/stanford/nlp/stats/Counters.java","tnLine":1990,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.stats.Counters.serializeCounter(edu.stanford.nlp.stats.Counter,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ConcatVectorNamespace.debugVector(ConcatVector,BufferedWriter)` reads without synchronization from container `this.featureToIndex` via call to `keySet`. Potentially races with write in method `ConcatVectorNamespace.ensureSparseFeature(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/loglinear/model/ConcatVectorNamespace.java","tnLine":118,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.loglinear.model.ConcatVectorNamespace.debugVector(edu.stanford.nlp.loglinear.model.ConcatVector,java.io.BufferedWriter):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.label()` could be null and is dereferenced at line 96.","tnFile":"src/edu/stanford/nlp/parser/lexparser/TreeBinarizer.java","tnLine":96,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.TreeBinarizer.binarizeLocalTree(edu.stanford.nlp.trees.Tree,int,edu.stanford.nlp.ling.TaggedWord):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ConcurrentHashIndex.saveToWriter(Writer)` reads without synchronization from `this.indexSize`. Potentially races with write in method `ConcurrentHashIndex.addToIndex(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/util/concurrent/ConcurrentHashIndex.java","tnLine":172,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.util.concurrent.ConcurrentHashIndex.saveToWriter(java.io.Writer):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `lab` last assigned on line 60 could be null and is dereferenced at line 61.","tnFile":"src/edu/stanford/nlp/parser/lexparser/EnglishTreebankParserParams.java","tnLine":61,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.EnglishTreebankParserParams$EnglishSubcategoryStripper.transformTree(edu.stanford.nlp.trees.Tree):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `sentences` last assigned on line 280 could be null and is dereferenced at line 281.","tnFile":"src/edu/stanford/nlp/pipeline/JSONOutputter.java","tnLine":281,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.JSONOutputter.lambda$null$18(edu.stanford.nlp.util.CoreMap,edu.stanford.nlp.pipeline.JSONOutputter$Writer):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `headerIndex.get(\"type\")` could be null and is dereferenced at line 122.","tnFile":"src/edu/stanford/nlp/ie/qe/Units.java","tnLine":122,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.qe.Units.loadUnits(java.lang.String):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `edu.stanford.nlp.trees.PennTreeReader` acquired by call to `newTreeReader(...)` at line 86 is not released after line 89.","tnFile":"src/edu/stanford/nlp/trees/tregex/gui/Tdiff.java","tnLine":89,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.tregex.gui.Tdiff.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `w.get(edu.stanford.nlp.ling.CoreAnnotations$LemmaAnnotation)` could be null and is dereferenced at line 841.","tnFile":"src/edu/stanford/nlp/coref/data/DocumentPreprocessor.java","tnLine":841,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.coref.data.DocumentPreprocessor.findNextParagraphSpeaker(edu.stanford.nlp.coref.data.Document,java.util.List,int,edu.stanford.nlp.coref.data.Dictionaries):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `annotation.get(edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation)` could be null and is dereferenced at line 52.","tnFile":"src/edu/stanford/nlp/pipeline/BinarizerAnnotator.java","tnLine":52,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.BinarizerAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `iw.get(edu.stanford.nlp.ling.CoreAnnotations$SentenceIndexAnnotation)` could be null and is dereferenced at line 887.","tnFile":"src/edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer.java","tnLine":887,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.ProtobufAnnotationSerializer.createIndexedWordProtoFromIW(edu.stanford.nlp.ling.IndexedWord):edu.stanford.nlp.pipeline.CoreNLPProtos$IndexedWord","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.label()` could be null and is dereferenced at line 91.","tnFile":"src/edu/stanford/nlp/trees/TreeFunctions.java","tnLine":91,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.TreeFunctions$LabeledTreeToCategoryWordTagTreeFunction.helper(edu.stanford.nlp.trees.Tree):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `InputStreamReader(...)` at line 353 is not released after line 355.","tnFile":"src/edu/stanford/nlp/pipeline/StanfordCoreNLP.java","tnLine":355,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.StanfordCoreNLP.loadProperties(java.lang.String,java.lang.ClassLoader):java.util.Properties","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.label()` could be null and is dereferenced at line 300.","tnFile":"src/edu/stanford/nlp/parser/lexparser/TreeBinarizer.java","tnLine":300,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.TreeBinarizer.makeSyntheticLabel1(edu.stanford.nlp.trees.Tree,int,int,int,int):edu.stanford.nlp.ling.Label","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `tree.label()` could be null and is dereferenced at line 150.","tnFile":"src/edu/stanford/nlp/parser/lexparser/MLEDependencyGrammar.java","tnLine":150,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.MLEDependencyGrammar.treeToDependencyHelper(edu.stanford.nlp.trees.Tree,java.util.List,int,edu.stanford.nlp.util.Index,edu.stanford.nlp.util.Index):edu.stanford.nlp.parser.lexparser.MLEDependencyGrammar$EndHead","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `d` last assigned on line 1815 could be null and is dereferenced by call to `compareTo(...)` at line 1816.","tnFile":"src/edu/stanford/nlp/time/SUTime.java","tnLine":1816,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.time.SUTime$CompositePartialTime.getPeriod():edu.stanford.nlp.time.SUTime$Duration","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `current` last assigned on line 256 could be null and is dereferenced at line 257.","tnFile":"src/edu/stanford/nlp/coref/hybrid/sieve/Sieve.java","tnLine":257,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.coref.hybrid.sieve.Sieve.sortMentionsByClause(java.util.ArrayList,edu.stanford.nlp.coref.data.Mention):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `dir.listFiles()` could be null and is dereferenced at line 1767.","tnFile":"src/edu/stanford/nlp/io/IOUtils.java","tnLine":1767,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.io.IOUtils.deleteDirRecursively(java.io.File):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedWriter` acquired by call to `new()` at line 1577 is not released after line 1579.","tnFile":"src/edu/stanford/nlp/io/IOUtils.java","tnLine":1579,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.io.IOUtils.getBZip2PipedInputStream(java.lang.String):java.io.InputStream","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `*daughterTrees[headIdx].label()` could be null and is dereferenced at line 328.","tnFile":"src/edu/stanford/nlp/trees/AbstractCollinsHeadFinder.java","tnLine":328,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.AbstractCollinsHeadFinder.findLeftHead(edu.stanford.nlp.trees.Tree[],java.lang.String[]):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `combinedMapping.get(fileToWriteTo)` could be null and is dereferenced at line 1000.","tnFile":"src/edu/stanford/nlp/util/FileBackedCache.java","tnLine":1000,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.util.FileBackedCache.merge(edu.stanford.nlp.util.FileBackedCache,edu.stanford.nlp.util.FileBackedCache[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `sentences` last assigned on line 43 could be null and is dereferenced at line 47.","tnFile":"src/edu/stanford/nlp/coref/md/HybridCorefMentionFinder.java","tnLine":47,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.coref.md.HybridCorefMentionFinder.findMentions(edu.stanford.nlp.pipeline.Annotation,edu.stanford.nlp.coref.data.Dictionaries,java.util.Properties):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `sg.getEdge(oldHead,gov)` could be null and is dereferenced by call to `removeEdge(...)` at line 1838.","tnFile":"src/edu/stanford/nlp/trees/UniversalEnglishGrammaticalStructure.java","tnLine":1838,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.UniversalEnglishGrammaticalStructure.demoteQmodParentHelper(edu.stanford.nlp.semgraph.SemanticGraph,edu.stanford.nlp.ling.IndexedWord,edu.stanford.nlp.ling.IndexedWord):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `Sieve.doc.get(edu.stanford.nlp.ling.CoreAnnotations$TokensAnnotation)` could be null and is dereferenced at line 25.","tnFile":"src/edu/stanford/nlp/quoteattribution/Sieves/QMSieves/ClosestMentionSieve.java","tnLine":25,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.quoteattribution.Sieves.QMSieves.ClosestMentionSieve.getClosestMention(edu.stanford.nlp.util.CoreMap):edu.stanford.nlp.quoteattribution.Sieves.Sieve$MentionData","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.value()` could be null and is dereferenced at line 87.","tnFile":"src/edu/stanford/nlp/international/arabic/pipeline/TaggedArabicDataset.java","tnLine":87,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.international.arabic.pipeline.TaggedArabicDataset$ArabicTreeTaggedNormalizer.visitTree(edu.stanford.nlp.trees.Tree):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `new()` at line 198 is not released after line 213.\n**Note**: potential exception at line 200","tnFile":"src/edu/stanford/nlp/stats/SimpleGoodTuring.java","tnLine":213,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.stats.SimpleGoodTuring.readInput():int[][]","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `outputTree.label()` could be null and is dereferenced at line 531.","tnFile":"src/edu/stanford/nlp/trees/TreePrint.java","tnLine":531,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.TreePrint.printTreeInternal(edu.stanford.nlp.trees.Tree,java.io.PrintWriter,boolean):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `*daughterTrees[index].label()` could be null and is dereferenced at line 41.","tnFile":"src/edu/stanford/nlp/ie/machinereading/common/NoPunctuationHeadFinder.java","tnLine":41,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.machinereading.common.NoPunctuationHeadFinder.postOperationFix(int,edu.stanford.nlp.trees.Tree[]):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object Lazy.getIfDefined()` reads without synchronization from `this.implOrNullCache`. Potentially races with write in method `Lazy.get()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/util/Lazy.java","tnLine":60,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.util.Lazy.getIfDefined():java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.label()` could be null and is dereferenced at line 1869.","tnFile":"src/edu/stanford/nlp/parser/lexparser/EnglishTreebankParserParams.java","tnLine":1869,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.EnglishTreebankParserParams.containsVP(edu.stanford.nlp.trees.Tree):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired to `stringPrintWriter` by call to `new()` at line 677 is not released after line 686.\n**Note**: potential exception at line 678","tnFile":"src/edu/stanford/nlp/ie/AbstractSequenceClassifier.java","tnLine":686,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.AbstractSequenceClassifier.segmentString(java.lang.String,edu.stanford.nlp.objectbank.IteratorFromReaderFactory):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `RandomWalk.model.get(hidden)` could be null and is dereferenced at line 29.","tnFile":"src/edu/stanford/nlp/parser/lexparser/RandomWalk.java","tnLine":29,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.RandomWalk.score(java.lang.Object,java.lang.Object):double","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `iterator()` at line 1189 is not released after line 1212.","tnFile":"src/edu/stanford/nlp/ie/ner/CMMClassifier.java","tnLine":1212,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.ner.CMMClassifier.makeAnswerArraysAndTagIndex(edu.stanford.nlp.objectbank.ObjectBank):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.label()` could be null and is dereferenced at line 401.","tnFile":"src/edu/stanford/nlp/trees/Trees.java","tnLine":401,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.Trees.toStructureDebugString(edu.stanford.nlp.trees.Tree):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `parent.label()` could be null and is dereferenced at line 1229.","tnFile":"src/edu/stanford/nlp/parser/lexparser/SplittingGrammarExtractor.java","tnLine":1229,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.SplittingGrammarExtractor.mergeTransitions(edu.stanford.nlp.trees.Tree,java.util.IdentityHashMap,java.util.IdentityHashMap,java.util.IdentityHashMap,java.util.IdentityHashMap,double[],java.util.Map):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.apache.lucene.index.CheckIndex` acquired by call to `new()` at line 81 is not released after line 82.","tnFile":"src/edu/stanford/nlp/patterns/surface/PatternsForEachTokenLucene.java","tnLine":82,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.patterns.surface.PatternsForEachTokenLucene.checkClean():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.OutputStreamWriter` acquired by call to `OutputStreamWriter(...)` at line 96 is not released after line 98.","tnFile":"src/edu/stanford/nlp/parser/server/LexicalizedParserClient.java","tnLine":98,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.server.LexicalizedParserClient.getDependencies(java.lang.String,java.lang.String):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `doc.get(edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation)` could be null and is dereferenced at line 1012.","tnFile":"src/edu/stanford/nlp/pipeline/StanfordCoreNLPServer.java","tnLine":1012,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.StanfordCoreNLPServer$TokensRegexHandler.lambda$null$5(boolean,edu.stanford.nlp.pipeline.Annotation,edu.stanford.nlp.ling.tokensregex.TokenSequencePattern,edu.stanford.nlp.pipeline.JSONOutputter$Writer):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Dataset.selectFeaturesBinaryInformationGain(int)` indirectly reads without synchronization from `this.data.[_]`. Potentially races with write in method `Dataset.selectFeatures(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/classify/Dataset.java","tnLine":581,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.Dataset.selectFeaturesBinaryInformationGain(int):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `getReader(...)` at line 212 is not released after line 212.","tnFile":"src/edu/stanford/nlp/ling/BasicDocument.java","tnLine":212,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ling.BasicDocument.init(java.net.URL,java.lang.String,boolean):edu.stanford.nlp.ling.BasicDocument","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired by call to `new()` at line 874 is not released after line 877.","tnFile":"src/edu/stanford/nlp/classify/LinearClassifier.java","tnLine":877,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.LinearClassifier.toAllWeightsString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileInputStream` acquired by call to `FileInputStream(...)` at line 611 is not released after line 612.","tnFile":"src/edu/stanford/nlp/trees/international/negra/NegraPennLexer.java","tnLine":612,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.international.negra.NegraPennLexer.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `GraphicalModelProto$GraphicalModel$Builder GraphicalModel.getProtoBuilder()` reads without synchronization from container `this.variableMetaData` via call to `iterator`. Potentially races with write in method `GraphicalModel.getVariableMetaDataByReference(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/loglinear/model/GraphicalModel.java","tnLine":222,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.loglinear.model.GraphicalModel.getProtoBuilder():edu.stanford.nlp.loglinear.model.proto.GraphicalModelProto$GraphicalModel$Builder","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.label()` could be null and is dereferenced at line 229.","tnFile":"src/edu/stanford/nlp/trees/NPTmpRetainingTreeNormalizer.java","tnLine":229,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.NPTmpRetainingTreeNormalizer.lambda$normalizeWholeTree$0(edu.stanford.nlp.trees.Tree):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `w.get(edu.stanford.nlp.ling.CoreAnnotations$PartOfSpeechAnnotation)` could be null and is dereferenced at line 1048.","tnFile":"src/edu/stanford/nlp/dcoref/Mention.java","tnLine":1048,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.dcoref.Mention.removePhraseAfterHead():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired by call to `readStreamFromString(...)` at line 556 is not released after line 559.\n**Note**: potential exception at line 557","tnFile":"src/edu/stanford/nlp/ie/ClassifierCombiner.java","tnLine":559,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.ClassifierCombiner.getClassifier(java.lang.String,java.util.Properties):edu.stanford.nlp.ie.ClassifierCombiner","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.value()` could be null and is dereferenced at line 552.","tnFile":"src/edu/stanford/nlp/trees/SemanticHeadFinder.java","tnLine":552,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.SemanticHeadFinder.isWHQ(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.Tree):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `subject` last assigned on line 164 could be null and is dereferenced at line 165.","tnFile":"src/edu/stanford/nlp/naturalli/RelationTripleSegmenter.java","tnLine":165,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.naturalli.RelationTripleSegmenter.extract(edu.stanford.nlp.semgraph.SemanticGraph,java.util.List):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `iterator()` at line 1259 is not released after line 1274.","tnFile":"src/edu/stanford/nlp/ie/AbstractSequenceClassifier.java","tnLine":1274,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.AbstractSequenceClassifier.classifyAndWriteAnswersKBest(edu.stanford.nlp.objectbank.ObjectBank,int,java.io.PrintWriter,edu.stanford.nlp.sequences.DocumentReaderAndWriter):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `top.label()` could be null and is dereferenced at line 52.","tnFile":"src/edu/stanford/nlp/parser/shiftreduce/CompoundUnaryTransition.java","tnLine":52,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.shiftreduce.CompoundUnaryTransition.isLegal(edu.stanford.nlp.parser.shiftreduce.State,java.util.List):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `edge` last assigned on line 531 could be null and is dereferenced at line 532.","tnFile":"src/edu/stanford/nlp/trees/ud/UniversalGrammaticalStructure.java","tnLine":532,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.ud.UniversalGrammaticalStructure.addConjToReln(edu.stanford.nlp.semgraph.SemanticGraph,edu.stanford.nlp.ling.IndexedWord,java.util.LinkedList,edu.stanford.nlp.ling.IndexedWord):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired to `guessPw` by call to `new()` at line 274 is not released after line 313.\n**Note**: potential exception at line 275","tnFile":"src/edu/stanford/nlp/parser/metrics/Evalb.java","tnLine":313,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.metrics.Evalb.emitSortedTrees(java.util.PriorityQueue,int,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `kid.label()` could be null and is dereferenced at line 85.","tnFile":"src/edu/stanford/nlp/parser/lexparser/SisterAnnotationStats.java","tnLine":85,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.SisterAnnotationStats.leftSisterLabels(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.Tree):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `new()` at line 762 is not released after line 763.","tnFile":"src/edu/stanford/nlp/trees/CoordinationTransformer.java","tnLine":763,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.CoordinationTransformer.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `new()` at line 129 is not released after line 131.","tnFile":"src/edu/stanford/nlp/trees/QPTreeTransformer.java","tnLine":131,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.QPTreeTransformer.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `GrammaticalRelation UniversalEnglishGrammaticalRelations.getConj(String)` reads without synchronization from container `trees.UniversalEnglishGrammaticalRelations.conjs` via call to `get`. Potentially races with write in method `UniversalEnglishGrammaticalRelations.getConj(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/trees/UniversalEnglishGrammaticalRelations.java","tnLine":1694,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.UniversalEnglishGrammaticalRelations.getConj(java.lang.String):edu.stanford.nlp.trees.GrammaticalRelation","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean Sentence.equals(Object)` indirectly reads without synchronization from `this.impl.bitField0_`. Potentially races with write in method `Sentence.updateSentiment(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/simple/Sentence.java","tnLine":1229,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.simple.Sentence.equals(java.lang.Object):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `annotation.get(edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation)` could be null and is dereferenced at line 103.","tnFile":"src/edu/stanford/nlp/pipeline/TrueCaseAnnotator.java","tnLine":103,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.TrueCaseAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getIndexAndCount(s)` could be null and is dereferenced at line 124.","tnFile":"src/edu/stanford/nlp/ie/machinereading/common/StringDictionary.java","tnLine":124,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.machinereading.common.StringDictionary.getCount(int):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `Sentence.document.asAnnotation(1).get(edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation)` could be null and is dereferenced at line 1090.","tnFile":"src/edu/stanford/nlp/simple/Sentence.java","tnLine":1090,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.simple.Sentence.asCoreMap(java.util.function.Function[]):edu.stanford.nlp.util.CoreMap","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `StringBuilder TimeFormatter$TimeZoneComponent.appendRegex0(StringBuilder)` reads without synchronization from container `time.TimeFormatter$TimeZoneComponent.timeZoneRegexes` via call to `get`. Potentially races with write in method `TimeFormatter$TimeZoneComponent(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/time/TimeFormatter.java","tnLine":666,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.time.TimeFormatter$TimeZoneComponent.appendRegex0(java.lang.StringBuilder):java.lang.StringBuilder","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.label()` could be null and is dereferenced at line 79.","tnFile":"src/edu/stanford/nlp/parser/lexparser/TreeBinarizer.java","tnLine":79,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.TreeBinarizer.localTreeString(edu.stanford.nlp.trees.Tree,java.lang.StringBuilder,int):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `edge` last assigned on line 755 could be null and is dereferenced at line 756.","tnFile":"src/edu/stanford/nlp/trees/UniversalEnglishGrammaticalStructure.java","tnLine":756,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.UniversalEnglishGrammaticalStructure.addConjToReln(edu.stanford.nlp.semgraph.SemanticGraph,edu.stanford.nlp.ling.IndexedWord,java.util.List,edu.stanford.nlp.ling.IndexedWord):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.lang.Process` acquired by call to `exec(...)` at line 61 is not released after line 63.","tnFile":"src/edu/stanford/nlp/trees/treebank/DistributionPackage.java","tnLine":63,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.treebank.DistributionPackage.make(java.lang.String):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Counter LinearClassifier.scoresOf(Datum)` indirectly reads without synchronization from `this.weights`. Potentially races with write in method `LinearClassifier.adaptWeights(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/classify/LinearClassifier.java","tnLine":138,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.LinearClassifier.scoresOf(edu.stanford.nlp.ling.Datum):edu.stanford.nlp.stats.Counter","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `token.get(edu.stanford.nlp.ling.CoreAnnotations$CharacterOffsetBeginAnnotation)` could be null and is dereferenced at line 99.","tnFile":"src/edu/stanford/nlp/quoteattribution/XMLToAnnotation.java","tnLine":99,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.quoteattribution.XMLToAnnotation.getEndIndex(int,java.util.List,java.lang.String):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Dataset Dataset.getRandomSubDataset(double,int)` reads without synchronization from `this.featureIndex`. Potentially races with write in method `Dataset.selectFeatures(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/classify/Dataset.java","tnLine":163,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.Dataset.getRandomSubDataset(double,int):edu.stanford.nlp.classify.Dataset","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `headerIndex.get(\"defaultUnit\")` could be null and is dereferenced at line 124.","tnFile":"src/edu/stanford/nlp/ie/qe/Units.java","tnLine":124,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.qe.Units.loadUnits(java.lang.String):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `kid.label()` could be null and is dereferenced at line 115.","tnFile":"src/edu/stanford/nlp/parser/lexparser/SisterAnnotationStats.java","tnLine":115,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.SisterAnnotationStats.kidLabels(edu.stanford.nlp.trees.Tree):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List Sentence.tokens()` indirectly reads without synchronization from `this.impl.token_`. Potentially races with write in method `Sentence.serialize()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/simple/Sentence.java","tnLine":466,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.simple.Sentence.tokens():java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `doc.get(edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation)` could be null and is dereferenced at line 2241.","tnFile":"src/edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer.java","tnLine":2241,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.ProtobufAnnotationSerializer.fromProto(edu.stanford.nlp.pipeline.CoreNLPProtos$RelationTriple,edu.stanford.nlp.pipeline.Annotation,int):edu.stanford.nlp.ie.util.RelationTriple","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `bd` last assigned on line 1798 could be null and is dereferenced at line 1816.","tnFile":"src/edu/stanford/nlp/time/SUTime.java","tnLine":1816,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.time.SUTime$CompositePartialTime.getPeriod():edu.stanford.nlp.time.SUTime$Duration","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `GrammaticalRelation EnglishGrammaticalRelations.getPrepC(String)` reads without synchronization from container `trees.EnglishGrammaticalRelations.prepsC` via call to `get`. Potentially races with write in method `EnglishGrammaticalRelations.getPrepC(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/trees/EnglishGrammaticalRelations.java","tnLine":1708,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.EnglishGrammaticalRelations.getPrepC(java.lang.String):edu.stanford.nlp.trees.GrammaticalRelation","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `result.getEndNodes()` could be null and is dereferenced at line 49.","tnFile":"src/edu/stanford/nlp/parser/lexparser/ExactGrammarCompactor.java","tnLine":49,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.ExactGrammarCompactor.doCompaction(edu.stanford.nlp.fsm.TransducerGraph,java.util.List,java.util.List):edu.stanford.nlp.fsm.TransducerGraph","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `edu.stanford.nlp.trees.PennTreeReader` acquired by call to `newTreeReader(...)` at line 156 is not released after line 170.\n**Note**: potential exception at line 158","tnFile":"src/edu/stanford/nlp/international/french/pipeline/MWEPreprocessor.java","tnLine":170,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.international.french.pipeline.MWEPreprocessor.resolveDummyTags(java.io.File,edu.stanford.nlp.stats.TwoDimensionalCounter,edu.stanford.nlp.stats.TwoDimensionalCounter):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `doc.get(edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation)` could be null and is dereferenced at line 2232.","tnFile":"src/edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer.java","tnLine":2232,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.ProtobufAnnotationSerializer.lambda$fromProto$15(edu.stanford.nlp.pipeline.Annotation,edu.stanford.nlp.pipeline.CoreNLPProtos$TokenLocation):edu.stanford.nlp.ling.CoreLabel","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Document Document.runKBP(Properties)` indirectly reads with synchronization from `this.sentences`. Potentially races with unsynchronized write in method `Document.forceSentences(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/simple/Document.java","tnLine":993,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.simple.Document.runKBP(java.util.Properties):edu.stanford.nlp.simple.Document","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `edu.stanford.nlp.patterns.PatternFactory.numWordsCompoundMapped.get(label)` could be null and is dereferenced at line 194.","tnFile":"src/edu/stanford/nlp/patterns/dep/ApplyDepPatterns.java","tnLine":194,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.patterns.dep.ApplyDepPatterns.getMatchedTokensIndex(edu.stanford.nlp.semgraph.SemanticGraph,edu.stanford.nlp.semgraph.semgrex.SemgrexPattern,edu.stanford.nlp.patterns.DataInstance,java.lang.String):java.util.Collection","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `node.get(edu.stanford.nlp.ling.CoreAnnotations$SentenceIndexAnnotation)` could be null and is dereferenced at line 781.","tnFile":"src/edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer.java","tnLine":781,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.ProtobufAnnotationSerializer.toProto(edu.stanford.nlp.semgraph.SemanticGraph):edu.stanford.nlp.pipeline.CoreNLPProtos$DependencyGraph","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `*daughterTrees[headIdx].label()` could be null and is dereferenced at line 368.","tnFile":"src/edu/stanford/nlp/trees/AbstractCollinsHeadFinder.java","tnLine":368,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.AbstractCollinsHeadFinder.findRightHead(edu.stanford.nlp.trees.Tree[],java.lang.String[]):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileInputStream` acquired to `in` by call to `FileInputStream(...)` at line 3394 is not released after line 3409.\n**Note**: potential exception at line 3397","tnFile":"src/edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass.java","tnLine":3409,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.patterns.GetPatternsFromDataMultiClass.addFolder(java.util.zip.ZipOutputStream,java.lang.String,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileInputStream` acquired by call to `FileInputStream(...)` at line 30 is not released after line 30.","tnFile":"src/edu/stanford/nlp/trees/tregex/Macros.java","tnLine":30,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.tregex.Macros.readMacros(java.lang.String,java.lang.String):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileInputStream` acquired by call to `FileInputStream(...)` at line 192 is not released after line 198.\n**Note**: potential exception at line 193","tnFile":"src/edu/stanford/nlp/tagger/maxent/Extractors.java","tnLine":198,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.tagger.maxent.Extractors.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileReader` acquired by call to `new()` at line 789 is not released after line 791.\n**Note**: potential exception at line 791","tnFile":"src/edu/stanford/nlp/trees/tregex/gui/TregexGUI.java","tnLine":791,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.tregex.gui.TregexGUI$7.run():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.label()` could be null and is dereferenced at line 367.","tnFile":"src/edu/stanford/nlp/trees/CoordinationTransformer.java","tnLine":367,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.CoordinationTransformer.transformCC(edu.stanford.nlp.trees.Tree,int):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `sentences` last assigned on line 210 could be null and is dereferenced at line 215.","tnFile":"src/edu/stanford/nlp/coref/md/CorefMentionFinder.java","tnLine":215,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.coref.md.CorefMentionFinder.removeSpuriousMentionsZh(edu.stanford.nlp.pipeline.Annotation,java.util.List,edu.stanford.nlp.coref.data.Dictionaries,boolean):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `doc.get(edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation)` could be null and is dereferenced at line 2228.","tnFile":"src/edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer.java","tnLine":2228,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.ProtobufAnnotationSerializer.lambda$fromProto$14(edu.stanford.nlp.pipeline.Annotation,edu.stanford.nlp.pipeline.CoreNLPProtos$TokenLocation):edu.stanford.nlp.ling.CoreLabel","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired to `pw` by call to `new()` at line 239 is not released after line 240.","tnFile":"src/edu/stanford/nlp/ie/machinereading/BasicRelationExtractor.java","tnLine":240,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.machinereading.BasicRelationExtractor.annotateMulticlass(java.util.List):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `tree.getEdge(gov,dep)` could be null and is dereferenced at line 392.","tnFile":"src/edu/stanford/nlp/naturalli/NaturalLogicAnnotator.java","tnLine":392,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.naturalli.NaturalLogicAnnotator.addNegationToDependencyGraph(edu.stanford.nlp.semgraph.SemanticGraph):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `label` last assigned on line 29 could be null and is dereferenced at line 30.","tnFile":"src/edu/stanford/nlp/parser/shiftreduce/ShiftReduceUtils.java","tnLine":30,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.shiftreduce.ShiftReduceUtils.isTemporary(edu.stanford.nlp.trees.Tree):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.label()` could be null and is dereferenced at line 353.","tnFile":"src/edu/stanford/nlp/trees/international/french/FrenchXMLTreeReader.java","tnLine":353,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.international.french.FrenchXMLTreeReader.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `corpusSentences` last assigned on line 908 could be null and is dereferenced by call to `sentenceCount(...)` at line 909.","tnFile":"src/edu/stanford/nlp/ie/machinereading/MachineReading.java","tnLine":909,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.machinereading.MachineReading.loadOrMakeSerializedSentences(java.lang.String,edu.stanford.nlp.ie.machinereading.GenericDataSetReader,java.io.File):edu.stanford.nlp.pipeline.Annotation","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `InputStreamReader(...)` at line 50 is not released after line 72.","tnFile":"src/edu/stanford/nlp/international/french/scripts/MWEFrequencyDist.java","tnLine":72,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.international.french.scripts.MWEFrequencyDist.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `input.annotation.get(edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation)` could be null and is dereferenced at line 156.","tnFile":"src/edu/stanford/nlp/coref/data/Document.java","tnLine":156,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.coref.data.Document.<init>(edu.stanford.nlp.coref.data.InputDoc,java.util.ArrayList)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.label()` could be null and is dereferenced at line 63.","tnFile":"src/edu/stanford/nlp/parser/lexparser/SisterAnnotationStats.java","tnLine":63,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.SisterAnnotationStats.recurse(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.Tree):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired by call to `getInputStreamFromURLOrClasspathOrFileSystem(...)` at line 308 is not released after line 308.","tnFile":"src/edu/stanford/nlp/io/IOUtils.java","tnLine":308,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.io.IOUtils.readObjectFromURLOrClasspathOrFileSystem(java.lang.String):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `temporal` last assigned on line 287 could be null and is dereferenced at line 313.","tnFile":"src/edu/stanford/nlp/time/GenericTimeExpressionPatterns.java","tnLine":313,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.time.GenericTimeExpressionPatterns$4.apply(edu.stanford.nlp.ling.tokensregex.Env,java.util.List):edu.stanford.nlp.ling.tokensregex.types.Value","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `deps` last assigned on line 78 could be null and is dereferenced at line 80.","tnFile":"src/edu/stanford/nlp/parser/metrics/CollinsDepEval.java","tnLine":80,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.metrics.CollinsDepEval.makeCollinsObjects(edu.stanford.nlp.trees.Tree):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `counter.tempMInteger` last assigned on line 1813 could be null and is dereferenced by call to `loadIntoCounter(...)` at line 1814.","tnFile":"src/edu/stanford/nlp/stats/Counters.java","tnLine":1814,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.stats.Counters.loadIntCounter(java.lang.String,java.lang.Class):edu.stanford.nlp.stats.IntCounter","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getProperty(\"os.name\")` could be null and is dereferenced at line 596.","tnFile":"src/edu/stanford/nlp/util/logging/Redwood.java","tnLine":596,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.util.logging.Redwood.<clinit>():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired by call to `new()` at line 277 is not released after line 277.","tnFile":"src/edu/stanford/nlp/io/IOUtils.java","tnLine":277,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.io.IOUtils.readObjectFromFile(java.io.File):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.util.Formatter` acquired by call to `new()` at line 1263 is not released after line 1263.","tnFile":"src/edu/stanford/nlp/util/logging/Redwood.java","tnLine":1263,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.util.logging.Redwood$RedwoodChannels.lambda$debugf$3(java.lang.String,java.lang.Object[]):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Pair RVFDataset.split(int,int)` reads without synchronization from `this.featureIndex`. Potentially races with write in method `RVFDataset.applyFeatureMaxCountThreshold(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/classify/RVFDataset.java","tnLine":360,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.RVFDataset.split(int,int):edu.stanford.nlp.util.Pair","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getMostSpecific(granularity.getJodaTimePeriod())` could be null and is dereferenced by call to `discardMoreSpecificFields(...)` at line 1930.","tnFile":"src/edu/stanford/nlp/time/SUTime.java","tnLine":1930,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.time.SUTime$CompositePartialTime.reduceGranularityTo(edu.stanford.nlp.time.SUTime$Duration):edu.stanford.nlp.time.SUTime$PartialTime","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `ann.get(edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation)` could be null and is dereferenced at line 1003.","tnFile":"src/edu/stanford/nlp/simple/Document.java","tnLine":1003,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.simple.Document.runKBP(java.util.Properties):edu.stanford.nlp.simple.Document","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `paragraphSplit` last assigned on line 40 could be null and is dereferenced at line 48.","tnFile":"src/edu/stanford/nlp/paragraphs/ParagraphAnnotator.java","tnLine":48,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.paragraphs.ParagraphAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `Mention.headWord.get(edu.stanford.nlp.ling.CoreAnnotations$TextAnnotation)` could be null and is dereferenced at line 290.","tnFile":"src/edu/stanford/nlp/coref/data/Mention.java","tnLine":290,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.coref.data.Mention.getGender(edu.stanford.nlp.coref.data.Dictionaries,java.util.List):edu.stanford.nlp.coref.data.Dictionaries$Gender","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Dataset.ensureSize()` reads without synchronization from `this.size`. Potentially races with write in method `Dataset.add(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/classify/Dataset.java","tnLine":325,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.Dataset.ensureSize():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void FilePanel.clearAll()` indirectly reads without synchronization from `gui.FileTreeModel.trf`. Potentially races with write in method `FilePanel.getInstance()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/trees/tregex/gui/FilePanel.java","tnLine":123,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.tregex.gui.FilePanel.clearAll():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `lab` last assigned on line 282 could be null and is dereferenced at line 283.","tnFile":"src/edu/stanford/nlp/parser/lexparser/ChineseTreebankParserParams.java","tnLine":283,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.ChineseTreebankParserParams.transformTree(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.Tree):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `edu.stanford.nlp.io.StringOutputStream` acquired by call to `new()` at line 353 is not released after line 355.","tnFile":"src/edu/stanford/nlp/pipeline/JSONOutputter.java","tnLine":355,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.JSONOutputter.jsonPrint(edu.stanford.nlp.pipeline.Annotation):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.net.ServerSocket` acquired by call to `NERServer(...)` at line 349 is not released after line 349.","tnFile":"src/edu/stanford/nlp/ie/NERServer.java","tnLine":349,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.NERServer.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `Mention.headWord.get(edu.stanford.nlp.ling.CoreAnnotations$TextAnnotation)` could be null and is dereferenced at line 714.","tnFile":"src/edu/stanford/nlp/coref/data/Mention.java","tnLine":714,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.coref.data.Mention.setHeadString():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.label()` could be null and is dereferenced at line 715.","tnFile":"src/edu/stanford/nlp/trees/Trees.java","tnLine":715,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.Trees.pathNodeToNode(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.Tree):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `String Dataset.toSummaryStatistics()` reads without synchronization from `this.featureIndex`. Potentially races with write in method `Dataset.selectFeatures(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/classify/Dataset.java","tnLine":426,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.Dataset.toSummaryStatistics():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `infile` last assigned on line 56 could be null and is dereferenced at line 83.","tnFile":"src/edu/stanford/nlp/international/arabic/pipeline/IBMMTArabicDataset.java","tnLine":83,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.international.arabic.pipeline.IBMMTArabicDataset.build():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileInputStream` acquired by call to `FileInputStream(...)` at line 41 is not released after line 41.","tnFile":"src/edu/stanford/nlp/tagger/maxent/CtbDict.java","tnLine":41,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.tagger.maxent.CtbDict.readCtbDict(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getMostSpecific(granularity.getJodaTimePeriod())` could be null and is dereferenced by call to `discardMoreSpecificFields(...)` at line 2913.","tnFile":"src/edu/stanford/nlp/time/SUTime.java","tnLine":2913,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.time.SUTime$PartialTime.reduceGranularityTo(edu.stanford.nlp.time.SUTime$Duration):edu.stanford.nlp.time.SUTime$PartialTime","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.OutputStreamWriter` acquired by call to `OutputStreamWriter(...)` at line 76 is not released after line 78.","tnFile":"src/edu/stanford/nlp/parser/server/LexicalizedParserClient.java","tnLine":78,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.server.LexicalizedParserClient.getLemmas(java.lang.String):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 736 is not released after line 736.","tnFile":"src/edu/stanford/nlp/trees/tregex/gui/TregexGUI.java","tnLine":736,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.tregex.gui.TregexGUI$5.run():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.label()` could be null and is dereferenced at line 86.","tnFile":"src/edu/stanford/nlp/parser/lexparser/ParentAnnotationStats.java","tnLine":86,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.ParentAnnotationStats.processTreeHelper(java.lang.String,java.lang.String,edu.stanford.nlp.trees.Tree):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `CRFLogConditionalObjectiveFunctionWithDropout.currPrevLabelsMap.get(valueOf(curr))` could be null and is dereferenced at line 95.","tnFile":"src/edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunctionWithDropout.java","tnLine":95,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunctionWithDropout.initEdgeLabels():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Dataset.selectFeatures(int,double[])` reads without synchronization from `this.featureIndex`. Potentially races with write in method `Dataset.selectFeatures(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/classify/Dataset.java","tnLine":610,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.Dataset.selectFeatures(int,double[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `l.get(LearnImportantFeatures.answerClass)` could be null and is dereferenced at line 190.","tnFile":"src/edu/stanford/nlp/patterns/surface/LearnImportantFeatures.java","tnLine":190,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.patterns.surface.LearnImportantFeatures.getDatum(edu.stanford.nlp.ling.CoreLabel[],int):edu.stanford.nlp.ling.RVFDatum","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Map Document.coref()` indirectly reads with synchronization from `this.sentences`. Potentially races with unsynchronized write in method `Document.forceSentences(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/simple/Document.java","tnLine":744,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.simple.Document.coref():java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.net.Socket` acquired to `client` by call to `accept()` at line 91 is not released after line 91.","tnFile":"src/edu/stanford/nlp/ie/NERServer.java","tnLine":91,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.NERServer.run():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `sentences` last assigned on line 98 could be null and is dereferenced at line 99.","tnFile":"src/edu/stanford/nlp/coref/data/DocumentMaker.java","tnLine":99,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.coref.data.DocumentMaker.findGoldMentionHeads(edu.stanford.nlp.coref.data.Document):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.label()` could be null and is dereferenced at line 288.","tnFile":"src/edu/stanford/nlp/parser/lexparser/TreeAnnotator.java","tnLine":288,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.TreeAnnotator.markStrahler(edu.stanford.nlp.trees.Tree):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `CorefCluster.representative` last assigned on line 96 could be null and is dereferenced at line 123.","tnFile":"src/edu/stanford/nlp/coref/data/CorefCluster.java","tnLine":123,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.coref.data.CorefCluster.<init>(int,java.util.Set)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `ann.get(edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation)` could be null and is dereferenced at line 48.","tnFile":"src/edu/stanford/nlp/parser/nndep/demo/DependencyParserCoreNLPDemo.java","tnLine":48,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.nndep.demo.DependencyParserCoreNLPDemo.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `new()` at line 2095 is not released after line 2097.","tnFile":"src/edu/stanford/nlp/io/IOUtils.java","tnLine":2097,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.io.IOUtils.promptUserInput(java.util.Optional):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `bd` last assigned on line 1798 could be null and is dereferenced at line 1812.","tnFile":"src/edu/stanford/nlp/time/SUTime.java","tnLine":1812,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.time.SUTime$CompositePartialTime.getPeriod():edu.stanford.nlp.time.SUTime$Duration","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `argRoot` last assigned on line 215 could be null and is dereferenced at line 217.","tnFile":"src/edu/stanford/nlp/ie/machinereading/domains/roth/RothCONLL04Reader.java","tnLine":217,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.machinereading.domains.roth.RothCONLL04Reader.setHeadWord(edu.stanford.nlp.ie.machinereading.structure.EntityMention,edu.stanford.nlp.trees.Tree):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired to `p` by call to `new()` at line 317 is not released after line 320.","tnFile":"src/edu/stanford/nlp/trees/international/pennchinese/CHTBLexer.java","tnLine":320,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.international.pennchinese.CHTBLexer.reportError(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.label()` could be null and is dereferenced at line 82.","tnFile":"src/edu/stanford/nlp/trees/TreeFunctions.java","tnLine":82,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.TreeFunctions$LabeledTreeToCategoryWordTagTreeFunction.helper(edu.stanford.nlp.trees.Tree):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileInputStream` acquired by call to `getInputStream()` at line 1246 is not released after line 1247.","tnFile":"src/edu/stanford/nlp/io/IOUtils.java","tnLine":1247,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.io.IOUtils.slurpURL(java.net.URL):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 685 is not released after line 685.","tnFile":"src/edu/stanford/nlp/ie/crf/CRFClassifier.java","tnLine":685,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.crf.CRFClassifier.printFeatures():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `doc` last assigned on line 268 could be null and is dereferenced by call to `datasetToString(...)` at line 269.","tnFile":"src/edu/stanford/nlp/ie/machinereading/domains/roth/RothCONLL04Reader.java","tnLine":269,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.machinereading.domains.roth.RothCONLL04Reader.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `root.label()` could be null and is dereferenced at line 260.","tnFile":"src/edu/stanford/nlp/naturalli/CreateClauseDataset.java","tnLine":260,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.naturalli.CreateClauseDataset.findTraceSources(edu.stanford.nlp.trees.Tree):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `parent` last assigned on line 45 could be null and is dereferenced at line 46.","tnFile":"src/edu/stanford/nlp/trees/tregex/tsurgeon/ReplaceNode.java","tnLine":46,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.tregex.tsurgeon.ReplaceNode$Matcher.evaluate(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.tregex.TregexMatcher):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void WeightedDataset.ensureSize()` reads without synchronization from `this.size`. Potentially races with write in method `WeightedDataset.add(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/classify/WeightedDataset.java","tnLine":75,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.WeightedDataset.ensureSize():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `tree.label()` could be null and is dereferenced at line 487.","tnFile":"src/edu/stanford/nlp/trees/NPTmpRetainingTreeNormalizer.java","tnLine":487,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.NPTmpRetainingTreeNormalizer.normalizeWholeTree(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.TreeFactory):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Collection UniversalEnglishGrammaticalRelations.getConjs()` reads without synchronization from container `trees.UniversalEnglishGrammaticalRelations.conjs` via call to `values`. Potentially races with write in method `UniversalEnglishGrammaticalRelations.getConj(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/trees/UniversalEnglishGrammaticalRelations.java","tnLine":1683,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.UniversalEnglishGrammaticalRelations.getConjs():java.util.Collection","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `iterator()` at line 40 is not released after line 45.","tnFile":"src/edu/stanford/nlp/classify/PRCurve.java","tnLine":45,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.PRCurve.<init>(java.lang.String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `*daughterTrees[headIdx].label()` could be null and is dereferenced at line 380.","tnFile":"src/edu/stanford/nlp/trees/AbstractCollinsHeadFinder.java","tnLine":380,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.AbstractCollinsHeadFinder.findRightDisHead(edu.stanford.nlp.trees.Tree[],java.lang.String[]):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `tree.label()` could be null and is dereferenced at line 25.","tnFile":"src/edu/stanford/nlp/sentiment/CollapseUnaryTransformer.java","tnLine":25,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.sentiment.CollapseUnaryTransformer.transformTree(edu.stanford.nlp.trees.Tree):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `kid.label()` could be null and is dereferenced at line 105.","tnFile":"src/edu/stanford/nlp/trees/international/tuebadz/TueBaDZHeadFinder.java","tnLine":105,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.international.tuebadz.TueBaDZHeadFinder.findMarkedHead(edu.stanford.nlp.trees.Tree):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `l.get(en.getValue())` could be null and is dereferenced at line 2895.","tnFile":"src/edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass.java","tnLine":2895,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.patterns.GetPatternsFromDataMultiClass.getNonBackgroundLabels(edu.stanford.nlp.ling.CoreLabel):java.util.Set","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `tree.label()` could be null and is dereferenced at line 56.","tnFile":"src/edu/stanford/nlp/sentiment/BuildBinarizedDataset.java","tnLine":56,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.sentiment.BuildBinarizedDataset.setPredictedLabels(edu.stanford.nlp.trees.Tree):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.label()` could be null and is dereferenced at line 150.","tnFile":"src/edu/stanford/nlp/trees/tregex/tsurgeon/AuxiliaryTree.java","tnLine":150,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.tregex.tsurgeon.AuxiliaryTree.findFootNodeHelper(edu.stanford.nlp.trees.Tree):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `doc.get(edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation)` could be null and is dereferenced at line 52.","tnFile":"src/edu/stanford/nlp/dcoref/RuleBasedCorefMentionFinder.java","tnLine":52,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.dcoref.RuleBasedCorefMentionFinder.filterPredictedMentions(java.util.List,edu.stanford.nlp.pipeline.Annotation,edu.stanford.nlp.dcoref.Dictionaries):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `toInterval(p,p)` could be null and is dereferenced by call to `containsInterval(...)` at line 685.","tnFile":"src/edu/stanford/nlp/util/IntervalTree.java","tnLine":685,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.util.IntervalTree.containsInterval(edu.stanford.nlp.util.IntervalTree,java.lang.Comparable,boolean):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `iterator()` at line 60 is not released after line 69.","tnFile":"src/edu/stanford/nlp/tagger/maxent/Distsim.java","tnLine":69,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.tagger.maxent.Distsim.<init>(java.lang.String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `value` last assigned on line 488 could be null and is dereferenced at line 503.","tnFile":"src/edu/stanford/nlp/ling/tokensregex/types/Expressions.java","tnLine":503,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ling.tokensregex.types.Expressions$VarAssignmentExpression.evaluate(edu.stanford.nlp.ling.tokensregex.Env,java.lang.Object[]):edu.stanford.nlp.ling.tokensregex.types.Value","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `tree.label()` could be null and is dereferenced at line 286.","tnFile":"src/edu/stanford/nlp/parser/lexparser/ExhaustivePCFGParser.java","tnLine":286,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.ExhaustivePCFGParser.scoreBinarizedTree(edu.stanford.nlp.trees.Tree,int):double","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `node.label()` could be null and is dereferenced at line 40.","tnFile":"src/edu/stanford/nlp/trees/tregex/tsurgeon/CoindexNodes.java","tnLine":40,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.tregex.tsurgeon.CoindexNodes$Matcher.evaluate(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.tregex.TregexMatcher):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Dataset.initialize(int)` writes to field `this.labels` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/classify/Dataset.java","tnLine":375,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.Dataset.initialize(int):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `Mention.headWord.get(edu.stanford.nlp.ling.CoreAnnotations$TextAnnotation)` could be null and is dereferenced at line 711.","tnFile":"src/edu/stanford/nlp/dcoref/Mention.java","tnLine":711,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.dcoref.Mention.setHeadString():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `c.tempMInteger` last assigned on line 117 could be null and is dereferenced by call to `incrementCount(...)` at line 120.","tnFile":"src/edu/stanford/nlp/parser/lexparser/ChineseWordFeatureExtractor.java","tnLine":120,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.ChineseWordFeatureExtractor.applyFeatureCountThreshold(java.util.Collection,int):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `edu.stanford.nlp.trees.PennTreeReader` acquired by call to `PennTreeReader(...)` at line 641 is not released after line 642.","tnFile":"src/edu/stanford/nlp/trees/GrammaticalStructureConversionUtils.java","tnLine":642,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.GrammaticalStructureConversionUtils.convertTrees(java.lang.String[],java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired to `pw` by call to `getPrintWriter(...)` at line 539 is not released after line 568.\n**Note**: potential exception at line 540","tnFile":"src/edu/stanford/nlp/dcoref/SieveCoreferenceSystem.java","tnLine":568,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.dcoref.SieveCoreferenceSystem.runAndScoreCorefDist(java.lang.String,java.util.Properties,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `lab` last assigned on line 142 could be null and is dereferenced at line 143.","tnFile":"src/edu/stanford/nlp/parser/lexparser/ArabicTreebankParserParams.java","tnLine":143,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.ArabicTreebankParserParams$ArabicSubcategoryStripper.transformTree(edu.stanford.nlp.trees.Tree):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedWriter` acquired to `bw` by call to `new()` at line 513 is not released after line 534.\n**Note**: potential exception at line 530","tnFile":"src/edu/stanford/nlp/parser/ui/ParserPanel.java","tnLine":534,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.ui.ParserPanel$SaveOutputThread.run():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.OutputStreamWriter` acquired by call to `OutputStreamWriter(...)` at line 135 is not released after line 152.\n**Note**: potential exception at line 136","tnFile":"src/edu/stanford/nlp/parser/server/LexicalizedParserClient.java","tnLine":152,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.server.LexicalizedParserClient.getTree(java.lang.String):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `*t.children()[i].label()` could be null and is dereferenced at line 1943.","tnFile":"src/edu/stanford/nlp/parser/lexparser/EnglishTreebankParserParams.java","tnLine":1943,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.EnglishTreebankParserParams.subCatify(edu.stanford.nlp.trees.Tree):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `GrammaticalRelation.<init>(Language,String,String,GrammaticalRelation)` indirectly writes to field `result.child` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/trees/GrammaticalRelation.java","tnLine":349,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.GrammaticalRelation.<init>(edu.stanford.nlp.international.Language,java.lang.String,java.lang.String,edu.stanford.nlp.trees.GrammaticalRelation)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `graph.getNeighbors(node)` could be null and is dereferenced at line 37.","tnFile":"src/edu/stanford/nlp/graph/ConnectedComponents.java","tnLine":37,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.graph.ConnectedComponents.bfs(java.util.LinkedList,edu.stanford.nlp.graph.DirectedMultiGraph,java.util.ArrayList):java.util.Set","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `POS` last assigned on line 133 could be null and is dereferenced at line 134.","tnFile":"src/edu/stanford/nlp/coref/CorefUtils.java","tnLine":134,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.coref.CorefUtils.getContentWords(edu.stanford.nlp.coref.data.Mention):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `document.get(edu.stanford.nlp.coref.CorefCoreAnnotations$CorefChainAnnotation)` could be null and is dereferenced at line 54.","tnFile":"src/edu/stanford/nlp/coref/hybrid/demo/ChineseHcorefDemo.java","tnLine":54,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.coref.hybrid.demo.ChineseHcorefDemo.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.value()` could be null and is dereferenced at line 552.","tnFile":"src/edu/stanford/nlp/trees/UniversalSemanticHeadFinder.java","tnLine":552,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.UniversalSemanticHeadFinder.isWHQ(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.Tree):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `GrammaticalRelation GrammaticalRelation.valueOf(String)` indirectly writes to field `result.child` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/trees/GrammaticalRelation.java","tnLine":246,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.GrammaticalRelation.valueOf(java.lang.String):edu.stanford.nlp.trees.GrammaticalRelation","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `w.get(edu.stanford.nlp.ling.CoreAnnotations$PartOfSpeechAnnotation)` could be null and is dereferenced at line 1049.","tnFile":"src/edu/stanford/nlp/dcoref/Mention.java","tnLine":1049,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.dcoref.Mention.removePhraseAfterHead():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `label` last assigned on line 41 could be null and is dereferenced at line 42.","tnFile":"src/edu/stanford/nlp/parser/shiftreduce/ShiftReduceUtils.java","tnLine":42,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.shiftreduce.ShiftReduceUtils.headIndex(edu.stanford.nlp.trees.Tree):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `pos` last assigned on line 94 could be null and is dereferenced at line 95.","tnFile":"src/edu/stanford/nlp/coref/md/DependencyCorefMentionFinder.java","tnLine":95,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.coref.md.DependencyCorefMentionFinder.setBarePlural(java.util.List):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.label()` could be null and is dereferenced at line 249.","tnFile":"src/edu/stanford/nlp/trees/NPTmpRetainingTreeNormalizer.java","tnLine":249,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.NPTmpRetainingTreeNormalizer$1.test(edu.stanford.nlp.trees.Tree):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Sentence.<init>(Document,CoreNLPProtos$Sentence$Builder,Properties)` indirectly reads without synchronization from `this.impl.token_`. Potentially races with write in method `Sentence.serialize()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/simple/Sentence.java","tnLine":209,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.simple.Sentence.<init>(edu.stanford.nlp.simple.Document,edu.stanford.nlp.pipeline.CoreNLPProtos$Sentence$Builder,java.util.Properties)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired by call to `inputStreamFromFile(...)` at line 1133 is not released after line 1132.\n**Note**: potential exception at line 1132","tnFile":"src/edu/stanford/nlp/io/IOUtils.java","tnLine":1132,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.io.IOUtils.slurpFile(java.io.File,java.lang.String):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List PhraseTable.findAllMatches(List,PhraseTable$WordList,int,int,boolean)` indirectly reads without synchronization from container `this.normalizedCache` via call to `get`. Potentially races with write in method `PhraseTable.getNormalizedForm(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/ling/tokensregex/PhraseTable.java","tnLine":656,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ling.tokensregex.PhraseTable.findAllMatches(java.util.List,edu.stanford.nlp.ling.tokensregex.PhraseTable$WordList,int,int,boolean):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.label()` could be null and is dereferenced at line 437.","tnFile":"src/edu/stanford/nlp/trees/NPTmpRetainingTreeNormalizer.java","tnLine":437,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.NPTmpRetainingTreeNormalizer.lambda$normalizeWholeTree$1(edu.stanford.nlp.trees.Tree):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `new()` at line 90 is not released after line 97.\n**Note**: potential exception at line 92","tnFile":"src/edu/stanford/nlp/time/suservlet/SUTimePipeline.java","tnLine":97,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.time.suservlet.SUTimePipeline.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired to `progressWriter` by call to `new()` at line 96 is not released after line 101.\n**Note**: potential exception at line 98","tnFile":"src/edu/stanford/nlp/coref/statistical/Clusterer.java","tnLine":101,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.coref.statistical.Clusterer.doTraining(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.label()` could be null and is dereferenced by call to `headMark(...)` at line 765.","tnFile":"src/edu/stanford/nlp/trees/TreePrint.java","tnLine":765,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.TreePrint.markHeadNodes(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.Tree):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `surfaceForm` last assigned on line 119 could be null and is dereferenced at line 123.","tnFile":"src/edu/stanford/nlp/pipeline/WikidictAnnotator.java","tnLine":123,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.WikidictAnnotator.link(edu.stanford.nlp.util.CoreMap):java.util.Optional","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.label()` could be null and is dereferenced at line 497.","tnFile":"src/edu/stanford/nlp/trees/UniversalSemanticHeadFinder.java","tnLine":497,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.UniversalSemanticHeadFinder.isExistential(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.Tree):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `annotation.get(edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation)` could be null and is dereferenced at line 209.","tnFile":"src/edu/stanford/nlp/sentiment/SentimentPipeline.java","tnLine":209,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.sentiment.SentimentPipeline.getAnnotations(edu.stanford.nlp.pipeline.StanfordCoreNLP,edu.stanford.nlp.sentiment.SentimentPipeline$Input,java.lang.String,boolean):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `headerIndex.get(\"system\")` could be null and is dereferenced at line 96.","tnFile":"src/edu/stanford/nlp/ie/qe/UnitPrefix.java","tnLine":96,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.qe.UnitPrefix.loadPrefixes(java.lang.String):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.label()` could be null and is dereferenced at line 283.","tnFile":"src/edu/stanford/nlp/parser/lexparser/TreeBinarizer.java","tnLine":283,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.TreeBinarizer.makeSimpleSyntheticLabel(edu.stanford.nlp.trees.Tree):edu.stanford.nlp.ling.Label","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `label.get(edu.stanford.nlp.ling.CoreAnnotations$BeginIndexAnnotation)` could be null and is dereferenced at line 437.","tnFile":"src/edu/stanford/nlp/ie/machinereading/GenericDataSetReader.java","tnLine":437,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.machinereading.GenericDataSetReader.funkyFindLeafWithApproximateSpan(edu.stanford.nlp.trees.Tree,java.lang.String,int,int):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `tree.getSpan()` could be null and is dereferenced by call to `concatenateContextWords(...)` at line 130.","tnFile":"src/edu/stanford/nlp/parser/dvparser/DVParserCostAndGradient.java","tnLine":130,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.dvparser.DVParserCostAndGradient.forwardPropagateTree(edu.stanford.nlp.trees.Tree,java.util.List,java.util.IdentityHashMap,java.util.IdentityHashMap):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileInputStream` acquired by call to `getInputStream()` at line 1209 is not released after line 1215.","tnFile":"src/edu/stanford/nlp/io/IOUtils.java","tnLine":1215,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.io.IOUtils.slurpURL(java.net.URL,java.lang.String):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List PhraseTable.findMatches(PhraseTable$WordList)` indirectly reads without synchronization from container `this.normalizedCache` via call to `get`. Potentially races with write in method `PhraseTable.getNormalizedForm(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/ling/tokensregex/PhraseTable.java","tnLine":670,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ling.tokensregex.PhraseTable.findMatches(edu.stanford.nlp.ling.tokensregex.PhraseTable$WordList):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `edge` last assigned on line 407 could be null and is dereferenced at line 409.","tnFile":"src/edu/stanford/nlp/trees/UniversalEnglishGrammaticalStructure.java","tnLine":409,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.UniversalEnglishGrammaticalStructure.addPassiveAgentToReln(edu.stanford.nlp.semgraph.SemanticGraph,edu.stanford.nlp.ling.IndexedWord,edu.stanford.nlp.ling.IndexedWord,edu.stanford.nlp.ling.IndexedWord):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `lprior.otherPrior` last assigned on line 106 could be null and is dereferenced by call to `setSigma(...)` at line 107.","tnFile":"src/edu/stanford/nlp/patterns/ScorePhrasesLearnFeatWt.java","tnLine":107,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.patterns.ScorePhrasesLearnFeatWt.learnClassifier(java.lang.String,boolean,edu.stanford.nlp.stats.TwoDimensionalCounter,edu.stanford.nlp.stats.Counter):edu.stanford.nlp.classify.Classifier","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `label` last assigned on line 88 could be null and is dereferenced at line 89.","tnFile":"src/edu/stanford/nlp/time/TimexTreeAnnotator.java","tnLine":89,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.time.TimexTreeAnnotator.endOffset(edu.stanford.nlp.trees.Tree,java.util.List):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired by call to `new()` at line 228 is not released after line 238.","tnFile":"src/edu/stanford/nlp/process/WhitespaceTokenizer.java","tnLine":238,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.process.WhitespaceTokenizer.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `label` last assigned on line 443 could be null and is dereferenced at line 451.","tnFile":"src/edu/stanford/nlp/dcoref/Mention.java","tnLine":451,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.dcoref.Mention.isListLike():boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `map.get(typedDep.gov())` could be null and is dereferenced at line 1029.","tnFile":"src/edu/stanford/nlp/trees/EnglishGrammaticalStructure.java","tnLine":1029,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.EnglishGrammaticalStructure.collapsePrepAndPoss(java.util.Collection):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `sentences` last assigned on line 61 could be null and is dereferenced at line 62.","tnFile":"src/edu/stanford/nlp/ling/tokensregex/demo/TokensRegexAnnotatorDemo.java","tnLine":62,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ling.tokensregex.demo.TokensRegexAnnotatorDemo.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileReader` acquired by call to `new()` at line 142 is not released after line 144.","tnFile":"src/edu/stanford/nlp/ie/crf/CRFClassifierEvaluator.java","tnLine":144,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.crf.CRFClassifierEvaluator.evaluate(double[]):double","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `np1.label()` could be null and is dereferenced at line 684.","tnFile":"src/edu/stanford/nlp/dcoref/RuleBasedCorefMentionFinder.java","tnLine":684,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.dcoref.RuleBasedCorefMentionFinder.checkPleonastic(edu.stanford.nlp.dcoref.Mention,edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.tregex.TregexPattern):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `t` last assigned on line 558 could be null and is dereferenced at line 560.","tnFile":"src/edu/stanford/nlp/dcoref/CoNLL2011DocumentReader.java","tnLine":560,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.dcoref.CoNLL2011DocumentReader$DocumentIterator.getTreeNonTerminal(edu.stanford.nlp.trees.Tree,int,int,boolean):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `tree.label()` could be null and is dereferenced at line 58.","tnFile":"src/edu/stanford/nlp/parser/dvparser/ParseAndPrintMatrices.java","tnLine":58,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.dvparser.ParseAndPrintMatrices.findRootTree(java.util.IdentityHashMap):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `float[] WeightedDataset.getFeatureCounts()` reads without synchronization from `this.data`. Potentially races with write in method `WeightedDataset.ensureSize()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/classify/WeightedDataset.java","tnLine":51,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.WeightedDataset.getFeatureCounts():float[]","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `newOutputStream(...)` at line 622 is not released after line 629.\n**Note**: potential exception at line 624","tnFile":"src/edu/stanford/nlp/util/FileBackedCache.java","tnLine":629,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.util.FileBackedCache.appendBlock(java.io.Serializable,java.lang.Object):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired by call to `readStreamFromString(...)` at line 39 is not released after line 42.\n**Note**: potential exception at line 40","tnFile":"src/edu/stanford/nlp/quoteattribution/ExtractQuotesClassifier.java","tnLine":42,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.quoteattribution.ExtractQuotesClassifier.<init>(java.lang.String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Document Document.runPOS(Properties)` reads with synchronization from `this.sentences`. Potentially races with unsynchronized write in method `Document.forceSentences(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/simple/Document.java","tnLine":795,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.simple.Document.runPOS(java.util.Properties):edu.stanford.nlp.simple.Document","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ConcatVectorNamespace.debugVector(ConcatVector,BufferedWriter)` indirectly reads without synchronization from container `this.reverseSparseFeatureIndex` via call to `get`. Potentially races with write in method `ConcatVectorNamespace.ensureSparseFeature(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/loglinear/model/ConcatVectorNamespace.java","tnLine":123,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.loglinear.model.ConcatVectorNamespace.debugVector(edu.stanford.nlp.loglinear.model.ConcatVector,java.io.BufferedWriter):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.label()` could be null and is dereferenced at line 722.","tnFile":"src/edu/stanford/nlp/trees/Trees.java","tnLine":722,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.Trees.pathNodeToNode(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.Tree):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Dataset.applyFeatureCountThreshold(List)` indirectly reads without synchronization from `this.data`. Potentially races with write in method `Dataset.ensureSize()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/classify/Dataset.java","tnLine":452,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.Dataset.applyFeatureCountThreshold(java.util.List):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `sentences` last assigned on line 1083 could be null and is dereferenced at line 1085.","tnFile":"src/edu/stanford/nlp/coref/docreader/CoNLLDocumentReader.java","tnLine":1085,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.coref.docreader.CoNLLDocumentReader.setDependencyTree(edu.stanford.nlp.pipeline.Annotation):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 274 is not released after line 274.","tnFile":"src/edu/stanford/nlp/parser/metrics/Evalb.java","tnLine":274,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.metrics.Evalb.emitSortedTrees(java.util.PriorityQueue,int,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.LineNumberReader` acquired to `reader` by call to `new()` at line 227 is not released after line 239.","tnFile":"src/edu/stanford/nlp/international/french/pipeline/FTBDataset.java","tnLine":239,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.international.french.pipeline.FTBDataset.makeSplitSet(java.lang.String):java.util.Set","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `DecimatedArabicDataset$ArabicTreeDecimatedNormalizer.outFiles.get(keyForFile)` could be null and is dereferenced at line 117.","tnFile":"src/edu/stanford/nlp/international/arabic/pipeline/DecimatedArabicDataset.java","tnLine":117,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.international.arabic.pipeline.DecimatedArabicDataset$ArabicTreeDecimatedNormalizer.closeOutputFiles():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Counter Dataset.getFeatureCounter()` indirectly reads without synchronization from `this.data`. Potentially races with write in method `Dataset.ensureSize()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/classify/Dataset.java","tnLine":244,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.Dataset.getFeatureCounter():edu.stanford.nlp.stats.Counter","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileInputStream` acquired by call to `FileInputStream(...)` at line 114 is not released after line 120.\n**Note**: potential exception at line 116","tnFile":"src/edu/stanford/nlp/classify/MultinomialLogisticClassifier.java","tnLine":120,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.MultinomialLogisticClassifier.load(java.lang.String):edu.stanford.nlp.classify.MultinomialLogisticClassifier","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `edge` last assigned on line 262 could be null and is dereferenced at line 263.","tnFile":"src/edu/stanford/nlp/trees/ud/UniversalDependenciesFeatureAnnotator.java","tnLine":263,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.ud.UniversalDependenciesFeatureAnnotator.getRelAndIntPronFeatures(edu.stanford.nlp.semgraph.SemanticGraph,edu.stanford.nlp.ling.IndexedWord):java.util.HashMap","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `InputStreamReader(...)` at line 611 is not released after line 623.\n**Note**: potential exception at line 614","tnFile":"src/edu/stanford/nlp/parser/lexparser/FrenchTreebankParserParams.java","tnLine":623,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.FrenchTreebankParserParams.loadMWMap(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 53 is not released after line 53.","tnFile":"src/edu/stanford/nlp/international/arabic/pipeline/TaggedArabicDataset.java","tnLine":53,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.international.arabic.pipeline.TaggedArabicDataset.build():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.LineNumberReader` acquired to `reader` by call to `new()` at line 90 is not released after line 112.","tnFile":"src/edu/stanford/nlp/international/arabic/pipeline/UniversalPOSMapper.java","tnLine":112,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.international.arabic.pipeline.UniversalPOSMapper.loadUniversalMap(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `anno.get(edu.stanford.nlp.ling.CoreAnnotations$TokensAnnotation)` could be null and is dereferenced at line 135.","tnFile":"src/edu/stanford/nlp/dcoref/CoNLLMentionExtractor.java","tnLine":135,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.dcoref.CoNLLMentionExtractor.nextDoc():edu.stanford.nlp.dcoref.Document","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `quotes` last assigned on line 63 could be null and is dereferenced at line 69.","tnFile":"src/edu/stanford/nlp/quoteattribution/QuoteAttributionEvaluation.java","tnLine":69,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.quoteattribution.QuoteAttributionEvaluation.evaluate(edu.stanford.nlp.pipeline.Annotation,java.util.List):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `getBufferedFileReader(...)` at line 1622 is not released after line 1631.\n**Note**: potential exception at line 1623","tnFile":"src/edu/stanford/nlp/io/IOUtils.java","tnLine":1631,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.io.IOUtils.readObjectFromColumns(java.lang.Class,java.lang.String,java.lang.String[],java.lang.String):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `MetadataWriter.mentionPairs.get(valueOf(id))` could be null and is dereferenced at line 63.","tnFile":"src/edu/stanford/nlp/coref/statistical/MetadataWriter.java","tnLine":63,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.coref.statistical.MetadataWriter.process(int,edu.stanford.nlp.coref.data.Document):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `tree.label()` could be null and is dereferenced at line 95.","tnFile":"src/edu/stanford/nlp/sentiment/SentimentPipeline.java","tnLine":95,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.sentiment.SentimentPipeline.setIndexLabels(edu.stanford.nlp.trees.Tree,int):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `m.getNode(FrenchTreebankParserParams$AddRelativeNodeFunction.key).label()` could be null and is dereferenced at line 447.","tnFile":"src/edu/stanford/nlp/parser/lexparser/FrenchTreebankParserParams.java","tnLine":447,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.FrenchTreebankParserParams$AddRelativeNodeFunction.apply(edu.stanford.nlp.trees.tregex.TregexMatcher):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `InputStreamReader(...)` at line 30 is not released after line 31.","tnFile":"src/edu/stanford/nlp/trees/tregex/Macros.java","tnLine":31,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.tregex.Macros.readMacros(java.lang.String,java.lang.String):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired by call to `transformXML(...)` at line 324 is not released after line 324.","tnFile":"src/edu/stanford/nlp/process/TransformXML.java","tnLine":324,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.process.TransformXML.transformXML(java.lang.String[],java.util.function.Function,java.io.InputStream,java.io.Writer):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `output` last assigned on line 206 could be null and is dereferenced at line 207.","tnFile":"src/edu/stanford/nlp/coref/hybrid/HybridCorefSystem.java","tnLine":207,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.coref.hybrid.HybridCorefSystem.logOutput(edu.stanford.nlp.util.concurrent.MulticoreWrapper,java.io.PrintWriter,java.io.PrintWriter,java.io.PrintWriter,int):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void WebServiceAnnotator.ensureServer()` reads without synchronization from `this.serverWasActive`. Potentially races with write in method `WebServiceAnnotator.annotate(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/pipeline/WebServiceAnnotator.java","tnLine":247,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.WebServiceAnnotator.ensureServer():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `result` last assigned on line 489 could be null and is dereferenced at line 490.","tnFile":"src/edu/stanford/nlp/parser/shiftreduce/PerceptronModel.java","tnLine":490,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.shiftreduce.PerceptronModel.trainBatch(java.util.List,java.util.List,java.util.List,java.util.List,edu.stanford.nlp.parser.shiftreduce.Oracle,edu.stanford.nlp.util.concurrent.MulticoreWrapper):edu.stanford.nlp.util.Triple","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 1075 is not released after line 1080.\n**Note**: potential exception at line 1076","tnFile":"src/edu/stanford/nlp/dcoref/SieveCoreferenceSystem.java","tnLine":1080,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.dcoref.SieveCoreferenceSystem.runConllEval(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired to `xStream` by call to `getDataInputStream(...)` at line 37 is not released after line 77.\n**Note**: potential exception at line 38","tnFile":"src/edu/stanford/nlp/classify/demo/MnistConverter.java","tnLine":77,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.demo.MnistConverter.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `*tree.children()[0].label()` could be null and is dereferenced at line 511.","tnFile":"src/edu/stanford/nlp/sentiment/SentimentCostAndGradient.java","tnLine":511,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.sentiment.SentimentCostAndGradient.forwardPropagateTree(edu.stanford.nlp.trees.Tree):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `entityMention.get(edu.stanford.nlp.ling.CoreAnnotations$TokensAnnotation).get(0).get(edu.stanford.nlp.ling.CoreAnnotations$NamedEntityTagProbsAnnotation)` could be null and is dereferenced at line 224.","tnFile":"src/edu/stanford/nlp/pipeline/EntityMentionsAnnotator.java","tnLine":224,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.EntityMentionsAnnotator.determineEntityMentionConfidences(edu.stanford.nlp.util.CoreMap):java.util.HashMap","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `tokens` last assigned on line 204 could be null and is dereferenced at line 211.","tnFile":"src/edu/stanford/nlp/quoteattribution/QuoteAttributionUtils.java","tnLine":211,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.quoteattribution.QuoteAttributionUtils.constructCoreMap(edu.stanford.nlp.pipeline.Annotation,edu.stanford.nlp.util.Pair):edu.stanford.nlp.util.CoreMap","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired to `fos` by call to `FileOutputStream(...)` at line 105 is not released after line 108.","tnFile":"src/edu/stanford/nlp/loglinear/storage/ModelBatch.java","tnLine":108,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.loglinear.storage.ModelBatch.writeToFile(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Ssurgeon.testRead(File)` indirectly reads without synchronization from `ssurgeon.Ssurgeon.instance`. Potentially races with write in method `Ssurgeon.inst()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/semgraph/semgrex/ssurgeon/Ssurgeon.java","tnLine":595,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.semgraph.semgrex.ssurgeon.Ssurgeon.testRead(java.io.File):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object GrammaticalRelation.readResolve()` indirectly reads with synchronization from `result.child`. Potentially races with unsynchronized write in method `GrammaticalRelation.valueOf(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/trees/GrammaticalRelation.java","tnLine":564,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.GrammaticalRelation.readResolve():java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileInputStream` acquired by call to `getInputStream()` at line 468 is not released after line 489.","tnFile":"src/edu/stanford/nlp/io/IOUtils.java","tnLine":489,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.io.IOUtils.getInputStreamFromURLOrClasspathOrFileSystem(java.lang.String):java.io.InputStream","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Document Document.runNER(Properties)` reads with synchronization from `this.sentences`. Potentially races with unsynchronized write in method `Document.forceSentences(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/simple/Document.java","tnLine":846,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.simple.Document.runNER(java.util.Properties):edu.stanford.nlp.simple.Document","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired by call to `new()` at line 175 is not released after line 202.","tnFile":"src/edu/stanford/nlp/neural/VectorMap.java","tnLine":202,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.neural.VectorMap.deserialize(java.io.BufferedInputStream):edu.stanford.nlp.neural.VectorMap","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `edu.stanford.nlp.io.StringOutputStream` acquired to `outSos` by call to `new()` at line 1086 is not released after line 1104.\n**Note**: potential exception at line 1089","tnFile":"src/edu/stanford/nlp/dcoref/SieveCoreferenceSystem.java","tnLine":1104,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.dcoref.SieveCoreferenceSystem.getConllEvalSummary(java.lang.String,java.lang.String,java.lang.String):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `next.get(edu.stanford.nlp.ling.CoreAnnotations$AnswerAnnotation)` could be null and is dereferenced at line 368.","tnFile":"src/edu/stanford/nlp/ie/regexp/NumberSequenceClassifier.java","tnLine":368,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.regexp.NumberSequenceClassifier.moneyAndPercentRecognizer(java.util.List):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Redwood.main(java.lang.String[])` indirectly reads with synchronization from `logging.Redwood.isThreaded`. Potentially races with unsynchronized write in method `Redwood.endThreads(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/util/logging/Redwood.java","tnLine":1488,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.util.logging.Redwood.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `getFileOutputStream(...)` at line 1564 is not released after line 1568.","tnFile":"src/edu/stanford/nlp/io/IOUtils.java","tnLine":1568,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.io.IOUtils.getPrintWriter(java.lang.String,java.lang.String):java.io.PrintWriter","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `edu.stanford.nlp.trees.PennTreeReader` acquired by call to `PennTreeReader(...)` at line 805 is not released after line 806.","tnFile":"src/edu/stanford/nlp/trees/Trees.java","tnLine":806,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.Trees.readTree(java.lang.String,edu.stanford.nlp.trees.TreeFactory):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `ht.value()` could be null and is dereferenced at line 380.","tnFile":"src/edu/stanford/nlp/trees/NPTmpRetainingTreeNormalizer.java","tnLine":380,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.NPTmpRetainingTreeNormalizer.lambda$normalizeWholeTree$1(edu.stanford.nlp.trees.Tree):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `currNode` last assigned on line 134 could be null and is dereferenced at line 133.","tnFile":"src/edu/stanford/nlp/quoteattribution/Sieves/Sieve.java","tnLine":133,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.quoteattribution.Sieves.Sieve.createNameMatcher():edu.stanford.nlp.quoteattribution.Sieves.Sieve$TokenNode","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `m.getNode(ArabicTreebankParserParams$AddEquivalencedNodeFunction.key).label()` could be null and is dereferenced at line 555.","tnFile":"src/edu/stanford/nlp/parser/lexparser/ArabicTreebankParserParams.java","tnLine":555,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.ArabicTreebankParserParams$AddEquivalencedNodeFunction.apply(edu.stanford.nlp.trees.tregex.TregexMatcher):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void WeightedDataset.ensureSize()` reads with synchronization from `this.weights`. Potentially races with unsynchronized write in method `WeightedDataset.ensureSize()`.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/classify/WeightedDataset.java","tnLine":78,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.WeightedDataset.ensureSize():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `sideRules.get(label).get(sis)` could be null and is dereferenced at line 156.","tnFile":"src/edu/stanford/nlp/parser/lexparser/SisterAnnotationStats.java","tnLine":156,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.SisterAnnotationStats.sideCounters(java.lang.String,java.util.List,java.util.List,java.util.Map):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int ConcurrentHashIndex.size()` reads without synchronization from `this.indexSize`. Potentially races with write in method `ConcurrentHashIndex.addToIndex(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/util/concurrent/ConcurrentHashIndex.java","tnLine":223,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.util.concurrent.ConcurrentHashIndex.size():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.label()` could be null and is dereferenced at line 27.","tnFile":"src/edu/stanford/nlp/trees/WordStemmer.java","tnLine":27,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.WordStemmer.processTree(edu.stanford.nlp.trees.Tree,java.lang.String,edu.stanford.nlp.process.Morphology):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `edu.stanford.nlp.io.StringOutputStream` acquired to `errSos` by call to `new()` at line 1085 is not released after line 1104.\n**Note**: potential exception at line 1089","tnFile":"src/edu/stanford/nlp/dcoref/SieveCoreferenceSystem.java","tnLine":1104,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.dcoref.SieveCoreferenceSystem.getConllEvalSummary(java.lang.String,java.lang.String,java.lang.String):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedWriter` acquired to `out` by call to `new()` at line 736 is not released after line 741.\n**Note**: potential exception at line 738","tnFile":"src/edu/stanford/nlp/trees/tregex/gui/TregexGUI.java","tnLine":741,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.tregex.gui.TregexGUI$5.run():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.label()` could be null and is dereferenced at line 1928.","tnFile":"src/edu/stanford/nlp/parser/lexparser/EnglishTreebankParserParams.java","tnLine":1928,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.EnglishTreebankParserParams.rightPhrasal(edu.stanford.nlp.trees.Tree):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.label()` could be null and is dereferenced at line 287.","tnFile":"src/edu/stanford/nlp/parser/lexparser/TueBaDZParserParams.java","tnLine":287,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.TueBaDZParserParams.containsV(edu.stanford.nlp.trees.Tree):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `cl.get(edu.stanford.nlp.ling.CoreAnnotations$ParentAnnotation)` could be null and is dereferenced at line 111.","tnFile":"src/edu/stanford/nlp/international/french/process/FrenchTokenizer.java","tnLine":111,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.international.french.process.FrenchTokenizer.getNext():edu.stanford.nlp.ling.HasWord","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.lang.Process` acquired by call to `exec(...)` at line 166 is not released after line 169.","tnFile":"src/edu/stanford/nlp/io/FileSystem.java","tnLine":169,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.io.FileSystem.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `iterator()` at line 1705 is not released after line 1718.","tnFile":"src/edu/stanford/nlp/tagger/maxent/MaxentTagger.java","tnLine":1718,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.tagger.maxent.MaxentTagger.runTaggerSGML(java.io.BufferedReader,java.io.BufferedWriter,edu.stanford.nlp.sequences.PlainTextDocumentReaderAndWriter$OutputStyle):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `cluster.getMentionMap().get(mid)` could be null and is dereferenced at line 208.","tnFile":"src/edu/stanford/nlp/pipeline/CustomAnnotationSerializer.java","tnLine":208,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.CustomAnnotationSerializer.countMentions(edu.stanford.nlp.coref.data.CorefChain):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `cl.get(edu.stanford.nlp.ling.CoreAnnotations$SentenceIndexAnnotation)` could be null and is dereferenced at line 901.","tnFile":"src/edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer.java","tnLine":901,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.ProtobufAnnotationSerializer.createIndexedWordProtoFromCL(edu.stanford.nlp.ling.CoreLabel):edu.stanford.nlp.pipeline.CoreNLPProtos$IndexedWord","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.net.Socket` acquired to `socket` by call to `new()` at line 116 is not released after line 124.\n**Note**: potential exception at line 119","tnFile":"src/edu/stanford/nlp/parser/server/LexicalizedParserClient.java","tnLine":124,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.server.LexicalizedParserClient.getParse(java.lang.String,boolean):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `getDataOutputStream(...)` at line 323 is not released after line 325.","tnFile":"src/edu/stanford/nlp/tagger/maxent/TTags.java","tnLine":325,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.tagger.maxent.TTags.save(java.lang.String,java.util.Map):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired by call to `new()` at line 1997 is not released after line 1997.","tnFile":"src/edu/stanford/nlp/stats/Counters.java","tnLine":1997,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.stats.Counters.deserializeCounter(java.lang.String):edu.stanford.nlp.stats.ClassicCounter","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `headerIndex.get(\"defaultUnitScale\")` could be null and is dereferenced at line 125.","tnFile":"src/edu/stanford/nlp/ie/qe/Units.java","tnLine":125,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.qe.Units.loadUnits(java.lang.String):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `tree` last assigned on line 145 could be null and is dereferenced at line 152.","tnFile":"src/edu/stanford/nlp/trees/international/negra/NegraPennTreeNormalizer.java","tnLine":152,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.international.negra.NegraPennTreeNormalizer.normalizeWholeTree(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.TreeFactory):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `new()` at line 36 is not released after line 52.\n**Note**: potential exception at line 42","tnFile":"src/edu/stanford/nlp/util/StreamGobbler.java","tnLine":52,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.util.StreamGobbler.run():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `ConcatVector ConcatVectorNamespace.newWeightsVector()` reads without synchronization from container `this.sparseFeatureIndex` via call to `keySet`. Potentially races with write in method `ConcatVectorNamespace.ensureSparseFeature(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/loglinear/model/ConcatVectorNamespace.java","tnLine":38,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.loglinear.model.ConcatVectorNamespace.newWeightsVector():edu.stanford.nlp.loglinear.model.ConcatVector","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired to `err` by call to `new()` at line 557 is not released after line 568.\n**Note**: potential exception at line 558","tnFile":"src/edu/stanford/nlp/dcoref/SieveCoreferenceSystem.java","tnLine":568,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.dcoref.SieveCoreferenceSystem.runAndScoreCorefDist(java.lang.String,java.util.Properties,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `tree.value()` could be null and is dereferenced at line 231.","tnFile":"src/edu/stanford/nlp/trees/international/arabic/ArabicTreeNormalizer.java","tnLine":231,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.international.arabic.ArabicTreeNormalizer.normalizeWholeTree(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.TreeFactory):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `iterator()` at line 476 is not released after line 487.","tnFile":"src/edu/stanford/nlp/ie/AbstractSequenceClassifier.java","tnLine":487,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.AbstractSequenceClassifier.classifyObjectBank(edu.stanford.nlp.objectbank.ObjectBank):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `argMap.get(\"-out\")` could be null and is dereferenced at line 134.","tnFile":"src/edu/stanford/nlp/parser/lexparser/ChineseCharacterBasedLexiconTraining.java","tnLine":134,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.ChineseCharacterBasedLexiconTraining.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List PhraseTable.findMatches(String,int,int,boolean)` indirectly reads without synchronization from container `this.normalizedCache` via call to `get`. Potentially races with write in method `PhraseTable.getNormalizedForm(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/ling/tokensregex/PhraseTable.java","tnLine":687,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ling.tokensregex.PhraseTable.findMatches(java.lang.String,int,int,boolean):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `state.stack.peek().value()` could be null and is dereferenced at line 88.","tnFile":"src/edu/stanford/nlp/parser/shiftreduce/BaseModel.java","tnLine":88,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.shiftreduce.BaseModel.findEmergencyTransition(edu.stanford.nlp.parser.shiftreduce.State,java.util.List):edu.stanford.nlp.parser.shiftreduce.Transition","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired by call to `new()` at line 201 is not released after line 295.","tnFile":"src/edu/stanford/nlp/trees/Treebanks.java","tnLine":295,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.Treebanks.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileInputStream` acquired by call to `FileInputStream(...)` at line 89 is not released after line 89.","tnFile":"src/edu/stanford/nlp/international/french/scripts/SplitCanditoTrees.java","tnLine":89,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.international.french.scripts.SplitCanditoTrees.readIds(java.lang.String):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `phraseValue` last assigned on line 504 could be null and is dereferenced at line 508.","tnFile":"src/edu/stanford/nlp/international/spanish/pipeline/MultiWordPreprocessor.java","tnLine":508,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.international.spanish.pipeline.MultiWordPreprocessor.inferPhrasalCategory(edu.stanford.nlp.trees.Tree,boolean):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 529 is not released after line 534.\n**Note**: potential exception at line 531","tnFile":"src/edu/stanford/nlp/quoteattribution/Sieves/training/SupervisedSieveTraining.java","tnLine":534,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.quoteattribution.Sieves.training.SupervisedSieveTraining.outputModel(java.lang.String,edu.stanford.nlp.classify.Classifier):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `GrammaticalRelation UniversalEnglishGrammaticalRelations.getNmod(String)` reads without synchronization from container `trees.UniversalEnglishGrammaticalRelations.nmods` via call to `get`. Potentially races with write in method `UniversalEnglishGrammaticalRelations.getNmod(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/trees/UniversalEnglishGrammaticalRelations.java","tnLine":1751,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.UniversalEnglishGrammaticalRelations.getNmod(java.lang.String):edu.stanford.nlp.trees.GrammaticalRelation","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.net.HttpURLConnection` acquired by call to `openConnection()` at line 483 is not released after line 519.\n**Note**: potential exception at line 509","tnFile":"src/edu/stanford/nlp/pipeline/StanfordCoreNLPClient.java","tnLine":519,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.StanfordCoreNLPClient.doAnnotation(edu.stanford.nlp.pipeline.Annotation,edu.stanford.nlp.pipeline.StanfordCoreNLPClient$Backend,java.net.URL,byte[],int):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileReader` acquired by call to `new()` at line 26 is not released after line 33.","tnFile":"src/edu/stanford/nlp/trees/international/negra/NegraPennTokenizer.java","tnLine":33,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.international.negra.NegraPennTokenizer.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `freq.tempMInteger` last assigned on line 80 could be null and is dereferenced by call to `incrementCount(...)` at line 82.","tnFile":"src/edu/stanford/nlp/parser/nndep/Util.java","tnLine":82,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.nndep.Util.generateDict(java.util.ArrayList,int):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `tree.label()` could be null and is dereferenced at line 883.","tnFile":"src/edu/stanford/nlp/parser/lexparser/SplittingGrammarExtractor.java","tnLine":883,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.SplittingGrammarExtractor.recountWeights(edu.stanford.nlp.trees.Tree,java.util.IdentityHashMap,java.util.IdentityHashMap,java.util.IdentityHashMap,java.util.IdentityHashMap):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `w.get(edu.stanford.nlp.ling.CoreAnnotations$PartOfSpeechAnnotation)` could be null and is dereferenced at line 561.","tnFile":"src/edu/stanford/nlp/dcoref/Rules.java","tnLine":561,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.dcoref.Rules.entityHaveExtraProperNoun(edu.stanford.nlp.dcoref.Mention,edu.stanford.nlp.dcoref.Mention,java.util.Set):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `GrammaticalRelation.<init>(Language,String,String,GrammaticalRelation,String,TregexPatternCompiler,java.lang.String[])` indirectly writes to field `result.child` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/trees/GrammaticalRelation.java","tnLine":341,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.GrammaticalRelation.<init>(edu.stanford.nlp.international.Language,java.lang.String,java.lang.String,edu.stanford.nlp.trees.GrammaticalRelation,java.lang.String,edu.stanford.nlp.trees.tregex.TregexPatternCompiler,java.lang.String[])","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Dataset.addFeatures(Collection,boolean)` reads with synchronization from `this.data`. Potentially races with unsynchronized write in method `Dataset.ensureSize()`.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/classify/Dataset.java","tnLine":363,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.Dataset.addFeatures(java.util.Collection,boolean):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void PatternsForEachTokenLucene.checkClean()` reads without synchronization from `surface.PatternsForEachTokenLucene.dir`. Potentially races with write in method `PatternsForEachTokenLucene.setIndexWriter()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/patterns/surface/PatternsForEachTokenLucene.java","tnLine":81,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.patterns.surface.PatternsForEachTokenLucene.checkClean():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Collection EnglishGrammaticalRelations.getPrepsC()` reads without synchronization from container `trees.EnglishGrammaticalRelations.prepsC` via call to `values`. Potentially races with write in method `EnglishGrammaticalRelations.getPrepC(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/trees/EnglishGrammaticalRelations.java","tnLine":1672,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.EnglishGrammaticalRelations.getPrepsC():java.util.Collection","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.LineNumberReader` acquired by call to `new()` at line 201 is not released after line 211.\n**Note**: potential exception at line 202","tnFile":"src/edu/stanford/nlp/trees/treebank/AbstractDataset.java","tnLine":211,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.treebank.AbstractDataset.buildSplitMap(java.lang.String):java.util.Set","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void WeightedDataset.randomize(long)` reads without synchronization from `this.data`. Potentially races with write in method `WeightedDataset.ensureSize()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/classify/WeightedDataset.java","tnLine":110,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.WeightedDataset.randomize(long):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List PhraseTable.findMatches(PhraseTable$WordList,int,int,boolean)` indirectly reads without synchronization from container `this.normalizedCache` via call to `get`. Potentially races with write in method `PhraseTable.getNormalizedForm(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/ling/tokensregex/PhraseTable.java","tnLine":677,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ling.tokensregex.PhraseTable.findMatches(edu.stanford.nlp.ling.tokensregex.PhraseTable$WordList,int,int,boolean):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `edge` last assigned on line 1446 could be null and is dereferenced at line 1449.","tnFile":"src/edu/stanford/nlp/trees/UniversalEnglishGrammaticalStructure.java","tnLine":1449,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.UniversalEnglishGrammaticalStructure.correctSubjPass(edu.stanford.nlp.semgraph.SemanticGraph):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `tree.value()` could be null and is dereferenced at line 163.","tnFile":"src/edu/stanford/nlp/trees/international/french/FrenchTreeNormalizer.java","tnLine":163,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.international.french.FrenchTreeNormalizer.normalizeWholeTree(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.TreeFactory):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired to `return` by call to `iterator()` at line 290 is not released after line 295.","tnFile":"src/edu/stanford/nlp/objectbank/ObjectBank.java","tnLine":295,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.objectbank.ObjectBank.contains(java.lang.Object):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `leftChild.label()` could be null and is dereferenced at line 434.","tnFile":"src/edu/stanford/nlp/parser/lexparser/TreeBinarizer.java","tnLine":434,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.TreeBinarizer.insideBinarizeLocalTree(edu.stanford.nlp.trees.Tree,int,edu.stanford.nlp.ling.TaggedWord,int,int):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.label()` could be null and is dereferenced at line 275.","tnFile":"src/edu/stanford/nlp/parser/lexparser/TreeAnnotator.java","tnLine":275,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.TreeAnnotator.leftRec(edu.stanford.nlp.trees.Tree,java.lang.String):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `label.get(edu.stanford.nlp.trees.TreeCoreAnnotations$HeadWordLabelAnnotation)` could be null and is dereferenced at line 40.","tnFile":"src/edu/stanford/nlp/parser/shiftreduce/FeatureFactory.java","tnLine":40,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.shiftreduce.FeatureFactory.getFeatureFromCoreLabel(edu.stanford.nlp.ling.CoreLabel,edu.stanford.nlp.parser.shiftreduce.FeatureFactory$FeatureComponent):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `tree` last assigned on line 776 could be null and is dereferenced at line 777.","tnFile":"src/edu/stanford/nlp/trees/CoordinationTransformer.java","tnLine":777,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.CoordinationTransformer.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired to `rf` by call to `getDataInputStream(...)` at line 684 is not released after line 687.\n**Note**: potential exception at line 685","tnFile":"src/edu/stanford/nlp/maxent/iis/LambdaSolve.java","tnLine":687,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.maxent.iis.LambdaSolve.readL(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List Sentence.mentions()` indirectly reads without synchronization from `this.impl.token_`. Potentially races with write in method `Sentence.serialize()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/simple/Sentence.java","tnLine":602,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.simple.Sentence.mentions():java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `quotes` last assigned on line 31 could be null and is dereferenced at line 32.","tnFile":"src/edu/stanford/nlp/quoteattribution/Sieves/QMSieves/OneNameSentenceSieve.java","tnLine":32,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.quoteattribution.Sieves.QMSieves.OneNameSentenceSieve.oneNameSentence(edu.stanford.nlp.pipeline.Annotation):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Dataset.add(int[],int)` indirectly writes to field `this.data` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/classify/Dataset.java","tnLine":318,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.Dataset.add(int[],int):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `edu.stanford.nlp.dcoref.CoNLL2011DocumentReader$DocumentIterator` acquired by call to `CoNLL2011DocumentReader$DocumentIterator(...)` at line 121 is not released after line 121.\n**Note**: potential exception at line 121","tnFile":"src/edu/stanford/nlp/dcoref/CoNLL2011DocumentReader.java","tnLine":121,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.dcoref.CoNLL2011DocumentReader.getNextDocument():edu.stanford.nlp.dcoref.CoNLL2011DocumentReader$Document","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void WeightedDataset.add(Datum)` indirectly writes to field `this.data` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/classify/WeightedDataset.java","tnLine":60,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.WeightedDataset.add(edu.stanford.nlp.ling.Datum):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Redwood.endTrack(String)` reads without synchronization from `logging.Redwood.isThreaded`. Potentially races with write in method `Redwood.endThreads(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/util/logging/Redwood.java","tnLine":402,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.util.logging.Redwood.endTrack(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired by call to `new()` at line 53 is not released after line 290.\n**Note**: potential exception at line 290","tnFile":"src/edu/stanford/nlp/pipeline/JSONOutputter.java","tnLine":290,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.JSONOutputter.print(edu.stanford.nlp.pipeline.Annotation,java.io.OutputStream,edu.stanford.nlp.pipeline.AnnotationOutputter$Options):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `m.getNode(ArabicTreebankParserParams$AddRelativeNodeFunction.key).label()` could be null and is dereferenced at line 469.","tnFile":"src/edu/stanford/nlp/parser/lexparser/ArabicTreebankParserParams.java","tnLine":469,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.ArabicTreebankParserParams$AddRelativeNodeFunction.apply(edu.stanford.nlp.trees.tregex.TregexMatcher):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.net.Socket` acquired to `client` by call to `accept()` at line 80 is not released after line 80.","tnFile":"src/edu/stanford/nlp/tagger/maxent/MaxentTaggerServer.java","tnLine":80,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.tagger.maxent.MaxentTaggerServer.run():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `doc.get(edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation)` could be null and is dereferenced at line 65.","tnFile":"src/edu/stanford/nlp/naturalli/CreateClauseDataset.java","tnLine":65,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.naturalli.CreateClauseDataset.process(long,edu.stanford.nlp.pipeline.Annotation):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `aMap.get(valueOf(fIndex))` could be null and is dereferenced at line 271.","tnFile":"src/edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunctionWithDropout.java","tnLine":271,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunctionWithDropout.increScoreAllowNull(java.util.Map,int,int,double):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `labeledSequence.get(focus).get(edu.stanford.nlp.international.arabic.process.IOBUtils$PrefixMarkerAnnotation)` could be null and is dereferenced at line 673.","tnFile":"src/edu/stanford/nlp/international/arabic/process/IOBUtils.java","tnLine":673,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.international.arabic.process.IOBUtils.addPrefixMarker(int,java.util.List):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.util.zip.GZIPInputStream` acquired by call to `GZIPInputStream(...)` at line 1140 is not released after line 1140.","tnFile":"src/edu/stanford/nlp/io/IOUtils.java","tnLine":1140,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.io.IOUtils.slurpGZippedFile(java.lang.String):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `PhraseTable$WordList PhraseTable.toNormalizedWordList(String)` indirectly reads without synchronization from container `this.normalizedCache` via call to `get`. Potentially races with write in method `PhraseTable.getNormalizedForm(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/ling/tokensregex/PhraseTable.java","tnLine":275,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ling.tokensregex.PhraseTable.toNormalizedWordList(java.lang.String):edu.stanford.nlp.ling.tokensregex.PhraseTable$WordList","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `proto.getType()` could be null and is dereferenced by call to `EntityMention(...)` at line 2483.","tnFile":"src/edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer.java","tnLine":2483,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.ProtobufAnnotationSerializer.fromProto(edu.stanford.nlp.pipeline.CoreNLPProtos$Entity,edu.stanford.nlp.util.CoreMap):edu.stanford.nlp.ie.machinereading.structure.EntityMention","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `getBufferedOutputStream(...)` at line 165 is not released after line 167.","tnFile":"src/edu/stanford/nlp/io/IOUtils.java","tnLine":167,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.io.IOUtils.writeStringToFile(java.lang.String,java.lang.String,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `ApplyPatterns.sents.get(sentid)` could be null and is dereferenced at line 57.","tnFile":"src/edu/stanford/nlp/patterns/surface/ApplyPatterns.java","tnLine":57,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.patterns.surface.ApplyPatterns.call():edu.stanford.nlp.util.Triple","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `readerFromString(...)` at line 65 is not released after line 71.","tnFile":"src/edu/stanford/nlp/trees/international/negra/NegraPennTreeReaderFactory.java","tnLine":71,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.international.negra.NegraPennTreeReaderFactory.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `label` last assigned on line 583 could be null and is dereferenced at line 584.","tnFile":"src/edu/stanford/nlp/coref/md/CorefMentionFinder.java","tnLine":584,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.coref.md.CorefMentionFinder.findPartialSpan(edu.stanford.nlp.trees.Tree,int):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.label()` could be null and is dereferenced at line 187.","tnFile":"src/edu/stanford/nlp/trees/international/negra/NegraPennTreeNormalizer.java","tnLine":187,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.international.negra.NegraPennTreeNormalizer.insertNPinPP(edu.stanford.nlp.trees.Tree):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.label()` could be null and is dereferenced at line 205.","tnFile":"src/edu/stanford/nlp/trees/AbstractCollinsHeadFinder.java","tnLine":205,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.AbstractCollinsHeadFinder.determineNonTrivialHead(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.Tree):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `SemanticGraph AnnotationSerializer$IntermediateSemanticGraph.convertIntermediateGraph(List)` indirectly writes to field `util.ArrayCoreMap.listener` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/pipeline/AnnotationSerializer.java","tnLine":136,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.AnnotationSerializer$IntermediateSemanticGraph.convertIntermediateGraph(java.util.List):edu.stanford.nlp.semgraph.SemanticGraph","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `tree.label()` could be null and is dereferenced at line 44.","tnFile":"src/edu/stanford/nlp/sentiment/BuildBinarizedDataset.java","tnLine":44,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.sentiment.BuildBinarizedDataset.setUnknownLabels(edu.stanford.nlp.trees.Tree,java.lang.Integer):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Dataset.selectFeatures(int,double[])` writes to field `this.featureIndex` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/classify/Dataset.java","tnLine":620,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.Dataset.selectFeatures(int,double[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.firstChild().label()` could be null and is dereferenced at line 55.","tnFile":"src/edu/stanford/nlp/parser/lexparser/BinaryHeadFinder.java","tnLine":55,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.BinaryHeadFinder.determineBinaryHead(edu.stanford.nlp.trees.Tree):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired by call to `MaxentTaggerServer$Session(...)` at line 85 is not released after line 85.","tnFile":"src/edu/stanford/nlp/tagger/maxent/MaxentTaggerServer.java","tnLine":85,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.tagger.maxent.MaxentTaggerServer.run():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `sent` last assigned on line 71 could be null and is dereferenced at line 72.","tnFile":"src/edu/stanford/nlp/patterns/dep/ApplyDepPatterns.java","tnLine":72,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.patterns.dep.ApplyDepPatterns.call():edu.stanford.nlp.util.Pair","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `quotes` last assigned on line 27 could be null and is dereferenced at line 28.","tnFile":"src/edu/stanford/nlp/quoteattribution/Sieves/MSSieves/DeterministicSpeakerSieve.java","tnLine":28,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.quoteattribution.Sieves.MSSieves.DeterministicSpeakerSieve.doMentionToSpeaker(edu.stanford.nlp.pipeline.Annotation):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `tree` last assigned on line 128 could be null and is dereferenced at line 130.","tnFile":"src/edu/stanford/nlp/trees/international/french/FrenchTreeNormalizer.java","tnLine":130,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.international.french.FrenchTreeNormalizer.normalizeWholeTree(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.TreeFactory):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `ne` last assigned on line 242 could be null and is dereferenced at line 243.","tnFile":"src/edu/stanford/nlp/ie/machinereading/BasicEntityExtractor.java","tnLine":243,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.machinereading.BasicEntityExtractor.makeAnnotationFromGivenNERTag(edu.stanford.nlp.util.CoreMap,java.lang.String,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `Dictionary.partTakingVerbs.get(valueOf(i))` could be null and is dereferenced at line 118.","tnFile":"src/edu/stanford/nlp/tagger/maxent/Dictionary.java","tnLine":118,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.tagger.maxent.Dictionary.getCountRB(java.lang.String):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `rawTag` last assigned on line 70 could be null and is dereferenced at line 71.","tnFile":"src/edu/stanford/nlp/international/arabic/pipeline/LabeledATBDataset.java","tnLine":71,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.international.arabic.pipeline.LabeledATBDataset$LabelingTreeNormalizer.processPreterminal(edu.stanford.nlp.trees.Tree):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `tree.label()` could be null and is dereferenced at line 252.","tnFile":"src/edu/stanford/nlp/parser/lexparser/SplittingGrammarExtractor.java","tnLine":252,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.SplittingGrammarExtractor.getStateSplitCount(edu.stanford.nlp.trees.Tree):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `top.label()` could be null and is dereferenced at line 33.","tnFile":"src/edu/stanford/nlp/parser/shiftreduce/ShiftTransition.java","tnLine":33,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.shiftreduce.ShiftTransition.isLegal(edu.stanford.nlp.parser.shiftreduce.State,java.util.List):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.value()` could be null and is dereferenced at line 342.","tnFile":"src/edu/stanford/nlp/trees/CoordinationTransformer.java","tnLine":342,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.CoordinationTransformer.getHeadTag(edu.stanford.nlp.trees.Tree):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `nodeToRelabel.label()` could be null and is dereferenced at line 147.","tnFile":"src/edu/stanford/nlp/trees/tregex/tsurgeon/RelabelNode.java","tnLine":147,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.tregex.tsurgeon.RelabelNode$RelabelMatcher.evaluate(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.tregex.TregexMatcher):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `tree` last assigned on line 145 could be null and is dereferenced by call to `insertNPinPPall(...)` at line 149.","tnFile":"src/edu/stanford/nlp/trees/international/negra/NegraPennTreeNormalizer.java","tnLine":149,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.international.negra.NegraPennTreeNormalizer.normalizeWholeTree(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.TreeFactory):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `median` last assigned on line 416 could be null and is dereferenced at line 425.","tnFile":"src/edu/stanford/nlp/util/IntervalTree.java","tnLine":425,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.util.IntervalTree.balance(edu.stanford.nlp.util.IntervalTree$TreeNode):edu.stanford.nlp.util.IntervalTree$TreeNode","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired by call to `new()` at line 956 is not released after line 970.","tnFile":"src/edu/stanford/nlp/classify/RVFDataset.java","tnLine":970,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.RVFDataset.toSummaryString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `cat` last assigned on line 179 could be null and is dereferenced at line 180.","tnFile":"src/edu/stanford/nlp/trees/international/arabic/ArabicHeadFinder.java","tnLine":180,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.international.arabic.ArabicHeadFinder.findMarkedHead(edu.stanford.nlp.trees.Tree):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `dataset.get(edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation)` could be null and is dereferenced at line 528.","tnFile":"src/edu/stanford/nlp/ie/machinereading/MachineReading.java","tnLine":528,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.machinereading.MachineReading.removeSkippableRelations(edu.stanford.nlp.pipeline.Annotation,java.util.Set):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `oldEdge` last assigned on line 1962 could be null and is dereferenced at line 1964.","tnFile":"src/edu/stanford/nlp/trees/UniversalEnglishGrammaticalStructure.java","tnLine":1964,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.UniversalEnglishGrammaticalStructure.processNamesHelper(edu.stanford.nlp.semgraph.SemanticGraph,edu.stanford.nlp.ling.IndexedWord,java.util.List):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `headerIndex.get(\"symbol\")` could be null and is dereferenced at line 121.","tnFile":"src/edu/stanford/nlp/ie/qe/Units.java","tnLine":121,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.qe.Units.loadUnits(java.lang.String):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `headerIndex.get(\"exp\")` could be null and is dereferenced at line 95.","tnFile":"src/edu/stanford/nlp/ie/qe/UnitPrefix.java","tnLine":95,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.qe.UnitPrefix.loadPrefixes(java.lang.String):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired by call to `new()` at line 299 is not released after line 301.\n**Note**: potential exception at line 297","tnFile":"src/edu/stanford/nlp/tagger/maxent/TestSentence.java","tnLine":301,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.tagger.maxent.TestSentence.writeTagsAndErrors(java.lang.String[],edu.stanford.nlp.io.PrintFile,boolean):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `rm` last assigned on line 635 could be null and is dereferenced at line 636.","tnFile":"src/edu/stanford/nlp/ie/machinereading/domains/ace/reader/AceDocument.java","tnLine":636,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.machinereading.domains.ace.reader.AceDocument.constructSentenceRelationMentions():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Dataset.printFullFeatureMatrix(PrintWriter)` reads without synchronization from `this.data`. Potentially races with write in method `Dataset.ensureSize()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/classify/Dataset.java","tnLine":511,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.Dataset.printFullFeatureMatrix(java.io.PrintWriter):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `sentences` last assigned on line 47 could be null and is dereferenced at line 50.","tnFile":"src/edu/stanford/nlp/pipeline/demo/StanfordCoreNlpDemoChinese.java","tnLine":50,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.demo.StanfordCoreNlpDemoChinese.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.getChild(headLoc).label()` could be null and is dereferenced at line 163.","tnFile":"src/edu/stanford/nlp/parser/lexparser/TreeBinarizer.java","tnLine":163,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.TreeBinarizer.markovOutsideBinarizeLocalTree(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.ling.TaggedWord,int,java.lang.String,java.util.LinkedList,boolean):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.label()` could be null and is dereferenced at line 122.","tnFile":"src/edu/stanford/nlp/parser/lexparser/TreeBinarizer.java","tnLine":122,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.TreeBinarizer.binarizeLocalTree(edu.stanford.nlp.trees.Tree,int,edu.stanford.nlp.ling.TaggedWord):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileInputStream` acquired by call to `FileInputStream(...)` at line 1140 is not released after line 1140.","tnFile":"src/edu/stanford/nlp/io/IOUtils.java","tnLine":1140,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.io.IOUtils.slurpGZippedFile(java.lang.String):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `InputStreamReader(...)` at line 173 is not released after line 205.\n**Note**: potential exception at line 176","tnFile":"src/edu/stanford/nlp/trees/international/pennchinese/ChineseEnglishWordMap.java","tnLine":205,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.international.pennchinese.ChineseEnglishWordMap.readCEDict(java.lang.String,java.lang.String,java.lang.String,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `new()` at line 164 is not released after line 165.","tnFile":"src/edu/stanford/nlp/util/MemoryMonitor.java","tnLine":165,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.util.MemoryMonitor.pollVMstat(boolean):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `edu.stanford.nlp.dcoref.CoNLL2011DocumentReader$DocumentIterator` acquired by call to `CoNLL2011DocumentReader$DocumentIterator(...)` at line 131 is not released after line 131.\n**Note**: potential exception at line 131","tnFile":"src/edu/stanford/nlp/dcoref/CoNLL2011DocumentReader.java","tnLine":131,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.dcoref.CoNLL2011DocumentReader.getNextDocument():edu.stanford.nlp.dcoref.CoNLL2011DocumentReader$Document","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `iterator()` at line 157 is not released after line 165.","tnFile":"src/edu/stanford/nlp/pipeline/TrueCaseAnnotator.java","tnLine":165,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.TrueCaseAnnotator.loadMixedCaseMap(java.lang.String):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `Morphology()` at line 15 is not released after line 42.","tnFile":"src/edu/stanford/nlp/trees/TreeLemmatizer.java","tnLine":42,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.TreeLemmatizer.transformTree(edu.stanford.nlp.trees.Tree):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Dataset.printSparseFeatureMatrix(PrintWriter)` reads without synchronization from `this.data`. Potentially races with write in method `Dataset.ensureSize()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/classify/Dataset.java","tnLine":537,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.Dataset.printSparseFeatureMatrix(java.io.PrintWriter):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `ConcatVector ConcatVectorNamespace.newVector()` reads without synchronization from container `this.featureToIndex` via call to `size`. Potentially races with write in method `ConcatVectorNamespace.ensureSparseFeature(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/loglinear/model/ConcatVectorNamespace.java","tnLine":26,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.loglinear.model.ConcatVectorNamespace.newVector():edu.stanford.nlp.loglinear.model.ConcatVector","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.lang.Process` acquired to `p` by call to `exec(...)` at line 201 is not released after line 209.","tnFile":"src/edu/stanford/nlp/util/SystemUtils.java","tnLine":209,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.util.SystemUtils.runShellCommand(java.lang.String[],java.io.File,java.lang.StringBuilder,java.lang.StringBuilder):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `tree.label()` could be null and is dereferenced at line 174.","tnFile":"src/edu/stanford/nlp/parser/lexparser/SplittingGrammarExtractor.java","tnLine":174,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.SplittingGrammarExtractor.outputTransitions(edu.stanford.nlp.trees.Tree,int,java.util.IdentityHashMap,java.util.IdentityHashMap):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `sentences` last assigned on line 269 could be null and is dereferenced at line 270.","tnFile":"src/edu/stanford/nlp/ie/machinereading/GenericDataSetReader.java","tnLine":270,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.machinereading.GenericDataSetReader.preProcessSentences(edu.stanford.nlp.pipeline.Annotation):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `tokens.get(run.first.intValue()).get(edu.stanford.nlp.ling.CoreAnnotations$CharacterOffsetBeginAnnotation)` could be null and is dereferenced at line 211.","tnFile":"src/edu/stanford/nlp/quoteattribution/QuoteAttributionUtils.java","tnLine":211,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.quoteattribution.QuoteAttributionUtils.constructCoreMap(edu.stanford.nlp.pipeline.Annotation,edu.stanford.nlp.util.Pair):edu.stanford.nlp.util.CoreMap","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.OutputStreamWriter` acquired by call to `OutputStreamWriter(...)` at line 96 is not released after line 102.\n**Note**: potential exception at line 97","tnFile":"src/edu/stanford/nlp/parser/server/LexicalizedParserClient.java","tnLine":102,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.server.LexicalizedParserClient.getDependencies(java.lang.String,java.lang.String):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Sentence.<init>(Document,CoreNLPProtos$Sentence$Builder,String,Properties)` indirectly reads without synchronization from `this.impl.token_`. Potentially races with write in method `Sentence.serialize()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/simple/Sentence.java","tnLine":225,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.simple.Sentence.<init>(edu.stanford.nlp.simple.Document,edu.stanford.nlp.pipeline.CoreNLPProtos$Sentence$Builder,java.lang.String,java.util.Properties)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Collection EnglishGrammaticalRelations.getConjs()` reads without synchronization from container `trees.EnglishGrammaticalRelations.conjs` via call to `values`. Potentially races with write in method `EnglishGrammaticalRelations.getConj(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/trees/EnglishGrammaticalRelations.java","tnLine":1637,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.EnglishGrammaticalRelations.getConjs():java.util.Collection","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `sent.get(i).get(edu.stanford.nlp.ling.CoreAnnotations$UtteranceAnnotation)` could be null and is dereferenced at line 703.","tnFile":"src/edu/stanford/nlp/dcoref/Document.java","tnLine":703,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.dcoref.Document.findSpeaker(int,int,java.util.List,int,int,edu.stanford.nlp.dcoref.Dictionaries):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `tree.label()` could be null and is dereferenced at line 48.","tnFile":"src/edu/stanford/nlp/trees/tregex/tsurgeon/AdjoinNode.java","tnLine":48,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.tregex.tsurgeon.AdjoinNode$Matcher.evaluate(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.tregex.TregexMatcher):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `annotation.get(edu.stanford.nlp.ling.CoreAnnotations$MentionsAnnotation)` could be null and is dereferenced at line 207.","tnFile":"src/edu/stanford/nlp/pipeline/QuoteAttributionAnnotator.java","tnLine":207,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.QuoteAttributionAnnotator.entityMentionsToCharacterMap(edu.stanford.nlp.pipeline.Annotation):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `value()` could be null and is dereferenced at line 104.","tnFile":"src/edu/stanford/nlp/ling/ValueLabel.java","tnLine":104,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ling.ValueLabel.compareTo(edu.stanford.nlp.ling.ValueLabel):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void FilePanel.setTreeReaderFactory(TreeReaderFactory)` indirectly writes to field `gui.FileTreeModel.trf` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/trees/tregex/gui/FilePanel.java","tnLine":105,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.tregex.gui.FilePanel.setTreeReaderFactory(edu.stanford.nlp.trees.TreeReaderFactory):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 918 is not released after line 920.","tnFile":"src/edu/stanford/nlp/util/FileBackedCache.java","tnLine":920,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.util.FileBackedCache.newOutputStream(java.io.File,boolean):edu.stanford.nlp.util.Pair","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Dataset.add(Collection,Object,boolean)` indirectly writes to field `this.data` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/classify/Dataset.java","tnLine":305,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.Dataset.add(java.util.Collection,java.lang.Object,boolean):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileReader` acquired by call to `new()` at line 789 is not released after line 793.\n**Note**: potential exception at line 790","tnFile":"src/edu/stanford/nlp/trees/tregex/gui/TregexGUI.java","tnLine":793,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.tregex.gui.TregexGUI$7.run():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Document Document.runNatlog(Properties)` reads with synchronization from `this.sentences`. Potentially races with unsynchronized write in method `Document.forceSentences(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/simple/Document.java","tnLine":943,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.simple.Document.runNatlog(java.util.Properties):edu.stanford.nlp.simple.Document","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired to `devPW` by call to `new()` at line 278 is not released after line 291.\n**Note**: potential exception at line 287","tnFile":"src/edu/stanford/nlp/trees/Treebank.java","tnLine":291,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.Treebank.decimate(java.io.Writer,java.io.Writer,java.io.Writer):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `matched` last assigned on line 777 could be null and is dereferenced at line 778.","tnFile":"src/edu/stanford/nlp/ie/NumberNormalizer.java","tnLine":778,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.NumberNormalizer.findNumberRanges(edu.stanford.nlp.util.CoreMap):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `annotation.get(edu.stanford.nlp.ling.CoreAnnotations$TokensAnnotation)` could be null and is dereferenced at line 187.","tnFile":"src/edu/stanford/nlp/pipeline/QuoteAnnotator.java","tnLine":187,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.QuoteAnnotator.xmlFreeText(java.lang.String,edu.stanford.nlp.pipeline.Annotation):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `leaf.label()` could be null and is dereferenced at line 409.","tnFile":"src/edu/stanford/nlp/trees/international/spanish/SpanishXMLTreeReader.java","tnLine":409,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.international.spanish.SpanishXMLTreeReader.toString(edu.stanford.nlp.trees.Tree,boolean):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `before.get(edu.stanford.nlp.ling.CoreAnnotations$NamedEntityTagAnnotation)` could be null and is dereferenced at line 1535.","tnFile":"src/edu/stanford/nlp/ie/QuantifiableEntityNormalizer.java","tnLine":1535,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.QuantifiableEntityNormalizer.applySpecializedNER(java.util.List):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `chunkTokens` last assigned on line 618 could be null and is dereferenced at line 626.","tnFile":"src/edu/stanford/nlp/pipeline/ChunkAnnotationUtils.java","tnLine":626,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.ChunkAnnotationUtils.annotateChunkTokens(edu.stanford.nlp.pipeline.Annotation,java.lang.Class,java.lang.Class):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `nodeLabel` last assigned on line 1125 could be null and is dereferenced at line 1148.","tnFile":"src/edu/stanford/nlp/trees/Tree.java","tnLine":1148,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.Tree.percolateHeads(edu.stanford.nlp.trees.CollinsHeadFinder):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `tagNode.label()` could be null and is dereferenced at line 1865.","tnFile":"src/edu/stanford/nlp/parser/lexparser/ExhaustivePCFGParser.java","tnLine":1865,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.ExhaustivePCFGParser.getTree(edu.stanford.nlp.parser.lexparser.ExhaustivePCFGParser$Vertex,int,int):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `label` last assigned on line 80 could be null and is dereferenced at line 81.","tnFile":"src/edu/stanford/nlp/parser/lexparser/CNFTransformers.java","tnLine":81,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.CNFTransformers$FromCNFTransformer.transformTree(edu.stanford.nlp.trees.Tree):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `new()` at line 43 is not released after line 47.\n**Note**: potential exception at line 45","tnFile":"src/edu/stanford/nlp/semgraph/semgrex/SemgrexBatchParser.java","tnLine":47,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.semgraph.semgrex.SemgrexBatchParser.compileStream(java.io.InputStream,edu.stanford.nlp.semgraph.semgrex.Env):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 1509 is not released after line 1511.","tnFile":"src/edu/stanford/nlp/io/IOUtils.java","tnLine":1511,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.io.IOUtils.getFileOutputStream(java.lang.String,boolean):java.io.OutputStream","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `lt.label()` could be null and is dereferenced at line 41.","tnFile":"src/edu/stanford/nlp/parser/lexparser/BinaryGrammarExtractor.java","tnLine":41,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.BinaryGrammarExtractor.tallyInternalNode(edu.stanford.nlp.trees.Tree,double):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileReader` acquired by call to `new()` at line 232 is not released after line 321.\n**Note**: potential exception at line 238","tnFile":"src/edu/stanford/nlp/misc/DependencyAnalyzer.java","tnLine":321,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.misc.DependencyAnalyzer.<init>(java.lang.String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 2425 is not released after line 2425.","tnFile":"src/edu/stanford/nlp/ie/crf/CRFClassifier.java","tnLine":2425,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.crf.CRFClassifier.serializeTextClassifier(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileReader` acquired by call to `new()` at line 41 is not released after line 46.\n**Note**: potential exception at line 43","tnFile":"src/edu/stanford/nlp/process/StopList.java","tnLine":46,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.process.StopList.<init>(java.io.File)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.util.zip.ZipFile` acquired to `zin` by call to `ZipFile(...)` at line 219 is not released after line 237.\n**Note**: potential exception at line 227","tnFile":"src/edu/stanford/nlp/parser/lexparser/LexicalizedParser.java","tnLine":237,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.LexicalizedParser.loadModelFromZip(java.lang.String,java.lang.String):edu.stanford.nlp.parser.lexparser.LexicalizedParser","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `double[] Dataset.getInformationGains()` reads without synchronization from `this.data`. Potentially races with write in method `Dataset.ensureSize()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/classify/Dataset.java","tnLine":645,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.Dataset.getInformationGains():double[]","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `textElem` last assigned on line 260 could be null and is dereferenced at line 269.","tnFile":"src/edu/stanford/nlp/time/GUTimeAnnotator.java","tnLine":269,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.time.GUTimeAnnotator.toTimexCoreMaps(org.w3c.dom.Element,edu.stanford.nlp.util.CoreMap):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `label()` could be null and is dereferenced at line 1714.","tnFile":"src/edu/stanford/nlp/trees/Tree.java","tnLine":1714,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.Tree.flatten(edu.stanford.nlp.trees.TreeFactory):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired to `testPW` by call to `new()` at line 279 is not released after line 291.\n**Note**: potential exception at line 287","tnFile":"src/edu/stanford/nlp/trees/Treebank.java","tnLine":291,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.Treebank.decimate(java.io.Writer,java.io.Writer,java.io.Writer):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedWriter` acquired to `out` by call to `new()` at line 764 is not released after line 769.\n**Note**: potential exception at line 766","tnFile":"src/edu/stanford/nlp/trees/tregex/gui/TregexGUI.java","tnLine":769,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.tregex.gui.TregexGUI$6.run():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `head.label()` could be null and is dereferenced at line 491.","tnFile":"src/edu/stanford/nlp/dcoref/RuleBasedCorefMentionFinder.java","tnLine":491,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.dcoref.RuleBasedCorefMentionFinder.safeHead(edu.stanford.nlp.trees.Tree,int):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.label()` could be null and is dereferenced at line 52.","tnFile":"src/edu/stanford/nlp/trees/TreeFunctions.java","tnLine":52,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.TreeFunctions$LabeledTreeToStringLabeledTreeFunction.helper(edu.stanford.nlp.trees.Tree):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void WeightedDataset.ensureSize()` indirectly writes to field `this.data` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/classify/WeightedDataset.java","tnLine":74,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.WeightedDataset.ensureSize():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.label()` could be null and is dereferenced at line 322.","tnFile":"src/edu/stanford/nlp/trees/NPTmpRetainingTreeNormalizer.java","tnLine":322,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.NPTmpRetainingTreeNormalizer.lambda$normalizeWholeTree$1(edu.stanford.nlp.trees.Tree):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.getLeaves().get(0).label()` could be null and is dereferenced at line 445.","tnFile":"src/edu/stanford/nlp/dcoref/Mention.java","tnLine":445,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.dcoref.Mention.isListLike():boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.getChild(headLoc).label()` could be null and is dereferenced at line 140.","tnFile":"src/edu/stanford/nlp/parser/lexparser/TreeBinarizer.java","tnLine":140,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.TreeBinarizer.markovOutsideBinarizeLocalTree(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.ling.TaggedWord,int,java.lang.String,java.util.LinkedList,boolean):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `int Document.hashCode()` indirectly writes to field `this.impl.text_` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/simple/Document.java","tnLine":1144,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.simple.Document.hashCode():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `l` last assigned on line 842 could be null and is dereferenced at line 845.","tnFile":"src/edu/stanford/nlp/trees/Trees.java","tnLine":845,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.Trees.convertToCoreLabels(edu.stanford.nlp.trees.Tree):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `InputStreamReader(...)` at line 56 is not released after line 78.\n**Note**: potential exception at line 60","tnFile":"src/edu/stanford/nlp/parser/lexparser/ChineseSimWordAvgDepGrammar.java","tnLine":78,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.ChineseSimWordAvgDepGrammar.getMap(java.lang.String):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `tree.label()` could be null and is dereferenced at line 37.","tnFile":"src/edu/stanford/nlp/trees/tregex/tsurgeon/AdjoinToFootNode.java","tnLine":37,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.tregex.tsurgeon.AdjoinToFootNode$Matcher.evaluate(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.tregex.TregexMatcher):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int Sentence.hashCode()` indirectly reads without synchronization from `this.impl.basicDependencies_`. Potentially races with write in method `Sentence.updateDependencies(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/simple/Sentence.java","tnLine":1254,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.simple.Sentence.hashCode():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `sents` last assigned on line 109 could be null and is dereferenced at line 111.","tnFile":"src/edu/stanford/nlp/ie/machinereading/BasicEntityExtractor.java","tnLine":111,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.machinereading.BasicEntityExtractor.annotate(edu.stanford.nlp.pipeline.Annotation):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.util.zip.GZIPInputStream` acquired by call to `GZIPInputStream(...)` at line 58 is not released after line 58.","tnFile":"src/edu/stanford/nlp/pipeline/GenericAnnotationSerializer.java","tnLine":58,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.GenericAnnotationSerializer.read(java.io.InputStream):edu.stanford.nlp.util.Pair","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `yield` last assigned on line 194 could be null and is dereferenced at line 195.","tnFile":"src/edu/stanford/nlp/parser/lexparser/SpanishTreebankParserParams.java","tnLine":195,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.SpanishTreebankParserParams$MarkPrefixFunction.apply(edu.stanford.nlp.trees.tregex.TregexMatcher):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `getBufferedFileReader(...)` at line 1596 is not released after line 1613.\n**Note**: potential exception at line 1599","tnFile":"src/edu/stanford/nlp/io/IOUtils.java","tnLine":1613,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.io.IOUtils.readColumnSet(java.lang.String,int):java.util.Set","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.apache.lucene.index.IndexWriter` acquired to `edu.stanford.nlp.patterns.surface.PatternsForEachTokenLucene.indexWriter` by call to `setIndexWriter()` at line 124 is not released after line 128.","tnFile":"src/edu/stanford/nlp/patterns/surface/PatternsForEachTokenLucene.java","tnLine":128,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.patterns.surface.PatternsForEachTokenLucene.addPatterns(java.util.Map):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `InputStreamReader(...)` at line 346 is not released after line 362.","tnFile":"src/edu/stanford/nlp/trees/international/french/FrenchXMLTreeReader.java","tnLine":362,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.international.french.FrenchXMLTreeReader.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `new()` at line 29 is not released after line 29.","tnFile":"src/edu/stanford/nlp/pipeline/AbstractTextAnnotationCreator.java","tnLine":29,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.AbstractTextAnnotationCreator.create(java.io.InputStream):edu.stanford.nlp.pipeline.Annotation","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `sentences` last assigned on line 421 could be null and is dereferenced at line 422.","tnFile":"src/edu/stanford/nlp/simple/Document.java","tnLine":422,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.simple.Document.<init>(java.util.Properties,edu.stanford.nlp.pipeline.Annotation)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `edu.stanford.nlp.trees.PennTreeReader` acquired by call to `PennTreeReader(...)` at line 160 is not released after line 160.","tnFile":"src/edu/stanford/nlp/trees/TreeFunctions.java","tnLine":160,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.TreeFunctions.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `lab` last assigned on line 112 could be null and is dereferenced at line 118.","tnFile":"src/edu/stanford/nlp/parser/lexparser/AbstractTreebankParserParams.java","tnLine":118,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.AbstractTreebankParserParams$RemoveGFSubcategoryStripper.transformTree(edu.stanford.nlp.trees.Tree):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `Morphology()` at line 1846 is not released after line 1848.","tnFile":"src/edu/stanford/nlp/tagger/maxent/MaxentTagger.java","tnLine":1848,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.tagger.maxent.MaxentTagger.tagCoreLabelsOrHasWords(java.util.List,edu.stanford.nlp.process.Morphology,boolean):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `iterator()` at line 169 is not released after line 181.","tnFile":"src/edu/stanford/nlp/trees/MemoryTreebank.java","tnLine":181,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.MemoryTreebank.readSRLFile(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired by call to `new()` at line 733 is not released after line 737.","tnFile":"src/edu/stanford/nlp/classify/Dataset.java","tnLine":737,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.Dataset.toSummaryString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `tree.label()` could be null and is dereferenced at line 60.","tnFile":"src/edu/stanford/nlp/trees/international/pennchinese/CharacterLevelTagExtender.java","tnLine":60,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.international.pennchinese.CharacterLevelTagExtender.transformTree(edu.stanford.nlp.trees.Tree):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `word` last assigned on line 939 could be null and is dereferenced at line 942.","tnFile":"src/edu/stanford/nlp/trees/international/spanish/SpanishTreeNormalizer.java","tnLine":942,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.international.spanish.SpanishTreeNormalizer.expandConmigo(edu.stanford.nlp.trees.Tree):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `SystemUtils$WriterThread(...)` at line 85 is not released after line 89.","tnFile":"src/edu/stanford/nlp/util/SystemUtils.java","tnLine":89,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.util.SystemUtils.consume(java.lang.Process,java.io.Writer,java.io.Writer):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired to `guessDepPw` by call to `new()` at line 278 is not released after line 313.\n**Note**: potential exception at line 279","tnFile":"src/edu/stanford/nlp/parser/metrics/Evalb.java","tnLine":313,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.metrics.Evalb.emitSortedTrees(java.util.PriorityQueue,int,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `rawWord` last assigned on line 136 could be null and is dereferenced at line 141.","tnFile":"src/edu/stanford/nlp/international/arabic/pipeline/ATBArabicDataset.java","tnLine":141,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.international.arabic.pipeline.ATBArabicDataset$ArabicRawTreeNormalizer.processPreterminal(edu.stanford.nlp.trees.Tree):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.label()` could be null and is dereferenced at line 500.","tnFile":"src/edu/stanford/nlp/parser/lexparser/TreeBinarizer.java","tnLine":500,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.TreeBinarizer.transformTree(edu.stanford.nlp.trees.Tree):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `subtree.label()` could be null and is dereferenced at line 587.","tnFile":"src/edu/stanford/nlp/coref/statistical/FeatureExtractor.java","tnLine":587,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.coref.statistical.FeatureExtractor.numEmbeddedNps(edu.stanford.nlp.trees.Tree):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `coreLabel.get(positiveClass)` could be null and is dereferenced at line 510.","tnFile":"src/edu/stanford/nlp/patterns/ScorePhrasesLearnFeatWt.java","tnLine":510,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.patterns.ScorePhrasesLearnFeatWt.lambda$chooseUnknownPhrases$1(java.lang.Class,java.lang.String,edu.stanford.nlp.ling.CoreLabel):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `RecordIterator(...)` at line 263 is not released after line 263.","tnFile":"src/edu/stanford/nlp/stats/DataSeries.java","tnLine":263,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.stats.DataSeries$ListDataSeries.readDataSeries(java.io.InputStream):edu.stanford.nlp.stats.DataSeries[]","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `tree` last assigned on line 215 could be null and is dereferenced at line 222.","tnFile":"src/edu/stanford/nlp/trees/international/spanish/SpanishTreeNormalizer.java","tnLine":222,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.international.spanish.SpanishTreeNormalizer.normalizeWholeTree(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.TreeFactory):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Map Document.coref(Properties)` indirectly reads with synchronization from `this.sentences`. Potentially races with unsynchronized write in method `Document.forceSentences(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/simple/Document.java","tnLine":714,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.simple.Document.coref(java.util.Properties):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `doc.get(edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation)` could be null and is dereferenced at line 120.","tnFile":"src/edu/stanford/nlp/pipeline/RelationExtractorAnnotator.java","tnLine":120,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.RelationExtractorAnnotator.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void AbstractSequenceClassifier.reinit()` writes to field `this.defaultReaderAndWriter` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/ie/AbstractSequenceClassifier.java","tnLine":213,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.AbstractSequenceClassifier.reinit():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired to `w` by call to `new()` at line 140 is not released after line 145.\n**Note**: potential exception at line 143","tnFile":"src/edu/stanford/nlp/parser/lexparser/GrammarCompactor.java","tnLine":145,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.GrammarCompactor.writeFile(edu.stanford.nlp.fsm.TransducerGraph,java.lang.String,java.lang.String):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `label.get(edu.stanford.nlp.trees.TreeCoreAnnotations$HeadTagLabelAnnotation)` could be null and is dereferenced at line 43.","tnFile":"src/edu/stanford/nlp/parser/shiftreduce/FeatureFactory.java","tnLine":43,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.shiftreduce.FeatureFactory.getFeatureFromCoreLabel(edu.stanford.nlp.ling.CoreLabel,edu.stanford.nlp.parser.shiftreduce.FeatureFactory$FeatureComponent):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.OutputStreamWriter` acquired by call to `OutputStreamWriter(...)` at line 180 is not released after line 189.","tnFile":"src/edu/stanford/nlp/parser/server/LexicalizedParserServer.java","tnLine":189,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.server.LexicalizedParserServer.handleTokenize(java.lang.String,java.io.OutputStream):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `readerFromString(...)` at line 42 is not released after line 50.\n**Note**: potential exception at line 45","tnFile":"src/edu/stanford/nlp/wordseg/AffixDictionary.java","tnLine":50,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.wordseg.AffixDictionary.readDict(java.lang.String):java.util.Set","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.label()` could be null and is dereferenced at line 350.","tnFile":"src/edu/stanford/nlp/trees/NPTmpRetainingTreeNormalizer.java","tnLine":350,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.NPTmpRetainingTreeNormalizer.lambda$normalizeWholeTree$1(edu.stanford.nlp.trees.Tree):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `edu.stanford.nlp.io.StringOutputStream` acquired by call to `new()` at line 33 is not released after line 35.","tnFile":"src/edu/stanford/nlp/time/XMLUtils.java","tnLine":35,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.time.XMLUtils.documentToString(org.w3c.dom.Document):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `head.parent(root)` could be null and is dereferenced at line 508.","tnFile":"src/edu/stanford/nlp/parser/lexparser/AbstractTreebankParserParams.java","tnLine":508,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.AbstractTreebankParserParams$UnorderedTypedDependencyTyper.makeDependency(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.Tree):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `m.sentenceWords.get(m.headIndex).get(edu.stanford.nlp.ling.CoreAnnotations$PartOfSpeechAnnotation)` could be null and is dereferenced at line 562.","tnFile":"src/edu/stanford/nlp/coref/CorefRules.java","tnLine":562,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.coref.CorefRules.entitySameProperHeadLastWord(edu.stanford.nlp.coref.data.Mention,edu.stanford.nlp.coref.data.Mention):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired by call to `getPrintWriter(...)` at line 406 is not released after line 465.\n**Note**: potential exception at line 408","tnFile":"src/edu/stanford/nlp/parser/nndep/DependencyParser.java","tnLine":465,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.nndep.DependencyParser.writeModelFile(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `counter.tempMInteger` last assigned on line 247 could be null and is dereferenced by call to `incrementCount(...)` at line 251.","tnFile":"src/edu/stanford/nlp/pipeline/CoreMapAttributeAggregator.java","tnLine":251,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.CoreMapAttributeAggregator$MostFreqAggregator.aggregate(java.lang.Class,java.util.List):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `readerFromString(...)` at line 76 is not released after line 76.","tnFile":"src/edu/stanford/nlp/trees/ud/UniversalEnhancer.java","tnLine":76,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.ud.UniversalEnhancer.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `Mention.headWord.get(edu.stanford.nlp.ling.CoreAnnotations$PartOfSpeechAnnotation)` could be null and is dereferenced at line 501.","tnFile":"src/edu/stanford/nlp/dcoref/Mention.java","tnLine":501,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.dcoref.Mention.setType(edu.stanford.nlp.dcoref.Dictionaries):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `ann.get(edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation)` could be null and is dereferenced at line 102.","tnFile":"src/edu/stanford/nlp/pipeline/CorefMentionAnnotator.java","tnLine":102,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.CorefMentionAnnotator.synchCorefMentionEntityMention(edu.stanford.nlp.pipeline.Annotation,edu.stanford.nlp.coref.data.Mention,edu.stanford.nlp.util.CoreMap):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Dataset.add(Collection,Object,boolean)` indirectly reads without synchronization from `this.labels`. Potentially races with write in method `Dataset.ensureSize()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/classify/Dataset.java","tnLine":306,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.Dataset.add(java.util.Collection,java.lang.Object,boolean):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 52 is not released after line 52.","tnFile":"src/edu/stanford/nlp/international/arabic/pipeline/TaggedArabicDataset.java","tnLine":52,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.international.arabic.pipeline.TaggedArabicDataset.build():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired by call to `new()` at line 53 is not released after line 291.\n**Note**: potential exception at line 56","tnFile":"src/edu/stanford/nlp/pipeline/JSONOutputter.java","tnLine":291,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.JSONOutputter.print(edu.stanford.nlp.pipeline.Annotation,java.io.OutputStream,edu.stanford.nlp.pipeline.AnnotationOutputter$Options):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `tree.label()` could be null and is dereferenced at line 32.","tnFile":"src/edu/stanford/nlp/trees/tregex/tsurgeon/HoldTreeNode.java","tnLine":32,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.tregex.tsurgeon.HoldTreeNode$Matcher.evaluate(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.tregex.TregexMatcher):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `itemInterval` last assigned on line 823 could be null and is dereferenced at line 824.","tnFile":"src/edu/stanford/nlp/util/IntervalTree.java","tnLine":824,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.util.IntervalTree.getNonOverlappingMaxScore(java.util.ArrayList,java.util.function.Function,java.util.function.ToDoubleFunction):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `lowestNP.label()` could be null and is dereferenced at line 978.","tnFile":"src/edu/stanford/nlp/dcoref/Mention.java","tnLine":978,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.dcoref.Mention.lowestNPIncludesHead():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `words.get(label)` could be null and is dereferenced at line 1224.","tnFile":"src/edu/stanford/nlp/patterns/ConstantsAndVariables.java","tnLine":1224,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.patterns.ConstantsAndVariables.getSetWordsAsJson(java.util.Map):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `annotation.get(edu.stanford.nlp.ling.CoreAnnotations$TokensAnnotation)` could be null and is dereferenced at line 263.","tnFile":"src/edu/stanford/nlp/pipeline/QuoteAttributionAnnotator.java","tnLine":263,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.QuoteAttributionAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.OutputStreamWriter` acquired to `osw` by call to `OutputStreamWriter(...)` at line 180 is not released after line 190.\n**Note**: potential exception at line 188","tnFile":"src/edu/stanford/nlp/parser/server/LexicalizedParserServer.java","tnLine":190,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.server.LexicalizedParserServer.handleTokenize(java.lang.String,java.io.OutputStream):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `new()` at line 198 is not released after line 203.","tnFile":"src/edu/stanford/nlp/stats/SimpleGoodTuring.java","tnLine":203,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.stats.SimpleGoodTuring.readInput():int[][]","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Pair RVFDataset.split(int,int)` indirectly reads without synchronization from `this.size`. Potentially races with write in method `RVFDataset.readSVMLightFormat(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/classify/RVFDataset.java","tnLine":325,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.RVFDataset.split(int,int):edu.stanford.nlp.util.Pair","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `leaf.label()` could be null and is dereferenced at line 455.","tnFile":"src/edu/stanford/nlp/sentiment/SentimentModel.java","tnLine":455,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.sentiment.SentimentModel.initRandomWordVectors(java.util.List):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void WeightedDataset.setWeight(int,float)` reads without synchronization from `this.weights`. Potentially races with write in method `WeightedDataset.ensureSize()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/classify/WeightedDataset.java","tnLine":97,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.WeightedDataset.setWeight(int,float):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `dataset.get(edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation)` could be null and is dereferenced at line 44.","tnFile":"src/edu/stanford/nlp/ie/machinereading/ExtractorMerger.java","tnLine":44,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.machinereading.ExtractorMerger.annotate(edu.stanford.nlp.pipeline.Annotation):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 100 is not released after line 102.","tnFile":"src/edu/stanford/nlp/international/spanish/pipeline/AnCoraPOSStats.java","tnLine":102,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.international.spanish.pipeline.AnCoraPOSStats.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `rightChild.label()` could be null and is dereferenced at line 471.","tnFile":"src/edu/stanford/nlp/parser/lexparser/TreeBinarizer.java","tnLine":471,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.TreeBinarizer.outsideBinarizeLocalTree(edu.stanford.nlp.trees.Tree,java.lang.String,java.lang.String,int,edu.stanford.nlp.ling.TaggedWord,int,java.lang.String,int,java.lang.String):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `tree.prune(edu.stanford.nlp.trees.international.spanish.SpanishTreeNormalizer.emptyFilter).spliceOut(BobChrisTreeNormalizer.aOverAFilter)` could be null and is dereferenced at line 209.","tnFile":"src/edu/stanford/nlp/trees/international/spanish/SpanishTreeNormalizer.java","tnLine":209,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.international.spanish.SpanishTreeNormalizer.normalizeWholeTree(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.TreeFactory):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.util.zip.GZIPInputStream` acquired by call to `getStream()` at line 794 is not released after line 801.","tnFile":"src/edu/stanford/nlp/io/IOUtils.java","tnLine":801,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.io.IOUtils$GetLinesIterable$1.getReader():java.io.BufferedReader","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.net.HttpURLConnection` acquired by call to `openConnection()` at line 533 is not released after line 543.","tnFile":"src/edu/stanford/nlp/pipeline/StanfordCoreNLPClient.java","tnLine":543,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.StanfordCoreNLPClient.checkStatus(java.net.URL):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 92 is not released after line 92.","tnFile":"src/edu/stanford/nlp/international/french/pipeline/FTBDataset.java","tnLine":92,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.international.french.pipeline.FTBDataset.build():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `iterator()` at line 346 is not released after line 351.","tnFile":"src/edu/stanford/nlp/objectbank/ObjectBank.java","tnLine":351,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.objectbank.ObjectBank.toArray(java.lang.Object[]):java.lang.Object[]","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `Mention.headWord.get(edu.stanford.nlp.ling.CoreAnnotations$TextAnnotation)` could be null and is dereferenced at line 287.","tnFile":"src/edu/stanford/nlp/dcoref/Mention.java","tnLine":287,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.dcoref.Mention.getGender(edu.stanford.nlp.dcoref.Dictionaries,java.util.List):edu.stanford.nlp.dcoref.Dictionaries$Gender","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired by call to `new()` at line 1997 is not released after line 2000.\n**Note**: potential exception at line 1998","tnFile":"src/edu/stanford/nlp/stats/Counters.java","tnLine":2000,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.stats.Counters.deserializeCounter(java.lang.String):edu.stanford.nlp.stats.ClassicCounter","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.label()` could be null and is dereferenced at line 347.","tnFile":"src/edu/stanford/nlp/parser/lexparser/NegraPennTreebankParserParams.java","tnLine":347,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.NegraPennTreebankParserParams.leftPhrasal(edu.stanford.nlp.trees.Tree):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 275 is not released after line 275.","tnFile":"src/edu/stanford/nlp/parser/metrics/Evalb.java","tnLine":275,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.metrics.Evalb.emitSortedTrees(java.util.PriorityQueue,int,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `GrammaticalRelation EnglishGrammaticalRelations.getConj(String)` reads without synchronization from container `trees.EnglishGrammaticalRelations.conjs` via call to `get`. Potentially races with write in method `EnglishGrammaticalRelations.getConj(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/trees/EnglishGrammaticalRelations.java","tnLine":1648,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.EnglishGrammaticalRelations.getConj(java.lang.String):edu.stanford.nlp.trees.GrammaticalRelation","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `l.get(edu.stanford.nlp.ling.CoreAnnotations$TextAnnotation)` could be null and is dereferenced at line 282.","tnFile":"src/edu/stanford/nlp/coref/data/Mention.java","tnLine":282,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.coref.data.Mention.getMentionString():java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `proto.getType()` could be null and is dereferenced by call to `RelationMention(...)` at line 2504.","tnFile":"src/edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer.java","tnLine":2504,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.ProtobufAnnotationSerializer.fromProto(edu.stanford.nlp.pipeline.CoreNLPProtos$Relation,edu.stanford.nlp.util.CoreMap):edu.stanford.nlp.ie.machinereading.structure.RelationMention","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.util.zip.GZIPInputStream` acquired by call to `GZIPInputStream(...)` at line 225 is not released after line 237.\n**Note**: potential exception at line 227","tnFile":"src/edu/stanford/nlp/parser/lexparser/LexicalizedParser.java","tnLine":237,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.LexicalizedParser.loadModelFromZip(java.lang.String,java.lang.String):edu.stanford.nlp.parser.lexparser.LexicalizedParser","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `tree.label()` could be null and is dereferenced at line 75.","tnFile":"src/edu/stanford/nlp/trees/tregex/tsurgeon/CreateSubtreeNode.java","tnLine":75,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.tregex.tsurgeon.CreateSubtreeNode$Matcher.evaluate(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.tregex.TregexMatcher):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `ne` last assigned on line 292 could be null and is dereferenced at line 293.","tnFile":"src/edu/stanford/nlp/ie/machinereading/BasicEntityExtractor.java","tnLine":293,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.machinereading.BasicEntityExtractor.makeAnnotationFromAllNERTags(edu.stanford.nlp.util.CoreMap):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileReader` acquired to `return` by call to `RecordIterator(...)` at line 188 is not released after line 189.","tnFile":"src/edu/stanford/nlp/io/RecordIterator.java","tnLine":189,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.io.RecordIterator.firstRecord(java.lang.String,java.lang.String):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.util.Formatter` acquired by call to `new()` at line 1273 is not released after line 1273.","tnFile":"src/edu/stanford/nlp/util/logging/Redwood.java","tnLine":1273,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.util.logging.Redwood$RedwoodChannels.lambda$errf$5(java.lang.String,java.lang.Object[]):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `initStaticLexer()` at line 183 is not released after line 184.","tnFile":"src/edu/stanford/nlp/process/Morphology.java","tnLine":184,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.process.Morphology.stemStatic(java.lang.String,java.lang.String):edu.stanford.nlp.ling.WordTag","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `pos` last assigned on line 963 could be null and is dereferenced at line 964.","tnFile":"src/edu/stanford/nlp/dcoref/Mention.java","tnLine":964,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.dcoref.Mention.longestNNPEndsWithHead():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.value()` could be null and is dereferenced at line 92.","tnFile":"src/edu/stanford/nlp/trees/CollinsDependency.java","tnLine":92,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.CollinsDependency.extractFromTree(edu.stanford.nlp.trees.Tree,java.lang.String,edu.stanford.nlp.trees.HeadFinder,boolean):java.util.Set","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `doc.annotation.get(edu.stanford.nlp.ling.CoreAnnotations$TokensAnnotation)` could be null and is dereferenced at line 461.","tnFile":"src/edu/stanford/nlp/coref/data/DocumentPreprocessor.java","tnLine":461,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.coref.data.DocumentPreprocessor.processDiscourse(edu.stanford.nlp.coref.data.Document,edu.stanford.nlp.coref.data.Dictionaries):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileInputStream` acquired by call to `FileInputStream(...)` at line 114 is not released after line 114.","tnFile":"src/edu/stanford/nlp/classify/MultinomialLogisticClassifier.java","tnLine":114,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.MultinomialLogisticClassifier.load(java.lang.String):edu.stanford.nlp.classify.MultinomialLogisticClassifier","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `l` last assigned on line 117 could be null and is dereferenced at line 118.","tnFile":"src/edu/stanford/nlp/dcoref/MentionExtractor.java","tnLine":118,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.dcoref.MentionExtractor.getHeadIndex(edu.stanford.nlp.trees.Tree):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean Lazy.isGarbageCollected()` reads without synchronization from `this.implOrNullCache`. Potentially races with write in method `Lazy.get()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/util/Lazy.java","tnLine":73,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.util.Lazy.isGarbageCollected():boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `ann.get(edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation)` could be null and is dereferenced at line 649.","tnFile":"src/edu/stanford/nlp/naturalli/OpenIE.java","tnLine":649,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.naturalli.OpenIE.processDocument(edu.stanford.nlp.pipeline.AnnotationPipeline,java.lang.String,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `edu.stanford.nlp.io.StringOutputStream` acquired to `errSos` by call to `new()` at line 24 is not released after line 43.\n**Note**: potential exception at line 28","tnFile":"src/edu/stanford/nlp/coref/CorefScorer.java","tnLine":43,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.coref.CorefScorer.getEvalSummary(java.lang.String,java.lang.String,java.lang.String):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void WebServiceAnnotator.ensureServer()` reads without synchronization from `this.everLive`. Potentially races with write in method `WebServiceAnnotator.annotate(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/pipeline/WebServiceAnnotator.java","tnLine":259,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.WebServiceAnnotator.ensureServer():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `sentences` last assigned on line 74 could be null and is dereferenced at line 75.","tnFile":"src/edu/stanford/nlp/pipeline/RegexNERAnnotator.java","tnLine":75,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.RegexNERAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `doc.get(edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation)` could be null and is dereferenced at line 1135.","tnFile":"src/edu/stanford/nlp/pipeline/StanfordCoreNLPServer.java","tnLine":1135,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.StanfordCoreNLPServer$SemgrexHandler.lambda$null$5(boolean,edu.stanford.nlp.pipeline.Annotation,edu.stanford.nlp.semgraph.semgrex.SemgrexPattern,boolean,edu.stanford.nlp.pipeline.JSONOutputter$Writer):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `src.get(edu.stanford.nlp.ling.CoreAnnotations$CharacterOffsetBeginAnnotation)` could be null and is dereferenced at line 485.","tnFile":"src/edu/stanford/nlp/ie/regexp/NumberSequenceClassifier.java","tnLine":485,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.regexp.NumberSequenceClassifier.copyTokens(java.util.List,boolean,boolean):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 1990 is not released after line 1993.\n**Note**: potential exception at line 1991","tnFile":"src/edu/stanford/nlp/stats/Counters.java","tnLine":1993,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.stats.Counters.serializeCounter(edu.stanford.nlp.stats.Counter,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `testUpdateCache` last assigned on line 306 could be null and is dereferenced at line 461.","tnFile":"src/edu/stanford/nlp/optimization/SGDWithAdaGradAndFOBOS.java","tnLine":461,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.optimization.SGDWithAdaGradAndFOBOS.minimize(edu.stanford.nlp.optimization.DiffFunction,double,double[],int):double[]","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean Document.equals(Object)` indirectly reads without synchronization from `this.impl.bitField0_`. Potentially races with write in method `Document.sentences(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/simple/Document.java","tnLine":1135,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.simple.Document.equals(java.lang.Object):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 240 is not released after line 240.","tnFile":"src/edu/stanford/nlp/io/IOUtils.java","tnLine":240,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.io.IOUtils.writeStringToTempFileNoExceptions(java.lang.String,java.lang.String,java.lang.String):java.io.File","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `tree.label()` could be null and is dereferenced at line 1050.","tnFile":"src/edu/stanford/nlp/parser/lexparser/SplittingGrammarExtractor.java","tnLine":1050,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.SplittingGrammarExtractor.recountInside(edu.stanford.nlp.trees.Tree,boolean,int,java.util.IdentityHashMap):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `quotesMap.get(qKind)` could be null and is dereferenced at line 621.","tnFile":"src/edu/stanford/nlp/pipeline/QuoteAnnotator.java","tnLine":621,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.QuoteAnnotator.recursiveQuotes(java.lang.String,int,java.lang.String):edu.stanford.nlp.util.Pair","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileInputStream` acquired by call to `FileInputStream(...)` at line 192 is not released after line 192.","tnFile":"src/edu/stanford/nlp/tagger/maxent/Extractors.java","tnLine":192,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.tagger.maxent.Extractors.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired to `rf` by call to `getDataInputStream(...)` at line 258 is not released after line 270.\n**Note**: potential exception at line 259","tnFile":"src/edu/stanford/nlp/tagger/maxent/Dictionary.java","tnLine":270,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.tagger.maxent.Dictionary.read(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `trigrams.get(trigram)` could be null and is dereferenced at line 1526.","tnFile":"src/edu/stanford/nlp/trees/UniversalEnglishGrammaticalStructure.java","tnLine":1526,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.UniversalEnglishGrammaticalStructure.processMultiwordPreps(edu.stanford.nlp.semgraph.SemanticGraph):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Dataset.updateLabels(int[])` writes to field `this.labels` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/classify/Dataset.java","tnLine":723,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.Dataset.updateLabels(int[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `tree.label()` could be null and is dereferenced at line 283.","tnFile":"src/edu/stanford/nlp/parser/lexparser/SplittingGrammarExtractor.java","tnLine":283,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.SplittingGrammarExtractor.countOriginalStates(edu.stanford.nlp.trees.Tree):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Document Document.runDepparse(Properties)` reads with synchronization from `this.sentences`. Potentially races with unsynchronized write in method `Document.forceSentences(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/simple/Document.java","tnLine":919,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.simple.Document.runDepparse(java.util.Properties):edu.stanford.nlp.simple.Document","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `Sieve.doc.get(edu.stanford.nlp.ling.CoreAnnotations$TokensAnnotation)` could be null and is dereferenced at line 292.","tnFile":"src/edu/stanford/nlp/quoteattribution/Sieves/Sieve.java","tnLine":292,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.quoteattribution.Sieves.Sieve.tokenRangeToString(int):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `iterator()` at line 75 is not released after line 75.","tnFile":"src/edu/stanford/nlp/process/ChineseDocumentToSentenceProcessor.java","tnLine":75,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.process.ChineseDocumentToSentenceProcessor.<init>(java.lang.String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileInputStream` acquired by call to `FileInputStream(...)` at line 173 is not released after line 173.","tnFile":"src/edu/stanford/nlp/trees/international/pennchinese/ChineseEnglishWordMap.java","tnLine":173,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.international.pennchinese.ChineseEnglishWordMap.readCEDict(java.lang.String,java.lang.String,java.lang.String,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.net.Socket` acquired to `socket` by call to `new()` at line 94 is not released after line 102.\n**Note**: potential exception at line 97","tnFile":"src/edu/stanford/nlp/parser/server/LexicalizedParserClient.java","tnLine":102,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.server.LexicalizedParserClient.getDependencies(java.lang.String,java.lang.String):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `sentences` last assigned on line 46 could be null and is dereferenced at line 47.","tnFile":"src/edu/stanford/nlp/quoteattribution/QuoteAttributionUtils.java","tnLine":47,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.quoteattribution.QuoteAttributionUtils.getQuoteParagraphIndex(edu.stanford.nlp.pipeline.Annotation,edu.stanford.nlp.util.CoreMap):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Sentence.<init>(SentenceFragment)` indirectly reads without synchronization from `util.ArrayCoreMap.listener`. Potentially races with write in method `Sentence.parse(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/simple/Sentence.java","tnLine":263,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.simple.Sentence.<init>(edu.stanford.nlp.naturalli.SentenceFragment)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int Document.hashCode()` indirectly reads without synchronization from `this.impl.bitField0_`. Potentially races with write in method `Document.sentences(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/simple/Document.java","tnLine":1143,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.simple.Document.hashCode():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.OutputStreamWriter` acquired by call to `new()` at line 80 is not released after line 89.","tnFile":"src/edu/stanford/nlp/util/SystemUtils.java","tnLine":89,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.util.SystemUtils.consume(java.lang.Process,java.io.Writer,java.io.Writer):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `sent` last assigned on line 1038 could be null and is dereferenced at line 1039.","tnFile":"src/edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass.java","tnLine":1039,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.patterns.GetPatternsFromDataMultiClass$LabelWithSeedWords.call():edu.stanford.nlp.util.Pair","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `annotation.get(edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation)` could be null and is dereferenced at line 59.","tnFile":"src/edu/stanford/nlp/pipeline/CharniakParserAnnotator.java","tnLine":59,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.CharniakParserAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 278 is not released after line 278.","tnFile":"src/edu/stanford/nlp/parser/metrics/Evalb.java","tnLine":278,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.metrics.Evalb.emitSortedTrees(java.util.PriorityQueue,int,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `TextTaggedFileReader(...)` at line 111 is not released after line 111.\n**Note**: potential exception at line 111","tnFile":"src/edu/stanford/nlp/tagger/io/TaggedFileRecord.java","tnLine":111,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.tagger.io.TaggedFileRecord.reader():edu.stanford.nlp.tagger.io.TaggedFileReader","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Pair Dataset.split(int,int)` indirectly reads without synchronization from `this.size`. Potentially races with write in method `Dataset.add(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/classify/Dataset.java","tnLine":102,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.Dataset.split(int,int):edu.stanford.nlp.util.Pair","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `punc` last assigned on line 656 could be null and is dereferenced by call to `getPunctClass(...)` at line 657.","tnFile":"src/edu/stanford/nlp/parser/lexparser/AbstractTreebankParserParams.java","tnLine":657,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.AbstractTreebankParserParams$AnnotatePunctuationFunction.apply(edu.stanford.nlp.trees.tregex.TregexMatcher):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `doc.get(edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation)` could be null and is dereferenced at line 49.","tnFile":"src/edu/stanford/nlp/naturalli/OpenIEDemo.java","tnLine":49,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.naturalli.OpenIEDemo.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `tree` last assigned on line 123 could be null and is dereferenced at line 125.","tnFile":"src/edu/stanford/nlp/trees/international/arabic/ArabicTreeNormalizer.java","tnLine":125,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.international.arabic.ArabicTreeNormalizer.normalizeWholeTree(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.TreeFactory):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.OutputStreamWriter` acquired by call to `OutputStreamWriter(...)` at line 135 is not released after line 137.","tnFile":"src/edu/stanford/nlp/parser/server/LexicalizedParserClient.java","tnLine":137,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.server.LexicalizedParserClient.getTree(java.lang.String):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `readerFromString(...)` at line 248 is not released after line 248.","tnFile":"src/edu/stanford/nlp/sequences/CoNLLDocumentReaderAndWriter.java","tnLine":248,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.sequences.CoNLLDocumentReaderAndWriter.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RVFDatum Dataset.getRVFDatum(int)` reads without synchronization from `this.data`. Potentially races with write in method `Dataset.ensureSize()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/classify/Dataset.java","tnLine":394,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.Dataset.getRVFDatum(int):edu.stanford.nlp.ling.RVFDatum","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.lang.Process` acquired by call to `exec(...)` at line 201 is not released after line 210.","tnFile":"src/edu/stanford/nlp/util/SystemUtils.java","tnLine":210,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.util.SystemUtils.runShellCommand(java.lang.String[],java.io.File,java.lang.StringBuilder,java.lang.StringBuilder):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired by call to `new()` at line 935 is not released after line 935.\n**Note**: potential exception at line 935","tnFile":"src/edu/stanford/nlp/trees/Tree.java","tnLine":935,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.Tree.pennPrint(java.io.PrintStream):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired by call to `getInputStreamFromURLOrClasspathOrFileSystem(...)` at line 400 is not released after line 401.","tnFile":"src/edu/stanford/nlp/io/IOUtils.java","tnLine":401,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.io.IOUtils.readStreamFromString(java.lang.String):java.io.ObjectInputStream","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `kid.label()` could be null and is dereferenced at line 1965.","tnFile":"src/edu/stanford/nlp/parser/lexparser/EnglishTreebankParserParams.java","tnLine":1965,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.EnglishTreebankParserParams.ditrans(edu.stanford.nlp.trees.Tree):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 2425 is not released after line 2428.","tnFile":"src/edu/stanford/nlp/ie/crf/CRFClassifier.java","tnLine":2428,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.crf.CRFClassifier.serializeTextClassifier(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired by call to `transformXML(...)` at line 1509 is not released after line 1509.","tnFile":"src/edu/stanford/nlp/tagger/maxent/MaxentTagger.java","tnLine":1509,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.tagger.maxent.MaxentTagger.tagFromXML(java.io.Reader,java.io.Writer,java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `bd` last assigned on line 1771 could be null and is dereferenced at line 1774.","tnFile":"src/edu/stanford/nlp/time/SUTime.java","tnLine":1774,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.time.SUTime$CompositePartialTime.getDuration():edu.stanford.nlp.time.SUTime$Duration","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired by call to `new()` at line 656 is not released after line 659.","tnFile":"src/edu/stanford/nlp/trees/tregex/TregexPattern.java","tnLine":659,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.tregex.TregexPattern.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired to `pw` by call to `new()` at line 43 is not released after line 61.\n**Note**: potential exception at line 53","tnFile":"src/edu/stanford/nlp/tagger/maxent/documentation/TaggerDemo2.java","tnLine":61,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.tagger.maxent.documentation.TaggerDemo2.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `tc.tempMInteger` last assigned on line 184 could be null and is dereferenced by call to `setCount(...)` at line 186.","tnFile":"src/edu/stanford/nlp/stats/TwoDimensionalIntCounter.java","tnLine":186,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.stats.TwoDimensionalIntCounter.totalCounts():edu.stanford.nlp.stats.IntCounter","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `edu.stanford.nlp.io.ReaderInputStream` acquired by call to `new()` at line 42 is not released after line 42.","tnFile":"src/edu/stanford/nlp/pipeline/AbstractInputStreamAnnotationCreator.java","tnLine":42,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.AbstractInputStreamAnnotationCreator.create(java.io.Reader):edu.stanford.nlp.pipeline.Annotation","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Dataset.ensureSize()` reads with synchronization from `this.labels`. Potentially races with unsynchronized write in method `Dataset.ensureSize()`.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/classify/Dataset.java","tnLine":329,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.Dataset.ensureSize():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `l` last assigned on line 667 could be null and is dereferenced at line 670.","tnFile":"src/edu/stanford/nlp/coref/md/CorefMentionFinder.java","tnLine":670,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.coref.md.CorefMentionFinder.convertToCoreLabels(edu.stanford.nlp.trees.Tree):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `*children[headLoc].label()` could be null and is dereferenced at line 53.","tnFile":"src/edu/stanford/nlp/parser/lexparser/PathExtractor.java","tnLine":53,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.PathExtractor.tallyInternalNode(edu.stanford.nlp.trees.Tree,double):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `argmax(probs)` could be null and is dereferenced at line 100.","tnFile":"src/edu/stanford/nlp/coref/hybrid/sieve/RFSieve.java","tnLine":100,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.coref.hybrid.sieve.RFSieve.findCoreferentAntecedent(edu.stanford.nlp.coref.data.Mention,int,edu.stanford.nlp.coref.data.Document,edu.stanford.nlp.coref.data.Dictionaries,java.util.Properties,java.lang.StringBuilder):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `Document.annotation.get(edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation)` could be null and is dereferenced at line 638.","tnFile":"src/edu/stanford/nlp/dcoref/Document.java","tnLine":638,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.dcoref.Document.findSpeakers(edu.stanford.nlp.dcoref.Dictionaries):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Redwood.finishThread()` indirectly reads with synchronization from `logging.Redwood.isThreaded`. Potentially races with unsynchronized write in method `Redwood.endThreads(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/util/logging/Redwood.java","tnLine":449,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.util.logging.Redwood.finishThread():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `sentences` last assigned on line 451 could be null and is dereferenced at line 455.","tnFile":"src/edu/stanford/nlp/ie/machinereading/BasicEntityExtractor.java","tnLine":455,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.machinereading.BasicEntityExtractor.saveCoNLLFiles(java.lang.String,edu.stanford.nlp.pipeline.Annotation,boolean,boolean):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 92 is not released after line 93.","tnFile":"src/edu/stanford/nlp/ie/machinereading/BasicRelationExtractor.java","tnLine":93,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.machinereading.BasicRelationExtractor.save(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getJodaTimePeriod()` could be null and is dereferenced by call to `getMostSpecific(...)` at line 4279.","tnFile":"src/edu/stanford/nlp/time/SUTime.java","tnLine":4279,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.time.SUTime$DurationWithFields.getGranularity():edu.stanford.nlp.time.SUTime$Duration","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.value()` could be null and is dereferenced at line 194.","tnFile":"src/edu/stanford/nlp/international/arabic/pipeline/ATBArabicDataset.java","tnLine":194,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.international.arabic.pipeline.ATBArabicDataset$ArabicRawTreeNormalizer.visitTree(edu.stanford.nlp.trees.Tree):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.LineNumberReader` acquired by call to `new()` at line 138 is not released after line 187.","tnFile":"src/edu/stanford/nlp/trees/treebank/ConfigParser.java","tnLine":187,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.treebank.ConfigParser.parse():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int Sentence.hashCode()` indirectly reads without synchronization from `this.impl.bitField0_`. Potentially races with write in method `Sentence.updateSentiment(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/simple/Sentence.java","tnLine":1251,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.simple.Sentence.hashCode():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `kid.label()` could be null and is dereferenced at line 277.","tnFile":"src/edu/stanford/nlp/parser/lexparser/TueBaDZParserParams.java","tnLine":277,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.TueBaDZParserParams.childBasicCats(edu.stanford.nlp.trees.Tree):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `int Sentence.hashCode()` indirectly writes to field `this.impl.text_` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/simple/Sentence.java","tnLine":1252,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.simple.Sentence.hashCode():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.LineNumberReader` acquired by call to `new()` at line 90 is not released after line 112.\n**Note**: potential exception at line 97","tnFile":"src/edu/stanford/nlp/international/arabic/pipeline/UniversalPOSMapper.java","tnLine":112,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.international.arabic.pipeline.UniversalPOSMapper.loadUniversalMap(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileInputStream` acquired by call to `FileInputStream(...)` at line 554 is not released after line 574.\n**Note**: potential exception at line 558","tnFile":"src/edu/stanford/nlp/ie/machinereading/BasicEntityExtractor.java","tnLine":574,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.machinereading.BasicEntityExtractor.load(java.lang.String,java.lang.Class,boolean):edu.stanford.nlp.ie.machinereading.BasicEntityExtractor","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `tree.label()` could be null and is dereferenced at line 34.","tnFile":"src/edu/stanford/nlp/sentiment/ReadSentimentDataset.java","tnLine":34,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.sentiment.ReadSentimentDataset.lambda$static$0(edu.stanford.nlp.trees.Tree):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `anno.get(edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation)` could be null and is dereferenced at line 140.","tnFile":"src/edu/stanford/nlp/dcoref/Document.java","tnLine":140,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.dcoref.Document.<init>(edu.stanford.nlp.pipeline.Annotation,java.util.ArrayList,java.util.List,edu.stanford.nlp.dcoref.Dictionaries)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `sentence` last assigned on line 398 could be null and is dereferenced at line 399.","tnFile":"src/edu/stanford/nlp/naturalli/QuestionToStatementTranslator.java","tnLine":399,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.naturalli.QuestionToStatementTranslator.processWhNNIs(edu.stanford.nlp.ling.tokensregex.TokenSequenceMatcher):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired by call to `new()` at line 324 is not released after line 350.","tnFile":"src/edu/stanford/nlp/parser/lexparser/UnaryGrammar.java","tnLine":350,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.UnaryGrammar.writeAllData(java.io.Writer):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.lang.Process` acquired to `p` by call to `exec(...)` at line 201 is not released after line 203.\n**Note**: potential exception at line 204","tnFile":"src/edu/stanford/nlp/util/SystemUtils.java","tnLine":203,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.util.SystemUtils.runShellCommand(java.lang.String[],java.io.File,java.lang.StringBuilder,java.lang.StringBuilder):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `parentEntry` last assigned on line 123 could be null and is dereferenced by call to `compare(...)` at line 124.","tnFile":"src/edu/stanford/nlp/util/ArrayHeap.java","tnLine":124,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.util.ArrayHeap.heapifyUp(edu.stanford.nlp.util.ArrayHeap$HeapEntry):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired by call to `RedwoodConfiguration$Handlers$2$1(...)` at line 202 is not released after line 202.","tnFile":"src/edu/stanford/nlp/util/logging/RedwoodConfiguration.java","tnLine":202,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.util.logging.RedwoodConfiguration$Handlers$2.apply(edu.stanford.nlp.util.logging.RedwoodConfiguration,edu.stanford.nlp.util.logging.Redwood$RecordHandlerTree):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getProperty(\"os.name\")` could be null and is dereferenced at line 286.","tnFile":"src/edu/stanford/nlp/trees/tregex/gui/TregexGUI.java","tnLine":286,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.tregex.gui.TregexGUI.isMacOSX():boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `leftChild.label()` could be null and is dereferenced at line 423.","tnFile":"src/edu/stanford/nlp/parser/lexparser/TreeBinarizer.java","tnLine":423,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.TreeBinarizer.insideBinarizeLocalTree(edu.stanford.nlp.trees.Tree,int,edu.stanford.nlp.ling.TaggedWord,int,int):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `srch` last assigned on line 202 could be null and is dereferenced at line 203.","tnFile":"src/edu/stanford/nlp/tagger/maxent/TaggerConfig.java","tnLine":203,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.tagger.maxent.TaggerConfig.setProperties(java.util.Properties):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedWriter` acquired to `bout` by call to `new()` at line 47 is not released after line 51.\n**Note**: potential exception at line 48","tnFile":"src/edu/stanford/nlp/parser/dvparser/DumpMatrices.java","tnLine":51,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.dvparser.DumpMatrices.dumpMatrix(java.lang.String,org.ejml.simple.SimpleMatrix):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `w.get(edu.stanford.nlp.ling.CoreAnnotations$LemmaAnnotation)` could be null and is dereferenced at line 803.","tnFile":"src/edu/stanford/nlp/dcoref/Document.java","tnLine":803,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.dcoref.Document.findNextParagraphSpeaker(java.util.List,int,edu.stanford.nlp.dcoref.Dictionaries):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Redwood.startThreads(String)` indirectly reads with synchronization from `logging.Redwood.isThreaded`. Potentially races with unsynchronized write in method `Redwood.endThreads(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/util/logging/Redwood.java","tnLine":431,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.util.logging.Redwood.startThreads(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Dataset.printSparseFeatureMatrix()` indirectly reads without synchronization from `this.data`. Potentially races with write in method `Dataset.ensureSize()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/classify/Dataset.java","tnLine":528,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.Dataset.printSparseFeatureMatrix():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Dataset.changeLabelIndex(Index)` writes to field `this.labels` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/classify/Dataset.java","tnLine":548,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.Dataset.changeLabelIndex(edu.stanford.nlp.util.Index):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 63 is not released after line 64.","tnFile":"src/edu/stanford/nlp/quoteattribution/XMLToAnnotation.java","tnLine":64,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.quoteattribution.XMLToAnnotation.processCoreNLPIfDoesNotExist(java.io.File,java.util.Properties,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `InputStreamReader(...)` at line 45 is not released after line 66.","tnFile":"src/edu/stanford/nlp/international/french/scripts/TreeToMorfette.java","tnLine":66,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.international.french.scripts.TreeToMorfette.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedWriter` acquired to `bout` by call to `new()` at line 208 is not released after line 216.\n**Note**: potential exception at line 211","tnFile":"src/edu/stanford/nlp/sentiment/ReadSentimentDataset.java","tnLine":216,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.sentiment.ReadSentimentDataset.writeTrees(java.lang.String,java.util.List,java.util.List):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `quotes` last assigned on line 239 could be null and is dereferenced at line 240.","tnFile":"src/edu/stanford/nlp/quoteattribution/QuoteAttributionUtils.java","tnLine":240,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.quoteattribution.QuoteAttributionUtils.annotateForDependencyParse(edu.stanford.nlp.pipeline.Annotation,edu.stanford.nlp.parser.nndep.DependencyParser):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.LineNumberReader` acquired to `reader` by call to `new()` at line 109 is not released after line 144.","tnFile":"src/edu/stanford/nlp/international/arabic/pipeline/LDCPosMapper.java","tnLine":144,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.international.arabic.pipeline.LDCPosMapper.setup(java.io.File,java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.util.Formatter` acquired by call to `new()` at line 317 is not released after line 317.","tnFile":"src/edu/stanford/nlp/util/logging/Redwood.java","tnLine":317,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.util.logging.Redwood.lambda$logf$1(java.lang.String,java.lang.Object[]):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `sentences` last assigned on line 122 could be null and is dereferenced at line 124.","tnFile":"src/edu/stanford/nlp/coref/data/DocumentPreprocessor.java","tnLine":124,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.coref.data.DocumentPreprocessor.mentionReordering(edu.stanford.nlp.coref.data.Document,edu.stanford.nlp.trees.HeadFinder):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object ConcurrentHashIndex.get(int)` reads without synchronization from `this.indexSize`. Potentially races with write in method `ConcurrentHashIndex.addToIndex(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/util/concurrent/ConcurrentHashIndex.java","tnLine":64,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.util.concurrent.ConcurrentHashIndex.get(int):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `sentences` last assigned on line 179 could be null and is dereferenced at line 180.","tnFile":"src/edu/stanford/nlp/pipeline/EntityMentionsAnnotator.java","tnLine":180,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.EntityMentionsAnnotator.annotatePronominalMentions(edu.stanford.nlp.pipeline.Annotation):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `parent` last assigned on line 40 could be null and is dereferenced by call to `objectEqualityIndexOf(...)` at line 41.","tnFile":"src/edu/stanford/nlp/trees/tregex/tsurgeon/DeleteNode.java","tnLine":41,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.tregex.tsurgeon.DeleteNode$Matcher.evaluate(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.tregex.TregexMatcher):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `InputStreamReader(...)` at line 193 is not released after line 203.\n**Note**: potential exception at line 197","tnFile":"src/edu/stanford/nlp/trees/international/arabic/ArabicUtils.java","tnLine":203,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.international.arabic.ArabicUtils.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `null` is dereferenced by call to `TransducerGraph$Arc(...)` at line 31.","tnFile":"src/edu/stanford/nlp/fsm/ExactAutomatonMinimizer.java","tnLine":31,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.fsm.ExactAutomatonMinimizer.<clinit>():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void WeightedDataset.add(Collection,Object,float)` indirectly reads without synchronization from `this.labels`. Potentially races with write in method `WeightedDataset.ensureSize()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/classify/WeightedDataset.java","tnLine":86,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.WeightedDataset.add(java.util.Collection,java.lang.Object,float):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `edu.stanford.nlp.coref.docreader.CoNLLDocumentReader$DocumentIterator` acquired by call to `CoNLLDocumentReader$DocumentIterator(...)` at line 174 is not released after line 174.\n**Note**: potential exception at line 174","tnFile":"src/edu/stanford/nlp/coref/docreader/CoNLLDocumentReader.java","tnLine":174,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.coref.docreader.CoNLLDocumentReader.getNextDocument():edu.stanford.nlp.coref.docreader.CoNLLDocumentReader$CoNLLDocument","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `pos` last assigned on line 962 could be null and is dereferenced at line 963.","tnFile":"src/edu/stanford/nlp/coref/data/Mention.java","tnLine":963,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.coref.data.Mention.longestNNPEndsWithHead():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 381 is not released after line 381.","tnFile":"src/edu/stanford/nlp/io/IOUtils.java","tnLine":381,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.io.IOUtils.writeStreamFromString(java.lang.String):java.io.ObjectOutputStream","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `iterator()` at line 439 is not released after line 472.","tnFile":"src/edu/stanford/nlp/classify/ColumnDataClassifier.java","tnLine":472,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.ColumnDataClassifier.readDataset(java.lang.String,boolean):edu.stanford.nlp.util.Pair","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `String Sentence.toString()` indirectly writes to field `this.impl.text_` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/simple/Sentence.java","tnLine":1261,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.simple.Sentence.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `tb` last assigned on line 43 could be null and is dereferenced at line 82.","tnFile":"src/edu/stanford/nlp/parser/tools/RHSFrequency.java","tnLine":82,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.tools.RHSFrequency.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void WeightedDataset.add(Collection,Object)` indirectly writes to field `this.data` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/classify/WeightedDataset.java","tnLine":65,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.WeightedDataset.add(java.util.Collection,java.lang.Object):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void FilePanel.loadFiles(EnumMap,java.io.File[])` indirectly reads without synchronization from `gui.FileTreeModel.trf`. Potentially races with write in method `FilePanel.getInstance()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/trees/tregex/gui/FilePanel.java","tnLine":109,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.tregex.gui.FilePanel.loadFiles(java.util.EnumMap,java.io.File[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired to `pw` by call to `new()` at line 198 is not released after line 199.","tnFile":"src/edu/stanford/nlp/ie/machinereading/BasicRelationExtractor.java","tnLine":199,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.machinereading.BasicRelationExtractor.extractAllRelations(edu.stanford.nlp.util.CoreMap):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `SsurgTestManager.nodeTests.get(id)` could be null and is dereferenced at line 43.","tnFile":"src/edu/stanford/nlp/semgraph/semgrex/ssurgeon/pred/SsurgTestManager.java","tnLine":43,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.semgraph.semgrex.ssurgeon.pred.SsurgTestManager.getNodeTest(java.lang.String,java.lang.String):edu.stanford.nlp.semgraph.semgrex.ssurgeon.pred.NodeTest","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `Document.annotation.get(edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation)` could be null and is dereferenced at line 752.","tnFile":"src/edu/stanford/nlp/dcoref/Document.java","tnLine":752,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.dcoref.Document.findSpeakersInConversation(edu.stanford.nlp.dcoref.Dictionaries):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `readerFromFile(...)` at line 363 is not released after line 363.","tnFile":"src/edu/stanford/nlp/sentiment/SimpleSentiment.java","tnLine":363,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.sentiment.SimpleSentiment.lambda$unlabelled$8(java.io.File):java.util.stream.Stream","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired by call to `new()` at line 239 is not released after line 241.","tnFile":"src/edu/stanford/nlp/ie/machinereading/BasicRelationExtractor.java","tnLine":241,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.machinereading.BasicRelationExtractor.annotateMulticlass(java.util.List):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileInputStream` acquired by call to `FileInputStream(...)` at line 37 is not released after line 37.","tnFile":"src/edu/stanford/nlp/tagger/maxent/ASBCunkDict.java","tnLine":37,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.tagger.maxent.ASBCunkDict.readASBCunkDict(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `tree.label()` could be null and is dereferenced at line 46.","tnFile":"src/edu/stanford/nlp/parser/shiftreduce/CreateTransitionSequence.java","tnLine":46,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.shiftreduce.CreateTransitionSequence.createTransitionSequenceHelper(java.util.ArrayList,edu.stanford.nlp.trees.Tree,boolean,java.util.Set):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `ApplyDepPatterns.constVars.allowedTagsInitials.get(label)` could be null and is dereferenced at line 277.","tnFile":"src/edu/stanford/nlp/patterns/dep/ApplyDepPatterns.java","tnLine":277,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.patterns.dep.ApplyDepPatterns.matchedRestriction(edu.stanford.nlp.ling.CoreLabel,java.lang.String):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `quotes` last assigned on line 56 could be null and is dereferenced at line 57.","tnFile":"src/edu/stanford/nlp/quoteattribution/QuoteAttributionTest.java","tnLine":57,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.quoteattribution.QuoteAttributionTest.testPP(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `InputStreamReader(...)` at line 217 is not released after line 217.","tnFile":"src/edu/stanford/nlp/trees/MemoryTreebank.java","tnLine":217,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.MemoryTreebank.processFile(java.io.File):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `oldEdge` last assigned on line 1957 could be null and is dereferenced at line 1958.","tnFile":"src/edu/stanford/nlp/trees/UniversalEnglishGrammaticalStructure.java","tnLine":1958,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.UniversalEnglishGrammaticalStructure.processNamesHelper(edu.stanford.nlp.semgraph.SemanticGraph,edu.stanford.nlp.ling.IndexedWord,java.util.List):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `msf` last assigned on line 531 could be null and is dereferenced by call to `isMoreGeneral(...)` at line 532.","tnFile":"src/edu/stanford/nlp/time/JodaTimeUtils.java","tnLine":532,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.time.JodaTimeUtils.padMoreSpecificFields(org.joda.time.Partial,org.joda.time.Period):org.joda.time.Partial","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Datum Dataset.getDatum(int)` reads without synchronization from `this.data`. Potentially races with write in method `Dataset.ensureSize()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/classify/Dataset.java","tnLine":385,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.Dataset.getDatum(int):edu.stanford.nlp.ling.Datum","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `doc.annotation.get(edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation)` could be null and is dereferenced at line 653.","tnFile":"src/edu/stanford/nlp/coref/data/DocumentPreprocessor.java","tnLine":653,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.coref.data.DocumentPreprocessor.findSpeakers(edu.stanford.nlp.coref.data.Document,edu.stanford.nlp.coref.data.Dictionaries):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `headerIndex.get(\"system\")` could be null and is dereferenced at line 123.","tnFile":"src/edu/stanford/nlp/ie/qe/Units.java","tnLine":123,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.qe.Units.loadUnits(java.lang.String):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `relation` last assigned on line 1427 could be null and is dereferenced at line 1430.","tnFile":"src/edu/stanford/nlp/coref/data/Mention.java","tnLine":1430,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.coref.data.Mention.getRelation():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.net.Socket` acquired to `socket` by call to `new()` at line 161 is not released after line 168.\n**Note**: potential exception at line 164","tnFile":"src/edu/stanford/nlp/parser/server/LexicalizedParserClient.java","tnLine":168,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.server.LexicalizedParserClient.sendQuit():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int PatternsForEachTokenLucene.size()` reads without synchronization from `surface.PatternsForEachTokenLucene.searcher`. Potentially races with write in method `PatternsForEachTokenLucene.setIndexReaderSearcher()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/patterns/surface/PatternsForEachTokenLucene.java","tnLine":320,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.patterns.surface.PatternsForEachTokenLucene.size():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Dataset.addFeatures(Collection,boolean)` reads without synchronization from `this.featureIndex`. Potentially races with write in method `Dataset.selectFeatures(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/classify/Dataset.java","tnLine":354,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.Dataset.addFeatures(java.util.Collection,boolean):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.util.Formatter` acquired by call to `new()` at line 1243 is not released after line 1243.","tnFile":"src/edu/stanford/nlp/util/logging/Redwood.java","tnLine":1243,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.util.logging.Redwood$RedwoodChannels.lambda$logf$0(java.lang.String,java.lang.Object[]):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `nodeToRelabel.label()` could be null and is dereferenced at line 151.","tnFile":"src/edu/stanford/nlp/trees/tregex/tsurgeon/RelabelNode.java","tnLine":151,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.tregex.tsurgeon.RelabelNode$RelabelMatcher.evaluate(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.tregex.TregexMatcher):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `sentence.get(edu.stanford.nlp.trees.TreeCoreAnnotations$TreeAnnotation).label()` could be null and is dereferenced at line 241.","tnFile":"src/edu/stanford/nlp/pipeline/ParserAnnotator.java","tnLine":241,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.ParserAnnotator.doOneSentence(edu.stanford.nlp.pipeline.Annotation,edu.stanford.nlp.util.CoreMap):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `lab` last assigned on line 180 could be null and is dereferenced at line 189.","tnFile":"src/edu/stanford/nlp/parser/lexparser/TueBaDZParserParams.java","tnLine":189,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.TueBaDZParserParams.transformTree(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.Tree):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int Interner.size()` reads without synchronization from container `this.map` via call to `size`. Potentially races with write in method `Interner.intern(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/util/Interner.java","tnLine":102,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.util.Interner.size():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 206 is not released after line 212.\n**Note**: potential exception at line 210","tnFile":"src/edu/stanford/nlp/io/IOUtils.java","tnLine":212,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.io.IOUtils.writeStringToTempFile(java.lang.String,java.lang.String,java.lang.String):java.io.File","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `new()` at line 292 is not released after line 302.\n**Note**: potential exception at line 295","tnFile":"src/edu/stanford/nlp/international/arabic/ArabicMorphoFeatureSpecification.java","tnLine":302,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.international.arabic.ArabicMorphoFeatureSpecification.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `label` last assigned on line 414 could be null and is dereferenced at line 415.","tnFile":"src/edu/stanford/nlp/ie/machinereading/GenericDataSetReader.java","tnLine":415,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.machinereading.GenericDataSetReader.findPartialSpan(edu.stanford.nlp.trees.Tree,int):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `tag` last assigned on line 590 could be null and is dereferenced at line 591.","tnFile":"src/edu/stanford/nlp/coref/data/Mention.java","tnLine":591,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.coref.data.Mention.setNumber(edu.stanford.nlp.coref.data.Dictionaries):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `ann.get(edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation)` could be null and is dereferenced at line 857.","tnFile":"src/edu/stanford/nlp/simple/Document.java","tnLine":857,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.simple.Document.runNER(java.util.Properties):edu.stanford.nlp.simple.Document","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `sentences` last assigned on line 649 could be null and is dereferenced at line 655.","tnFile":"src/edu/stanford/nlp/dcoref/Document.java","tnLine":655,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.dcoref.Document.findSpeakersInArticle(edu.stanford.nlp.dcoref.Dictionaries):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired by call to `new()` at line 898 is not released after line 898.","tnFile":"src/edu/stanford/nlp/util/FileBackedCache.java","tnLine":898,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.util.FileBackedCache.newInputStream(java.io.File):edu.stanford.nlp.util.Pair","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStream` acquired by call to `accept()` at line 198 is not released after line 198.","tnFile":"src/edu/stanford/nlp/patterns/TextAnnotationPatternsInterface.java","tnLine":198,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.patterns.TextAnnotationPatternsInterface.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileInputStream` acquired by call to `FileInputStream(...)` at line 217 is not released after line 217.","tnFile":"src/edu/stanford/nlp/trees/MemoryTreebank.java","tnLine":217,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.MemoryTreebank.processFile(java.io.File):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `child` last assigned on line 146 could be null and is dereferenced at line 147.","tnFile":"src/edu/stanford/nlp/trees/tregex/gui/FilePanel.java","tnLine":147,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.tregex.gui.FilePanel.setActiveTreebanksFromParent(java.util.ArrayList,edu.stanford.nlp.trees.tregex.gui.FileTreeNode):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `Document.annotation.get(edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation)` could be null and is dereferenced at line 428.","tnFile":"src/edu/stanford/nlp/dcoref/Document.java","tnLine":428,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.dcoref.Document.setParagraphAnnotation():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `newChild.label()` could be null and is dereferenced at line 746.","tnFile":"src/edu/stanford/nlp/parser/lexparser/ExhaustiveDependencyParser.java","tnLine":746,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.ExhaustiveDependencyParser.flatten(edu.stanford.nlp.trees.Tree):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `tb` last assigned on line 42 could be null and is dereferenced at line 78.","tnFile":"src/edu/stanford/nlp/parser/tools/VocabFrequency.java","tnLine":78,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.tools.VocabFrequency.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.label()` could be null and is dereferenced at line 79.","tnFile":"src/edu/stanford/nlp/parser/lexparser/TreeAnnotator.java","tnLine":79,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.TreeAnnotator.transformTreeHelper(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.Tree):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `ann.get(edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation)` could be null and is dereferenced at line 977.","tnFile":"src/edu/stanford/nlp/simple/Document.java","tnLine":977,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.simple.Document.runOpenie(java.util.Properties):edu.stanford.nlp.simple.Document","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `t` last assigned on line 599 could be null and is dereferenced at line 601.","tnFile":"src/edu/stanford/nlp/coref/docreader/CoNLLDocumentReader.java","tnLine":601,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.coref.docreader.CoNLLDocumentReader$DocumentIterator.getTreeNonTerminal(edu.stanford.nlp.trees.Tree,int,int,boolean):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `head1.label()` could be null and is dereferenced at line 315.","tnFile":"src/edu/stanford/nlp/dcoref/MentionExtractor.java","tnLine":315,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.dcoref.MentionExtractor.addFoundPair(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.Tree,java.util.Set):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object Lazy.getIfDefined()` reads without synchronization from `this.implOrNull`. Potentially races with write in method `Lazy.get()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/util/Lazy.java","tnLine":61,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.util.Lazy.getIfDefined():java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.OutputStreamWriter` acquired by call to `OutputStreamWriter(...)` at line 199 is not released after line 208.","tnFile":"src/edu/stanford/nlp/parser/server/LexicalizedParserServer.java","tnLine":208,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.server.LexicalizedParserServer.handleLemma(java.lang.String,java.io.OutputStream):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `RandomWalk.hiddenToSeen.get(hidden)` could be null and is dereferenced at line 50.","tnFile":"src/edu/stanford/nlp/parser/lexparser/RandomWalk.java","tnLine":50,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.RandomWalk.step(java.lang.Object,java.lang.Object,int):double","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `InputStreamReader(...)` at line 130 is not released after line 146.\n**Note**: potential exception at line 133","tnFile":"src/edu/stanford/nlp/trees/international/pennchinese/TraditionalSimplifiedCharacterMap.java","tnLine":146,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.international.pennchinese.TraditionalSimplifiedCharacterMap.translateFile(java.lang.String,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Dataset.applyFeatureCountThreshold(List)` writes to field `this.featureIndex` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/classify/Dataset.java","tnLine":479,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.Dataset.applyFeatureCountThreshold(java.util.List):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `GrammaticalRelation EnglishGrammaticalRelations.getPrep(String)` reads without synchronization from container `trees.EnglishGrammaticalRelations.preps` via call to `get`. Potentially races with write in method `EnglishGrammaticalRelations.getPrep(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/trees/EnglishGrammaticalRelations.java","tnLine":1684,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.EnglishGrammaticalRelations.getPrep(java.lang.String):edu.stanford.nlp.trees.GrammaticalRelation","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `InputStreamReader(...)` at line 131 is not released after line 136.\n**Note**: potential exception at line 133","tnFile":"src/edu/stanford/nlp/wordseg/MaxMatchSegmenter.java","tnLine":136,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.wordseg.MaxMatchSegmenter.addLexicon(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `iterator()` at line 678 is not released after line 683.","tnFile":"src/edu/stanford/nlp/ie/AbstractSequenceClassifier.java","tnLine":683,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.AbstractSequenceClassifier.segmentString(java.lang.String,edu.stanford.nlp.objectbank.IteratorFromReaderFactory):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `ann.get(edu.stanford.nlp.ling.CoreAnnotations$TokensAnnotation)` could be null and is dereferenced at line 26.","tnFile":"src/edu/stanford/nlp/examples/TokensRegexExample.java","tnLine":26,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.examples.TokensRegexExample.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `newGuess` last assigned on line 99 could be null and is dereferenced at line 106.","tnFile":"src/edu/stanford/nlp/pipeline/NumberAnnotator.java","tnLine":106,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.NumberAnnotator.doOneSentenceNew(java.util.List,edu.stanford.nlp.pipeline.Annotation,edu.stanford.nlp.util.CoreMap):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `annotation.get(edu.stanford.nlp.ling.CoreAnnotations$TokensAnnotation)` could be null and is dereferenced at line 336.","tnFile":"src/edu/stanford/nlp/pipeline/NERCombinerAnnotator.java","tnLine":336,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.NERCombinerAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 179 is not released after line 179.\n**Note**: potential exception at line 157","tnFile":"src/edu/stanford/nlp/trees/international/pennchinese/CharacterLevelTagExtender.java","tnLine":179,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.international.pennchinese.CharacterLevelTagExtender.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Dataset.changeFeatureIndex(Index)` writes to field `this.data` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/classify/Dataset.java","tnLine":576,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.Dataset.changeFeatureIndex(edu.stanford.nlp.util.Index):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `label()` could be null and is dereferenced at line 1806.","tnFile":"src/edu/stanford/nlp/trees/Tree.java","tnLine":1806,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.Tree.deepCopy(edu.stanford.nlp.trees.TreeFactory):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Sentence Sentence.caseless()` indirectly reads without synchronization from `this.impl.basicDependencies_`. Potentially races with write in method `Sentence.updateDependencies(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/simple/Sentence.java","tnLine":287,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.simple.Sentence.caseless():edu.stanford.nlp.simple.Sentence","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.OutputStreamWriter` acquired by call to `OutputStreamWriter(...)` at line 231 is not released after line 236.","tnFile":"src/edu/stanford/nlp/parser/server/LexicalizedParserServer.java","tnLine":236,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.server.LexicalizedParserServer.handleDependencies(java.lang.String,java.io.OutputStream,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `m.getNode(\"c\").value()` could be null and is dereferenced at line 167.","tnFile":"src/edu/stanford/nlp/parser/lexparser/SpanishTreebankParserParams.java","tnLine":167,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.SpanishTreebankParserParams$MarkConjTypeFunction.apply(edu.stanford.nlp.trees.tregex.TregexMatcher):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.label()` could be null and is dereferenced at line 157.","tnFile":"src/edu/stanford/nlp/trees/BobChrisTreeNormalizer.java","tnLine":157,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.BobChrisTreeNormalizer$AOverAFilter.test(edu.stanford.nlp.trees.Tree):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List PhraseTable.findAllMatches(List,String)` indirectly reads without synchronization from container `this.normalizedCache` via call to `get`. Potentially races with write in method `PhraseTable.getNormalizedForm(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/ling/tokensregex/PhraseTable.java","tnLine":625,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ling.tokensregex.PhraseTable.findAllMatches(java.util.List,java.lang.String):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileReader` acquired by call to `new()` at line 83 is not released after line 83.","tnFile":"src/edu/stanford/nlp/trees/international/arabic/ArabicTreebankTokenizer.java","tnLine":83,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.international.arabic.ArabicTreebankTokenizer.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List PhraseTable.findAllMatches(String)` indirectly reads without synchronization from container `this.normalizedCache` via call to `get`. Potentially races with write in method `PhraseTable.getNormalizedForm(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/ling/tokensregex/PhraseTable.java","tnLine":601,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ling.tokensregex.PhraseTable.findAllMatches(java.lang.String):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `InputStreamReader(...)` at line 125 is not released after line 127.\n**Note**: potential exception at line 127","tnFile":"src/edu/stanford/nlp/international/spanish/pipeline/AnCoraProcessor.java","tnLine":127,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.international.spanish.pipeline.AnCoraProcessor.processTreeFile(java.io.File,edu.stanford.nlp.trees.international.spanish.SpanishXMLTreeReaderFactory,java.lang.String):edu.stanford.nlp.util.Pair","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `iterator()` at line 48 is not released after line 53.","tnFile":"src/edu/stanford/nlp/ling/tokensregex/demo/TokensRegexMatcher.java","tnLine":53,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ling.tokensregex.demo.TokensRegexMatcher.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileInputStream` acquired by call to `FileInputStream(...)` at line 1300 is not released after line 1300.","tnFile":"src/edu/stanford/nlp/io/IOUtils.java","tnLine":1300,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.io.IOUtils.slurpFileNoExceptions(java.io.File):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `child` last assigned on line 30 could be null and is dereferenced by call to `getAttributeValue(...)` at line 31.","tnFile":"src/edu/stanford/nlp/ie/machinereading/domains/ace/reader/AceDomReader.java","tnLine":31,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.machinereading.domains.ace.reader.AceDomReader.parseCharSeq(org.w3c.dom.Node):edu.stanford.nlp.ie.machinereading.domains.ace.reader.AceCharSeq","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `PhraseTable$Phrase PhraseTable.lookupNormalized(String)` indirectly reads without synchronization from container `this.normalizedCache` via call to `get`. Potentially races with write in method `PhraseTable.getNormalizedForm(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/ling/tokensregex/PhraseTable.java","tnLine":527,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ling.tokensregex.PhraseTable.lookupNormalized(java.lang.String):edu.stanford.nlp.ling.tokensregex.PhraseTable$Phrase","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `ant.headWord.get(edu.stanford.nlp.ling.CoreAnnotations$UtteranceAnnotation)` could be null and is dereferenced at line 774.","tnFile":"src/edu/stanford/nlp/coref/CorefRules.java","tnLine":774,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.coref.CorefRules.entityPersonDisagree(edu.stanford.nlp.coref.data.Document,edu.stanford.nlp.coref.data.Mention,edu.stanford.nlp.coref.data.Mention,edu.stanford.nlp.coref.data.Dictionaries):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.label()` could be null and is dereferenced at line 125.","tnFile":"src/edu/stanford/nlp/trees/TreeFunctions.java","tnLine":125,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.TreeFunctions$LabeledToDescriptiveCoreLabelTreeFunction.apply(edu.stanford.nlp.trees.Tree):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `best` last assigned on line 858 could be null and is dereferenced at line 864.","tnFile":"src/edu/stanford/nlp/util/IntervalTree.java","tnLine":864,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.util.IntervalTree.getNonOverlappingMaxScore(java.util.ArrayList,java.util.function.Function,java.util.function.ToDoubleFunction):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `cl.get(edu.stanford.nlp.ling.CoreAnnotations$CharacterOffsetBeginAnnotation)` could be null and is dereferenced at line 375.","tnFile":"src/edu/stanford/nlp/international/arabic/process/IOBUtils.java","tnLine":375,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.international.arabic.process.IOBUtils.createDatum(edu.stanford.nlp.ling.CoreLabel,java.lang.String,java.lang.String):edu.stanford.nlp.ling.CoreLabel","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Dataset.add(Datum)` indirectly writes to field `this.data` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/classify/Dataset.java","tnLine":297,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.Dataset.add(edu.stanford.nlp.ling.Datum):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 936 is not released after line 936.","tnFile":"src/edu/stanford/nlp/util/logging/Redwood.java","tnLine":936,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.util.logging.Redwood$FileHandler.<init>(java.lang.String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `iterator()` at line 1444 is not released after line 1448.","tnFile":"src/edu/stanford/nlp/ie/crf/CRFClassifier.java","tnLine":1448,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.crf.CRFClassifier.printFirstOrderProbsDocuments(edu.stanford.nlp.objectbank.ObjectBank):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `l.get(edu.stanford.nlp.ling.CoreAnnotations$TextAnnotation)` could be null and is dereferenced at line 279.","tnFile":"src/edu/stanford/nlp/dcoref/Mention.java","tnLine":279,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.dcoref.Mention.getMentionString():java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.label()` could be null and is dereferenced at line 42.","tnFile":"src/edu/stanford/nlp/trees/TreeFunctions.java","tnLine":42,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.TreeFunctions$LabeledTreeToStringLabeledTreeFunction.helper(edu.stanford.nlp.trees.Tree):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `parent.label()` could be null and is dereferenced at line 1290.","tnFile":"src/edu/stanford/nlp/parser/lexparser/SplittingGrammarExtractor.java","tnLine":1290,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.SplittingGrammarExtractor.mergeTransitions(edu.stanford.nlp.trees.Tree,java.util.IdentityHashMap,java.util.IdentityHashMap,java.util.IdentityHashMap,java.util.IdentityHashMap,double[],java.util.Map):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `readerFromString(...)` at line 1160 is not released after line 1161.","tnFile":"src/edu/stanford/nlp/io/IOUtils.java","tnLine":1161,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.io.IOUtils.slurpFile(java.lang.String,java.lang.String):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `sentences` last assigned on line 30 could be null and is dereferenced at line 32.","tnFile":"src/edu/stanford/nlp/ling/tokensregex/demo/TokensRegexRetokenizeDemo.java","tnLine":32,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ling.tokensregex.demo.TokensRegexRetokenizeDemo.runPipeline(edu.stanford.nlp.pipeline.StanfordCoreNLP,java.lang.String,java.io.PrintWriter):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.OutputStreamWriter` acquired by call to `OutputStreamWriter(...)` at line 163 is not released after line 165.","tnFile":"src/edu/stanford/nlp/parser/server/LexicalizedParserClient.java","tnLine":165,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.server.LexicalizedParserClient.sendQuit():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `w.get(edu.stanford.nlp.ling.CoreAnnotations$PartOfSpeechAnnotation)` could be null and is dereferenced at line 628.","tnFile":"src/edu/stanford/nlp/coref/CorefRules.java","tnLine":628,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.coref.CorefRules.entityHaveExtraProperNoun(edu.stanford.nlp.coref.data.Mention,edu.stanford.nlp.coref.data.Mention,java.util.Set):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `BaseUnknownWordModelTrainer.c.get(tag)` could be null and is dereferenced at line 96.","tnFile":"src/edu/stanford/nlp/parser/lexparser/BaseUnknownWordModelTrainer.java","tnLine":96,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.BaseUnknownWordModelTrainer.train(edu.stanford.nlp.ling.TaggedWord,int,double):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `iterator()` at line 1189 is not released after line 1205.","tnFile":"src/edu/stanford/nlp/ie/AbstractSequenceClassifier.java","tnLine":1205,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.AbstractSequenceClassifier.classifyAndWriteAnswers(edu.stanford.nlp.sequences.ObjectBankWrapper,java.io.PrintWriter,edu.stanford.nlp.sequences.DocumentReaderAndWriter,boolean):edu.stanford.nlp.util.Triple","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.OutputStreamWriter` acquired by call to `OutputStreamWriter(...)` at line 118 is not released after line 120.","tnFile":"src/edu/stanford/nlp/parser/server/LexicalizedParserClient.java","tnLine":120,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.server.LexicalizedParserClient.getParse(java.lang.String,boolean):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired by call to `new()` at line 84 is not released after line 84.","tnFile":"src/edu/stanford/nlp/pipeline/JSONOutputter.java","tnLine":84,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.JSONOutputter.lambda$null$7(edu.stanford.nlp.util.CoreMap,edu.stanford.nlp.pipeline.AnnotationOutputter$Options,edu.stanford.nlp.pipeline.JSONOutputter$Writer):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `GrammaticalRelation GrammaticalRelation.valueOf(Language,String)` indirectly writes to field `result.child` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/trees/GrammaticalRelation.java","tnLine":239,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.GrammaticalRelation.valueOf(edu.stanford.nlp.international.Language,java.lang.String):edu.stanford.nlp.trees.GrammaticalRelation","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `tree.value()` could be null and is dereferenced at line 116.","tnFile":"src/edu/stanford/nlp/international/arabic/pipeline/MWETreeVisitorExternal.java","tnLine":116,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.international.arabic.pipeline.MWETreeVisitorExternal.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.DataInputStream` acquired to `rf` by call to `getDataInputStream(...)` at line 701 is not released after line 705.\n**Note**: potential exception at line 702","tnFile":"src/edu/stanford/nlp/maxent/iis/LambdaSolve.java","tnLine":705,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.maxent.iis.LambdaSolve.read_lambdas(java.lang.String):double[]","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `mentionToCandidateAntecedents.get(valueOf(mention))` could be null and is dereferenced at line 69.","tnFile":"src/edu/stanford/nlp/coref/statistical/DatasetBuilder.java","tnLine":69,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.coref.statistical.DatasetBuilder.process(int,edu.stanford.nlp.coref.data.Document):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `ref.getJodaTimeInstant()` could be null and is dereferenced at line 1490.","tnFile":"src/edu/stanford/nlp/time/SUTime.java","tnLine":1490,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.time.SUTime$Time.closest(edu.stanford.nlp.time.SUTime$Time,edu.stanford.nlp.time.SUTime$Time[]):edu.stanford.nlp.time.SUTime$Time","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `doc.get(edu.stanford.nlp.ling.CoreAnnotations$QuotationsAnnotation)` could be null and is dereferenced at line 44.","tnFile":"src/edu/stanford/nlp/quoteattribution/Sieves/MSSieves/MajoritySpeakerSieve.java","tnLine":44,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.quoteattribution.Sieves.MSSieves.MajoritySpeakerSieve.doMentionToSpeaker(edu.stanford.nlp.pipeline.Annotation):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `tokens` last assigned on line 355 could be null and is dereferenced at line 356.","tnFile":"src/edu/stanford/nlp/quoteattribution/Sieves/Sieve.java","tnLine":356,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.quoteattribution.Sieves.Sieve.scanForAnimates(edu.stanford.nlp.util.Pair):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `String Dataset.toSummaryString()` indirectly reads without synchronization from `this.featureIndex`. Potentially races with write in method `Dataset.selectFeatures(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/classify/Dataset.java","tnLine":736,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.Dataset.toSummaryString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getChildByName(node,\"extent\")` could be null and is dereferenced by call to `parseCharSeq(...)` at line 91.","tnFile":"src/edu/stanford/nlp/ie/machinereading/domains/ace/reader/AceDomReader.java","tnLine":91,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.machinereading.domains.ace.reader.AceDomReader.parseEventMention(org.w3c.dom.Node,edu.stanford.nlp.ie.machinereading.domains.ace.reader.AceDocument):edu.stanford.nlp.ie.machinereading.domains.ace.reader.AceEventMention","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Pair Dataset.split(int,int)` reads with synchronization from `this.data`. Potentially races with unsynchronized write in method `Dataset.ensureSize()`.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/classify/Dataset.java","tnLine":111,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.Dataset.split(int,int):edu.stanford.nlp.util.Pair","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.label()` could be null and is dereferenced at line 125.","tnFile":"src/edu/stanford/nlp/parser/lexparser/SisterAnnotationStats.java","tnLine":125,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.SisterAnnotationStats.sisterCounters(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.Tree):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `timexAnns` last assigned on line 133 could be null and is dereferenced at line 137.","tnFile":"src/edu/stanford/nlp/time/suservlet/SUTimeServlet.java","tnLine":137,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.time.suservlet.SUTimeServlet.displayAnnotation(java.io.PrintWriter,java.lang.String,edu.stanford.nlp.pipeline.Annotation,boolean):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.util.zip.GZIPInputStream` acquired by call to `GZIPInputStream(...)` at line 238 is not released after line 243.\n**Note**: potential exception at line 239","tnFile":"src/edu/stanford/nlp/loglinear/benchmarks/CoNLLBenchmark.java","tnLine":243,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.loglinear.benchmarks.CoNLLBenchmark.getEmbeddings(java.lang.String,java.util.ArrayList):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.OutputStreamWriter` acquired by call to `new()` at line 83 is not released after line 90.","tnFile":"src/edu/stanford/nlp/util/SystemUtils.java","tnLine":90,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.util.SystemUtils.consume(java.lang.Process,java.io.Writer,java.io.Writer):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `i` last assigned on line 1439 could be null and is dereferenced at line 1441.","tnFile":"src/edu/stanford/nlp/time/SUTime.java","tnLine":1441,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.time.SUTime$Time.compareTo(edu.stanford.nlp.time.SUTime$Time):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `Sieve.doc.get(edu.stanford.nlp.ling.CoreAnnotations$TokensAnnotation)` could be null and is dereferenced at line 29.","tnFile":"src/edu/stanford/nlp/quoteattribution/Sieves/MSSieves/MajoritySpeakerSieve.java","tnLine":29,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.quoteattribution.Sieves.MSSieves.MajoritySpeakerSieve.getTopSpeakerList():edu.stanford.nlp.stats.Counter","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `ObjectBank$OBIterator(...)` at line 242 is not released after line 243.","tnFile":"src/edu/stanford/nlp/objectbank/ObjectBank.java","tnLine":243,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.objectbank.ObjectBank.iterator():java.util.Iterator","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `label` last assigned on line 49 could be null and is dereferenced at line 50.","tnFile":"src/edu/stanford/nlp/parser/shiftreduce/ShiftReduceUtils.java","tnLine":50,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.shiftreduce.ShiftReduceUtils.leftIndex(edu.stanford.nlp.trees.Tree):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 120 is not released after line 120.","tnFile":"src/edu/stanford/nlp/util/CacheMap.java","tnLine":120,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.util.CacheMap.write():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `sentences` last assigned on line 1654 could be null and is dereferenced at line 1666.","tnFile":"src/edu/stanford/nlp/dcoref/SieveCoreferenceSystem.java","tnLine":1666,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.dcoref.SieveCoreferenceSystem.printRawDoc(edu.stanford.nlp.dcoref.Document,boolean):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `InputStreamReader(...)` at line 38 is not released after line 40.","tnFile":"src/edu/stanford/nlp/international/spanish/scripts/TreeToTSV.java","tnLine":40,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.international.spanish.scripts.TreeToTSV.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void WeightedDataset.shuffleWithSideInformation(long,List)` reads without synchronization from `this.data`. Potentially races with write in method `WeightedDataset.ensureSize()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/classify/WeightedDataset.java","tnLine":137,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.WeightedDataset.shuffleWithSideInformation(long,java.util.List):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `sentences` last assigned on line 176 could be null and is dereferenced at line 179.","tnFile":"src/edu/stanford/nlp/coref/md/CorefMentionFinder.java","tnLine":179,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.coref.md.CorefMentionFinder.removeSpuriousMentionsEn(edu.stanford.nlp.pipeline.Annotation,java.util.List,edu.stanford.nlp.coref.data.Dictionaries):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `RandomWalk.seenToHidden.get(seen)` could be null and is dereferenced at line 72.","tnFile":"src/edu/stanford/nlp/parser/lexparser/RandomWalk.java","tnLine":72,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.RandomWalk.train(java.util.Collection):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileReader` acquired by call to `new()` at line 188 is not released after line 201.\n**Note**: potential exception at line 198","tnFile":"src/edu/stanford/nlp/util/CollectionUtils.java","tnLine":201,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.util.CollectionUtils.loadCollection(java.io.File,java.lang.Class,edu.stanford.nlp.util.CollectionFactory):java.util.Collection","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Pair RVFDataset.split(double)` indirectly reads without synchronization from `this.size`. Potentially races with write in method `RVFDataset.readSVMLightFormat(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/classify/RVFDataset.java","tnLine":104,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.RVFDataset.split(double):edu.stanford.nlp.util.Pair","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Dataset.add(Collection,Object)` indirectly writes to field `this.data` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/classify/Dataset.java","tnLine":301,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.Dataset.add(java.util.Collection,java.lang.Object):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `tree.label()` could be null and is dereferenced at line 1078.","tnFile":"src/edu/stanford/nlp/parser/lexparser/SplittingGrammarExtractor.java","tnLine":1078,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.SplittingGrammarExtractor.recountInside(edu.stanford.nlp.trees.Tree,boolean,int,java.util.IdentityHashMap):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileInputStream` acquired by call to `FileInputStream(...)` at line 52 is not released after line 52.","tnFile":"src/edu/stanford/nlp/ie/ChineseMorphFeatureSets.java","tnLine":52,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.ChineseMorphFeatureSets.getFeatures(java.io.File):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.util.Formatter` acquired by call to `new()` at line 1268 is not released after line 1268.","tnFile":"src/edu/stanford/nlp/util/logging/Redwood.java","tnLine":1268,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.util.logging.Redwood$RedwoodChannels.lambda$warnf$4(java.lang.String,java.lang.Object[]):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `tokens` last assigned on line 726 could be null and is dereferenced at line 755.","tnFile":"src/edu/stanford/nlp/time/SUTimeMain.java","tnLine":755,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.time.SUTimeMain.processTempEval2Tab(edu.stanford.nlp.pipeline.AnnotationPipeline,java.lang.String,java.lang.String,java.util.Map):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `Dictionary.partTakingVerbs.get(valueOf(i))` could be null and is dereferenced at line 82.","tnFile":"src/edu/stanford/nlp/tagger/maxent/Dictionary.java","tnLine":82,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.tagger.maxent.Dictionary.addVThatTaking(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void WeightedDataset.add(Collection,Object,float)` reads without synchronization from `this.weights`. Potentially races with write in method `WeightedDataset.ensureSize()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/classify/WeightedDataset.java","tnLine":88,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.WeightedDataset.add(java.util.Collection,java.lang.Object,float):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void WeightedDataset.add(Datum,float)` indirectly writes to field `this.data` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/classify/WeightedDataset.java","tnLine":69,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.WeightedDataset.add(edu.stanford.nlp.ling.Datum,float):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `new()` at line 56 is not released after line 70.\n**Note**: potential exception at line 57","tnFile":"src/edu/stanford/nlp/tagger/maxent/documentation/MulticoreWrapperDemo.java","tnLine":70,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.tagger.maxent.documentation.MulticoreWrapperDemo.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `bd` last assigned on line 1798 could be null and is dereferenced at line 1820.","tnFile":"src/edu/stanford/nlp/time/SUTime.java","tnLine":1820,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.time.SUTime$CompositePartialTime.getPeriod():edu.stanford.nlp.time.SUTime$Duration","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Dataset.selectFeaturesBinaryInformationGain(int)` indirectly reads without synchronization from `this.data`. Potentially races with write in method `Dataset.ensureSize()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/classify/Dataset.java","tnLine":582,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.Dataset.selectFeaturesBinaryInformationGain(int):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 764 is not released after line 764.","tnFile":"src/edu/stanford/nlp/trees/tregex/gui/TregexGUI.java","tnLine":764,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.tregex.gui.TregexGUI$6.run():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Pair RVFDataset.split(double)` reads without synchronization from `this.featureIndex`. Potentially races with write in method `RVFDataset.applyFeatureMaxCountThreshold(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/classify/RVFDataset.java","tnLine":125,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.RVFDataset.split(double):edu.stanford.nlp.util.Pair","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `annotation.get(edu.stanford.nlp.ling.CoreAnnotations$TokensAnnotation)` could be null and is dereferenced at line 320.","tnFile":"src/edu/stanford/nlp/pipeline/NERCombinerAnnotator.java","tnLine":320,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.NERCombinerAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getChildByName(node,\"extent\")` could be null and is dereferenced by call to `parseCharSeq(...)` at line 46.","tnFile":"src/edu/stanford/nlp/ie/machinereading/domains/ace/reader/AceDomReader.java","tnLine":46,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.machinereading.domains.ace.reader.AceDomReader.parseEntityMention(org.w3c.dom.Node):edu.stanford.nlp.ie.machinereading.domains.ace.reader.AceEntityMention","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `lab` last assigned on line 1421 could be null and is dereferenced by call to `Word(...)` at line 1439.","tnFile":"src/edu/stanford/nlp/trees/Tree.java","tnLine":1439,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.Tree.yieldHasWord(java.util.ArrayList):java.util.ArrayList","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `quotes` last assigned on line 58 could be null and is dereferenced at line 59.","tnFile":"src/edu/stanford/nlp/quoteattribution/ExtractQuotesClassifier.java","tnLine":59,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.quoteattribution.ExtractQuotesClassifier.scoreBestMentionNew(edu.stanford.nlp.quoteattribution.Sieves.training.SupervisedSieveTraining$FeaturesData,edu.stanford.nlp.pipeline.Annotation):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Collection UniversalEnglishGrammaticalRelations.getNmods()` reads without synchronization from container `trees.UniversalEnglishGrammaticalRelations.nmods` via call to `values`. Potentially races with write in method `UniversalEnglishGrammaticalRelations.getNmod(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/trees/UniversalEnglishGrammaticalRelations.java","tnLine":1716,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.UniversalEnglishGrammaticalRelations.getNmods():java.util.Collection","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileInputStream` acquired by call to `FileInputStream(...)` at line 277 is not released after line 277.","tnFile":"src/edu/stanford/nlp/io/IOUtils.java","tnLine":277,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.io.IOUtils.readObjectFromFile(java.io.File):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `float[] WeightedDataset.getFeatureCounts()` reads without synchronization from `this.weights`. Potentially races with write in method `WeightedDataset.ensureSize()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/classify/WeightedDataset.java","tnLine":52,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.WeightedDataset.getFeatureCounts():float[]","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `annotation.get(edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation)` could be null and is dereferenced at line 53.","tnFile":"src/edu/stanford/nlp/pipeline/MorphaAnnotator.java","tnLine":53,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.MorphaAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileReader` acquired by call to `new()` at line 1133 is not released after line 1143.","tnFile":"src/edu/stanford/nlp/ie/machinereading/domains/ace/reader/RobustTokenizer.java","tnLine":1143,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.machinereading.domains.ace.reader.RobustTokenizer.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.label()` could be null and is dereferenced at line 497.","tnFile":"src/edu/stanford/nlp/trees/SemanticHeadFinder.java","tnLine":497,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.SemanticHeadFinder.isExistential(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.Tree):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `GrammaticalRelation UniversalEnglishGrammaticalRelations.getAdvcl(String)` reads without synchronization from container `trees.UniversalEnglishGrammaticalRelations.advcls` via call to `get`. Potentially races with write in method `UniversalEnglishGrammaticalRelations.getAdvcl(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/trees/UniversalEnglishGrammaticalRelations.java","tnLine":1806,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.UniversalEnglishGrammaticalRelations.getAdvcl(java.lang.String):edu.stanford.nlp.trees.GrammaticalRelation","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int ConcatVectorNamespace.ensureSparseFeature(String,String)` reads without synchronization from container `this.sparseFeatureIndex` via call to `get`. Potentially races with write in method `ConcatVectorNamespace.ensureSparseFeature(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/loglinear/model/ConcatVectorNamespace.java","tnLine":75,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.loglinear.model.ConcatVectorNamespace.ensureSparseFeature(java.lang.String,java.lang.String):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.OutputStreamWriter` acquired by call to `OutputStreamWriter(...)` at line 76 is not released after line 82.\n**Note**: potential exception at line 77","tnFile":"src/edu/stanford/nlp/parser/server/LexicalizedParserClient.java","tnLine":82,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.server.LexicalizedParserClient.getLemmas(java.lang.String):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `iterator()` at line 1602 is not released after line 1606.","tnFile":"src/edu/stanford/nlp/ie/crf/CRFClassifier.java","tnLine":1606,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.crf.CRFClassifier.train(edu.stanford.nlp.sequences.ObjectBankWrapper,edu.stanford.nlp.international.arabic.process.ArabicDocumentReaderAndWriter):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `tree.label()` could be null and is dereferenced at line 322.","tnFile":"src/edu/stanford/nlp/parser/lexparser/SplittingGrammarExtractor.java","tnLine":322,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.SplittingGrammarExtractor.initialBetasAndLexicon(edu.stanford.nlp.trees.Tree,int,double):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 20 is not released after line 20.","tnFile":"src/edu/stanford/nlp/io/PrintFile.java","tnLine":20,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.io.PrintFile.<init>(java.lang.String)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `String Dataset.toSummaryStatistics()` indirectly writes to field `this.labels` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/classify/Dataset.java","tnLine":416,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.Dataset.toSummaryStatistics():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void GraphicalModel.writeToStream(OutputStream)` indirectly reads without synchronization from container `this.variableMetaData` via call to `iterator`. Potentially races with write in method `GraphicalModel.getVariableMetaDataByReference(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/loglinear/model/GraphicalModel.java","tnLine":202,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.loglinear.model.GraphicalModel.writeToStream(java.io.OutputStream):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.LineNumberReader` acquired by call to `new()` at line 1059 is not released after line 1070.","tnFile":"src/edu/stanford/nlp/trees/GrammaticalStructure.java","tnLine":1070,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.GrammaticalStructure.readCoNLLXGrammaticalStructureCollection(java.lang.String,java.util.Map,edu.stanford.nlp.trees.international.pennchinese.UniversalChineseGrammaticalStructure$FromDependenciesFactory):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.util.zip.GZIPInputStream` acquired to `gis` by call to `GZIPInputStream(...)` at line 81 is not released after line 94.\n**Note**: potential exception at line 82","tnFile":"src/edu/stanford/nlp/parser/dvparser/CacheParseHypotheses.java","tnLine":94,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.dvparser.CacheParseHypotheses.convertToTrees(byte[]):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `argmax(probs)` could be null and is dereferenced at line 131.","tnFile":"src/edu/stanford/nlp/coref/hybrid/HybridCorefPrinter.java","tnLine":131,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.coref.hybrid.HybridCorefPrinter.printErrorLog(edu.stanford.nlp.coref.data.Mention,edu.stanford.nlp.coref.data.Document,edu.stanford.nlp.stats.ClassicCounter,int,edu.stanford.nlp.coref.data.Dictionaries,edu.stanford.nlp.coref.hybrid.sieve.RFSieve):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `iterator()` at line 703 is not released after line 707.","tnFile":"src/edu/stanford/nlp/ie/ner/CMMClassifier.java","tnLine":707,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.ner.CMMClassifier.getBiasedDataset(edu.stanford.nlp.objectbank.ObjectBank,edu.stanford.nlp.util.Index,edu.stanford.nlp.util.Index):edu.stanford.nlp.classify.Dataset","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `sents` last assigned on line 285 could be null and is dereferenced at line 289.","tnFile":"src/edu/stanford/nlp/quoteattribution/QuoteAttributionUtils.java","tnLine":289,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.quoteattribution.QuoteAttributionUtils.getSentsForQuoteParagraphs(edu.stanford.nlp.pipeline.Annotation,edu.stanford.nlp.util.CoreMap):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `parseTag(tag)` could be null and is dereferenced by call to `isBreaking(...)` at line 346.","tnFile":"src/edu/stanford/nlp/util/XMLUtils.java","tnLine":346,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.util.XMLUtils.stripTags(java.io.Reader,java.util.List,boolean):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.label()` could be null and is dereferenced at line 265.","tnFile":"src/edu/stanford/nlp/parser/lexparser/TueBaDZParserParams.java","tnLine":265,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.TueBaDZParserParams.leftPhrasal(edu.stanford.nlp.trees.Tree):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void GrammaticalRelation.main(java.lang.String[])` indirectly writes to field `result.child` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/trees/GrammaticalRelation.java","tnLine":630,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.GrammaticalRelation.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `head.label()` could be null and is dereferenced at line 504.","tnFile":"src/edu/stanford/nlp/dcoref/RuleBasedCorefMentionFinder.java","tnLine":504,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.dcoref.RuleBasedCorefMentionFinder.safeHead(edu.stanford.nlp.trees.Tree,int):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `double[][] LinearClassifierFactory.adaptWeights(double[][],GeneralDataset)` indirectly reads without synchronization from `this.evalIters`. Potentially races with write in method `LinearClassifierFactory.setEvaluators(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/classify/LinearClassifierFactory.java","tnLine":481,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.LinearClassifierFactory.adaptWeights(double[][],edu.stanford.nlp.classify.GeneralDataset):double[][]","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.RandomAccessFile` acquired by call to `RandomAccessFile(...)` at line 855 is not released after line 879.\n**Note**: potential exception at line 859","tnFile":"src/edu/stanford/nlp/util/FileBackedCache.java","tnLine":879,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.util.FileBackedCache.acquireFileLock(java.io.File):edu.stanford.nlp.util.FileBackedCache$FileSemaphore","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired by call to `new()` at line 255 is not released after line 259.","tnFile":"src/edu/stanford/nlp/ie/NERServer.java","tnLine":259,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.NERServer$NERClient.communicateWithNERServer(java.lang.String,int,java.lang.String,java.io.BufferedReader,java.io.BufferedWriter,boolean):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `doc.annotation.get(edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation)` could be null and is dereferenced at line 61.","tnFile":"src/edu/stanford/nlp/dcoref/SingletonPredictor.java","tnLine":61,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.dcoref.SingletonPredictor.setTokenIndices(edu.stanford.nlp.dcoref.Document):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Collection UniversalEnglishGrammaticalRelations.getAdvcls()` reads without synchronization from container `trees.UniversalEnglishGrammaticalRelations.advcls` via call to `values`. Potentially races with write in method `UniversalEnglishGrammaticalRelations.getAdvcl(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/trees/UniversalEnglishGrammaticalRelations.java","tnLine":1724,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.UniversalEnglishGrammaticalRelations.getAdvcls():java.util.Collection","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `parent.label()` could be null and is dereferenced at line 960.","tnFile":"src/edu/stanford/nlp/parser/lexparser/SplittingGrammarExtractor.java","tnLine":960,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.SplittingGrammarExtractor.recountOutside(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.Tree,java.util.IdentityHashMap,java.util.IdentityHashMap):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `aMap.get(valueOf(fIndex))` could be null and is dereferenced at line 264.","tnFile":"src/edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunctionWithDropout.java","tnLine":264,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunctionWithDropout.increScore(java.util.Map,int,int,double):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `SentenceAlgorithms.sentence.document.asAnnotation().get(edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation)` could be null and is dereferenced at line 530.","tnFile":"src/edu/stanford/nlp/simple/SentenceAlgorithms.java","tnLine":530,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.simple.SentenceAlgorithms.unescapeHTML():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileInputStream` acquired by call to `FileInputStream(...)` at line 78 is not released after line 78.","tnFile":"src/edu/stanford/nlp/util/CacheMap.java","tnLine":78,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.util.CacheMap.create(int,float,boolean,java.lang.String,boolean):edu.stanford.nlp.util.CacheMap","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.net.HttpURLConnection` acquired to `connection` by call to `openConnection()` at line 533 is not released after line 543.","tnFile":"src/edu/stanford/nlp/pipeline/StanfordCoreNLPClient.java","tnLine":543,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.StanfordCoreNLPClient.checkStatus(java.net.URL):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `DocumentPreprocessor(...)` at line 64 is not released after line 76.","tnFile":"src/edu/stanford/nlp/parser/lexparser/demo/ParserDemo.java","tnLine":76,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.demo.ParserDemo.demoDP(edu.stanford.nlp.parser.lexparser.LexicalizedParser,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `SUTime$Temporal TimeFormatter$TimeZoneComponent.updateTemporal(SUTime$Temporal,String)` indirectly reads without synchronization from container `time.TimeFormatter$TimeZoneComponent.timeZonesByName` via call to `get`. Potentially races with write in method `TimeFormatter$TimeZoneComponent(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/time/TimeFormatter.java","tnLine":673,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.time.TimeFormatter$TimeZoneComponent.updateTemporal(edu.stanford.nlp.time.SUTime$Temporal,java.lang.String):edu.stanford.nlp.time.SUTime$Temporal","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 1990 is not released after line 1992.","tnFile":"src/edu/stanford/nlp/stats/Counters.java","tnLine":1992,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.stats.Counters.serializeCounter(edu.stanford.nlp.stats.Counter,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `sentences` last assigned on line 1119 could be null and is dereferenced at line 1122.","tnFile":"src/edu/stanford/nlp/coref/docreader/CoNLLDocumentReader.java","tnLine":1122,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.coref.docreader.CoNLLDocumentReader.extractGoldMentions(edu.stanford.nlp.coref.docreader.CoNLLDocumentReader$CoNLLDocument):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Dataset.changeFeatureIndex(Index)` reads without synchronization from `this.data`. Potentially races with write in method `Dataset.add(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/classify/Dataset.java","tnLine":562,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.Dataset.changeFeatureIndex(edu.stanford.nlp.util.Index):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.util.Formatter` acquired by call to `new()` at line 328 is not released after line 328.","tnFile":"src/edu/stanford/nlp/util/logging/Redwood.java","tnLine":328,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.util.logging.Redwood.lambda$logf$2(java.lang.String,java.lang.Object[]):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileInputStream` acquired by call to `FileInputStream(...)` at line 238 is not released after line 238.","tnFile":"src/edu/stanford/nlp/loglinear/benchmarks/CoNLLBenchmark.java","tnLine":238,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.loglinear.benchmarks.CoNLLBenchmark.getEmbeddings(java.lang.String,java.util.ArrayList):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `leftChild.label()` could be null and is dereferenced at line 457.","tnFile":"src/edu/stanford/nlp/parser/lexparser/TreeBinarizer.java","tnLine":457,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.TreeBinarizer.outsideBinarizeLocalTree(edu.stanford.nlp.trees.Tree,java.lang.String,java.lang.String,int,edu.stanford.nlp.ling.TaggedWord,int,java.lang.String,int,java.lang.String):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `Dictionary.partTakingVerbs.get(valueOf(i))` could be null and is dereferenced at line 109.","tnFile":"src/edu/stanford/nlp/tagger/maxent/Dictionary.java","tnLine":109,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.tagger.maxent.Dictionary.getCountIn(java.lang.String):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Dataset.addFeatures(Collection,boolean)` writes to field `this.data.[_]` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/classify/Dataset.java","tnLine":361,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.Dataset.addFeatures(java.util.Collection,boolean):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void AbstractBatchOptimizer$TrainingWorker.run()` indirectly writes to field `derivative.pointers.[_].[_]` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/loglinear/learning/AbstractBatchOptimizer.java","tnLine":383,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.loglinear.learning.AbstractBatchOptimizer$TrainingWorker.run():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `UniversalDependenciesFeatureAnnotator()` at line 463 is not released after line 493.","tnFile":"src/edu/stanford/nlp/trees/ud/UniversalDependenciesFeatureAnnotator.java","tnLine":493,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.ud.UniversalDependenciesFeatureAnnotator.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Redwood.startTrack(java.lang.Object[])` reads without synchronization from `logging.Redwood.isThreaded`. Potentially races with write in method `Redwood.endThreads(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/util/logging/Redwood.java","tnLine":354,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.util.logging.Redwood.startTrack(java.lang.Object[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `headerIndex.get(\"prefix\")` could be null and is dereferenced at line 93.","tnFile":"src/edu/stanford/nlp/ie/qe/UnitPrefix.java","tnLine":93,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.qe.UnitPrefix.loadPrefixes(java.lang.String):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List PhraseTable.findAllMatches(PhraseTable$WordList,int,int,boolean)` indirectly reads without synchronization from container `this.normalizedCache` via call to `get`. Potentially races with write in method `PhraseTable.getNormalizedForm(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/ling/tokensregex/PhraseTable.java","tnLine":645,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ling.tokensregex.PhraseTable.findAllMatches(edu.stanford.nlp.ling.tokensregex.PhraseTable$WordList,int,int,boolean):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `doc.get(edu.stanford.nlp.ling.CoreAnnotations$QuotationsAnnotation)` could be null and is dereferenced at line 255.","tnFile":"src/edu/stanford/nlp/quoteattribution/QuoteAttributionUtils.java","tnLine":255,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.quoteattribution.QuoteAttributionUtils.getParagraphRank(edu.stanford.nlp.pipeline.Annotation,edu.stanford.nlp.util.CoreMap):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RVFDataset Dataset.getL1NormalizedTFIDFDataset()` indirectly reads without synchronization from `this.data`. Potentially races with write in method `Dataset.ensureSize()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/classify/Dataset.java","tnLine":286,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.Dataset.getL1NormalizedTFIDFDataset():edu.stanford.nlp.classify.RVFDataset","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `ans` last assigned on line 257 could be null and is dereferenced at line 260.","tnFile":"src/edu/stanford/nlp/sequences/CoNLLDocumentReaderAndWriter.java","tnLine":260,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.sequences.CoNLLDocumentReaderAndWriter.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ConcurrentHashIndex.saveToFilename(String)` reads without synchronization from `this.indexSize`. Potentially races with write in method `ConcurrentHashIndex.addToIndex(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/util/concurrent/ConcurrentHashIndex.java","tnLine":185,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.util.concurrent.ConcurrentHashIndex.saveToFilename(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired by call to `new()` at line 949 is not released after line 949.\n**Note**: potential exception at line 949","tnFile":"src/edu/stanford/nlp/trees/Tree.java","tnLine":949,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.Tree.pennString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.LineNumberReader` acquired by call to `new()` at line 63 is not released after line 91.\n**Note**: potential exception at line 66","tnFile":"src/edu/stanford/nlp/international/arabic/pipeline/IBMMTArabicDataset.java","tnLine":91,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.international.arabic.pipeline.IBMMTArabicDataset.build():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `getBufferedFileReader(...)` at line 261 is not released after line 261.","tnFile":"src/edu/stanford/nlp/stats/MultiClassPrecisionRecallExtendedStats.java","tnLine":261,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.stats.MultiClassPrecisionRecallExtendedStats.score(java.lang.String,java.lang.String,java.lang.String):double","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void WeightedDataset.shuffleWithSideInformation(long,List)` reads without synchronization from `this.labels`. Potentially races with write in method `WeightedDataset.ensureSize()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/classify/WeightedDataset.java","tnLine":141,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.WeightedDataset.shuffleWithSideInformation(long,java.util.List):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `sentence` last assigned on line 961 could be null and is dereferenced at line 966.","tnFile":"src/edu/stanford/nlp/naturalli/QuestionToStatementTranslator.java","tnLine":966,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.naturalli.QuestionToStatementTranslator.processWhenDo(edu.stanford.nlp.ling.tokensregex.TokenSequenceMatcher):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Dataset.printFullFeatureMatrix(PrintWriter)` reads without synchronization from `this.featureIndex`. Potentially races with write in method `Dataset.selectFeatures(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/classify/Dataset.java","tnLine":504,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.Dataset.printFullFeatureMatrix(java.io.PrintWriter):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `lab` last assigned on line 692 could be null and is dereferenced at line 693.","tnFile":"src/edu/stanford/nlp/parser/lexparser/EnglishTreebankParserParams.java","tnLine":693,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.EnglishTreebankParserParams.transformTree(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.Tree):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `crt.get(edu.stanford.nlp.ling.CoreAnnotations$AnswerAnnotation)` could be null and is dereferenced at line 424.","tnFile":"src/edu/stanford/nlp/ie/regexp/NumberSequenceClassifier.java","tnLine":424,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.regexp.NumberSequenceClassifier.changeLeftToRight(java.util.List,int,java.lang.String,java.lang.String,java.lang.String):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `InputStreamReader(...)` at line 139 is not released after line 149.\n**Note**: potential exception at line 134","tnFile":"src/edu/stanford/nlp/international/arabic/pipeline/ATBCorrector.java","tnLine":149,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.international.arabic.pipeline.ATBCorrector.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `label()` could be null and is dereferenced by call to `Word(...)` at line 1405.","tnFile":"src/edu/stanford/nlp/trees/Tree.java","tnLine":1405,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.Tree.yieldWords(java.util.ArrayList):java.util.ArrayList","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 181 is not released after line 181.","tnFile":"src/edu/stanford/nlp/io/IOUtils.java","tnLine":181,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.io.IOUtils.writeStringToFileNoExceptions(java.lang.String,java.lang.String,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `quotesMap.get(k)` could be null and is dereferenced at line 657.","tnFile":"src/edu/stanford/nlp/pipeline/QuoteAnnotator.java","tnLine":657,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.QuoteAnnotator.isAQuoteMapStarter(int,java.util.HashMap):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.label()` could be null and is dereferenced at line 65.","tnFile":"src/edu/stanford/nlp/parser/lexparser/TreeBinarizer.java","tnLine":65,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.TreeBinarizer.join(java.util.List):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `RecordIterator(...)` at line 259 is not released after line 259.","tnFile":"src/edu/stanford/nlp/stats/DataSeries.java","tnLine":259,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.stats.DataSeries$ListDataSeries.readDataSeries(java.io.InputStream,boolean):edu.stanford.nlp.stats.DataSeries[]","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Pair Dataset.split(double)` indirectly reads with synchronization from `this.data`. Potentially races with unsynchronized write in method `Dataset.ensureSize()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/classify/Dataset.java","tnLine":95,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.Dataset.split(double):edu.stanford.nlp.util.Pair","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.label()` could be null and is dereferenced at line 356.","tnFile":"src/edu/stanford/nlp/parser/lexparser/NegraPennTreebankParserParams.java","tnLine":356,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.NegraPennTreebankParserParams.containsVP(edu.stanford.nlp.trees.Tree):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `c` last assigned on line 83 could be null and is dereferenced at line 84.","tnFile":"src/edu/stanford/nlp/stats/TwoDimensionalIntCounter.java","tnLine":84,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.stats.TwoDimensionalIntCounter.size():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `labeledSequence.get(focus).get(edu.stanford.nlp.international.arabic.process.IOBUtils$SuffixMarkerAnnotation)` could be null and is dereferenced at line 677.","tnFile":"src/edu/stanford/nlp/international/arabic/process/IOBUtils.java","tnLine":677,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.international.arabic.process.IOBUtils.addSuffixMarker(int,java.util.List):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.OutputStreamWriter` acquired by call to `OutputStreamWriter(...)` at line 118 is not released after line 124.\n**Note**: potential exception at line 119","tnFile":"src/edu/stanford/nlp/parser/server/LexicalizedParserClient.java","tnLine":124,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.server.LexicalizedParserClient.getParse(java.lang.String,boolean):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileInputStream` acquired by call to `FileInputStream(...)` at line 1546 is not released after line 1546.","tnFile":"src/edu/stanford/nlp/ie/AbstractSequenceClassifier.java","tnLine":1546,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.AbstractSequenceClassifier.loadClassifier(java.io.File,java.util.Properties):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `polarity.getProjectEquivalence()` could be null and is dereferenced at line 2094.","tnFile":"src/edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer.java","tnLine":2094,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.ProtobufAnnotationSerializer.fromProto(edu.stanford.nlp.pipeline.CoreNLPProtos$Polarity):edu.stanford.nlp.naturalli.Polarity","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `doc.get(edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation)` could be null and is dereferenced at line 1007.","tnFile":"src/edu/stanford/nlp/pipeline/StanfordCoreNLPServer.java","tnLine":1007,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.StanfordCoreNLPServer$TokensRegexHandler.lambda$null$5(boolean,edu.stanford.nlp.pipeline.Annotation,edu.stanford.nlp.ling.tokensregex.TokenSequencePattern,edu.stanford.nlp.pipeline.JSONOutputter$Writer):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.LineNumberReader` acquired by call to `new()` at line 180 is not released after line 240.","tnFile":"src/edu/stanford/nlp/trees/DependencyScoring.java","tnLine":240,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.DependencyScoring.readDeps(java.lang.String):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.OutputStreamWriter` acquired by call to `OutputStreamWriter(...)` at line 163 is not released after line 168.\n**Note**: potential exception at line 164","tnFile":"src/edu/stanford/nlp/parser/server/LexicalizedParserClient.java","tnLine":168,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.server.LexicalizedParserClient.sendQuit():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired to `pw` by call to `new()` at line 211 is not released after line 214.\n**Note**: potential exception at line 212","tnFile":"src/edu/stanford/nlp/sequences/PlainTextDocumentReaderAndWriter.java","tnLine":214,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.sequences.PlainTextDocumentReaderAndWriter.getAnswers(java.util.List,edu.stanford.nlp.sequences.PlainTextDocumentReaderAndWriter$OutputStyle,boolean):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `SUTime$InexactTime.range.mid()` could be null and is dereferenced at line 2311.","tnFile":"src/edu/stanford/nlp/time/SUTime.java","tnLine":2311,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.time.SUTime$InexactTime.getJodaTimeInstant():org.joda.time.Instant","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `sentences` last assigned on line 233 could be null and is dereferenced at line 236.","tnFile":"src/edu/stanford/nlp/coref/md/RuleBasedCorefMentionFinder.java","tnLine":236,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.coref.md.RuleBasedCorefMentionFinder.removeSpuriousMentionsEn(edu.stanford.nlp.pipeline.Annotation,java.util.List,edu.stanford.nlp.coref.data.Dictionaries):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `edu.stanford.nlp.trees.PennTreeReader` acquired by call to `newTreeReader(...)` at line 45 is not released after line 68.\n**Note**: potential exception at line 55","tnFile":"src/edu/stanford/nlp/international/french/scripts/TreeToMorfette.java","tnLine":68,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.international.french.scripts.TreeToMorfette.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `getDataOutputStream(...)` at line 650 is not released after line 652.","tnFile":"src/edu/stanford/nlp/maxent/iis/LambdaSolve.java","tnLine":652,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.maxent.iis.LambdaSolve.save_lambdas(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.net.Socket` acquired to `socket` by call to `new()` at line 56 is not released after line 64.\n**Note**: potential exception at line 59","tnFile":"src/edu/stanford/nlp/parser/server/LexicalizedParserClient.java","tnLine":64,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.server.LexicalizedParserClient.getTokenizedText(java.lang.String):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired by call to `getInputStreamFromURLOrClasspathOrFileSystem(...)` at line 63 is not released after line 64.","tnFile":"src/edu/stanford/nlp/pipeline/LanguageInfo.java","tnLine":64,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.LanguageInfo.getLanguageProperties(java.lang.String):java.util.Properties","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean GraphicalModel.valueEquals(GraphicalModel,double)` reads without synchronization from container `this.variableMetaData` via call to `equals`. Potentially races with write in method `GraphicalModel.getVariableMetaDataByReference(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/loglinear/model/GraphicalModel.java","tnLine":264,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.loglinear.model.GraphicalModel.valueEquals(edu.stanford.nlp.loglinear.model.GraphicalModel,double):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired to `pw` by call to `getPrintWriter(...)` at line 114 is not released after line 160.\n**Note**: potential exception at line 154","tnFile":"src/edu/stanford/nlp/ie/qe/QuantifiableEntityExtractor.java","tnLine":160,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.qe.QuantifiableEntityExtractor.generateUnitsStage0Rules(java.lang.String,java.lang.String,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `getBufferedFileReader(...)` at line 151 is not released after line 160.\n**Note**: potential exception at line 154","tnFile":"src/edu/stanford/nlp/ie/qe/QuantifiableEntityExtractor.java","tnLine":160,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.qe.QuantifiableEntityExtractor.generateUnitsStage0Rules(java.lang.String,java.lang.String,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 92 is not released after line 96.\n**Note**: potential exception at line 94","tnFile":"src/edu/stanford/nlp/ie/machinereading/BasicRelationExtractor.java","tnLine":96,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.machinereading.BasicRelationExtractor.save(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `String ConcurrentHashIndex.toString()` indirectly reads without synchronization from `this.indexSize`. Potentially races with write in method `ConcurrentHashIndex.addToIndex(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/util/concurrent/ConcurrentHashIndex.java","tnLine":230,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.util.concurrent.ConcurrentHashIndex.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileInputStream` acquired by call to `FileInputStream(...)` at line 27 is not released after line 27.","tnFile":"src/edu/stanford/nlp/tagger/io/TSVTaggedFileReader.java","tnLine":27,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.tagger.io.TSVTaggedFileReader.<init>(edu.stanford.nlp.tagger.io.TaggedFileRecord)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.label()` could be null and is dereferenced at line 283.","tnFile":"src/edu/stanford/nlp/trees/NPTmpRetainingTreeNormalizer.java","tnLine":283,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.NPTmpRetainingTreeNormalizer.lambda$normalizeWholeTree$1(edu.stanford.nlp.trees.Tree):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `sentences` last assigned on line 74 could be null and is dereferenced at line 77.","tnFile":"src/edu/stanford/nlp/coref/hybrid/HybridCorefPrinter.java","tnLine":77,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.coref.hybrid.HybridCorefPrinter.printRawDoc(edu.stanford.nlp.coref.data.Document,boolean,boolean):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `tagger` last assigned on line 81 could be null and is dereferenced at line 82.","tnFile":"src/edu/stanford/nlp/parser/common/ParserGrammar.java","tnLine":82,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.common.ParserGrammar.parse(java.lang.String):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `m.sentenceWords.get(m.headIndex).get(edu.stanford.nlp.ling.CoreAnnotations$PartOfSpeechAnnotation)` could be null and is dereferenced at line 495.","tnFile":"src/edu/stanford/nlp/dcoref/Rules.java","tnLine":495,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.dcoref.Rules.entitySameProperHeadLastWord(edu.stanford.nlp.dcoref.Mention,edu.stanford.nlp.dcoref.Mention):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired to `p` by call to `new()` at line 317 is not released after line 322.","tnFile":"src/edu/stanford/nlp/trees/international/pennchinese/CHTBLexer.java","tnLine":322,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.international.pennchinese.CHTBLexer.reportError(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `sentences` last assigned on line 185 could be null and is dereferenced at line 196.","tnFile":"src/edu/stanford/nlp/coref/hybrid/HybridCorefPrinter.java","tnLine":196,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.coref.hybrid.HybridCorefPrinter.sentenceStringWithMention(int,edu.stanford.nlp.coref.data.Document,boolean,boolean):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `doc.get(edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation)` could be null and is dereferenced at line 82.","tnFile":"src/edu/stanford/nlp/dcoref/RuleBasedCorefMentionFinder.java","tnLine":82,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.dcoref.RuleBasedCorefMentionFinder.extractPredictedMentions(edu.stanford.nlp.pipeline.Annotation,int,edu.stanford.nlp.dcoref.Dictionaries):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `InputStreamReader(...)` at line 44 is not released after line 50.\n**Note**: potential exception at line 45","tnFile":"src/edu/stanford/nlp/international/arabic/pipeline/MWETreeVisitorExternal.java","tnLine":50,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.international.arabic.pipeline.MWETreeVisitorExternal.loadMWEs():java.util.Set","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileReader` acquired by call to `RecordIterator(...)` at line 272 is not released after line 278.","tnFile":"src/edu/stanford/nlp/io/RecordIterator.java","tnLine":278,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.io.RecordIterator.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `edu.stanford.nlp.trees.PennTreeReader` acquired by call to `newTreeReader(...)` at line 85 is not released after line 88.","tnFile":"src/edu/stanford/nlp/trees/tregex/gui/Tdiff.java","tnLine":88,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.tregex.gui.Tdiff.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `*tree.children()[0].label()` could be null and is dereferenced at line 97.","tnFile":"src/edu/stanford/nlp/parser/dvparser/FilterConfusingRules.java","tnLine":97,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.dvparser.FilterConfusingRules.test(edu.stanford.nlp.trees.Tree):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `document.get(edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation)` could be null and is dereferenced at line 28.","tnFile":"src/edu/stanford/nlp/time/TimexTreeAnnotator.java","tnLine":28,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.time.TimexTreeAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `CorefCluster.representative` last assigned on line 89 could be null and is dereferenced at line 116.","tnFile":"src/edu/stanford/nlp/dcoref/CorefCluster.java","tnLine":116,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.dcoref.CorefCluster.<init>(int,java.util.Set)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `label` last assigned on line 59 could be null and is dereferenced at line 60.","tnFile":"src/edu/stanford/nlp/parser/shiftreduce/ShiftReduceUtils.java","tnLine":60,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.shiftreduce.ShiftReduceUtils.rightIndex(edu.stanford.nlp.trees.Tree):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `value` last assigned on line 188 could be null and is dereferenced at line 190.","tnFile":"src/edu/stanford/nlp/parser/shiftreduce/State.java","tnLine":190,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.shiftreduce.State.findSeparators(java.util.List):java.util.TreeMap","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `encodedInputStreamReader(...)` at line 926 is not released after line 941.","tnFile":"src/edu/stanford/nlp/pipeline/StanfordCoreNLP.java","tnLine":941,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.StanfordCoreNLP.shell():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Document.forceSentences(List)` writes to field `this.sentences` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/simple/Document.java","tnLine":778,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.simple.Document.forceSentences(java.util.List):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `String PhraseTable.getNormalizedForm(String)` reads without synchronization from `this.normalizedCache`. Potentially races with write in method `PhraseTable.setNormalizationCacheSize(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/ling/tokensregex/PhraseTable.java","tnLine":487,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ling.tokensregex.PhraseTable.getNormalizedForm(java.lang.String):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.label()` could be null and is dereferenced at line 405.","tnFile":"src/edu/stanford/nlp/parser/lexparser/TreeBinarizer.java","tnLine":405,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.TreeBinarizer.insideBinarizeLocalTree(edu.stanford.nlp.trees.Tree,int,edu.stanford.nlp.ling.TaggedWord,int,int):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean PhraseTable.addPhrase(String,String,Object)` indirectly reads without synchronization from container `this.normalizedCache` via call to `get`. Potentially races with write in method `PhraseTable.getNormalizedForm(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/ling/tokensregex/PhraseTable.java","tnLine":309,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ling.tokensregex.PhraseTable.addPhrase(java.lang.String,java.lang.String,java.lang.Object):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired by call to `getInputStreamFromURLOrClasspathOrFileSystem(...)` at line 637 is not released after line 641.","tnFile":"src/edu/stanford/nlp/io/IOUtils.java","tnLine":641,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.io.IOUtils.readerFromString(java.lang.String,java.lang.String):java.io.BufferedReader","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `str` last assigned on line 2017 could be null and is dereferenced at line 2018.","tnFile":"src/edu/stanford/nlp/parser/lexparser/EnglishTreebankParserParams.java","tnLine":2018,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.EnglishTreebankParserParams.hasClausalV(edu.stanford.nlp.trees.Tree):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `nbWeights` last assigned on line 83 could be null and is dereferenced at line 85.","tnFile":"src/edu/stanford/nlp/classify/NaiveBayesClassifierFactory.java","tnLine":85,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.NaiveBayesClassifierFactory.trainClassifier(int[][],int[],int,int,edu.stanford.nlp.util.Index,edu.stanford.nlp.util.Index):edu.stanford.nlp.classify.NaiveBayesClassifier","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Dataset.addLabel(Object)` reads without synchronization from `this.labels`. Potentially races with write in method `Dataset.ensureSize()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/classify/Dataset.java","tnLine":339,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.Dataset.addLabel(java.lang.Object):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.LineNumberReader` acquired by call to `new()` at line 1059 is not released after line 1082.","tnFile":"src/edu/stanford/nlp/trees/GrammaticalStructure.java","tnLine":1082,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.GrammaticalStructure.readCoNLLXGrammaticalStructureCollection(java.lang.String,java.util.Map,edu.stanford.nlp.trees.international.pennchinese.UniversalChineseGrammaticalStructure$FromDependenciesFactory):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `ann.get(edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation)` could be null and is dereferenced at line 87.","tnFile":"src/edu/stanford/nlp/naturalli/demo/OpenIEServlet.java","tnLine":87,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.naturalli.demo.OpenIEServlet.annotate(edu.stanford.nlp.pipeline.StanfordCoreNLP,edu.stanford.nlp.pipeline.Annotation):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired to `pw` by call to `new()` at line 415 is not released after line 419.","tnFile":"src/edu/stanford/nlp/trees/Treebank.java","tnLine":419,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.Treebank.textualSummary(edu.stanford.nlp.trees.TreebankLanguagePack):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Dataset.selectFeatures(int,double[])` reads without synchronization from `this.size`. Potentially races with write in method `Dataset.add(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/classify/Dataset.java","tnLine":605,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.Dataset.selectFeatures(int,double[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `cs.docMaker.reader` last assigned on line 363 could be null and is dereferenced by call to `resetDocs()` at line 364.","tnFile":"src/edu/stanford/nlp/coref/hybrid/HybridCorefPrinter.java","tnLine":364,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.coref.hybrid.HybridCorefPrinter.linkDistanceAnalysis(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `t2` last assigned on line 89 could be null and is dereferenced at line 92.","tnFile":"src/edu/stanford/nlp/trees/tregex/gui/Tdiff.java","tnLine":92,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.tregex.gui.Tdiff.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `tokens` last assigned on line 246 could be null and is dereferenced at line 250.","tnFile":"src/edu/stanford/nlp/quoteattribution/Sieves/Sieve.java","tnLine":250,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.quoteattribution.Sieves.Sieve.scanForPronouns(edu.stanford.nlp.util.Pair):java.util.ArrayList","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `state.stack.peek().value()` could be null and is dereferenced at line 87.","tnFile":"src/edu/stanford/nlp/parser/shiftreduce/BaseModel.java","tnLine":87,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.shiftreduce.BaseModel.findEmergencyTransition(edu.stanford.nlp.parser.shiftreduce.State,java.util.List):edu.stanford.nlp.parser.shiftreduce.Transition","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `annotation.get(edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation)` could be null and is dereferenced at line 61.","tnFile":"src/edu/stanford/nlp/pipeline/GenderAnnotator.java","tnLine":61,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.GenderAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 77 is not released after line 84.","tnFile":"src/edu/stanford/nlp/io/IOUtils.java","tnLine":84,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.io.IOUtils.writeObjectToFile(java.lang.Object,java.io.File,boolean):java.io.File","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `edu.stanford.nlp.io.EncodingFileReader` acquired by call to `EncodingFileReader(...)` at line 1669 is not released after line 1677.\n**Note**: potential exception at line 1671","tnFile":"src/edu/stanford/nlp/io/IOUtils.java","tnLine":1677,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.io.IOUtils.stringFromFile(java.lang.String,java.lang.String):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintStream` acquired by call to `new()` at line 40 is not released after line 61.\n**Note**: potential exception at line 41","tnFile":"src/edu/stanford/nlp/trees/international/hebrew/SplitMaker.java","tnLine":61,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.international.hebrew.SplitMaker.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `InputStreamReader(...)` at line 28 is not released after line 43.\n**Note**: potential exception at line 31","tnFile":"src/edu/stanford/nlp/international/spanish/scripts/ConfusionMatrixTSV.java","tnLine":43,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.international.spanish.scripts.ConfusionMatrixTSV.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.label()` could be null and is dereferenced at line 329.","tnFile":"src/edu/stanford/nlp/trees/UniversalSemanticHeadFinder.java","tnLine":329,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.UniversalSemanticHeadFinder.determineNonTrivialHead(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.Tree):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 279 is not released after line 279.","tnFile":"src/edu/stanford/nlp/parser/metrics/Evalb.java","tnLine":279,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.metrics.Evalb.emitSortedTrees(java.util.PriorityQueue,int,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `InputStreamReader(...)` at line 486 is not released after line 486.","tnFile":"src/edu/stanford/nlp/international/spanish/process/SpanishTokenizer.java","tnLine":486,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.international.spanish.process.SpanishTokenizer.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t1.parent(root)` could be null and is dereferenced at line 903.","tnFile":"src/edu/stanford/nlp/trees/tregex/Relation.java","tnLine":903,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.tregex.Relation$19.satisfies(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.tregex.TregexMatcher):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `sentences` last assigned on line 155 could be null and is dereferenced at line 157.","tnFile":"src/edu/stanford/nlp/coref/data/DocumentPreprocessor.java","tnLine":157,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.coref.data.DocumentPreprocessor.fillSyntacticInfo(edu.stanford.nlp.coref.data.Document):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 77 is not released after line 82.","tnFile":"src/edu/stanford/nlp/io/IOUtils.java","tnLine":82,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.io.IOUtils.writeObjectToFile(java.lang.Object,java.io.File,boolean):java.io.File","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `tagCounter.tempMInteger` last assigned on line 283 could be null and is dereferenced by call to `incrementCount(...)` at line 295.","tnFile":"src/edu/stanford/nlp/parser/lexparser/ChineseMaxentLexicon.java","tnLine":295,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.ChineseMaxentLexicon.finishTraining():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List PhraseTable.findAllMatches(PhraseTable$WordList)` indirectly reads without synchronization from container `this.normalizedCache` via call to `get`. Potentially races with write in method `PhraseTable.getNormalizedForm(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/ling/tokensregex/PhraseTable.java","tnLine":613,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ling.tokensregex.PhraseTable.findAllMatches(edu.stanford.nlp.ling.tokensregex.PhraseTable$WordList):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `tree.label()` could be null and is dereferenced at line 331.","tnFile":"src/edu/stanford/nlp/parser/lexparser/SplittingGrammarExtractor.java","tnLine":331,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.SplittingGrammarExtractor.initialBetasAndLexicon(edu.stanford.nlp.trees.Tree,int,double):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired by call to `new()` at line 1170 is not released after line 1170.\n**Note**: potential exception at line 1170","tnFile":"src/edu/stanford/nlp/ie/ner/CMMClassifier.java","tnLine":1170,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.ner.CMMClassifier.getClassifier(java.io.InputStream):edu.stanford.nlp.ie.ner.CMMClassifier","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `oldParent` last assigned on line 43 could be null and is dereferenced by call to `objectEqualityIndexOf(...)` at line 44.","tnFile":"src/edu/stanford/nlp/trees/tregex/tsurgeon/MoveNode.java","tnLine":44,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.tregex.tsurgeon.MoveNode$Matcher.evaluate(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.tregex.TregexMatcher):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired by call to `new()` at line 1147 is not released after line 1147.\n**Note**: potential exception at line 1147","tnFile":"src/edu/stanford/nlp/ie/ner/CMMClassifier.java","tnLine":1147,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.ner.CMMClassifier.getClassifierNoExceptions(java.io.InputStream):edu.stanford.nlp.ie.ner.CMMClassifier","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `lab` last assigned on line 239 could be null and is dereferenced at line 240.","tnFile":"src/edu/stanford/nlp/parser/lexparser/NegraPennTreebankParserParams.java","tnLine":240,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.NegraPennTreebankParserParams.transformTree(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.Tree):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `counter` last assigned on line 50 could be null and is dereferenced at line 53.","tnFile":"src/edu/stanford/nlp/truecaser/MixDisambiguation.java","tnLine":53,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.truecaser.MixDisambiguation.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `kid.value()` could be null and is dereferenced at line 1886.","tnFile":"src/edu/stanford/nlp/parser/lexparser/EnglishTreebankParserParams.java","tnLine":1886,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.EnglishTreebankParserParams.firstOfSeveralNNP(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.Tree):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `*daughterTrees[headIdx].label()` could be null and is dereferenced at line 392.","tnFile":"src/edu/stanford/nlp/trees/AbstractCollinsHeadFinder.java","tnLine":392,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.AbstractCollinsHeadFinder.findRightExceptHead(edu.stanford.nlp.trees.Tree[],java.lang.String[]):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `headerIndex.get(\"unit\")` could be null and is dereferenced at line 119.","tnFile":"src/edu/stanford/nlp/ie/qe/Units.java","tnLine":119,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.qe.Units.loadUnits(java.lang.String):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.label()` could be null and is dereferenced at line 167.","tnFile":"src/edu/stanford/nlp/trees/international/tuebadz/TueBaDZHeadFinder.java","tnLine":167,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.international.tuebadz.TueBaDZHeadFinder.determineNonTrivialHead(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.Tree):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `tree.label()` could be null and is dereferenced at line 58.","tnFile":"src/edu/stanford/nlp/parser/lexparser/CollinsPuncTransformer.java","tnLine":58,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.CollinsPuncTransformer.transformRoot(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.TreeFactory):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int ConcatVectorNamespace.ensureSparseFeature(String,String)` reads without synchronization from container `this.reverseSparseFeatureIndex` via call to `get`. Potentially races with write in method `ConcatVectorNamespace.ensureSparseFeature(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/loglinear/model/ConcatVectorNamespace.java","tnLine":76,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.loglinear.model.ConcatVectorNamespace.ensureSparseFeature(java.lang.String,java.lang.String):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `l` last assigned on line 136 could be null and is dereferenced at line 137.","tnFile":"src/edu/stanford/nlp/coref/data/DocumentPreprocessor.java","tnLine":137,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.coref.data.DocumentPreprocessor.getHeadIndex(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.HeadFinder):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `edu.stanford.nlp.io.StringOutputStream` acquired by call to `new()` at line 39 is not released after line 41.","tnFile":"src/edu/stanford/nlp/time/XMLUtils.java","tnLine":41,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.time.XMLUtils.nodeToString(org.w3c.dom.Node,boolean):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `Morphology()` at line 19 is not released after line 19.","tnFile":"src/edu/stanford/nlp/trees/WordStemmer.java","tnLine":19,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.WordStemmer.visitTree(edu.stanford.nlp.trees.Tree):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `edu.stanford.nlp.io.ReaderInputStream` acquired by call to `SpanishXMLTreeReader(...)` at line 44 is not released after line 44.\n**Note**: potential exception at line 44","tnFile":"src/edu/stanford/nlp/trees/international/spanish/SpanishXMLTreeReaderFactory.java","tnLine":44,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.international.spanish.SpanishXMLTreeReaderFactory.newTreeReader(java.lang.String,java.io.BufferedReader):edu.stanford.nlp.trees.TreeReader","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `*kidkids[0].value()` could be null and is dereferenced at line 210.","tnFile":"src/edu/stanford/nlp/trees/NPTmpRetainingTreeNormalizer.java","tnLine":210,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.NPTmpRetainingTreeNormalizer.includesEmptyNPSubj(edu.stanford.nlp.trees.Tree):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `edu.stanford.nlp.trees.PennTreeReader` acquired by call to `PennTreeReader(...)` at line 608 is not released after line 610.","tnFile":"src/edu/stanford/nlp/trees/Trees.java","tnLine":610,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.Trees.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `sentence` last assigned on line 537 could be null and is dereferenced at line 538.","tnFile":"src/edu/stanford/nlp/naturalli/QuestionToStatementTranslator.java","tnLine":538,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.naturalli.QuestionToStatementTranslator.processWhatIsThere(edu.stanford.nlp.ling.tokensregex.TokenSequenceMatcher):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedWriter` acquired to `w` by call to `new()` at line 411 is not released after line 424.\n**Note**: potential exception at line 414","tnFile":"src/edu/stanford/nlp/patterns/dep/ExtractPhraseFromPattern.java","tnLine":424,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.patterns.dep.ExtractPhraseFromPattern.printMatchedGraphsForPattern(java.lang.String,int):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `sgd.sList` last assigned on line 90 could be null and is dereferenced by call to `QNMinimizer$QNInfo(...)` at line 95.","tnFile":"src/edu/stanford/nlp/optimization/SGDToQNMinimizer.java","tnLine":95,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.optimization.SGDToQNMinimizer.minimize(edu.stanford.nlp.optimization.DiffFunction,double,double[],int):double[]","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.label()` could be null and is dereferenced at line 80.","tnFile":"src/edu/stanford/nlp/parser/metrics/LeafAncestorEval.java","tnLine":80,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.metrics.LeafAncestorEval.makeLineages(edu.stanford.nlp.trees.Tree):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `anno` last assigned on line 136 could be null and is dereferenced at line 140.","tnFile":"src/edu/stanford/nlp/dcoref/ACEMentionExtractor.java","tnLine":140,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.dcoref.ACEMentionExtractor.nextDoc():edu.stanford.nlp.dcoref.Document","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `l` last assigned on line 490 could be null and is dereferenced at line 491.","tnFile":"src/edu/stanford/nlp/ie/machinereading/GenericDataSetReader.java","tnLine":491,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.machinereading.GenericDataSetReader.originalFindSyntacticHead(edu.stanford.nlp.ie.machinereading.structure.EntityMention,edu.stanford.nlp.trees.Tree,java.util.List):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `ann.get(edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation)` could be null and is dereferenced at line 42.","tnFile":"src/edu/stanford/nlp/paragraphs/RunParagraphAnnotator.java","tnLine":42,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.paragraphs.RunParagraphAnnotator.runTest(java.lang.String,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `sentences` last assigned on line 86 could be null and is dereferenced at line 93.","tnFile":"src/edu/stanford/nlp/quoteattribution/QuoteAttributionUtils.java","tnLine":93,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.quoteattribution.QuoteAttributionUtils.addEnhancedSentences(edu.stanford.nlp.pipeline.Annotation,edu.stanford.nlp.parser.nndep.DependencyParser):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `label()` could be null and is dereferenced at line 1886.","tnFile":"src/edu/stanford/nlp/trees/Tree.java","tnLine":1886,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.Tree.treeSkeletonConstituentCopy():edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `children.get(i).value()` could be null and is dereferenced at line 618.","tnFile":"src/edu/stanford/nlp/trees/CoordinationTransformer.java","tnLine":618,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.CoordinationTransformer.notNP(java.util.List,int):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `pos` last assigned on line 114 could be null and is dereferenced at line 115.","tnFile":"src/edu/stanford/nlp/dcoref/RuleBasedCorefMentionFinder.java","tnLine":115,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.dcoref.RuleBasedCorefMentionFinder.setBarePlural(java.util.ArrayList):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `InputStreamReader(...)` at line 34 is not released after line 34.","tnFile":"src/edu/stanford/nlp/pipeline/AbstractTextAnnotationCreator.java","tnLine":34,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.AbstractTextAnnotationCreator.create(java.io.InputStream,java.lang.String):edu.stanford.nlp.pipeline.Annotation","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `InputStreamReader(...)` at line 118 is not released after line 119.","tnFile":"src/edu/stanford/nlp/parser/server/LexicalizedParserServer.java","tnLine":119,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.server.LexicalizedParserServer.processRequest(java.net.Socket):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `mostSpecific` last assigned on line 586 could be null and is dereferenced by call to `discardMoreSpecificFields(...)` at line 587.","tnFile":"src/edu/stanford/nlp/time/JodaTimeUtils.java","tnLine":587,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.time.JodaTimeUtils.padMoreSpecificFields(org.joda.time.Partial,org.joda.time.Period):org.joda.time.Partial","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 1115 is not released after line 1115.","tnFile":"src/edu/stanford/nlp/util/StringUtils.java","tnLine":1115,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.util.StringUtils.printToFile(java.io.File,java.lang.String,boolean,boolean,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired by call to `new()` at line 297 is not released after line 301.","tnFile":"src/edu/stanford/nlp/tagger/maxent/TestSentence.java","tnLine":301,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.tagger.maxent.TestSentence.writeTagsAndErrors(java.lang.String[],edu.stanford.nlp.io.PrintFile,boolean):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `GrammaticalRelation UniversalEnglishGrammaticalRelations.getAcl(String)` reads without synchronization from container `trees.UniversalEnglishGrammaticalRelations.acls` via call to `get`. Potentially races with write in method `UniversalEnglishGrammaticalRelations.getAcl(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/trees/UniversalEnglishGrammaticalRelations.java","tnLine":1836,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.UniversalEnglishGrammaticalRelations.getAcl(java.lang.String):edu.stanford.nlp.trees.GrammaticalRelation","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired to `err` by call to `getPrintWriter(...)` at line 160 is not released after line 164.\n**Note**: potential exception at line 161","tnFile":"src/edu/stanford/nlp/parser/charniak/CharniakParser.java","tnLine":164,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.charniak.CharniakParser.runCharniak(int,java.lang.String,java.lang.String,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired by call to `new()` at line 40 is not released after line 48.","tnFile":"src/edu/stanford/nlp/classify/demo/MnistConverter.java","tnLine":48,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.demo.MnistConverter.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired to `out` by call to `getPrintWriter(...)` at line 159 is not released after line 164.\n**Note**: potential exception at line 160","tnFile":"src/edu/stanford/nlp/parser/charniak/CharniakParser.java","tnLine":164,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.charniak.CharniakParser.runCharniak(int,java.lang.String,java.lang.String,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 378 is not released after line 378.","tnFile":"src/edu/stanford/nlp/io/IOUtils.java","tnLine":378,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.io.IOUtils.writeStreamFromString(java.lang.String):java.io.ObjectOutputStream","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `params.treebankLanguagePack()` could be null and is dereferenced at line 42.","tnFile":"src/edu/stanford/nlp/semgraph/semgrex/demo/SemgrexDemo.java","tnLine":42,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.semgraph.semgrex.demo.SemgrexDemo.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `sentences` last assigned on line 252 could be null and is dereferenced at line 254.","tnFile":"src/edu/stanford/nlp/coref/hybrid/HybridCorefPrinter.java","tnLine":254,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.coref.hybrid.HybridCorefPrinter.printMentionDetectionLog(edu.stanford.nlp.coref.data.Document):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileReader` acquired by call to `new()` at line 253 is not released after line 268.\n**Note**: potential exception at line 261","tnFile":"src/edu/stanford/nlp/international/french/FrenchMorphoFeatureSpecification.java","tnLine":268,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.international.french.FrenchMorphoFeatureSpecification.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 455 is not released after line 455.","tnFile":"src/edu/stanford/nlp/process/PTBTokenizer.java","tnLine":455,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.process.PTBTokenizer.tok(java.util.List,java.util.List,java.lang.String,java.util.regex.Pattern,java.util.regex.Pattern,java.lang.String,boolean,boolean,boolean,boolean):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.util.Formatter` acquired by call to `new()` at line 1253 is not released after line 1253.","tnFile":"src/edu/stanford/nlp/util/logging/Redwood.java","tnLine":1253,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.util.logging.Redwood$RedwoodChannels.lambda$logf$1(java.lang.String,java.lang.Object[]):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `np1.label()` could be null and is dereferenced at line 830.","tnFile":"src/edu/stanford/nlp/coref/md/CorefMentionFinder.java","tnLine":830,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.coref.md.CorefMentionFinder.checkPleonastic(edu.stanford.nlp.coref.data.Mention,edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.tregex.TregexPattern):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired by call to `transformXML(...)` at line 1486 is not released after line 1486.","tnFile":"src/edu/stanford/nlp/tagger/maxent/MaxentTagger.java","tnLine":1486,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.tagger.maxent.MaxentTagger.tagFromXML(java.io.InputStream,java.io.Writer,java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `Mention.headWord.get(edu.stanford.nlp.ling.CoreAnnotations$UtteranceAnnotation)` could be null and is dereferenced at line 313.","tnFile":"src/edu/stanford/nlp/dcoref/Mention.java","tnLine":313,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.dcoref.Mention.setDiscourse():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `readerFromString(...)` at line 49 is not released after line 69.\n**Note**: potential exception at line 50","tnFile":"src/edu/stanford/nlp/international/arabic/ArabicVerbStemBank.java","tnLine":69,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.international.arabic.ArabicVerbStemBank.load(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `edge` last assigned on line 354 could be null and is dereferenced by call to `removeEdge(...)` at line 355.","tnFile":"src/edu/stanford/nlp/trees/ud/UniversalGappingEnhancer.java","tnLine":355,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.ud.UniversalGappingEnhancer.doEnhancement(edu.stanford.nlp.semgraph.SemanticGraph,edu.stanford.nlp.ling.IndexedWord,edu.stanford.nlp.ling.IndexedWord,java.util.List,java.util.List,java.util.List):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `quotes` last assigned on line 36 could be null and is dereferenced at line 37.","tnFile":"src/edu/stanford/nlp/quoteattribution/Sieves/QMSieves/ClosestMentionSieve.java","tnLine":37,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.quoteattribution.Sieves.QMSieves.ClosestMentionSieve.doQuoteToMention(edu.stanford.nlp.pipeline.Annotation):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `corpus.get(edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation)` could be null and is dereferenced at line 288.","tnFile":"src/edu/stanford/nlp/ie/machinereading/BasicRelationExtractor.java","tnLine":288,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.machinereading.BasicRelationExtractor.createDataset(edu.stanford.nlp.pipeline.Annotation):edu.stanford.nlp.classify.GeneralDataset","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `boolean Document.equals(Object)` indirectly writes to field `this.impl.bitField0_` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/simple/Document.java","tnLine":1138,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.simple.Document.equals(java.lang.Object):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `Morphology()` at line 123 is not released after line 129.","tnFile":"src/edu/stanford/nlp/parser/common/ParserGrammar.java","tnLine":129,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.common.ParserGrammar.lemmatize(java.util.List):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void WeightedDataset.ensureSize()` writes to field `this.weights` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/classify/WeightedDataset.java","tnLine":80,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.WeightedDataset.ensureSize():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `List Document.sentences(Properties,Annotator)` reads with synchronization from `this.sentences`. Potentially races with unsynchronized write in method `Document.forceSentences(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/simple/Document.java","tnLine":655,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.simple.Document.sentences(java.util.Properties,edu.stanford.nlp.pipeline.Annotator):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `parent` last assigned on line 44 could be null and is dereferenced at line 45.","tnFile":"src/edu/stanford/nlp/parser/lexparser/PostSplitter.java","tnLine":45,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.PostSplitter.transformTreeHelper(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.TreeFactory):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileReader` acquired by call to `RecordIterator(...)` at line 271 is not released after line 271.","tnFile":"src/edu/stanford/nlp/stats/DataSeries.java","tnLine":271,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.stats.DataSeries$ListDataSeries.readDataSeries(java.lang.String):edu.stanford.nlp.stats.DataSeries[]","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `CoreDocument.annotationDocument.get(edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation)` could be null and is dereferenced at line 48.","tnFile":"src/edu/stanford/nlp/pipeline/CoreDocument.java","tnLine":48,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.CoreDocument.wrapSentences():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `readerFromString(...)` at line 65 is not released after line 73.\n**Note**: potential exception at line 68","tnFile":"src/edu/stanford/nlp/trees/international/negra/NegraPennTreeReaderFactory.java","tnLine":73,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.international.negra.NegraPennTreeReaderFactory.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `last.label()` could be null and is dereferenced at line 25.","tnFile":"src/edu/stanford/nlp/parser/lexparser/BoundaryRemover.java","tnLine":25,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.BoundaryRemover.transformTree(edu.stanford.nlp.trees.Tree):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `top.label()` could be null and is dereferenced at line 37.","tnFile":"src/edu/stanford/nlp/parser/shiftreduce/UnaryTransition.java","tnLine":37,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.shiftreduce.UnaryTransition.isLegal(edu.stanford.nlp.parser.shiftreduce.State,java.util.List):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `tb` last assigned on line 42 could be null and is dereferenced at line 81.","tnFile":"src/edu/stanford/nlp/parser/tools/PunctFrequencyDist.java","tnLine":81,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.tools.PunctFrequencyDist.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void WeightedDataset.add(Collection,Object,float)` indirectly reads with synchronization from `this.data`. Potentially races with unsynchronized write in method `WeightedDataset.ensureSize()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/classify/WeightedDataset.java","tnLine":87,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.WeightedDataset.add(java.util.Collection,java.lang.Object,float):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `ann.get(edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation)` could be null and is dereferenced at line 871.","tnFile":"src/edu/stanford/nlp/simple/Document.java","tnLine":871,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.simple.Document.runRegexner(java.util.Properties):edu.stanford.nlp.simple.Document","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `InputStreamReader(...)` at line 37 is not released after line 46.\n**Note**: potential exception at line 40","tnFile":"src/edu/stanford/nlp/parser/server/LexicalizedParserClient.java","tnLine":46,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.server.LexicalizedParserClient.readResult(java.net.Socket):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `ann.get(edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation)` could be null and is dereferenced at line 356.","tnFile":"src/edu/stanford/nlp/pipeline/EntityMentionsAnnotator.java","tnLine":356,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.EntityMentionsAnnotator.addAcronyms(edu.stanford.nlp.pipeline.Annotation):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `paths` last assigned on line 639 could be null and is dereferenced at line 641.","tnFile":"src/edu/stanford/nlp/parser/lexparser/GrammarCompactionTester.java","tnLine":641,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.GrammarCompactionTester.buildAndCompactToyGrammars():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `label` last assigned on line 374 could be null and is dereferenced at line 375.","tnFile":"src/edu/stanford/nlp/dcoref/RuleBasedCorefMentionFinder.java","tnLine":375,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.dcoref.RuleBasedCorefMentionFinder.findPartialSpan(edu.stanford.nlp.trees.Tree,int):edu.stanford.nlp.trees.Tree","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Dataset.printSparseFeatureMatrix(PrintWriter)` reads without synchronization from `this.featureIndex`. Potentially races with write in method `Dataset.selectFeatures(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/classify/Dataset.java","tnLine":539,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.Dataset.printSparseFeatureMatrix(java.io.PrintWriter):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.label()` could be null and is dereferenced at line 54.","tnFile":"src/edu/stanford/nlp/parser/metrics/TsarfatyEval.java","tnLine":54,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.metrics.TsarfatyEval.extractDeps(edu.stanford.nlp.trees.Tree,int,java.util.Set):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `argsMap.get(\"-inputDicts\")` could be null and is dereferenced at line 202.","tnFile":"src/edu/stanford/nlp/wordseg/ChineseDictionary.java","tnLine":202,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.wordseg.ChineseDictionary.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 103 is not released after line 103.","tnFile":"src/edu/stanford/nlp/international/arabic/pipeline/DecimatedArabicDataset.java","tnLine":103,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.international.arabic.pipeline.DecimatedArabicDataset$ArabicTreeDecimatedNormalizer.setupOutputFiles():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `InputStreamReader(...)` at line 611 is not released after line 616.","tnFile":"src/edu/stanford/nlp/parser/lexparser/FrenchTreebankParserParams.java","tnLine":616,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.FrenchTreebankParserParams.loadMWMap(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileInputStream` acquired by call to `FileInputStream(...)` at line 71 is not released after line 71.","tnFile":"src/edu/stanford/nlp/international/spanish/pipeline/AnCoraProcessor.java","tnLine":71,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.international.spanish.pipeline.AnCoraProcessor.<init>(java.util.ArrayList,java.util.Properties)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `RothResultsByRelation.featureFactory` last assigned on line 47 could be null and is dereferenced at line 66.","tnFile":"src/edu/stanford/nlp/ie/machinereading/domains/roth/RothResultsByRelation.java","tnLine":66,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.machinereading.domains.roth.RothResultsByRelation.printResults(java.io.PrintWriter,java.util.List,java.util.List):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileReader` acquired by call to `new()` at line 753 is not released after line 761.\n**Note**: potential exception at line 756","tnFile":"src/edu/stanford/nlp/ie/machinereading/domains/ace/reader/AceDocument.java","tnLine":761,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.machinereading.domains.ace.reader.AceDocument.readRawBytes(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `doc.get(edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation)` could be null and is dereferenced at line 2221.","tnFile":"src/edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer.java","tnLine":2221,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.ProtobufAnnotationSerializer.lambda$fromProto$13(edu.stanford.nlp.pipeline.Annotation,edu.stanford.nlp.pipeline.CoreNLPProtos$TokenLocation):edu.stanford.nlp.ling.CoreLabel","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired by call to `new()` at line 278 is not released after line 291.","tnFile":"src/edu/stanford/nlp/trees/Treebank.java","tnLine":291,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.Treebank.decimate(java.io.Writer,java.io.Writer,java.io.Writer):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `words` last assigned on line 245 could be null and is dereferenced at line 251.","tnFile":"src/edu/stanford/nlp/pipeline/ParserAnnotator.java","tnLine":251,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.ParserAnnotator.doOneSentence(edu.stanford.nlp.pipeline.Annotation,edu.stanford.nlp.util.CoreMap):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `matrix` last assigned on line 56 could be null and is dereferenced at line 69.","tnFile":"src/edu/stanford/nlp/parser/dvparser/AverageDVModels.java","tnLine":69,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.dvparser.AverageDVModels.averageBinaryMatrices(java.util.List):edu.stanford.nlp.util.TwoDimensionalMap","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `iterator()` at line 975 is not released after line 984.","tnFile":"src/edu/stanford/nlp/ie/AbstractSequenceClassifier.java","tnLine":984,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.AbstractSequenceClassifier.printProbsDocuments(edu.stanford.nlp.objectbank.ObjectBank):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `parent.label()` could be null and is dereferenced at line 983.","tnFile":"src/edu/stanford/nlp/parser/lexparser/SplittingGrammarExtractor.java","tnLine":983,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.SplittingGrammarExtractor.recountOutside(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.Tree,java.util.IdentityHashMap,java.util.IdentityHashMap):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.BufferedInputStream` acquired by call to `readStreamFromString(...)` at line 366 is not released after line 369.\n**Note**: potential exception at line 367","tnFile":"src/edu/stanford/nlp/ie/NERClassifierCombiner.java","tnLine":369,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.NERClassifierCombiner.getClassifier(java.lang.String,java.util.Properties):edu.stanford.nlp.ie.NERClassifierCombiner","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `edge` last assigned on line 427 could be null and is dereferenced at line 443.","tnFile":"src/edu/stanford/nlp/trees/ud/UniversalGrammaticalStructure.java","tnLine":443,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.ud.UniversalGrammaticalStructure.addCaseMarkersToReln(edu.stanford.nlp.semgraph.SemanticGraph,edu.stanford.nlp.ling.IndexedWord,edu.stanford.nlp.ling.IndexedWord,edu.stanford.nlp.ling.IndexedWord):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `cat` last assigned on line 635 could be null and is dereferenced at line 637.","tnFile":"src/edu/stanford/nlp/trees/UniversalSemanticHeadFinder.java","tnLine":637,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.UniversalSemanticHeadFinder.hasPassiveProgressiveAuxiliary(edu.stanford.nlp.trees.Tree[]):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `entityType` last assigned on line 290 could be null and is dereferenced at line 310.","tnFile":"src/edu/stanford/nlp/ie/QuantifiableEntityNormalizer.java","tnLine":310,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.QuantifiableEntityNormalizer.collapseNERLabels(java.util.List):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `label.get(edu.stanford.nlp.trees.TreeCoreAnnotations$HeadWordLabelAnnotation)` could be null and is dereferenced at line 33.","tnFile":"src/edu/stanford/nlp/parser/shiftreduce/BasicFeatureFactory.java","tnLine":33,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.shiftreduce.BasicFeatureFactory.addUnaryQueueFeatures(java.util.List,edu.stanford.nlp.ling.CoreLabel,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Document Document.runParse(Properties)` reads with synchronization from `this.sentences`. Potentially races with unsynchronized write in method `Document.forceSentences(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/simple/Document.java","tnLine":877,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.simple.Document.runParse(java.util.Properties):edu.stanford.nlp.simple.Document","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Dataset.ensureSize()` reads with synchronization from `this.data`. Potentially races with unsynchronized write in method `Dataset.ensureSize()`.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/classify/Dataset.java","tnLine":330,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.Dataset.ensureSize():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `InputStreamReader(...)` at line 44 is not released after line 51.","tnFile":"src/edu/stanford/nlp/trees/international/hebrew/HebrewTreeReaderFactory.java","tnLine":51,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.international.hebrew.HebrewTreeReaderFactory.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Redwood.forceTrack(Object)` indirectly reads with synchronization from `logging.Redwood.isThreaded`. Potentially races with unsynchronized write in method `Redwood.endThreads(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/util/logging/Redwood.java","tnLine":369,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.util.logging.Redwood.forceTrack(java.lang.Object):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 101 is not released after line 108.\n**Note**: potential exception at line 103","tnFile":"src/edu/stanford/nlp/io/IOUtils.java","tnLine":108,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.io.IOUtils.writeObjectToFileNoExceptions(java.lang.Object,java.lang.String):java.io.File","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileReader` acquired by call to `new()` at line 228 is not released after line 236.\n**Note**: potential exception at line 229","tnFile":"src/edu/stanford/nlp/util/CollectionUtils.java","tnLine":236,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.util.CollectionUtils.loadCollection(java.io.File,java.lang.Class,java.util.Collection):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.util.Formatter` acquired by call to `new()` at line 324 is not released after line 336.","tnFile":"src/edu/stanford/nlp/stats/MultiClassPrecisionRecallExtendedStats.java","tnLine":336,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.stats.MultiClassPrecisionRecallExtendedStats.getConllEvalString(java.util.List,boolean):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `t.value()` could be null and is dereferenced at line 132.","tnFile":"src/edu/stanford/nlp/international/french/pipeline/MWEPreprocessor.java","tnLine":132,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.international.french.pipeline.MWEPreprocessor.traverseAndFix(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.stats.TwoDimensionalCounter,edu.stanford.nlp.stats.TwoDimensionalCounter):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Dataset.selectFeatures(int,double[])` reads without synchronization from `this.data.[_]`. Potentially races with write in method `Dataset.add(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/classify/Dataset.java","tnLine":606,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.Dataset.selectFeatures(int,double[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `*daughterTrees[headIdx].label()` could be null and is dereferenced at line 351.","tnFile":"src/edu/stanford/nlp/trees/AbstractCollinsHeadFinder.java","tnLine":351,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.trees.AbstractCollinsHeadFinder.findLeftExceptHead(edu.stanford.nlp.trees.Tree[],java.lang.String[]):int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `tokens` last assigned on line 726 could be null and is dereferenced by call to `wordsToSentence(...)` at line 751.","tnFile":"src/edu/stanford/nlp/time/SUTimeMain.java","tnLine":751,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.time.SUTimeMain.processTempEval2Tab(edu.stanford.nlp.pipeline.AnnotationPipeline,java.lang.String,java.lang.String,java.util.Map):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `iterator()` at line 92 is not released after line 96.","tnFile":"src/edu/stanford/nlp/classify/NominalDataReader.java","tnLine":96,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.NominalDataReader.readData(java.lang.String,java.util.Map):java.util.ArrayList","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `current` last assigned on line 542 could be null and is dereferenced at line 543.","tnFile":"src/edu/stanford/nlp/coref/hybrid/sieve/DeterministicCorefSieve.java","tnLine":543,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.coref.hybrid.sieve.DeterministicCorefSieve.sortMentionsForPronoun(java.util.ArrayList,edu.stanford.nlp.coref.data.Mention):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired by call to `new()` at line 211 is not released after line 213.","tnFile":"src/edu/stanford/nlp/sequences/PlainTextDocumentReaderAndWriter.java","tnLine":213,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.sequences.PlainTextDocumentReaderAndWriter.getAnswers(java.util.List,edu.stanford.nlp.sequences.PlainTextDocumentReaderAndWriter$OutputStyle,boolean):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Dataset.changeFeatureIndex(Index)` indirectly reads without synchronization from `this.size`. Potentially races with write in method `Dataset.add(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/classify/Dataset.java","tnLine":558,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.Dataset.changeFeatureIndex(edu.stanford.nlp.util.Index):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `tree.label()` could be null and is dereferenced at line 226.","tnFile":"src/edu/stanford/nlp/parser/lexparser/ExhaustivePCFGParser.java","tnLine":226,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.ExhaustivePCFGParser.validateBinarizedTree(edu.stanford.nlp.trees.Tree,int):double","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileInputStream` acquired by call to `FileInputStream(...)` at line 354 is not released after line 354.","tnFile":"src/edu/stanford/nlp/io/IOUtils.java","tnLine":354,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.io.IOUtils.readObjectFromFileNoExceptions(java.io.File):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `InputStreamReader(...)` at line 162 is not released after line 178.\n**Note**: potential exception at line 152","tnFile":"src/edu/stanford/nlp/international/french/pipeline/FTBCorrector.java","tnLine":178,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.international.french.pipeline.FTBCorrector.main(java.lang.String[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Sentence Sentence.cased()` indirectly reads without synchronization from `this.impl.basicDependencies_`. Potentially races with write in method `Sentence.updateDependencies(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/simple/Sentence.java","tnLine":298,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.simple.Sentence.cased():edu.stanford.nlp.simple.Sentence","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired to `inputWriter` by call to `new()` at line 90 is not released after line 118.\n**Note**: potential exception at line 91","tnFile":"src/edu/stanford/nlp/time/HeidelTimeKBPAnnotator.java","tnLine":118,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.time.HeidelTimeKBPAnnotator.annotate(edu.stanford.nlp.util.CoreMap):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `headerIndex.get(\"base\")` could be null and is dereferenced at line 94.","tnFile":"src/edu/stanford/nlp/ie/qe/UnitPrefix.java","tnLine":94,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.qe.UnitPrefix.loadPrefixes(java.lang.String):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired by call to `new()` at line 310 is not released after line 315.","tnFile":"src/edu/stanford/nlp/parser/lexparser/UnaryGrammar.java","tnLine":315,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.UnaryGrammar.writeData(java.io.StringWriter):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Dataset.addFeatureIndices(int[])` reads without synchronization from `this.data`. Potentially races with write in method `Dataset.ensureSize()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/classify/Dataset.java","tnLine":368,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.Dataset.addFeatureIndices(int[]):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `*tree.children()[0].label()` could be null and is dereferenced at line 90.","tnFile":"src/edu/stanford/nlp/parser/dvparser/FilterConfusingRules.java","tnLine":90,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.dvparser.FilterConfusingRules.test(edu.stanford.nlp.trees.Tree):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired to `pw` by call to `new()` at line 1146 is not released after line 1157.\n**Note**: potential exception at line 1153","tnFile":"src/edu/stanford/nlp/util/StringUtils.java","tnLine":1157,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.util.StringUtils.printToFileLn(java.io.File,java.lang.String,boolean):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `edu.stanford.nlp.io.StringOutputStream` acquired to `outSos` by call to `new()` at line 25 is not released after line 43.\n**Note**: potential exception at line 28","tnFile":"src/edu/stanford/nlp/coref/CorefScorer.java","tnLine":43,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.coref.CorefScorer.getEvalSummary(java.lang.String,java.lang.String,java.lang.String):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `writeStreamFromString(...)` at line 2533 is not released after line 2540.\n**Note**: potential exception at line 2534","tnFile":"src/edu/stanford/nlp/ie/crf/CRFClassifier.java","tnLine":2540,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.crf.CRFClassifier.serializeClassifier(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `m.getNode(ArabicTreebankParserParams$AddRelativeNodeFunction.key).label()` could be null and is dereferenced at line 467.","tnFile":"src/edu/stanford/nlp/parser/lexparser/ArabicTreebankParserParams.java","tnLine":467,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.lexparser.ArabicTreebankParserParams$AddRelativeNodeFunction.apply(edu.stanford.nlp.trees.tregex.TregexMatcher):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `iterator()` at line 523 is not released after line 526.","tnFile":"src/edu/stanford/nlp/ie/crf/CRFClassifier.java","tnLine":526,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.crf.CRFClassifier.printLabelInformation(java.lang.String,edu.stanford.nlp.sequences.DocumentReaderAndWriter):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `SemanticGraph AnnotationSerializer$IntermediateSemanticGraph.convertIntermediateGraph(List)` indirectly writes to field `bestEntry.index` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/pipeline/AnnotationSerializer.java","tnLine":181,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.pipeline.AnnotationSerializer$IntermediateSemanticGraph.convertIntermediateGraph(java.util.List):edu.stanford.nlp.semgraph.SemanticGraph","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void WeightedDataset.add(Collection,Object,float)` indirectly writes to field `this.data` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"src/edu/stanford/nlp/classify/WeightedDataset.java","tnLine":85,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.classify.WeightedDataset.add(java.util.Collection,java.lang.Object,float):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `c` last assigned on line 91 could be null and is dereferenced at line 92.","tnFile":"src/edu/stanford/nlp/stats/TwoDimensionalIntCounter.java","tnLine":92,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.stats.TwoDimensionalIntCounter.containsKey(java.lang.Object,java.lang.Object):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `parentEntry` last assigned on line 159 could be null and is dereferenced by call to `compare(...)` at line 160.","tnFile":"src/edu/stanford/nlp/util/BinaryHeapPriorityQueue.java","tnLine":160,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.util.BinaryHeapPriorityQueue.heapifyUp(edu.stanford.nlp.util.BinaryHeapPriorityQueue$Entry):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void AbstractBatchOptimizer$TrainingWorker.run()` reads without synchronization from `this.isFinished`. Potentially races with write in method `AbstractBatchOptimizer$TrainingWorker.run()`.\n Reporting because this access may occur on a background thread.","tnFile":"src/edu/stanford/nlp/loglinear/learning/AbstractBatchOptimizer.java","tnLine":295,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.loglinear.learning.AbstractBatchOptimizer$TrainingWorker.run():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `iterator()` at line 316 is not released after line 322.","tnFile":"src/edu/stanford/nlp/objectbank/ObjectBank.java","tnLine":322,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.objectbank.ObjectBank.size():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `w.get(edu.stanford.nlp.ling.CoreAnnotations$UtteranceAnnotation)` could be null and is dereferenced at line 454.","tnFile":"src/edu/stanford/nlp/dcoref/Document.java","tnLine":454,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.dcoref.Document.findDocType(edu.stanford.nlp.dcoref.Dictionaries):edu.stanford.nlp.dcoref.Document$DocType","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.PrintWriter` acquired to `goldPw` by call to `new()` at line 275 is not released after line 313.\n**Note**: potential exception at line 278","tnFile":"src/edu/stanford/nlp/parser/metrics/Evalb.java","tnLine":313,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.parser.metrics.Evalb.emitSortedTrees(java.util.PriorityQueue,int,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileInputStream` acquired by call to `FileInputStream(...)` at line 125 is not released after line 125.","tnFile":"src/edu/stanford/nlp/international/spanish/pipeline/AnCoraProcessor.java","tnLine":125,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.international.spanish.pipeline.AnCoraProcessor.processTreeFile(java.io.File,edu.stanford.nlp.trees.international.spanish.SpanishXMLTreeReaderFactory,java.lang.String):edu.stanford.nlp.util.Pair","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `iterator()` at line 1293 is not released after line 1308.","tnFile":"src/edu/stanford/nlp/ie/AbstractSequenceClassifier.java","tnLine":1308,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"edu.stanford.nlp.ie.AbstractSequenceClassifier.classifyAndWriteViterbiSearchGraph(java.lang.String,java.lang.String,edu.stanford.nlp.sequences.DocumentReaderAndWriter):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}}],null,{"analysisLOC":null,"analysisBuildSys":"Gradlew [\"assemble\",\"-xtest\"]","analysisLang":null}]}],[{"tag":"ErrorProne_JDK8"},{"tag":"ToolSuccess","contents":[[],null,{"analysisLOC":null,"analysisBuildSys":"Gradlew [\"assemble\",\"-xtest\"]","analysisLang":null}]}]],"debugLog":"tementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseSimpleStatement(JavacParser.java:2490)\\n\\tat com.sun.tools.javac.parser.JavacParser.blockStatement(JavacParser.java:2401)\\n\\tat com.sun.tools.javac.parser.JavacParser.parseStatementAsBlock(JavacParser.java:2364)\\n\"\n        }\n    )\n[DEBUG] [28/Jun/2019:18:53:53 +0000] [()] Tool completed with 0 but only reporting up to 1200.\n[DEBUG] [28/Jun/2019:18:53:53 +0000] [()] All tools complete for commit \"master\"\n[DEBUG] [28/Jun/2019:18:53:57 +0000] [()] Analysis has completed.\n"}}
