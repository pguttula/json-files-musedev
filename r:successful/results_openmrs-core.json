{"tag":"AnalysisSuccess","contents":{"requestedTools":null,"toolResults":[[{"tag":"Infer"},{"tag":"ToolSuccess","contents":[[{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `MessageService Context.getMessageService()` indirectly reads with synchronization from `context.ServiceContext$ServiceContextHolder.instance`. Potentially races with unsynchronized write in method `Context.getServiceContext()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":581,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.getMessageService():org.openmrs.notification.MessageService","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Context.closeSessionWithCurrentUser()` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":808,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.closeSessionWithCurrentUser():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `module.getRequiredModules()` could be null and is dereferenced at line 475.","tnFile":"api/src/main/java/org/openmrs/module/ModuleClassLoader.java","tnLine":475,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.module.ModuleClassLoader.collectRequiredModuleImports(org.openmrs.module.Module):org.openmrs.module.Module[]","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `boolean Context.isRefreshingContext()` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":1244,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.isRefreshingContext():boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ServiceContext.setRefreshingContext(boolean)` writes to field `context.ServiceContext.refreshingContext` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/ServiceContext.java","tnLine":823,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.ServiceContext.setRefreshingContext(boolean):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Context.openSession()` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":776,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.openSession():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `VisitService Context.getVisitService()` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":1276,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.getVisitService():org.openmrs.api.VisitService","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void HL7InQueueProcessor.processHL7InQueue(HL7InQueue)` indirectly writes to field `hl7.HL7InQueueProcessor.count` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/hl7/HL7InQueueProcessor.java","tnLine":69,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.hl7.HL7InQueueProcessor.processHL7InQueue(org.openmrs.hl7.HL7InQueue):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `PersonService Context.getPersonService()` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":460,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.getPersonService():org.openmrs.api.PersonService","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Context.refreshAuthenticatedUser()` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":366,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.refreshAuthenticatedUser():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `EncounterService Context.getEncounterService()` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":428,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.getEncounterService():org.openmrs.api.EncounterService","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `boolean DatabaseUpdater.isLocked()` indirectly writes to field `util.OpenmrsClassLoader$OpenmrsClassLoaderHolder.INSTANCE` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/util/DatabaseUpdater.java","tnLine":757,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.util.DatabaseUpdater.isLocked():boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `UserService Context.getUserService()` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":492,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.getUserService():org.openmrs.api.UserService","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `dependentModule.getRequiredModules()` could be null and is dereferenced at line 728.","tnFile":"web/src/main/java/org/openmrs/module/web/WebModuleUtil.java","tnLine":728,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.module.web.WebModuleUtil.stopModule(org.openmrs.module.Module,javax.servlet.ServletContext,boolean):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `OrderFrequency OrderServiceImpl.unretireOrderFrequency(OrderFrequency)` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/impl/OrderServiceImpl.java","tnLine":826,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.impl.OrderServiceImpl.unretireOrderFrequency(org.openmrs.OrderFrequency):org.openmrs.OrderFrequency","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Context.setServiceContext(ServiceContext)` indirectly writes to field `context.Context.serviceContext` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":293,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.setServiceContext(org.openmrs.api.context.ServiceContext):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `LogicService Context.getLogicService()` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":529,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.getLogicService():org.openmrs.logic.LogicService","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `module.getRequiredModules()` could be null and is dereferenced at line 418.","tnFile":"api/src/main/java/org/openmrs/module/ModuleFactory.java","tnLine":418,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.module.ModuleFactory.getMissingRequiredModules(org.openmrs.module.Module):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Context.removeAdvice(Class,Advice)` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":1034,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.removeAdvice(java.lang.Class,org.aopalliance.aop.Advice):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `ContextDAO Context.getContextDAO()` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":167,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.getContextDAO():org.openmrs.api.db.ContextDAO","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Context.addAdvisor(Class,Advisor)` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":1002,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.addAdvisor(java.lang.Class,org.springframework.aop.Advisor):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `database` last assigned on line 602 could be null and is dereferenced at line 634.","tnFile":"api/src/main/java/org/openmrs/util/DatabaseUpdater.java","tnLine":634,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.util.DatabaseUpdater.getUnrunDatabaseChanges(java.lang.String[]):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Context.updateSearchIndex()` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":1341,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.updateSearchIndex():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `SimpleDateFormat Context.getDateTimeFormat()` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":1236,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.getDateTimeFormat():java.text.SimpleDateFormat","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Context.checkCoreDataset()` indirectly writes to field `propToUpdate.preferredHandlerClassname` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":1128,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.checkCoreDataset():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getInstance(httpRequest).getAvailablelocales()` could be null and is dereferenced at line 971.","tnFile":"web/src/main/java/org/openmrs/web/filter/initialization/InitializationFilter.java","tnLine":971,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.web.filter.initialization.InitializationFilter.checkLocaleAttributesForFirstTime(javax.servlet.http.HttpServletRequest):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void UpdateFilter.doGet(HttpServletRequest,HttpServletResponse)` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"web/src/main/java/org/openmrs/web/filter/update/UpdateFilter.java","tnLine":132,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.web.filter.update.UpdateFilter.doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `conceptToValidate.getAllConceptNameLocales()` could be null and is dereferenced at line 109.","tnFile":"api/src/main/java/org/openmrs/validator/ConceptValidator.java","tnLine":109,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.validator.ConceptValidator.validate(java.lang.Object,org.springframework.validation.Errors):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void HL7InQueueProcessor.setCount(Integer)` writes to field `hl7.HL7InQueueProcessor.count` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/hl7/HL7InQueueProcessor.java","tnLine":48,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.hl7.HL7InQueueProcessor.setCount(java.lang.Integer):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `in` last assigned on line 245 could be null and is dereferenced at line 257.","tnFile":"api/src/main/java/org/openmrs/module/ModuleClassLoader.java","tnLine":257,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.module.ModuleClassLoader.getUrls(org.openmrs.module.Module):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `List DatabaseUpdater.executeChangelog(String,Map,DatabaseUpdater$ChangeSetExecutorCallback)` indirectly writes to field `util.OpenmrsClassLoader$OpenmrsClassLoaderHolder.INSTANCE` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/util/DatabaseUpdater.java","tnLine":150,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.util.DatabaseUpdater.executeChangelog(java.lang.String,java.util.Map,org.openmrs.util.DatabaseUpdater$ChangeSetExecutorCallback):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `AddressSupport AddressSupport.getInstance()` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"api/src/main/java/org/openmrs/layout/address/AddressSupport.java","tnLine":48,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.layout.address.AddressSupport.getInstance():org.openmrs.layout.address.AddressSupport","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `ObsService Context.getObsService()` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":442,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.getObsService():org.openmrs.api.ObsService","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `encounter.getEncounterType()` could be null and is dereferenced at line 211.","tnFile":"api/src/main/java/org/openmrs/api/impl/EncounterServiceImpl.java","tnLine":211,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.impl.EncounterServiceImpl.failIfDeniedToEdit(org.openmrs.Encounter):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `boolean Context.isUseSystemClassLoader()` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":1392,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.isUseSystemClassLoader():boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `List OrderServiceImpl.getDrugDosingUnits()` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/impl/OrderServiceImpl.java","tnLine":994,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.impl.OrderServiceImpl.getDrugDosingUnits():java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `SerializationService Context.getSerializationService()` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":522,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.getSerializationService():org.openmrs.api.SerializationService","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `List DatabaseUpdater.getUnrunDatabaseChanges()` indirectly writes to field `util.OpenmrsClassLoader$OpenmrsClassLoaderHolder.INSTANCE` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/util/DatabaseUpdater.java","tnLine":587,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.util.DatabaseUpdater.getUnrunDatabaseChanges():java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Context.checkCoreDataset()` indirectly writes to field `propToUpdate.datatypeConfig` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":1127,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.checkCoreDataset():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `boolean UpdateFilter.authenticateAsSuperUser(String,String)` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"web/src/main/java/org/openmrs/web/filter/update/UpdateFilter.java","tnLine":353,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.web.filter.update.UpdateFilter.authenticateAsSuperUser(java.lang.String,java.lang.String):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `parentObs.getObsGroup().getGroupMembers()` could be null and is dereferenced at line 528.","tnFile":"api/src/main/java/org/openmrs/Obs.java","tnLine":528,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.Obs.getRelatedObservations():java.util.Set","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object ServiceContext.getService(Class)` reads without synchronization from container `this.services` via call to `get`. Potentially races with write in method `ServiceContext.setConditionService(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"api/src/main/java/org/openmrs/api/context/ServiceContext.java","tnLine":684,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.ServiceContext.getService(java.lang.Class):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `entry.getValue().getRequiredModules()` could be null and is dereferenced at line 1639.","tnFile":"api/src/main/java/org/openmrs/module/ModuleFactory.java","tnLine":1639,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.module.ModuleFactory.getDependencies(java.lang.String):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `List OrderServiceImpl.getDrugRoutes()` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/impl/OrderServiceImpl.java","tnLine":988,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.impl.OrderServiceImpl.getDrugRoutes():java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.util.zip.ZipInputStream` acquired to `zipIn` by call to `new()` at line 1105 is not released after line 1129.\n**Note**: potential exception at line 1106","tnFile":"web/src/main/java/org/openmrs/web/filter/initialization/InitializationFilter.java","tnLine":1129,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.web.filter.initialization.InitializationFilter.importTestDataSet(java.io.InputStream,java.lang.String,java.lang.String,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Context.authenticate(String,String)` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":328,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.authenticate(java.lang.String,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `boolean HL7InQueueProcessor.processNextHL7InQueue()` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/hl7/HL7InQueueProcessor.java","tnLine":91,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.hl7.HL7InQueueProcessor.processNextHL7InQueue():boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `boolean UpdateFilter.authenticateAsSuperUser(String,String)` indirectly writes to field `util.DatabaseUpdater.authenticatedUserId` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"web/src/main/java/org/openmrs/web/filter/update/UpdateFilter.java","tnLine":349,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.web.filter.update.UpdateFilter.authenticateAsSuperUser(java.lang.String,java.lang.String):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void OrderServiceImpl.globalPropertyChanged(GlobalProperty)` indirectly writes to field `impl.OrderServiceImpl.orderNumberGenerator` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/impl/OrderServiceImpl.java","tnLine":864,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.impl.OrderServiceImpl.globalPropertyChanged(org.openmrs.GlobalProperty):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `List DatabaseUpdater.getDatabaseChanges()` indirectly writes to field `util.OpenmrsClassLoader$OpenmrsClassLoaderHolder.INSTANCE` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/util/DatabaseUpdater.java","tnLine":556,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.util.DatabaseUpdater.getDatabaseChanges():java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getInt(this,connection,\"SELECT MAX(concept_id) FROM concept\")` could be null and is dereferenced at line 132.","tnFile":"api/src/main/java/org/openmrs/util/databasechange/BooleanConceptChangeSet.java","tnLine":132,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.util.databasechange.BooleanConceptChangeSet.createConcept(liquibase.database.jvm.JdbcConnection,java.util.Map):java.lang.Integer","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `CohortService Context.getCohortService()` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":453,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.getCohortService():org.openmrs.api.CohortService","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getGroupMembers()` could be null and is dereferenced at line 1040.","tnFile":"api/src/main/java/org/openmrs/Obs.java","tnLine":1040,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.Obs.getValueAsString(java.util.Locale):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileInputStream` acquired by call to `FileInputStream(...)` at line 1709 is not released after line 1709.","tnFile":"api/src/main/java/org/openmrs/util/OpenmrsUtil.java","tnLine":1709,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.util.OpenmrsUtil.loadProperties(java.util.Properties,java.io.File):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Context.updateDatabase(Map)` indirectly reads without synchronization from `context.Context.runtimeProperties`. Potentially races with write in method `Context.startup(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":1200,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.updateDatabase(java.util.Map):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `ConditionService Context.getConditionService()` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":469,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.getConditionService():org.openmrs.api.ConditionService","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `SimpleDateFormat Context.getDateFormat()` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":1212,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.getDateFormat():java.text.SimpleDateFormat","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `cnType` last assigned on line 594 could be null and is dereferenced at line 597.","tnFile":"api/src/main/java/org/openmrs/util/databasechange/ConceptValidatorChangeSet.java","tnLine":597,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.util.databasechange.ConceptValidatorChangeSet.getLocaleConceptNamesMap(liquibase.database.jvm.JdbcConnection,int):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `patient.getAge()` could be null and is dereferenced at line 188.","tnFile":"api/src/main/java/org/openmrs/validator/VisitValidator.java","tnLine":188,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.validator.VisitValidator.getPatientBirthdateAdjustedIfEstimated(org.openmrs.Patient):java.util.Date","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `ServiceContext Context.getServiceContext()` reads without synchronization from `context.Context.serviceContext`. Potentially races with write in method `Context.getLocationService()`.\n Reporting because this access may occur on a background thread.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":282,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.getServiceContext():org.openmrs.api.context.ServiceContext","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.net.HttpURLConnection` acquired by call to `openConnection()` at line 67 is not released after line 92.","tnFile":"api/src/main/java/org/openmrs/util/HttpClient.java","tnLine":92,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.util.HttpClient.post(java.util.HashMap):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `String OrderServiceImpl.getNewOrderNumber(OrderContext)` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/impl/OrderServiceImpl.java","tnLine":573,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.impl.OrderServiceImpl.getNewOrderNumber(org.openmrs.api.OrderContext):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `List DatabaseUpdater.executeChangelog(String,String,Map,DatabaseUpdater$ChangeSetExecutorCallback,ClassLoader)` indirectly writes to field `util.OpenmrsClassLoader$OpenmrsClassLoaderHolder.INSTANCE` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/util/DatabaseUpdater.java","tnLine":196,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.util.DatabaseUpdater.executeChangelog(java.lang.String,java.lang.String,java.util.Map,org.openmrs.util.DatabaseUpdater$ChangeSetExecutorCallback,java.lang.ClassLoader):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `ServiceContext Context.getServiceContext()` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":284,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.getServiceContext():org.openmrs.api.context.ServiceContext","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `module.getModuleIdAsPath()` could be null and is dereferenced at line 1108.","tnFile":"api/src/main/java/org/openmrs/module/ModuleUtil.java","tnLine":1108,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.module.ModuleUtil.getPathForResource(org.openmrs.module.Module,java.lang.String):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `locale` last assigned on line 317 could be null and is dereferenced by call to `isValid(...)` at line 318.","tnFile":"web/src/main/java/org/openmrs/web/WebUtil.java","tnLine":318,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.web.WebUtil.normalizeLocale(java.lang.String):java.util.Locale","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.lang.Process` acquired by call to `exec(...)` at line 207 is not released after line 229.","tnFile":"api/src/main/java/org/openmrs/util/databasechange/SourceMySqldiffFile.java","tnLine":229,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.util.databasechange.SourceMySqldiffFile.execCmd(java.io.File,java.lang.String[],java.lang.StringBuilder):java.lang.Integer","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `List DatabaseUpdater.getUnrunDatabaseChanges(java.lang.String[])` indirectly writes to field `util.OpenmrsClassLoader$OpenmrsClassLoaderHolder.INSTANCE` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/util/DatabaseUpdater.java","tnLine":615,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.util.DatabaseUpdater.getUnrunDatabaseChanges(java.lang.String[]):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `encounter.getEncounterType()` could be null and is dereferenced at line 480.","tnFile":"api/src/main/java/org/openmrs/api/impl/EncounterServiceImpl.java","tnLine":480,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.impl.EncounterServiceImpl.purgeEncounter(org.openmrs.Encounter):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Context.checkCoreDataset()` indirectly writes to field `openmrs.Allergen.OTHER_NON_CODED_CONCEPT_UUID` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":1151,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.checkCoreDataset():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `MessageService Context.getMessageService()` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":573,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.getMessageService():org.openmrs.notification.MessageService","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Context.flushSession()` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":828,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.flushSession():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `preferred.getPatientId()` could be null and is dereferenced at line 573.","tnFile":"api/src/main/java/org/openmrs/api/impl/PatientServiceImpl.java","tnLine":573,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.impl.PatientServiceImpl.mergePatients(org.openmrs.Patient,org.openmrs.Patient):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Context.refreshEntity(Object)` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":850,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.refreshEntity(java.lang.Object):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `AdministrationService Context.getAdministrationService()` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":536,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.getAdministrationService():org.openmrs.api.AdministrationService","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Order OrderServiceImpl.unvoidOrder(Order)` indirectly writes to field `impl.OrderServiceImpl.orderNumberGenerator` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/impl/OrderServiceImpl.java","tnLine":481,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.impl.OrderServiceImpl.unvoidOrder(org.openmrs.Order):org.openmrs.Order","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `AlertService Context.getAlertService()` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":557,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.getAlertService():org.openmrs.notification.AlertService","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.openmrs.module.ModuleClassLoader` acquired by call to `ModuleClassLoader(...)` at line 661 is not released after line 661.\n**Note**: potential exception at line 661","tnFile":"api/src/main/java/org/openmrs/module/ModuleFactory.java","tnLine":661,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.module.ModuleFactory.startModuleInternal(org.openmrs.module.Module,boolean,org.springframework.context.support.AbstractRefreshableApplicationContext):org.openmrs.module.Module","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void HL7InQueueProcessor.processHL7InQueue()` writes to field `hl7.HL7InQueueProcessor.isRunning` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"api/src/main/java/org/openmrs/hl7/HL7InQueueProcessor.java","tnLine":119,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.hl7.HL7InQueueProcessor.processHL7InQueue():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Context.clearSession()` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":818,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.clearSession():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Context.setContext(ServiceContext)` writes to field `context.Context.serviceContext` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":297,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.setContext(org.openmrs.api.context.ServiceContext):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `obs.getGroupMembers()` could be null and is dereferenced at line 85.","tnFile":"api/src/main/java/org/openmrs/api/db/hibernate/HibernateObsDAO.java","tnLine":85,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.db.hibernate.HibernateObsDAO.saveObs(org.openmrs.Obs):org.openmrs.Obs","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `encounter.getEncounterType()` could be null and is dereferenced at line 399.","tnFile":"api/src/main/java/org/openmrs/api/impl/EncounterServiceImpl.java","tnLine":399,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.impl.EncounterServiceImpl.voidEncounter(org.openmrs.Encounter,java.lang.String):org.openmrs.Encounter","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `OrderService Context.getOrderService()` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":499,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.getOrderService():org.openmrs.api.OrderService","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `List OrderServiceImpl.getTestSpecimenSources()` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/impl/OrderServiceImpl.java","tnLine":1021,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.impl.OrderServiceImpl.getTestSpecimenSources():java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Boolean UpdateFilter.isLockReleased()` reads without synchronization from `update.UpdateFilter.lockReleased`. Potentially races with write in method `UpdateFilter.setLockReleased(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"web/src/main/java/org/openmrs/web/filter/update/UpdateFilter.java","tnLine":586,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.web.filter.update.UpdateFilter.isLockReleased():java.lang.Boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Context.closeSession()` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":787,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.closeSession():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void OrderServiceImpl.globalPropertyDeleted(String)` indirectly writes to field `impl.OrderServiceImpl.orderNumberGenerator` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/impl/OrderServiceImpl.java","tnLine":872,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.impl.OrderServiceImpl.globalPropertyDeleted(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `user` last assigned on line 686 could be null and is dereferenced by call to `updatePassword(...)` at line 690.","tnFile":"api/src/main/java/org/openmrs/api/impl/UserServiceImpl.java","tnLine":690,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.impl.UserServiceImpl.changePasswordUsingSecretAnswer(java.lang.String,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `ServiceContext Context.getServiceContext()` indirectly reads with synchronization from `context.ServiceContext$ServiceContextHolder.instance`. Potentially races with unsynchronized write in method `Context.getServiceContext()`.\n Reporting because this access may occur on a background thread.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":278,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.getServiceContext():org.openmrs.api.context.ServiceContext","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `u` last assigned on line 348 could be null and is dereferenced by call to `getLoginCredential(...)` at line 349.","tnFile":"api/src/main/java/org/openmrs/api/db/hibernate/HibernateUserDAO.java","tnLine":349,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.db.hibernate.HibernateUserDAO.changePassword(java.lang.String,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void HL7InQueueProcessor.processHL7InQueue()` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"api/src/main/java/org/openmrs/hl7/HL7InQueueProcessor.java","tnLine":113,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.hl7.HL7InQueueProcessor.processHL7InQueue():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.lang.Process` acquired by call to `exec(...)` at line 82 is not released after line 112.\n**Note**: potential exception at line 87","tnFile":"web/src/main/java/org/openmrs/web/filter/initialization/TestInstallUtil.java","tnLine":112,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.web.filter.initialization.TestInstallUtil.addTestData(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Object Context.getRegisteredComponent(String,Class)` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":1260,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.getRegisteredComponent(java.lang.String,java.lang.Class):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Context.checkCoreDataset()` indirectly writes to field `propToUpdate.datatypeClassname` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":1126,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.checkCoreDataset():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Context.shutdown()` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":950,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.shutdown():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getInt(this,connection,\"SELECT MAX(concept_name_id) FROM concept_name\")` could be null and is dereferenced at line 142.","tnFile":"api/src/main/java/org/openmrs/util/databasechange/BooleanConceptChangeSet.java","tnLine":142,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.util.databasechange.BooleanConceptChangeSet.createConcept(liquibase.database.jvm.JdbcConnection,java.util.Map):java.lang.Integer","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `potentiallyEditedAllergy` last assigned on line 1450 could be null and is dereferenced at line 1451.","tnFile":"api/src/main/java/org/openmrs/api/impl/PatientServiceImpl.java","tnLine":1451,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.impl.PatientServiceImpl.setAllergies(org.openmrs.Patient,org.openmrs.Allergies):org.openmrs.Allergies","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `HL7Service Context.getHL7Service()` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":485,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.getHL7Service():org.openmrs.hl7.HL7Service","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Context.evictFromSession(Object)` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":862,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.evictFromSession(java.lang.Object):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.net.HttpURLConnection` acquired to `connection` by call to `openConnection()` at line 67 is not released after line 118.\n**Note**: potential exception at line 76","tnFile":"api/src/main/java/org/openmrs/util/HttpClient.java","tnLine":118,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.util.HttpClient.post(java.util.HashMap):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Concept OrderServiceImpl.getNonCodedDrugConcept()` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/impl/OrderServiceImpl.java","tnLine":1026,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.impl.OrderServiceImpl.getNonCodedDrugConcept():org.openmrs.Concept","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getInstance(httpRequest).getAvailablelocales()` could be null and is dereferenced at line 305.","tnFile":"web/src/main/java/org/openmrs/web/filter/update/UpdateFilter.java","tnLine":305,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.web.filter.update.UpdateFilter.checkLocaleAttributesForFirstTime(javax.servlet.http.HttpServletRequest):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `proficientLocale` last assigned on line 556 could be null and is dereferenced at line 559.","tnFile":"api/src/main/java/org/openmrs/User.java","tnLine":559,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.User.getProficientLocales():java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void OrderServiceImpl.purgeOrderFrequency(OrderFrequency)` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/impl/OrderServiceImpl.java","tnLine":836,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.impl.OrderServiceImpl.purgeOrderFrequency(org.openmrs.OrderFrequency):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `ar` last assigned on line 317 could be null and is dereferenced at line 318.","tnFile":"api/src/main/java/org/openmrs/notification/Alert.java","tnLine":318,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.notification.Alert.markAlertRead():org.openmrs.notification.Alert","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Object Context.getService(Class)` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":990,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.getService(java.lang.Class):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Locale Context.getLocale()` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":762,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.getLocale():java.util.Locale","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `mod.getRequiredModules()` could be null and is dereferenced at line 320.","tnFile":"api/src/main/java/org/openmrs/module/ModuleFactory.java","tnLine":320,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.module.ModuleFactory.getModulesInStartupOrder(java.util.Collection):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getAuthenticatedUser()` could be null and is dereferenced at line 84.","tnFile":"api/src/main/java/org/openmrs/api/db/hibernate/HibernateUserDAO.java","tnLine":84,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.db.hibernate.HibernateUserDAO.saveUser(org.openmrs.User,java.lang.String):org.openmrs.User","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Context.becomeUser(String)` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":379,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.becomeUser(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Context.checkCoreDataset()` indirectly writes to field `util.OpenmrsClassScanner$OpenmrsClassScannerHolder.INSTANCE` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":1074,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.checkCoreDataset():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 94 is not released after line 95.","tnFile":"api/src/main/java/org/openmrs/util/databasechange/SourceMySqldiffFile.java","tnLine":95,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.util.databasechange.SourceMySqldiffFile.execute(liquibase.database.Database):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `List OrderServiceImpl.getDurationUnits()` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/impl/OrderServiceImpl.java","tnLine":1013,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.impl.OrderServiceImpl.getDurationUnits():java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `obs.getGroupMembers()` could be null and is dereferenced at line 238.","tnFile":"api/src/main/java/org/openmrs/validator/ObsValidator.java","tnLine":238,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.validator.ObsValidator.validateHelper(org.openmrs.Obs,org.springframework.validation.Errors,java.util.ArrayList,boolean):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `URL OpenmrsClassLoader.findResource(String)` indirectly reads without synchronization from `util.OpenmrsClassLoader.libCacheFolderInitialized`. Potentially races with write in method `OpenmrsClassLoader.getLibCacheFolder()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/util/OpenmrsClassLoader.java","tnLine":217,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.util.OpenmrsClassLoader.findResource(java.lang.String):java.net.URL","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean InitializationFilter.isInstallationStarted()` reads without synchronization from `initialization.InitializationFilter.isInstallationStarted`. Potentially races with write in method `InitializationFilter.setInstallationStarted(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"web/src/main/java/org/openmrs/web/filter/initialization/InitializationFilter.java","tnLine":1080,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.web.filter.initialization.InitializationFilter.isInstallationStarted():boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Context.addAdvice(Class,Advice)` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":1014,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.addAdvice(java.lang.Class,org.aopalliance.aop.Advice):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void AddressSupport.globalPropertyChanged(GlobalProperty)` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/layout/address/AddressSupport.java","tnLine":135,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.layout.address.AddressSupport.globalPropertyChanged(org.openmrs.GlobalProperty):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Context.updateSearchIndexForObject(Object)` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":1376,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.updateSearchIndexForObject(java.lang.Object):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `ProviderService Context.getProviderService()` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":1284,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.getProviderService():org.openmrs.api.ProviderService","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Context.checkCoreDataset()` indirectly writes to field `propToUpdate.handlerConfig` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":1129,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.checkCoreDataset():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Enumeration OpenmrsClassLoader.findResources(String)` indirectly reads without synchronization from `util.OpenmrsClassLoader.libCacheFolder`. Potentially races with write in method `OpenmrsClassLoader.getLibCacheFolder()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/util/OpenmrsClassLoader.java","tnLine":241,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.util.OpenmrsClassLoader.findResources(java.lang.String):java.util.Enumeration","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void UpdateFilter.init(FilterConfig)` indirectly writes to field `util.OpenmrsClassLoader$OpenmrsClassLoaderHolder.INSTANCE` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"web/src/main/java/org/openmrs/web/filter/update/UpdateFilter.java","tnLine":511,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.web.filter.update.UpdateFilter.init(javax.servlet.FilterConfig):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Context.checkCoreDataset()` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":1046,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.checkCoreDataset():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getLocale()` could be null and is dereferenced at line 235.","tnFile":"web/src/main/java/org/openmrs/web/filter/StartupFilter.java","tnLine":235,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.web.filter.StartupFilter.renderTemplate(java.lang.String,java.util.HashMap,javax.servlet.http.HttpServletResponse):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `user` last assigned on line 328 could be null and is dereferenced by call to `changePassword(...)` at line 330.","tnFile":"api/src/main/java/org/openmrs/api/impl/UserServiceImpl.java","tnLine":330,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.impl.UserServiceImpl.changePassword(java.lang.String,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `ProgramWorkflowService Context.getProgramWorkflowService()` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":564,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.getProgramWorkflowService():org.openmrs.api.ProgramWorkflowService","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `conceptIds` last assigned on line 114 could be null and is dereferenced at line 121.","tnFile":"api/src/main/java/org/openmrs/util/databasechange/ConceptValidatorChangeSet.java","tnLine":121,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.util.databasechange.ConceptValidatorChangeSet.validateAndCleanUpConcepts(liquibase.database.jvm.JdbcConnection):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `DatatypeService Context.getDatatypeService()` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":1292,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.getDatatypeService():org.openmrs.api.DatatypeService","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void HL7InQueueProcessor.processHL7InQueue()` reads with synchronization from `hl7.HL7InQueueProcessor.isRunning`. Potentially races with unsynchronized write in method `HL7InQueueProcessor.processHL7InQueue()`.\n Reporting because this access may occur on a background thread.","tnFile":"api/src/main/java/org/openmrs/hl7/HL7InQueueProcessor.java","tnLine":105,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.hl7.HL7InQueueProcessor.processHL7InQueue():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Context.startup(Properties)` indirectly reads with synchronization from `context.ServiceContext$ServiceContextHolder.instance`. Potentially races with unsynchronized write in method `Context.getServiceContext()`.\n Reporting because this access may occur on a background thread.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":880,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.startup(java.util.Properties):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Properties Context.getRuntimeProperties()` reads without synchronization from `context.Context.runtimeProperties`. Potentially races with write in method `Context.startup(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":400,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.getRuntimeProperties():java.util.Properties","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `boolean Context.hasPrivilege(String)` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":708,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.hasPrivilege(java.lang.String):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.net.HttpURLConnection` acquired by call to `openConnection()` at line 67 is not released after line 111.","tnFile":"api/src/main/java/org/openmrs/util/HttpClient.java","tnLine":111,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.util.HttpClient.post(java.util.HashMap):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getDefaultLocale()` could be null and is dereferenced at line 292.","tnFile":"api/src/main/java/org/openmrs/api/impl/AdministrationServiceImpl.java","tnLine":292,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.impl.AdministrationServiceImpl.saveGlobalProperty(org.openmrs.GlobalProperty):org.openmrs.GlobalProperty","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Context.checkCoreDataset()` indirectly writes to field `openmrs.PersonName.format` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":1148,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.checkCoreDataset():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void InitializationFilter.doPost(HttpServletRequest,HttpServletResponse)` indirectly reads without synchronization from `initialization.InitializationFilter.isInstallationStarted`. Potentially races with write in method `InitializationFilter.setInstallationStarted(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"web/src/main/java/org/openmrs/web/filter/initialization/InitializationFilter.java","tnLine":395,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.web.filter.initialization.InitializationFilter.doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `encounter.getEncounterType()` could be null and is dereferenced at line 442.","tnFile":"api/src/main/java/org/openmrs/api/impl/EncounterServiceImpl.java","tnLine":442,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.impl.EncounterServiceImpl.unvoidEncounter(org.openmrs.Encounter):org.openmrs.Encounter","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Order OrderServiceImpl.updateOrderFulfillerStatus(Order,Order$FulfillerStatus,String)` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/impl/OrderServiceImpl.java","tnLine":491,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.impl.OrderServiceImpl.updateOrderFulfillerStatus(org.openmrs.Order,org.openmrs.Order$FulfillerStatus,java.lang.String):org.openmrs.Order","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `List AddressSupport.getAddressTemplate()` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/layout/address/AddressSupport.java","tnLine":107,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.layout.address.AddressSupport.getAddressTemplate():java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Order OrderServiceImpl.voidOrder(Order,String)` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/impl/OrderServiceImpl.java","tnLine":467,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.impl.OrderServiceImpl.voidOrder(org.openmrs.Order,java.lang.String):org.openmrs.Order","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `File OpenmrsClassLoader.getLibCacheFolder()` reads without synchronization from `util.OpenmrsClassLoader.libCacheFolderInitialized`. Potentially races with write in method `OpenmrsClassLoader.findResources(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"api/src/main/java/org/openmrs/util/OpenmrsClassLoader.java","tnLine":704,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.util.OpenmrsClassLoader.getLibCacheFolder():java.io.File","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `boolean DatabaseUpdater.updatesRequired()` indirectly writes to field `util.OpenmrsClassLoader$OpenmrsClassLoaderHolder.INSTANCE` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/util/DatabaseUpdater.java","tnLine":252,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.util.DatabaseUpdater.updatesRequired():boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Context.removeAdvisor(Class,Advisor)` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":1024,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.removeAdvisor(java.lang.Class,org.springframework.aop.Advisor):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getObsGroup().getGroupMembers()` could be null and is dereferenced at line 536.","tnFile":"api/src/main/java/org/openmrs/Obs.java","tnLine":536,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.Obs.getRelatedObservations():java.util.Set","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Context.checkCoreDataset()` indirectly writes to field `validator.ValidateUtil.disableValidation` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":1146,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.checkCoreDataset():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Context.shutdown()` indirectly writes to field `advicePoint.classInstance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":958,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.shutdown():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `lines` last assigned on line 41 could be null and is dereferenced at line 45.","tnFile":"api/src/main/java/org/openmrs/layout/name/NameTemplate.java","tnLine":45,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.layout.name.NameTemplate.format(org.openmrs.PersonName):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `locale` last assigned on line 1777 could be null and is dereferenced at line 1778.","tnFile":"api/src/main/java/org/openmrs/api/db/hibernate/HibernateConceptDAO.java","tnLine":1778,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.db.hibernate.HibernateConceptDAO.getConceptByName(java.lang.String):org.openmrs.Concept","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `FormService Context.getFormService()` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":514,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.getFormService():org.openmrs.api.FormService","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Context.setUseSystemClassLoader(boolean)` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":1384,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.setUseSystemClassLoader(boolean):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Context.setRuntimeProperties(Properties)` writes to field `context.Context.runtimeProperties` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":414,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.setRuntimeProperties(java.util.Properties):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `obsParent.getGroupMembers()` could be null and is dereferenced at line 216.","tnFile":"api/src/main/java/org/openmrs/Encounter.java","tnLine":216,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.Encounter.getObsLeaves(org.openmrs.Obs):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void HL7InQueueProcessor.processHL7InQueue(HL7InQueue)` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/hl7/HL7InQueueProcessor.java","tnLine":64,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.hl7.HL7InQueueProcessor.processHL7InQueue(org.openmrs.hl7.HL7InQueue):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `out` last assigned on line 246 could be null and is dereferenced at line 261.","tnFile":"api/src/main/java/org/openmrs/module/ModuleClassLoader.java","tnLine":261,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.module.ModuleClassLoader.getUrls(org.openmrs.module.Module):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getInt(this,connection,\"SELECT COUNT(*) FROM global_property WHERE property IN ('concept.true', 'concept.false')\")` could be null and is dereferenced at line 86.","tnFile":"api/src/main/java/org/openmrs/util/databasechange/BooleanConceptChangeSet.java","tnLine":86,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.util.databasechange.BooleanConceptChangeSet.execute(liquibase.database.Database):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.openmrs.web.filter.GZIPRequestStream` acquired by call to `GZIPRequestStream(...)` at line 28 is not released after line 28.\n**Note**: potential exception at line 28","tnFile":"web/src/main/java/org/openmrs/web/filter/GZIPRequestWrapper.java","tnLine":28,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.web.filter.GZIPRequestWrapper.<init>(javax.servlet.http.HttpServletRequest)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `obs.getGroupMembers()` could be null and is dereferenced at line 221.","tnFile":"api/src/main/java/org/openmrs/api/impl/ObsServiceImpl.java","tnLine":221,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.impl.ObsServiceImpl.evictObsAndChildren(org.openmrs.Obs):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.OutputStreamWriter` acquired to `out` by call to `new()` at line 261 is not released after line 274.\n**Note**: potential exception at line 263","tnFile":"web/src/main/java/org/openmrs/web/filter/initialization/TestInstallUtil.java","tnLine":274,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.web.filter.initialization.TestInstallUtil.getResourceInputStream(java.lang.String,java.lang.String,java.lang.String):java.io.InputStream","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Order OrderServiceImpl.discontinueOrder(Order,String,Date,Provider,Encounter)` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/impl/OrderServiceImpl.java","tnLine":755,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.impl.OrderServiceImpl.discontinueOrder(org.openmrs.Order,java.lang.String,java.util.Date,org.openmrs.Provider,org.openmrs.Encounter):org.openmrs.Order","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `module.getRequiredModules()` could be null and is dereferenced at line 1439.","tnFile":"api/src/main/java/org/openmrs/module/ModuleFactory.java","tnLine":1439,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.module.ModuleFactory.requiredModulesStarted(org.openmrs.module.Module):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Context.updateSearchIndexForType(Class)` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":1365,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.updateSearchIndexForType(java.lang.Class):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `awareOfModule` last assigned on line 495 could be null and is dereferenced at line 497.","tnFile":"api/src/main/java/org/openmrs/module/ModuleClassLoader.java","tnLine":497,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.module.ModuleClassLoader.collectAwareOfModuleImports(org.openmrs.module.Module):org.openmrs.module.Module[]","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `new()` at line 225 is not released after line 234.\n**Note**: potential exception at line 228","tnFile":"api/src/main/java/org/openmrs/util/OpenmrsUtil.java","tnLine":234,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.util.OpenmrsUtil.getFileAsString(java.io.File):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `ConceptService Context.getConceptService()` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":421,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.getConceptService():org.openmrs.api.ConceptService","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void InitializationFilter.doGet(HttpServletRequest,HttpServletResponse)` indirectly reads without synchronization from `initialization.InitializationFilter.isInstallationStarted`. Potentially races with write in method `InitializationFilter.setInstallationStarted(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"web/src/main/java/org/openmrs/web/filter/initialization/InitializationFilter.java","tnLine":217,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.web.filter.initialization.InitializationFilter.doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `dateFormat` last assigned on line 383 could be null and is dereferenced at line 410.","tnFile":"web/src/main/java/org/openmrs/web/WebUtil.java","tnLine":410,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.web.WebUtil.formatDate(java.util.Date,java.util.Locale,org.openmrs.util.Format$FORMAT_TYPE):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Context.requirePrivilege(String)` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":719,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.requirePrivilege(java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `patient.getPatientIdentifier()` could be null and is dereferenced at line 124.","tnFile":"api/src/main/java/org/openmrs/api/impl/PatientServiceImpl.java","tnLine":124,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.impl.PatientServiceImpl.savePatient(org.openmrs.Patient):org.openmrs.Patient","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `File OpenmrsClassLoader.getLibCacheFolder()` reads without synchronization from `util.OpenmrsClassLoader.libCacheFolder`. Potentially races with write in method `OpenmrsClassLoader.findResources(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"api/src/main/java/org/openmrs/util/OpenmrsClassLoader.java","tnLine":734,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.util.OpenmrsClassLoader.getLibCacheFolder():java.io.File","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `List OrderServiceImpl.getDrugDispensingUnits()` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/impl/OrderServiceImpl.java","tnLine":1001,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.impl.OrderServiceImpl.getDrugDispensingUnits():java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `encounter.getEncounterType()` could be null and is dereferenced at line 494.","tnFile":"api/src/main/java/org/openmrs/api/impl/EncounterServiceImpl.java","tnLine":494,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.impl.EncounterServiceImpl.purgeEncounter(org.openmrs.Encounter,boolean):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Context.logout()` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":681,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.logout():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Order OrderServiceImpl.unvoidOrder(Order)` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/impl/OrderServiceImpl.java","tnLine":477,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.impl.OrderServiceImpl.unvoidOrder(org.openmrs.Order):org.openmrs.Order","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.util.zip.GZIPInputStream` acquired by call to `performGZIPRequest(...)` at line 48 is not released after line 59.","tnFile":"web/src/main/java/org/openmrs/web/filter/GZIPFilter.java","tnLine":59,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.web.filter.GZIPFilter.doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `boolean HL7InQueueProcessor.processNextHL7InQueue()` indirectly writes to field `hl7.HL7InQueueProcessor.count` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/hl7/HL7InQueueProcessor.java","tnLine":94,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.hl7.HL7InQueueProcessor.processNextHL7InQueue():boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.net.HttpURLConnection` acquired by call to `openConnection()` at line 44 is not released after line 45.","tnFile":"api/src/main/java/org/openmrs/scheduler/tasks/CheckInternetConnectivityTask.java","tnLine":45,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.scheduler.tasks.CheckInternetConnectivityTask.execute():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `module.getAwareOfModules()` could be null and is dereferenced at line 494.","tnFile":"api/src/main/java/org/openmrs/module/ModuleClassLoader.java","tnLine":494,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.module.ModuleClassLoader.collectAwareOfModuleImports(org.openmrs.module.Module):org.openmrs.module.Module[]","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void DatabaseUpdater.executeChangelog()` indirectly writes to field `util.OpenmrsClassLoader$OpenmrsClassLoaderHolder.INSTANCE` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/util/DatabaseUpdater.java","tnLine":95,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.util.DatabaseUpdater.executeChangelog():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getServiceContext().getApplicationContext()` could be null and is dereferenced at line 193.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":193,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.setAuthenticationScheme():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `List Context.getRegisteredComponents(Class)` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":1252,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.getRegisteredComponents(java.lang.Class):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `URL OpenmrsClassLoader.findResource(String)` indirectly reads without synchronization from `util.OpenmrsClassLoader.libCacheFolder`. Potentially races with write in method `OpenmrsClassLoader.getLibCacheFolder()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/util/OpenmrsClassLoader.java","tnLine":228,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.util.OpenmrsClassLoader.findResource(java.lang.String):java.net.URL","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `conceptReferenceTerm.getConceptSource()` could be null and is dereferenced at line 121.","tnFile":"api/src/main/java/org/openmrs/Duration.java","tnLine":121,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.Duration.getCode(org.openmrs.Concept):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Context.startup(String,String,String,Properties)` indirectly reads with synchronization from `context.ServiceContext$ServiceContextHolder.instance`. Potentially races with unsynchronized write in method `Context.getServiceContext()`.\n Reporting because this access may occur on a background thread.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":934,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.startup(java.lang.String,java.lang.String,java.lang.String,java.util.Properties):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `SimpleDateFormat Context.getTimeFormat()` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":1224,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.getTimeFormat():java.text.SimpleDateFormat","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void Context.checkCoreDataset()` indirectly reads without synchronization from `scheduler.SchedulerConstants.SCHEDULER_DEFAULT_PASSWORD`. Potentially races with write in method `Context.startup(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":1109,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.checkCoreDataset():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Future Context.updateSearchIndexAsync()` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":1354,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.updateSearchIndexAsync():java.util.concurrent.Future","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `input` last assigned on line 559 could be null and is dereferenced at line 605.","tnFile":"api/src/main/java/org/openmrs/module/ModuleUtil.java","tnLine":605,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.module.ModuleUtil.expandJar(java.io.File,java.io.File,java.lang.String,boolean):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.openmrs.util.OpenmrsClassLoader` acquired by call to `OpenmrsClassLoader()` at line 127 is not released after line 127.\n**Note**: potential exception at line 127","tnFile":"api/src/main/java/org/openmrs/util/OpenmrsClassLoader.java","tnLine":127,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.util.OpenmrsClassLoader.getInstance():org.openmrs.util.OpenmrsClassLoader","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `OrderSetService Context.getOrderSetService()` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":507,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.getOrderSetService():org.openmrs.api.OrderSetService","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `OrderType OrderServiceImpl.getOrderTypeByConcept(Concept)` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/impl/OrderServiceImpl.java","tnLine":979,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.impl.OrderServiceImpl.getOrderTypeByConcept(org.openmrs.Concept):org.openmrs.OrderType","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.OutputStreamWriter` acquired by call to `new()` at line 1650 is not released after line 1650.","tnFile":"api/src/main/java/org/openmrs/util/OpenmrsUtil.java","tnLine":1650,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.util.OpenmrsUtil.storeProperties(java.util.Properties,java.io.FileOutputStream,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `LocationService Context.getLocationService()` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":435,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.getLocationService():org.openmrs.api.LocationService","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `encounter.getEncounterType()` could be null and is dereferenced at line 298.","tnFile":"api/src/main/java/org/openmrs/api/impl/EncounterServiceImpl.java","tnLine":298,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.impl.EncounterServiceImpl.getEncounter(java.lang.Integer):org.openmrs.Encounter","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `List Context.getModuleOpenmrsServices(String)` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":1268,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.getModuleOpenmrsServices(java.lang.String):java.util.List","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Class Context.loadClass(String)` indirectly writes to field `util.OpenmrsClassLoader$OpenmrsClassLoaderHolder.INSTANCE` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":221,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.loadClass(java.lang.String):java.lang.Class","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `authUser` last assigned on line 309 could be null and is dereferenced at line 310.","tnFile":"api/src/main/java/org/openmrs/api/db/hibernate/HibernateUserDAO.java","tnLine":310,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.db.hibernate.HibernateUserDAO.changeHashedPassword(org.openmrs.User,java.lang.String,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void OrderServiceImpl.purgeOrderType(OrderType)` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/impl/OrderServiceImpl.java","tnLine":924,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.impl.OrderServiceImpl.purgeOrderType(org.openmrs.OrderType):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `boolean DatabaseUpdater.updatesRequired(java.lang.String[])` indirectly writes to field `util.OpenmrsClassLoader$OpenmrsClassLoaderHolder.INSTANCE` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/util/DatabaseUpdater.java","tnLine":279,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.util.DatabaseUpdater.updatesRequired(java.lang.String[]):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.util.zip.GZIPInputStream` acquired by call to `performGZIPRequest(...)` at line 48 is not released after line 65.","tnFile":"web/src/main/java/org/openmrs/web/filter/GZIPFilter.java","tnLine":65,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.web.filter.GZIPFilter.doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `DiagnosisService Context.getDiagnosisService()` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":478,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.getDiagnosisService():org.openmrs.api.DiagnosisService","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `moduleId` last assigned on line 39 could be null and is dereferenced at line 51.","tnFile":"web/src/main/java/org/openmrs/module/web/ModuleServlet.java","tnLine":51,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.module.web.ModuleServlet.service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Context.openSessionWithCurrentUser()` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":798,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.openSessionWithCurrentUser():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Authenticated Context.authenticate(Credentials)` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":342,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.authenticate(org.openmrs.api.context.Credentials):org.openmrs.api.context.Authenticated","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `User Context.getAuthenticatedUser()` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":654,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.getAuthenticatedUser():org.openmrs.User","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `fout` last assigned on line 120 could be null and is dereferenced at line 164.","tnFile":"api/src/main/java/org/openmrs/obs/handler/TextHandler.java","tnLine":164,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.obs.handler.TextHandler.saveObs(org.openmrs.Obs):org.openmrs.Obs","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Order OrderServiceImpl.discontinueOrder(Order,Concept,Date,Provider,Encounter)` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/impl/OrderServiceImpl.java","tnLine":736,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.impl.OrderServiceImpl.discontinueOrder(org.openmrs.Order,org.openmrs.Concept,java.util.Date,org.openmrs.Provider,org.openmrs.Encounter):org.openmrs.Order","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `Set Context.getAllRoles(User)` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":694,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.getAllRoles(org.openmrs.User):java.util.Set","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void DatabaseUpdater.executeChangelog(String,Map)` indirectly writes to field `util.OpenmrsClassLoader$OpenmrsClassLoaderHolder.INSTANCE` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/util/DatabaseUpdater.java","tnLine":112,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.util.DatabaseUpdater.executeChangelog(java.lang.String,java.util.Map):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `MessageSourceService Context.getMessageSourceService()` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":543,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.getMessageSourceService():org.openmrs.messagesource.MessageSourceService","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `u` last assigned on line 369 could be null and is dereferenced by call to `getLoginCredential(...)` at line 371.","tnFile":"api/src/main/java/org/openmrs/api/db/hibernate/HibernateUserDAO.java","tnLine":371,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.db.hibernate.HibernateUserDAO.changeQuestionAnswer(java.lang.String,java.lang.String,java.lang.String):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `in` last assigned on line 736 could be null and is dereferenced at line 751.","tnFile":"api/src/main/java/org/openmrs/module/ModuleUtil.java","tnLine":751,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.module.ModuleUtil.getURL(java.net.URL):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `getAuthenticatedUser()` could be null and is dereferenced at line 158.","tnFile":"api/src/main/java/org/openmrs/api/context/UserContext.java","tnLine":158,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.UserContext.becomeUser(java.lang.String):org.openmrs.User","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `SchedulerService Context.getSchedulerService()` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":550,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.getSchedulerService():org.openmrs.scheduler.SchedulerService","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `fout` last assigned on line 112 could be null and is dereferenced at line 141.","tnFile":"api/src/main/java/org/openmrs/obs/handler/BinaryDataHandler.java","tnLine":141,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.obs.handler.BinaryDataHandler.saveObs(org.openmrs.Obs):org.openmrs.Obs","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void Context.checkCoreDataset()` indirectly writes to field `propToUpdate.description` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":1120,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.checkCoreDataset():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `PatientService Context.getPatientService()` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":449,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.getPatientService():org.openmrs.api.PatientService","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `boolean Context.isAuthenticated()` indirectly writes to field `context.ServiceContext$ServiceContextHolder.instance` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":667,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.openmrs.api.context.Context.isAuthenticated():boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}}],null,{"analysisLOC":null,"analysisBuildSys":"Maven []","analysisLang":null}]}],[{"tag":"ErrorProne_JDK8"},{"tag":"ToolSuccess","contents":[[{"tnType":"BoxedPrimitiveConstructor","tnDesc":"valueOf or autoboxing provides better time and space performance","tnFile":"api/src/main/java/org/openmrs/util/DoubleRange.java","tnLine":59,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\tthis.high = high == null ? new Double(Double.POSITIVE_INFINITY) : high;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ClassNewInstance","tnDesc":"Class.newInstance() bypasses exception checking; prefer getDeclaredConstructor().newInstance()","tnFile":"web/src/main/java/org/openmrs/web/filter/initialization/InitializationFilter.java","tnLine":1156,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\t\t\tClass.forName(\"com.mysql.jdbc.Driver\").newInstance();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"api/src/main/java/org/openmrs/migration/MigrationHelper.java","tnLine":324,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\t\t\tString[] temp = s.split(\",\");","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ClassNewInstance","tnDesc":"Class.newInstance() bypasses exception checking; prefer getDeclaredConstructor().newInstance()","tnFile":"web/src/main/java/org/openmrs/module/web/WebModuleUtil.java","tnLine":541,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\t\t\tFilter f = (Filter) ModuleFactory.getModuleClassLoader(module).loadClass(def.getFilterClass()).newInstance();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"BoxedPrimitiveConstructor","tnDesc":"valueOf or autoboxing provides better time and space performance","tnFile":"api/src/main/java/org/openmrs/logic/Duration.java","tnLine":227,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\treturn months(new Double(duration));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"api/src/main/java/org/openmrs/api/impl/AdministrationServiceImpl.java","tnLine":275,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\t\t\t\tfor (String localeString : gp.getPropertyValue().split(\",\")) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"api/src/main/java/org/openmrs/util/databasechange/ConceptValidatorChangeSet.java","tnLine":532,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\t\t\t\tString[] localesArray = allowedLocaleStr.split(\",\");","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ClassNewInstance","tnDesc":"Class.newInstance() bypasses exception checking; prefer getDeclaredConstructor().newInstance()","tnFile":"api/src/main/java/org/openmrs/module/AdvicePoint.java","tnLine":33,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\t\tthis.classInstance = clazz.newInstance();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"api/src/main/java/org/openmrs/hl7/impl/HL7ServiceImpl.java","tnLine":865,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\t\tString messageType = messageName.split(\"_\")[0];","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ClassNewInstance","tnDesc":"Class.newInstance() bypasses exception checking; prefer getDeclaredConstructor().newInstance()","tnFile":"web/src/main/java/org/openmrs/module/web/WebModuleUtil.java","tnLine":455,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\t\t\thttpServlet = (HttpServlet) ModuleFactory.getModuleClassLoader(mod).loadClass(className).newInstance();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'dateFormatter' is never read.","tnFile":"api/src/main/java/org/openmrs/scheduler/Schedule.java","tnLine":64,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\tprivate transient DateFormat dateFormatter;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"api/src/main/java/org/openmrs/obs/handler/MediaHandler.java","tnLine":58,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\t\t\tString[] names = obs.getValueComplex().split(\"\\\\|\");","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"web/src/main/java/org/openmrs/module/web/filter/ModuleFilterMapping.java","tnLine":241,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\treturn (\"*\").equals(patternToCheck) || servletName.equals(patternToCheck);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"It is very rare for LinkedList to out-perform ArrayList or ArrayDeque. Avoid it unless you're willing to invest a lot of time into benchmarking. Caveat: LinkedList supports null elements, but ArrayDeque does not.","tnFile":"api/src/main/java/org/openmrs/util/databasechange/ConceptValidatorChangeSet.java","tnLine":63,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\tprivate List<String> logMessages = new LinkedList<>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"api/src/main/java/org/openmrs/api/impl/GlobalLocaleList.java","tnLine":35,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\tfor (String allowedLocaleString : newValue.getPropertyValue().split(\",\")) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ClassNewInstance","tnDesc":"Class.newInstance() bypasses exception checking; prefer getDeclaredConstructor().newInstance()","tnFile":"api/src/main/java/org/openmrs/PersonAttribute.java","tnLine":255,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\t\t\tObject o = c.newInstance();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"api/src/main/java/org/openmrs/obs/handler/AbstractHandler.java","tnLine":150,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\tString[] names = obs.getValueComplex().split(\"\\\\|\");","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ClassNewInstance","tnDesc":"Class.newInstance() bypasses exception checking; prefer getDeclaredConstructor().newInstance()","tnFile":"api/src/main/java/org/openmrs/module/Module.java","tnLine":566,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\t\t\tExtension ext = (Extension) cls.newInstance();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"It is very rare for LinkedList to out-perform ArrayList or ArrayDeque. Avoid it unless you're willing to invest a lot of time into benchmarking. Caveat: LinkedList supports null elements, but ArrayDeque does not.","tnFile":"api/src/main/java/org/openmrs/util/databasechange/ConceptValidatorChangeSet.java","tnLine":150,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\t\t\t\t\t\tnamesWithNoLocale = new LinkedList<>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"api/src/main/java/org/openmrs/hl7/impl/HL7ServiceImpl.java","tnLine":866,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\t\tString triggerEvent = messageName.split(\"_\")[1];","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'creator' is never read.","tnFile":"api/src/main/java/org/openmrs/Patient.java","tnLine":62,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\tprivate User creator;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"api/src/main/java/org/openmrs/module/ModuleFactory.java","tnLine":933,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\t\t\tString[] sqlStatements = sql.split(\";\");","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"api/src/main/java/org/openmrs/api/db/hibernate/HibernateEncounterDAO.java","tnLine":411,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\t\t\tString[] splitNames = query.split(\" \");","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"api/src/main/java/org/openmrs/validator/OrderValidator.java","tnLine":154,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\tif (order.getOrderGroup() != null && !(order.getPatient().equals(order.getOrderGroup().getPatient()))) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"GetClassOnClass","tnDesc":"Calling getClass() on an object of type Class returns the Class object for java.lang.Class; you probably meant to operate on the object directly","tnFile":"api/src/main/java/org/openmrs/api/context/ServiceContext.java","tnLine":768,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\t\t\t\t\tlog.debug(\"cls classloader: \" + cls.getClass().getClassLoader() + \" uid: \"","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"EqualsGetClass","tnDesc":"Overriding Object#equals in a non-final class by using getClass rather than instanceof breaks substitutability of subclasses.","tnFile":"api/src/main/java/org/openmrs/module/ModuleConditionalResource.java","tnLine":61,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\tpublic boolean equals(Object o) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"BoxedPrimitiveConstructor","tnDesc":"valueOf or autoboxing provides better time and space performance","tnFile":"api/src/main/java/org/openmrs/util/DoubleRange.java","tnLine":40,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\tthis.low = low == null ? new Double(Double.NEGATIVE_INFINITY) : low;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"api/src/main/java/org/openmrs/api/db/hibernate/HibernateAdministrationDAO.java","tnLine":192,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\tPersistentClass persistentClass = configuration.getClassMapping(aClass.getName().split(\"_\")[0]);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"It is very rare for LinkedList to out-perform ArrayList or ArrayDeque. Avoid it unless you're willing to invest a lot of time into benchmarking. Caveat: LinkedList supports null elements, but ArrayDeque does not.","tnFile":"web/src/main/java/org/openmrs/web/filter/update/UpdateFilter.java","tnLine":621,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\tprivate List<String> updateWarnings = new LinkedList<>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"It is very rare for LinkedList to out-perform ArrayList or ArrayDeque. Avoid it unless you're willing to invest a lot of time into benchmarking. Caveat: LinkedList supports null elements, but ArrayDeque does not.","tnFile":"api/src/main/java/org/openmrs/util/databasechange/ConceptValidatorChangeSet.java","tnLine":447,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\t\t\t\tconceptIds = new LinkedList<>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"web/src/main/java/org/openmrs/web/filter/GZIPFilter.java","tnLine":156,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\t\tfor (String acceptPath : cachedGZipCompressedRequestForPathAccepted.split(\",\")) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"EqualsGetClass","tnDesc":"Overriding Object#equals in a non-final class by using getClass rather than instanceof breaks substitutability of subclasses.","tnFile":"api/src/main/java/org/openmrs/Condition.java","tnLine":292,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\tpublic boolean equals(Object o) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"BoxedPrimitiveConstructor","tnDesc":"valueOf or autoboxing provides better time and space performance","tnFile":"api/src/main/java/org/openmrs/logic/Duration.java","tnLine":127,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\treturn seconds(new Double(duration));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"GetClassOnClass","tnDesc":"Calling getClass() on an object of type Class returns the Class object for java.lang.Class; you probably meant to operate on the object directly","tnFile":"api/src/main/java/org/openmrs/api/context/ServiceContext.java","tnLine":778,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\t\t\t\t\t        + cls.getClass().getClassLoader().hashCode());","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The parameter 'props' is never read.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":1168,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\tprivate static void checkForDatabaseUpdates(Properties props) throws DatabaseUpdateException, InputRequiredException {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"api/src/main/java/org/openmrs/api/impl/UserServiceImpl.java","tnLine":728,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\t\tString[] credTokens = loginCred.getActivationKey().split(\":\");","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"BoxedPrimitiveConstructor","tnDesc":"valueOf or autoboxing provides better time and space performance","tnFile":"api/src/main/java/org/openmrs/logic/Duration.java","tnLine":167,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\treturn hours(new Double(duration));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"BoxedPrimitiveConstructor","tnDesc":"valueOf or autoboxing provides better time and space performance","tnFile":"api/src/main/java/org/openmrs/logic/Duration.java","tnLine":187,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\treturn days(new Double(duration));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"BoxedPrimitiveConstructor","tnDesc":"valueOf or autoboxing provides better time and space performance","tnFile":"api/src/main/java/org/openmrs/util/DoubleRange.java","tnLine":77,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\tthis.low = low == null ? new Double(Double.NEGATIVE_INFINITY) : low;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ClassNewInstance","tnDesc":"Class.newInstance() bypasses exception checking; prefer getDeclaredConstructor().newInstance()","tnFile":"api/src/main/java/org/openmrs/module/AdvicePoint.java","tnLine":61,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\t\to = c.newInstance();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"InconsistentCapitalization","tnDesc":"Found the field 'bIsToA' with the same name as the parameter 'bisToA' but with different capitalization.","tnFile":"api/src/main/java/org/openmrs/RelationshipType.java","tnLine":148,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\tpublic void setbIsToA(String bisToA) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"api/src/main/java/org/openmrs/messagesource/impl/MutableResourceBundleMessageSource.java","tnLine":293,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\tif (log.isWarnEnabled() && (resourceSet.isEmpty())) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"It is very rare for LinkedList to out-perform ArrayList or ArrayDeque. Avoid it unless you're willing to invest a lot of time into benchmarking. Caveat: LinkedList supports null elements, but ArrayDeque does not.","tnFile":"api/src/main/java/org/openmrs/api/db/hibernate/ChainingInterceptor.java","tnLine":159,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\tList<Integer> uniqueIndices = new LinkedList<>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"api/src/main/java/org/openmrs/util/databasechange/SourceMySqldiffFile.java","tnLine":176,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\tfor (String pathPart : path.split(\"/\")) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"api/src/main/java/org/openmrs/User.java","tnLine":553,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\t\t\tString[] proficientLocalesArray = proficientLocalesProperty.split(\",\");","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"BoxedPrimitiveConstructor","tnDesc":"valueOf or autoboxing provides better time and space performance","tnFile":"api/src/main/java/org/openmrs/util/DoubleRange.java","tnLine":41,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\tthis.high = high == null ? new Double(Double.POSITIVE_INFINITY) : high;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The parameter 'realPath' is never read.","tnFile":"web/src/main/java/org/openmrs/module/web/WebModuleUtil.java","tnLine":655,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\tprivate static Document getDWRModuleXML(InputStream inputStream, String realPath) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ClassNewInstance","tnDesc":"Class.newInstance() bypasses exception checking; prefer getDeclaredConstructor().newInstance()","tnFile":"web/src/main/java/org/openmrs/web/filter/initialization/InitializationFilter.java","tnLine":990,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\t\tClass.forName(loadedDriverString).newInstance();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'attributes' is never read.","tnFile":"api/src/main/java/org/openmrs/Visit.java","tnLine":81,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\tprivate Set<VisitAttribute> attributes = new LinkedHashSet<>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ModifiedButNotUsed","tnDesc":"A collection or proto builder was created, but its values were never accessed.","tnFile":"api/src/main/java/org/openmrs/migration/MigrationHelper.java","tnLine":313,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\tList<PatientProgram> patientPrograms = new ArrayList<>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"api/src/main/java/org/openmrs/util/databasechange/MigrateConceptReferenceTermChangeSet.java","tnLine":126,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\t\t\tif (source == prevSource && (Objects.equals(sourceCode, prevSourceCode))) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"web/src/main/java/org/openmrs/web/filter/initialization/InitializationFilter.java","tnLine":1849,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\t\t\t\tif (!(\"liquibasechangelog\".equals(tableName)) && !(\"liquibasechangeloglock\".equals(tableName))) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"getUser implements method in Authenticated; expected @Override","tnFile":"api/src/main/java/org/openmrs/api/context/BasicAuthenticated.java","tnLine":38,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\tpublic User getUser() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"Vector performs synchronization that is usually unnecessary; prefer ArrayList.","tnFile":"web/src/main/java/org/openmrs/module/web/WebModuleUtil.java","tnLine":97,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t        .synchronizedList(new Vector<>());","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"BoxedPrimitiveConstructor","tnDesc":"valueOf or autoboxing provides better time and space performance","tnFile":"api/src/main/java/org/openmrs/logic/Duration.java","tnLine":207,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\treturn weeks(new Double(duration));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"api/src/main/java/org/openmrs/api/db/hibernate/HibernateUserDAO.java","tnLine":602,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\t\tString[] names = name.split(\" \");","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ThreadJoinLoop","tnDesc":"Thread.join needs to be surrounded by a loop until it succeeds, as in Uninterruptibles.joinUninterruptibly.","tnFile":"api/src/main/java/org/openmrs/api/context/Daemon.java","tnLine":166,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\t\tcreateUserThread.join();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The parameter 'httpRequest' is never read.","tnFile":"web/src/main/java/org/openmrs/web/filter/util/CustomResourceLoader.java","tnLine":52,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\tprivate CustomResourceLoader(HttpServletRequest httpRequest) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ThreadJoinLoop","tnDesc":"Thread.join needs to be surrounded by a loop until it succeeds, as in Uninterruptibles.joinUninterruptibly.","tnFile":"api/src/main/java/org/openmrs/api/context/Daemon.java","tnLine":95,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\t\tstartModuleThread.join();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ClassNewInstance","tnDesc":"Class.newInstance() bypasses exception checking; prefer getDeclaredConstructor().newInstance()","tnFile":"api/src/main/java/org/openmrs/DrugOrder.java","tnLine":293,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\t\tDosingInstructions instructions = getDosingType().newInstance();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"EqualsGetClass","tnDesc":"Overriding Object#equals in a non-final class by using getClass rather than instanceof breaks substitutability of subclasses.","tnFile":"api/src/main/java/org/openmrs/module/ModuleConditionalResource.java","tnLine":116,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\tpublic boolean equals(Object o) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"web/src/main/java/org/openmrs/web/filter/GZIPFilter.java","tnLine":109,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\tboolean supported = ((browserEncodings != null) && (browserEncodings.contains(\"gzip\")));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ReferenceEquality","tnDesc":"Comparison using reference equality instead of value equality","tnFile":"api/src/main/java/org/openmrs/module/Module.java","tnLine":537,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\t\tif (extensionNames.get(ext.getPointId()) != ext.getClass().getName()) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DoubleCheckedLocking","tnDesc":"Double-checked locking on non-volatile fields is unsafe","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":598,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\tif (mailSession == null) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"api/src/main/java/org/openmrs/Obs.java","tnLine":1052,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\t\tString[] valuesComplex = getValueComplex().split(\"\\\\|\");","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The assignment to this local variable 'url' is never read.","tnFile":"api/src/main/java/org/openmrs/module/ModuleClassLoader.java","tnLine":863,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\t\turl = expandIfNecessary(url);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"api/src/main/java/org/openmrs/module/ModuleFileParser.java","tnLine":585,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\tfor (String s : content.split(\"\\\\s\")) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"api/src/main/java/org/openmrs/validator/OrderValidator.java","tnLine":148,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\tif (order.getOrderGroup() != null && !(order.getEncounter().equals(order.getOrderGroup().getEncounter()))) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The parameter 'version' is never read.","tnFile":"api/src/main/java/org/openmrs/module/UpdateFileParser.java","tnLine":143,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\tprivate static String getElement(Element element, String version, String tag) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"BoxedPrimitiveConstructor","tnDesc":"valueOf or autoboxing provides better time and space performance","tnFile":"api/src/main/java/org/openmrs/logic/Duration.java","tnLine":147,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\treturn minutes(new Double(duration));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"updateOrderFulfillerStatus implements method in OrderService; expected @Override","tnFile":"api/src/main/java/org/openmrs/api/impl/OrderServiceImpl.java","tnLine":487,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\tpublic Order updateOrderFulfillerStatus(Order order, Order.FulfillerStatus orderFulfillerStatus, String fullFillerComment) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"OperatorPrecedence","tnDesc":"Use grouping parenthesis to make the operator precedence explicit","tnFile":"api/src/main/java/org/openmrs/Concept.java","tnLine":753,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\t\t\t\t\t\tStringUtils.isNotBlank(country) && country.equals(n.getLocale().getCountry()))","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"web/src/main/java/org/openmrs/web/filter/update/UpdateFilter.java","tnLine":525,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\t\t\t\t\tlog.debug(\"Setting updates required to \" + (!model.changes.isEmpty())","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"It is very rare for LinkedList to out-perform ArrayList or ArrayDeque. Avoid it unless you're willing to invest a lot of time into benchmarking. Caveat: LinkedList supports null elements, but ArrayDeque does not.","tnFile":"api/src/main/java/org/openmrs/module/ModuleClassLoader.java","tnLine":858,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\tList<URL> result = new LinkedList<>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"api/src/main/java/org/openmrs/User.java","tnLine":549,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\t        || (!OpenmrsUtil.nullSafeEquals(parsedProficientLocalesProperty, proficientLocalesProperty))) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ClassNewInstance","tnDesc":"Class.newInstance() bypasses exception checking; prefer getDeclaredConstructor().newInstance()","tnFile":"api/src/main/java/org/openmrs/customdatatype/CustomDatatypeUtil.java","tnLine":102,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\t\t\tCustomDatatypeHandler handler = clazz.newInstance();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"api/src/main/java/org/openmrs/util/databasechange/AddConceptMapTypesChangeset.java","tnLine":113,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\t\t\tString[] mapTypeAndUuid = map.trim().split(\"\\\\|\");","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"api/src/main/java/org/openmrs/api/impl/AdministrationServiceImpl.java","tnLine":293,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\t\t\t\t\tthrow new APIException((Context.getMessageSourceService().getMessage(","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"api/src/main/java/org/openmrs/util/databasechange/AddConceptMapTypesChangeset.java","tnLine":97,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\t\t\tString[] mapTypeAndUuid = map.trim().split(\"\\\\|\");","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"BoxedPrimitiveConstructor","tnDesc":"valueOf or autoboxing provides better time and space performance","tnFile":"api/src/main/java/org/openmrs/logic/Duration.java","tnLine":247,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\treturn years(new Double(duration));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"api/src/main/java/org/openmrs/module/ModuleUtil.java","tnLine":83,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\t\tString[] moduleArray = moduleListString.split(\" \");","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"HidingField","tnDesc":"Hiding fields of superclasses may cause confusion and errors. This field is hiding a field of the same name in superclass: BaseOpenmrsData","tnFile":"api/src/main/java/org/openmrs/Patient.java","tnLine":62,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\tprivate User creator;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DoubleCheckedLocking","tnDesc":"Double-checked locking on non-volatile fields is unsafe","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":274,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\tif (serviceContext == null) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"api/src/main/java/org/openmrs/util/Format.java","tnLine":45,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\treturn \"\" + (d);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ThreadJoinLoop","tnDesc":"Thread.join needs to be surrounded by a loop until it succeeds, as in Uninterruptibles.joinUninterruptibly.","tnFile":"web/src/main/java/org/openmrs/web/WebDaemon.java","tnLine":57,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\t\tstartOpenmrsThread.join();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"api/src/main/java/org/openmrs/annotation/OpenmrsProfileExcludeFilter.java","tnLine":73,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\t\t\tString[] splitModuleAndVersion = moduleAndVersion.split(\":\");","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"It is very rare for LinkedList to out-perform ArrayList or ArrayDeque. Avoid it unless you're willing to invest a lot of time into benchmarking. Caveat: LinkedList supports null elements, but ArrayDeque does not.","tnFile":"api/src/main/java/org/openmrs/module/ModuleClassLoader.java","tnLine":443,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\tList<URL> result = new LinkedList<>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"It is very rare for LinkedList to out-perform ArrayList or ArrayDeque. Avoid it unless you're willing to invest a lot of time into benchmarking. Caveat: LinkedList supports null elements, but ArrayDeque does not.","tnFile":"api/src/main/java/org/openmrs/module/ModuleClassLoader.java","tnLine":203,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\tList<URL> result = new LinkedList<>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"api/src/main/java/org/openmrs/module/ModuleUtil.java","tnLine":295,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\t\tString[] ranges = versionRange.split(\",\");","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"api/src/main/java/org/openmrs/api/db/hibernate/HibernateUtil.java","tnLine":139,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\t\tString alias = \"attributes\" + (a++);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ClassNewInstance","tnDesc":"Class.newInstance() bypasses exception checking; prefer getDeclaredConstructor().newInstance()","tnFile":"api/src/main/java/org/openmrs/module/Module.java","tnLine":155,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\t\t\tObject o = c.newInstance();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"api/src/main/java/org/openmrs/migration/MigrationHelper.java","tnLine":223,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\t\tString[] ss = s.split(\",\");","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"api/src/main/java/org/openmrs/module/ModuleUtil.java","tnLine":299,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\t\t\tif (range.indexOf(\"*\") > 0 || range.indexOf(separator) > 0 && (!isVersionWithQualifier(range))) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"getAuthenticationScheme implements method in Authenticated; expected @Override","tnFile":"api/src/main/java/org/openmrs/api/context/BasicAuthenticated.java","tnLine":30,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\tpublic String getAuthenticationScheme() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"GetClassOnClass","tnDesc":"Calling getClass() on an object of type Class returns the Class object for java.lang.Class; you probably meant to operate on the object directly","tnFile":"api/src/main/java/org/openmrs/api/context/ServiceContext.java","tnLine":769,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\t\t\t\t\t        + cls.getClass().getClassLoader().hashCode());","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'voidedBy' is never read.","tnFile":"api/src/main/java/org/openmrs/Patient.java","tnLine":80,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\tprivate User voidedBy;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"api/src/main/java/org/openmrs/api/db/hibernate/HibernateUserDAO.java","tnLine":129,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\t\tString[] credTokens = loginCred.getActivationKey().split(\":\");","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"It is very rare for LinkedList to out-perform ArrayList or ArrayDeque. Avoid it unless you're willing to invest a lot of time into benchmarking. Caveat: LinkedList supports null elements, but ArrayDeque does not.","tnFile":"api/src/main/java/org/openmrs/util/databasechange/ConceptValidatorChangeSet.java","tnLine":613,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\t\t\t\tlocaleConceptNamesMap.put(conceptName.getLocale(), new LinkedList<>());","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"getRevisionObs implements method in ObsService; expected @Override","tnFile":"api/src/main/java/org/openmrs/api/impl/ObsServiceImpl.java","tnLine":501,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\tpublic Obs getRevisionObs(Obs initialObs) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"api/src/main/java/org/openmrs/Obs.java","tnLine":1007,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\t\t\tString[] valuesComplex = getValueComplex().split(\"\\\\|\");","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ClassNewInstance","tnDesc":"Class.newInstance() bypasses exception checking; prefer getDeclaredConstructor().newInstance()","tnFile":"api/src/main/java/org/openmrs/api/impl/ObsServiceImpl.java","tnLine":620,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\t\tregisterHandler(key, (ComplexObsHandler) loadedClass.newInstance());","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"InconsistentCapitalization","tnDesc":"Found the field 'aIsToB' with the same name as the parameter 'aisToB' but with different capitalization.","tnFile":"api/src/main/java/org/openmrs/RelationshipType.java","tnLine":106,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\tpublic void setaIsToB(String aisToB) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"GetClassOnClass","tnDesc":"Calling getClass() on an object of type Class returns the Class object for java.lang.Class; you probably meant to operate on the object directly","tnFile":"api/src/main/java/org/openmrs/api/context/ServiceContext.java","tnLine":777,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\t\t\t\t\tlog.debug(\"cls2 classloader: \" + cls.getClass().getClassLoader() + \" uid: \"","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"api/src/main/java/org/openmrs/migration/MigrationHelper.java","tnLine":350,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\t\t\tString[] temp = s.split(\",\");","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ThreadJoinLoop","tnDesc":"Thread.join needs to be surrounded by a loop until it succeeds, as in Uninterruptibles.joinUninterruptibly.","tnFile":"api/src/main/java/org/openmrs/api/context/Daemon.java","tnLine":221,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\t\texecuteTaskThread.join();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'changedBy' is never read.","tnFile":"api/src/main/java/org/openmrs/Patient.java","tnLine":89,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\tprivate User changedBy;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"api/src/main/java/org/openmrs/api/db/hibernate/HibernateProviderDAO.java","tnLine":206,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\tString[] splitNames = name.split(\" \");","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"It is very rare for LinkedList to out-perform ArrayList or ArrayDeque. Avoid it unless you're willing to invest a lot of time into benchmarking. Caveat: LinkedList supports null elements, but ArrayDeque does not.","tnFile":"api/src/main/java/org/openmrs/util/databasechange/ConceptValidatorChangeSet.java","tnLine":60,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\tprivate List<String> updateWarnings = new LinkedList<>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"api/src/main/java/org/openmrs/api/handler/ExistingOrNewVisitAssignmentHandler.java","tnLine":116,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\t\tString[] mappings = value.split(\",\");","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ClassNewInstance","tnDesc":"Class.newInstance() bypasses exception checking; prefer getDeclaredConstructor().newInstance()","tnFile":"api/src/main/java/org/openmrs/api/impl/SerializationServiceImpl.java","tnLine":66,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\t\t\t\treturn (OpenmrsSerializer) clazz.newInstance();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"OperatorPrecedence","tnDesc":"Use grouping parenthesis to make the operator precedence explicit","tnFile":"api/src/main/java/org/openmrs/module/ModuleUtil.java","tnLine":299,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\t\t\tif (range.indexOf(\"*\") > 0 || range.indexOf(separator) > 0 && (!isVersionWithQualifier(range))) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"It is very rare for LinkedList to out-perform ArrayList or ArrayDeque. Avoid it unless you're willing to invest a lot of time into benchmarking. Caveat: LinkedList supports null elements, but ArrayDeque does not.","tnFile":"api/src/main/java/org/openmrs/Patient.java","tnLine":399,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\tList<PatientIdentifier> nonPreferred = new LinkedList<>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedMethod","tnDesc":"Private method 'setAuthenticationScheme' is never used.","tnFile":"api/src/main/java/org/openmrs/api/context/Context.java","tnLine":188,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\tstatic private void setAuthenticationScheme() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ThreadJoinLoop","tnDesc":"Thread.join needs to be surrounded by a loop until it succeeds, as in Uninterruptibles.joinUninterruptibly.","tnFile":"api/src/main/java/org/openmrs/api/context/Daemon.java","tnLine":380,"tnColumn":0,"tnPatch":null,"tnCodeLine":"\t\t\tdaemonThread.join();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}}],null,{"analysisLOC":null,"analysisBuildSys":"Maven []","analysisLang":null}]}]],"debugLog":"/org/openmrs/logic/LogicException.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerTask.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/attribute/BaseAttribute.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/MissingRequiredIdentifierException.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/validator/ConceptDrugValidator.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/util/databasechange/MigrateDrugOrderUnitsToCodedDoseUnitsChangeset.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/util/databasechange/AddConceptMapTypesChangeset.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/messagesource/PresentationMessage.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/module/ModuleConstants.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/handler/RequireVoidReasonVoidHandler.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/logic/op/Or.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/hl7/HL7InError.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/module/MandatoryModuleException.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/EventListeners.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/db/hibernate/DropMillisecondsHibernateInterceptor.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/customdatatype/datatype/BaseOpenmrsDatatype.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/db/hibernate/search/bridge/OpenmrsObjectFieldBridge.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/handler/BaseRetireHandler.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/handler/RetireSaveHandler.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/module/ModuleFileParser.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/person/PersonMergeLogData.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/logic/Duration.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/module/ModuleMustStartException.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/util/PrivilegeConstants.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/validator/LocationValidator.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/hl7/impl/HL7ServiceImpl.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/impl/OrderServiceImpl.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/PersonAttributeType.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/logic/datasource/LogicDataSource.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/patient/impl/LuhnIdentifierValidator.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/notification/db/hibernate/HibernateAlertDAO.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/IdentifierNotUniqueException.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/ImplementationId.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/hl7/handler/ADTA28Handler.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/validator/AlertValidator.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/util/VelocityExceptionHandler.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/propertyeditor/ConceptDatatypeEditor.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/ConditionVerificationStatus.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/util/PersonByNameComparator.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/validator/BaseAttributeValidator.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/propertyeditor/ConceptNumericEditor.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/util/databasechange/MigrateConceptReferenceTermChangeSet.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/notification/MessagePreparator.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/ProviderAttribute.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/messagesource/impl/MutableResourceBundleMessageSource.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/util/Security.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/Condition.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/OrderNumberGenerator.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/scheduler/tasks/AbstractTask.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/ConceptName.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/CannotStopInactiveOrderException.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/ConceptReferenceTermMap.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/OrderSetService.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/logic/op/Operand.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/collection/ListPart.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/util/databasechange/EncryptSecretAnswersChangeSet.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/obs/ComplexObsHandler.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/db/PersonDAO.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/ConceptDescription.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/db/hibernate/ImmutableEntityInterceptor.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/propertyeditor/ProgramEditor.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/Role.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/db/hibernate/search/CriteriaQuery.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/module/Extension.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/OrderEntryException.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/db/ProviderDAO.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/handler/PatientSaveHandler.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/Encounter.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/OpenmrsService.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/ConceptNameType.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/InvalidOperationOnObjectException.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/annotation/DisableHandlers.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/db/hibernate/HibernateOrderDAO.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/InvalidCheckDigitException.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/OrderContext.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/UserSessionListener.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/scheduler/tasks/AlertReminderTask.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/util/databasechange/CreateCodedOrderFrequencyForDrugOrderFrequencyChangeset.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/PatientService.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/attribute/Attribute.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/handler/PatientDataUnvoidHandler.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/ProgramWorkflowState.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/FullTextSessionFactory.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/util/OpenmrsConstants.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/BaseCustomizableData.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/util/DatabaseUtil.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/logic/op/Distinct.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/propertyeditor/ConceptClassEditor.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/validator/OrderTypeValidator.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/logic/op/ComparisonOperator.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/hl7/HL7InQueue.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/Allergies.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/Concept.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/impl/ObsServiceImpl.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/validator/FieldValidator.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/OrderSet.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/RelationshipType.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/impl/PersonNameGlobalPropertyListener.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/util/databasechange/MigrateAllergiesChangeSet.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/logic/rule/RuleParameterInfo.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/CannotStopDiscontinuationOrderException.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/scheduler/tasks/AutoCloseVisitsTask.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/UnchangeableObjectException.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/util/databasechange/MigrateDrugOrderFrequencyToCodedOrderFrequencyChangeset.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/order/DrugSuggestion.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/PersonAttributeTypeLockedException.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/db/hibernate/ChainingInterceptor.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/db/hibernate/HibernateConceptDAO.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/ConceptNumeric.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/PatientProgramAttribute.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/OrderFrequency.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/util/ProviderByPersonNameComparator.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/logic/op/Operator.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/notification/MessageException.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/db/UserDAO.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/Relationship.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/util/databasechange/UpdateCohortMemberIdsChangeset.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/DosingInstructions.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/impl/ProgramWorkflowServiceImpl.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/propertyeditor/VisitEditor.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/handler/PatientDataVoidHandler.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/module/OpenmrsCoreModuleException.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/propertyeditor/DateOrDatetimeEditor.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/validator/ConceptReferenceTermValidator.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/module/ModuleException.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/annotation/OpenmrsProfileIncludeFilter.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/OrderSetMember.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/db/ObsDAO.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/db/hibernate/search/bridge/LocaleFieldBridge.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/validator/PatientIdentifierTypeValidator.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/layout/LayoutSupport.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/util/MemoryLeakUtil.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/InsufficientIdentifiersException.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/hl7/HL7InQueueProcessor.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/validator/ConditionValidator.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/logic/op/In.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/logic/op/After.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/hl7/db/hibernate/HibernateHL7DAO.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/logic/result/Result.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/patient/impl/BaseHyphenatedIdentifierValidator.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/db/hibernate/HibernateTemplateDAO.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/annotation/Authorized.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/db/OpenmrsDataDAO.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/scheduler/db/hibernate/HibernateSchedulerDAO.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/util/LocationUtility.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/logic/LogicExpression.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/propertyeditor/ConceptAnswersEditor.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/UserService.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/util/Graph.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/db/ConceptDAO.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/Field.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/AllergyReaction.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/validator/RelationshipTypeValidator.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/logic/op/Exists.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/validator/DrugOrderValidator.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/propertyeditor/CohortEditor.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/impl/PersonServiceImpl.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/logic/op/Within.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerMemento.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/context/UserContext.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/logic/op/Not.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/BaseConceptMap.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/scheduler/SchedulerUtil.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/logic/op/TransformOperator.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/context/AuthenticationScheme.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/util/FormConstants.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/hl7/HL7QueueItem.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/messagesource/impl/DefaultMessageSourceServiceImpl.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/BlankIdentifierException.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/hl7/handler/ProposingConceptException.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/scheduler/SchedulerException.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/Order.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerServiceImpl.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/ProgramWorkflowService.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/util/DatabaseUpdater.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/validator/ConceptValidator.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/Patient.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/impl/LocationServiceImpl.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/module/ModuleActivator.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/ProgramNameDuplicatedException.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/handler/NoVisitAssignmentHandler.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/context/UsernamePasswordCredentials.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/messagesource/impl/CachedMessageSource.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/propertyeditor/ConceptEditor.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/propertyeditor/PatientIdentifierTypeEditor.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/validator/SchedulerFormValidator.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/propertyeditor/ProgramWorkflowStateEditor.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/util/FormUtil.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/hl7/HL7Util.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/impl/ProviderServiceImpl.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/validator/PersonMergeLogValidator.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/CannotDeleteObjectInUseException.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/obs/handler/BinaryDataHandler.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/annotation/OpenmrsProfile.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/propertyeditor/ConceptNameEditor.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/MissingRequiredPropertyException.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/messagesource/PresentationMessageMap.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/OpenmrsObject.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/obs/handler/BinaryStreamHandler.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/serialization/SimpleXStreamSerializer.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/DuplicateIdentifierException.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/db/hibernate/PersonSearchCriteria.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/util/OpenmrsDateFormat.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/APIException.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/db/CohortDAO.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/InvalidActivationKeyException.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/PrivilegeListener.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/DiagnosisService.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/validator/RequireNameValidator.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/util/Reflect.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/util/InputRequiredException.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/db/ClobDatatypeStorage.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/impl/ConceptServiceImpl.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/logic/op/Before.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/scheduler/TaskFactory.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/db/hibernate/HibernateProgramWorkflowDAO.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/db/hibernate/HibernateSessionFactoryBean.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/scheduler/SchedulerConstants.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/hl7/HL7Source.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/annotation/AllowDirectAccess.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/validator/BaseAttributeTypeValidator.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/propertyeditor/LocationAttributeTypeEditor.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/cache/CachePropertiesUtil.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/db/PatientDAO.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/context/ServiceContext.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/Obs.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/handler/VoidSaveHandler.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/Cohort.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/comparator/PatientIdentifierTypeDefaultComparator.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/util/AttributableDate.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/util/TestTypeFilter.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/validator/ImplementationIdValidator.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/OpenmrsMetadata.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/context/Credentials.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/db/hibernate/HibernateContextDAO.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/validator/ProgramValidator.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/propertyeditor/ProviderEditor.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/AllergyConstants.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/util/HandlerUtil.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/SimpleDosingInstructions.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/propertyeditor/PrivilegeEditor.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/scheduler/tasks/HelloWorldTask.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/Program.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/handler/UnretireHandler.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/customdatatype/datatype/ProviderDatatype.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/impl/OrderSetServiceImpl.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/util/databasechange/DuplicateEncounterTypeNameChangeSet.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/CannotDeleteRoleWithChildrenException.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/propertyeditor/ConceptSourceEditor.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/customdatatype/DownloadableDatatypeHandler.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/ConditionClinicalStatus.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/handler/PersonVoidHandler.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/validator/FormValidator.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/logic/op/LessThan.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/Voidable.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/validator/EncounterValidator.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/scheduler/Schedule.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/validator/ConceptDatatypeValidator.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/validator/ProviderValidator.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/ConceptSource.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/cache/OpenmrsCacheConfiguration.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/Creatable.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/propertyeditor/ConceptSetsEditor.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/util/DateUtil.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/BaseOpenmrsData.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/module/DaemonToken.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/AllergyProperties.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/InvalidCharactersPasswordException.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/validator/CohortValidator.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/BaseChangeableOpenmrsData.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/handler/UserSaveHandler.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/db/OpenmrsMetadataDAO.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/validator/EncounterTypeValidator.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/parameter/OrderSearchCriteriaBuilder.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/propertyeditor/VisitTypeEditor.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/notification/MessageService.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/logic/LogicCriteria.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/FormService.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/impl/EncounterServiceImpl.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/util/databasechange/ConvertOrderersToProviders.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/aop/LoggingAdvice.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/PatientProgram.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/DrugIngredient.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/db/OrderDAO.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/util/OpenmrsClassLoader.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/db/hibernate/HibernateOpenmrsObjectDAO.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/module/SqlDiffFileParser.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/notification/impl/AlertServiceImpl.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/APIAuthenticationException.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/UnchangeablePropertyException.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/notification/mail/velocity/VelocityMessagePreparator.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/ConceptMap.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/customdatatype/CustomDatatypeHandler.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/obs/handler/AbstractHandler.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/util/HttpClient.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/handler/UnvoidHandler.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/annotation/Logging.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/util/databasechange/GenerateUuid.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/patient/IdentifierValidator.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/EncounterRole.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/notification/impl/MessageServiceImpl.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/cache/CacheConfig.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/handler/ConceptReferenceTermSaveHandler.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/propertyeditor/PersonEditor.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/OrderType.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/SerializationService.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/util/OpenmrsUtil.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/propertyeditor/ConceptAnswerEditor.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/Auditable.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/PatientIdentifierTypeLockedException.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/annotation/HasAddOnStartupPrivileges.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/logic/result/ImmutableResultException.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/propertyeditor/ProgramWorkflowEditor.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/OpenmrsData.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/db/hibernate/search/LuceneQuery.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/module/Module.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/obs/SerializableComplexObsHandler.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/LocationAttribute.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/validator/PersonAttributeTypeValidator.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/propertyeditor/LocationEditor.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/impl/BaseOpenmrsService.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/logic/op/First.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/db/SerializedObjectDAO.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/util/UpgradeUtil.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/validator/PrivilegeValidator.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/propertyeditor/DrugEditor.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/InvalidIdentifierFormatException.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/validator/LocationAttributeTypeValidator.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/hl7/HL7InArchive.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/OrderGroup.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/util/LocaleUtility.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/util/Format.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/util/databasechange/CheckDrugOrderUnitAndFrequencyTextNotMappedToConcepts.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/collection/CollectionPart.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/notification/db/AlertDAO.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/ObsService.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/context/ContextAuthenticationException.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/PatientIdentifierException.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/propertyeditor/RoleEditor.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/db/VisitDAO.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/propertyeditor/ConceptReferenceTermEditor.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/impl/ConditionServiceImpl.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/util/databasechange/DuplicateEncounterRoleNameChangeSet.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/person/PersonMergeLog.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/VisitAttribute.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/db/hibernate/AttributeMatcherPredicate.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/db/hibernate/PatientSearchCriteria.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/customdatatype/CustomValueDescriptor.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/logic/op/Count.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/propertyeditor/WorkflowCollectionEditor.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/customdatatype/CustomDatatypeException.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/validator/UserValidator.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/validator/ObsValidator.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/aop/AuthorizationAdvice.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/logic/op/Last.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/notification/Alert.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/logic/Rule.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/db/TemplateDAO.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/ConceptStopWord.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/ProviderService.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/OrderService.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/db/DatatypeDAO.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/DatatypeService.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/util/databasechange/BooleanConceptChangeSet.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/validator/RoleValidator.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/WeakPasswordException.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/db/LocationDAO.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/handler/PersonNameSaveHandler.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/logic/op/NotExists.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/handler/BaseVoidHandler.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/validator/ValidateUtil.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/hl7/HL7Constants.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/db/hibernate/HibernateLocationDAO.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/util/HttpUrl.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/CohortMembership.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/db/hibernate/AuditableInterceptor.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/scheduler/SchedulerService.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/FreeTextDosingInstructions.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/db/DiagnosisDAO.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/util/databasechange/DuplicateLocationAttributeTypeNameChangeSet.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/util/OpenmrsMemento.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/obs/handler/TextHandler.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/context/DaoAuthenticationScheme.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/db/hibernate/NativeIfNotAssignedIdentityGenerator.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/customdatatype/SingleCustomValue.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/logic/op/GreaterThanEquals.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/module/AdvicePoint.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/DrugOrder.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/handler/VoidHandler.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/TestOrder.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/Allergen.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/messagesource/impl/MessageSourceServiceImpl.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/propertyeditor/ConceptMapTypeEditor.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/hl7/Hl7InArchivesMigrateThread.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/ConceptAttributeType.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/db/hibernate/HibernatePersonDAO.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/EncounterProvider.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/impl/DatatypeServiceImpl.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/CannotUnvoidOrderException.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/annotation/AddOnStartup.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/db/hibernate/ImmutableOrderInterceptor.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/validator/ConceptNameTagValidator.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/validator/VisitValidator.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/User.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/db/hibernate/HibernatePatientDAO.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/EditedOrderDoesNotMatchPreviousException.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/handler/BaseEncounterVisitHandler.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/validator/PersonAddressValidator.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/validator/DiagnosisValidator.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/layout/LayoutTemplate.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/util/OpenmrsClassScanner.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/hl7/handler/ORUR01Handler.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/impl/CohortServiceImpl.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/ConceptProposal.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/util/UserByNameComparator.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/CareSetting.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/Changeable.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/util/CycleException.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/logic/LogicTransform.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/api/db/ContextDAO.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/src/main/java/org/openmrs/VisitType.java\\\"],\\\"classpath\\\":[\\\"/root/.m2/repository/org/openmrs/liquibase/ext/identity-insert/1.2.1/identity-insert-1.2.1.jar\\\",\\\"/root/.m2/repository/ca/uhn/hapi/hapi-structures-v26/2.1/hapi-structures-v26-2.1.jar\\\",\\\"/root/.m2/repository/org/powermock/powermock-module-junit4/1.6.6/powermock-module-junit4-1.6.6.jar\\\",\\\"/root/.m2/repository/org/apache/commons/commons-collections4/4.1/commons-collections4-4.1.jar\\\",\\\"/root/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar\\\",\\\"/root/.m2/repository/org/objenesis/objenesis/2.1/objenesis-2.1.jar\\\",\\\"/root/.m2/repository/ca/uhn/hapi/hapi-structures-v25/2.1/hapi-structures-v25-2.1.jar\\\",\\\"/root/.m2/repository/org/powermock/powermock-module-junit4-common/1.6.6/powermock-module-junit4-common-1.6.6.jar\\\",\\\"/root/.m2/repository/org/apache/lucene/lucene-core/4.10.4/lucene-core-4.10.4.jar\\\",\\\"/root/.m2/repository/org/powermock/powermock-core/1.6.6/powermock-core-1.6.6.jar\\\",\\\"/root/.m2/repository/org/openmrs/liquibase/ext/type-converter/1.0.1/type-converter-1.0.1.jar\\\",\\\"/root/.m2/repository/commons-io/commons-io/2.5/commons-io-2.5.jar\\\",\\\"/root/.m2/repository/com/github/virtuald/curvesapi/1.04/curvesapi-1.04.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-tx/4.1.4.RELEASE/spring-tx-4.1.4.RELEASE.jar\\\",\\\"/root/.m2/repository/org/apache/commons/commons-lang3/3.9/commons-lang3-3.9.jar\\\",\\\"/root/.m2/repository/org/hibernate/hibernate-search-orm/5.1.2.Final/hibernate-search-orm-5.1.2.Final.jar\\\",\\\"/root/.m2/repository/net/sf/ehcache/ehcache/2.10.6/ehcache-2.10.6.jar\\\",\\\"/root/.m2/repository/org/hibernate/common/hibernate-commons-annotations/4.0.5.Final/hibernate-commons-annotations-4.0.5.Final.jar\\\",\\\"/root/.m2/repository/ca/uhn/hapi/hapi-structures-v24/2.1/hapi-structures-v24-2.1.jar\\\",\\\"/root/.m2/repository/org/azeckoski/reflectutils/0.9.20/reflectutils-0.9.20.jar\\\",\\\"/root/.m2/repository/javax/mail/mail/1.4.1/mail-1.4.1.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-core/4.1.4.RELEASE/spring-core-4.1.4.RELEASE.jar\\\",\\\"/root/.m2/repository/org/apache/lucene/lucene-queries/4.10.4/lucene-queries-4.10.4.jar\\\",\\\"/root/.m2/repository/org/powermock/powermock-api-mockito/1.6.6/powermock-api-mockito-1.6.6.jar\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/test/pom.xml\\\",\\\"/root/.m2/repository/com/mchange/mchange-commons-java/0.2.3.4/mchange-commons-java-0.2.3.4.jar\\\",\\\"/root/.m2/repository/org/apache/xmlbeans/xmlbeans/2.6.0/xmlbeans-2.6.0.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-jdbc/4.1.4.RELEASE/spring-jdbc-4.1.4.RELEASE.jar\\\",\\\"/root/.m2/repository/commons-beanutils/commons-beanutils/1.9.3/commons-beanutils-1.9.3.jar\\\",\\\"/root/.m2/repository/org/openmrs/liquibase/ext/modify-column/2.0.2/modify-column-2.0.2.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-test/4.1.4.RELEASE/spring-test-4.1.4.RELEASE.jar\\\",\\\"/root/.m2/repository/org/hibernate/hibernate-validator/4.2.0.Final/hibernate-validator-4.2.0.Final.jar\\\",\\\"/root/.m2/repository/org/jboss/jandex/1.1.0.Final/jandex-1.1.0.Final.jar\\\",\\\"/root/.m2/repository/commons-digester/commons-digester/1.8/commons-digester-1.8.jar\\\",\\\"/root/.m2/repository/org/jboss/logging/jboss-logging/3.1.3.GA/jboss-logging-3.1.3.GA.jar\\\",\\\"/root/.m2/repository/org/apache/poi/poi-ooxml/3.17/poi-ooxml-3.17.jar\\\",\\\"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.9.8/jackson-annotations-2.9.8.jar\\\",\\\"/root/.m2/repository/org/hamcrest/hamcrest/2.1/hamcrest-2.1.jar\\\",\\\"/root/.m2/repository/org/hibernate/hibernate-search-engine/5.1.2.Final/hibernate-search-engine-5.1.2.Final.jar\\\",\\\"/root/.m2/repository/xmlpull/xmlpull/1.1.3.1/xmlpull-1.1.3.1.jar\\\",\\\"/root/.m2/repository/org/liquibase/liquibase-core/2.0.5/liquibase-core-2.0.5.jar\\\",\\\"/root/.m2/repository/javax/validation/validation-api/1.0.0.GA/validation-api-1.0.0.GA.jar\\\",\\\"/root/.m2/repository/org/apache/lucene/lucene-analyzers-common/4.10.4/lucene-analyzers-common-4.10.4.jar\\\",\\\"/root/.m2/repository/org/slf4j/slf4j-api/1.7.26/slf4j-api-1.7.26.jar\\\",\\\"/root/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar\\\",\\\"/root/.m2/repository/xpp3/xpp3_min/1.1.4c/xpp3_min-1.1.4c.jar\\\",\\\"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.9.8/jackson-databind-2.9.8.jar\\\",\\\"/root/.m2/repository/org/apache/poi/poi/3.17/poi-3.17.jar\\\",\\\"/root/.m2/repository/org/apache/velocity/velocity/1.6.2/velocity-1.6.2.jar\\\",\\\"/root/.m2/repository/ca/uhn/hapi/hapi-base/2.1/hapi-base-2.1.jar\\\",\\\"/root/.m2/repository/org/hibernate/hibernate-core/4.3.9.Final/hibernate-core-4.3.9.Final.jar\\\",\\\"/root/.m2/repository/com/h2database/h2/1.4.199/h2-1.4.199.jar\\\",\\\"/root/.m2/repository/stax/stax-api/1.0.1/stax-api-1.0.1.jar\\\",\\\"/root/.m2/repository/org/apache/poi/poi-ooxml-schemas/3.17/poi-ooxml-schemas-3.17.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-context-support/4.1.4.RELEASE/spring-context-support-4.1.4.RELEASE.jar\\\",\\\"/root/.m2/repository/mysql/mysql-connector-java/5.1.45/mysql-connector-java-5.1.45.jar\\\",\\\"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.9.8/jackson-core-2.9.8.jar\\\",\\\"/root/.m2/repository/org/jboss/logging/jboss-logging-annotations/1.2.0.Beta1/jboss-logging-annotations-1.2.0.Beta1.jar\\\",\\\"/root/.m2/repository/org/hamcrest/hamcrest-core/2.1/hamcrest-core-2.1.jar\\\",\\\"/root/.m2/repository/org/mockito/mockito-core/1.10.19/mockito-core-1.10.19.jar\\\",\\\"/root/.m2/repository/commons-collections/commons-collections/3.2.2/commons-collections-3.2.2.jar\\\",\\\"/root/.m2/repository/org/slf4j/jcl-over-slf4j/1.7.26/jcl-over-slf4j-1.7.26.jar\\\",\\\"/root/.m2/repository/xerces/xercesImpl/2.8.0/xercesImpl-2.8.0.jar\\\",\\\"/root/.m2/repository/org/hamcrest/hamcrest-library/2.1/hamcrest-library-2.1.jar\\\",\\\"/root/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar\\\",\\\"/root/.m2/repository/postgresql/postgresql/9.0-801.jdbc4/postgresql-9.0-801.jdbc4.jar\\\",\\\"/root/.m2/repository/commons-validator/commons-validator/1.4.0/commons-validator-1.4.0.jar\\\",\\\"/root/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar\\\",\\\"/root/.m2/repository/commons-codec/commons-codec/1.10/commons-codec-1.10.jar\\\",\\\"/root/.m2/repository/org/codehaus/groovy/groovy-all/2.4.6/groovy-all-2.4.6.jar\\\",\\\"/root/.m2/repository/org/powermock/powermock-api-mockito-common/1.6.6/powermock-api-mockito-common-1.6.6.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-beans/4.1.4.RELEASE/spring-beans-4.1.4.RELEASE.jar\\\",\\\"/root/.m2/repository/org/apache/lucene/lucene-facet/4.10.4/lucene-facet-4.10.4.jar\\\",\\\"/root/.m2/repository/com/mchange/c3p0/0.9.2.1/c3p0-0.9.2.1.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-orm/4.1.4.RELEASE/spring-orm-4.1.4.RELEASE.jar\\\",\\\"/root/.m2/repository/org/apache/lucene/lucene-sandbox/4.10.4/lucene-sandbox-4.10.4.jar\\\",\\\"/root/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar\\\",\\\"/root/.m2/repository/org/apache/lucene/lucene-queryparser/4.10.4/lucene-queryparser-4.10.4.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-context/4.1.4.RELEASE/spring-context-4.1.4.RELEASE.jar\\\",\\\"/root/.m2/repository/org/powermock/powermock-api-support/1.6.6/powermock-api-support-1.6.6.jar\\\",\\\"/root/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.0.0.Final/jboss-transaction-api_1.2_spec-1.0.0.Final.jar\\\",\\\"/root/.m2/repository/org/hibernate/hibernate-ehcache/4.3.9.Final/hibernate-ehcache-4.3.9.Final.jar\\\",\\\"/root/.m2/repository/org/powermock/powermock-reflect/1.6.6/powermock-reflect-1.6.6.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-aop/4.1.4.RELEASE/spring-aop-4.1.4.RELEASE.jar\\\",\\\"/root/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar\\\",\\\"/root/.m2/repository/ca/uhn/hapi/hapi-structures-v23/2.1/hapi-structures-v23-2.1.jar\\\",\\\"/root/.m2/repository/com/thoughtworks/xstream/xstream/1.4.11.1/xstream-1.4.11.1.jar\\\",\\\"/root/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar\\\",\\\"/root/.m2/repository/org/dbunit/dbunit/2.6.0/dbunit-2.6.0.jar\\\",\\\"/root/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar\\\",\\\"/root/.m2/repository/org/aspectj/aspectjweaver/1.9.4/aspectjweaver-1.9.4.jar\\\",\\\"/root/.m2/repository/commons-logging/commons-logging/1.1.1/commons-logging-1.1.1.jar\\\",\\\"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar\\\",\\\"/root/.m2/repository/org/javassist/javassist/3.25.0-GA/javassist-3.25.0-GA.jar\\\",\\\"/root/.m2/repository/org/hibernate/hibernate-c3p0/4.3.9.Final/hibernate-c3p0-4.3.9.Final.jar\\\",\\\"/root/.m2/repository/org/slf4j/slf4j-log4j12/1.7.26/slf4j-log4j12-1.7.26.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-expression/4.1.4.RELEASE/spring-expression-4.1.4.RELEASE.jar\\\",\\\"/root/.m2/repository/org/aspectj/aspectjrt/1.9.4/aspectjrt-1.9.4.jar\\\"],\\\"output_dir\\\":\\\"/tmp/analyzing-afaaeabc2f6f3545/api/target/classes\\\",\\\"jdk\\\":\\\"JDK1.8\\\"},{\\\"arguments\\\":[],\\\"files\\\":[\\\"/tmp/analyzing-afaaeabc2f6f3545/web/src/main/java/org/openmrs/web/DispatcherServlet.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/web/src/main/java/org/openmrs/module/web/filter/ModuleFilter.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/web/src/main/java/org/openmrs/web/filter/util/LocalizationTool.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/web/src/main/java/org/openmrs/web/filter/initialization/InitializationWizardModel.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/web/src/main/java/org/openmrs/web/filter/GZIPResponseStream.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/web/src/main/java/org/openmrs/module/web/filter/ModuleFilterChain.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/web/src/main/java/org/openmrs/web/filter/startuperror/StartupErrorFilter.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/web/src/main/java/org/openmrs/web/filter/update/UpdateFilterModel.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/web/src/main/java/org/openmrs/web/filter/GZIPResponseWrapper.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/web/src/main/java/org/openmrs/web/StaticDispatcherServlet.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/web/src/main/java/org/springframework/http/converter/json/MappingJacksonHttpMessageConverter.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/web/src/main/java/org/openmrs/web/WebUtil.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/web/src/main/java/org/openmrs/web/controller/PseudoStaticContentController.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/web/src/main/java/org/openmrs/module/web/filter/ModuleFilterMapping.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/web/src/main/java/org/openmrs/web/filter/OpenmrsFilter.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/web/src/main/java/org/openmrs/web/filter/GZIPRequestWrapper.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/web/src/main/java/org/openmrs/web/filter/initialization/WizardTask.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/web/src/main/java/org/openmrs/web/filter/initialization/TestInstallUtil.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/web/src/main/java/org/openmrs/web/Listener.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/web/src/main/java/org/openmrs/web/OpenmrsBindingInitializer.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/web/src/main/java/org/openmrs/module/web/filter/ModuleFilterConfig.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/web/src/main/java/org/openmrs/web/filter/update/UpdateFilter.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/web/src/main/java/org/openmrs/web/filter/startuperror/StartupErrorFilterModel.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/web/src/main/java/org/openmrs/module/web/ModuleServlet.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/web/src/main/java/org/openmrs/web/filter/StartupFilter.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/web/src/main/java/org/openmrs/module/web/filter/ModuleFilterDefinition.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/web/src/main/java/org/openmrs/web/WebDaemon.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/web/src/main/java/org/openmrs/web/WebConstants.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/web/src/main/java/org/springframework/web/servlet/view/json/MappingJacksonJsonView.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/web/src/main/java/org/openmrs/web/filter/GZIPFilter.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/web/src/main/java/org/openmrs/web/filter/util/CustomResourceLoader.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/web/src/main/java/org/openmrs/module/web/ModuleResourcesServlet.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/web/src/main/java/org/openmrs/web/filter/util/FilterUtil.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/web/src/main/java/org/openmrs/web/filter/initialization/InitializationFilter.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/web/src/main/java/org/openmrs/OpenmrsCharacterEscapes.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/web/src/main/java/org/openmrs/web/filter/JspClassLoaderFilter.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/web/src/main/java/org/openmrs/module/web/WebModuleUtil.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/web/src/main/java/org/openmrs/web/filter/util/ErrorMessageConstants.java\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/web/src/main/java/org/openmrs/web/filter/GZIPRequestStream.java\\\"],\\\"classpath\\\":[\\\"/root/.m2/repository/org/openmrs/liquibase/ext/identity-insert/1.2.1/identity-insert-1.2.1.jar\\\",\\\"/root/.m2/repository/ca/uhn/hapi/hapi-structures-v26/2.1/hapi-structures-v26-2.1.jar\\\",\\\"/root/.m2/repository/javax/servlet/javax.servlet-api/3.0.1/javax.servlet-api-3.0.1.jar\\\",\\\"/root/.m2/repository/org/powermock/powermock-module-junit4/1.6.6/powermock-module-junit4-1.6.6.jar\\\",\\\"/root/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar\\\",\\\"/root/.m2/repository/org/apache/commons/commons-collections4/4.1/commons-collections4-4.1.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-oxm/4.1.4.RELEASE/spring-oxm-4.1.4.RELEASE.jar\\\",\\\"/root/.m2/repository/ca/uhn/hapi/hapi-structures-v25/2.1/hapi-structures-v25-2.1.jar\\\",\\\"/root/.m2/repository/org/objenesis/objenesis/2.1/objenesis-2.1.jar\\\",\\\"/root/.m2/repository/org/powermock/powermock-module-junit4-common/1.6.6/powermock-module-junit4-common-1.6.6.jar\\\",\\\"/root/.m2/repository/org/apache/lucene/lucene-core/4.10.4/lucene-core-4.10.4.jar\\\",\\\"/root/.m2/repository/org/apache/velocity/velocity-tools/2.0/velocity-tools-2.0.jar\\\",\\\"/root/.m2/repository/org/openmrs/liquibase/ext/type-converter/1.0.1/type-converter-1.0.1.jar\\\",\\\"/root/.m2/repository/org/powermock/powermock-core/1.6.6/powermock-core-1.6.6.jar\\\",\\\"/root/.m2/repository/commons-io/commons-io/2.5/commons-io-2.5.jar\\\",\\\"/root/.m2/repository/taglibs/response/1.0.1/response-1.0.1.jar\\\",\\\"/root/.m2/repository/org/apache/struts/struts-core/1.3.8/struts-core-1.3.8.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-tx/4.1.4.RELEASE/spring-tx-4.1.4.RELEASE.jar\\\",\\\"/root/.m2/repository/com/github/virtuald/curvesapi/1.04/curvesapi-1.04.jar\\\",\\\"/root/.m2/repository/org/apache/commons/commons-lang3/3.9/commons-lang3-3.9.jar\\\",\\\"/root/.m2/repository/org/hibernate/hibernate-search-orm/5.1.2.Final/hibernate-search-orm-5.1.2.Final.jar\\\",\\\"/root/.m2/repository/net/sf/ehcache/ehcache/2.10.6/ehcache-2.10.6.jar\\\",\\\"/root/.m2/repository/org/hibernate/common/hibernate-commons-annotations/4.0.5.Final/hibernate-commons-annotations-4.0.5.Final.jar\\\",\\\"/root/.m2/repository/ca/uhn/hapi/hapi-structures-v24/2.1/hapi-structures-v24-2.1.jar\\\",\\\"/root/.m2/repository/org/azeckoski/reflectutils/0.9.20/reflectutils-0.9.20.jar\\\",\\\"/root/.m2/repository/javax/mail/mail/1.4.1/mail-1.4.1.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-core/4.1.4.RELEASE/spring-core-4.1.4.RELEASE.jar\\\",\\\"/root/.m2/repository/taglibs/request/1.0.1/request-1.0.1.jar\\\",\\\"/root/.m2/repository/org/apache/lucene/lucene-queries/4.10.4/lucene-queries-4.10.4.jar\\\",\\\"/root/.m2/repository/commons-fileupload/commons-fileupload/1.3.3/commons-fileupload-1.3.3.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-webmvc/4.1.4.RELEASE/spring-webmvc-4.1.4.RELEASE.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-web/4.1.4.RELEASE/spring-web-4.1.4.RELEASE.jar\\\",\\\"/root/.m2/repository/org/powermock/powermock-api-mockito/1.6.6/powermock-api-mockito-1.6.6.jar\\\",\\\"/root/.m2/repository/com/mchange/mchange-commons-java/0.2.3.4/mchange-commons-java-0.2.3.4.jar\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/test/pom.xml\\\",\\\"/root/.m2/repository/org/apache/xmlbeans/xmlbeans/2.6.0/xmlbeans-2.6.0.jar\\\",\\\"/root/.m2/repository/taglibs/standard/1.1.2/standard-1.1.2.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-jdbc/4.1.4.RELEASE/spring-jdbc-4.1.4.RELEASE.jar\\\",\\\"/root/.m2/repository/commons-beanutils/commons-beanutils/1.9.3/commons-beanutils-1.9.3.jar\\\",\\\"/root/.m2/repository/org/openmrs/liquibase/ext/modify-column/2.0.2/modify-column-2.0.2.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-test/4.1.4.RELEASE/spring-test-4.1.4.RELEASE.jar\\\",\\\"/root/.m2/repository/org/hibernate/hibernate-validator/4.2.0.Final/hibernate-validator-4.2.0.Final.jar\\\",\\\"/root/.m2/repository/org/jboss/jandex/1.1.0.Final/jandex-1.1.0.Final.jar\\\",\\\"/root/.m2/repository/commons-digester/commons-digester/1.8/commons-digester-1.8.jar\\\",\\\"/root/.m2/repository/sslext/sslext/1.2-0/sslext-1.2-0.jar\\\",\\\"/root/.m2/repository/org/jboss/logging/jboss-logging/3.1.3.GA/jboss-logging-3.1.3.GA.jar\\\",\\\"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.9.8/jackson-annotations-2.9.8.jar\\\",\\\"/root/.m2/repository/org/apache/poi/poi-ooxml/3.17/poi-ooxml-3.17.jar\\\",\\\"/root/.m2/repository/org/hibernate/hibernate-search-engine/5.1.2.Final/hibernate-search-engine-5.1.2.Final.jar\\\",\\\"/root/.m2/repository/xmlpull/xmlpull/1.1.3.1/xmlpull-1.1.3.1.jar\\\",\\\"/root/.m2/repository/javax/validation/validation-api/1.0.0.GA/validation-api-1.0.0.GA.jar\\\",\\\"/root/.m2/repository/org/hamcrest/hamcrest/2.1/hamcrest-2.1.jar\\\",\\\"/root/.m2/repository/org/liquibase/liquibase-core/2.0.5/liquibase-core-2.0.5.jar\\\",\\\"/root/.m2/repository/org/apache/lucene/lucene-analyzers-common/4.10.4/lucene-analyzers-common-4.10.4.jar\\\",\\\"/root/.m2/repository/org/slf4j/slf4j-api/1.7.26/slf4j-api-1.7.26.jar\\\",\\\"/root/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar\\\",\\\"/root/.m2/repository/xpp3/xpp3_min/1.1.4c/xpp3_min-1.1.4c.jar\\\",\\\"/root/.m2/repository/javax/servlet/jsp-api/2.0/jsp-api-2.0.jar\\\",\\\"/root/.m2/repository/oro/oro/2.0.8/oro-2.0.8.jar\\\",\\\"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.9.8/jackson-databind-2.9.8.jar\\\",\\\"/root/.m2/repository/org/apache/poi/poi/3.17/poi-3.17.jar\\\",\\\"/root/.m2/repository/javax/servlet/servlet-api/2.4/servlet-api-2.4.jar\\\",\\\"/root/.m2/repository/org/apache/velocity/velocity/1.6.2/velocity-1.6.2.jar\\\",\\\"/root/.m2/repository/ca/uhn/hapi/hapi-base/2.1/hapi-base-2.1.jar\\\",\\\"/root/.m2/repository/org/hibernate/hibernate-core/4.3.9.Final/hibernate-core-4.3.9.Final.jar\\\",\\\"/root/.m2/repository/com/h2database/h2/1.4.199/h2-1.4.199.jar\\\",\\\"/root/.m2/repository/stax/stax-api/1.0.1/stax-api-1.0.1.jar\\\",\\\"/root/.m2/repository/org/apache/poi/poi-ooxml-schemas/3.17/poi-ooxml-schemas-3.17.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-context-support/4.1.4.RELEASE/spring-context-support-4.1.4.RELEASE.jar\\\",\\\"/root/.m2/repository/mysql/mysql-connector-java/5.1.45/mysql-connector-java-5.1.45.jar\\\",\\\"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.9.8/jackson-core-2.9.8.jar\\\",\\\"/root/.m2/repository/commons-chain/commons-chain/1.1/commons-chain-1.1.jar\\\",\\\"/root/.m2/repository/org/jboss/logging/jboss-logging-annotations/1.2.0.Beta1/jboss-logging-annotations-1.2.0.Beta1.jar\\\",\\\"/root/.m2/repository/org/apache/struts/struts-taglib/1.3.8/struts-taglib-1.3.8.jar\\\",\\\"/root/.m2/repository/org/hamcrest/hamcrest-core/2.1/hamcrest-core-2.1.jar\\\",\\\"/root/.m2/repository/org/mockito/mockito-core/1.10.19/mockito-core-1.10.19.jar\\\",\\\"/root/.m2/repository/commons-collections/commons-collections/3.2.2/commons-collections-3.2.2.jar\\\",\\\"/root/.m2/repository/org/slf4j/jcl-over-slf4j/1.7.26/jcl-over-slf4j-1.7.26.jar\\\",\\\"/root/.m2/repository/xerces/xercesImpl/2.8.0/xercesImpl-2.8.0.jar\\\",\\\"/root/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar\\\",\\\"/root/.m2/repository/org/hamcrest/hamcrest-library/2.1/hamcrest-library-2.1.jar\\\",\\\"/root/.m2/repository/commons-validator/commons-validator/1.4.0/commons-validator-1.4.0.jar\\\",\\\"/root/.m2/repository/postgresql/postgresql/9.0-801.jdbc4/postgresql-9.0-801.jdbc4.jar\\\",\\\"/root/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar\\\",\\\"/root/.m2/repository/commons-codec/commons-codec/1.10/commons-codec-1.10.jar\\\",\\\"/root/.m2/repository/org/codehaus/groovy/groovy-all/2.4.6/groovy-all-2.4.6.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-beans/4.1.4.RELEASE/spring-beans-4.1.4.RELEASE.jar\\\",\\\"/root/.m2/repository/org/apache/lucene/lucene-facet/4.10.4/lucene-facet-4.10.4.jar\\\",\\\"/root/.m2/repository/org/powermock/powermock-api-mockito-common/1.6.6/powermock-api-mockito-common-1.6.6.jar\\\",\\\"/root/.m2/repository/com/mchange/c3p0/0.9.2.1/c3p0-0.9.2.1.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-orm/4.1.4.RELEASE/spring-orm-4.1.4.RELEASE.jar\\\",\\\"/root/.m2/repository/org/apache/lucene/lucene-sandbox/4.10.4/lucene-sandbox-4.10.4.jar\\\",\\\"/root/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar\\\",\\\"/root/.m2/repository/org/apache/lucene/lucene-queryparser/4.10.4/lucene-queryparser-4.10.4.jar\\\",\\\"/root/.m2/repository/javax/servlet/jstl/1.1.2/jstl-1.1.2.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-context/4.1.4.RELEASE/spring-context-4.1.4.RELEASE.jar\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/target/openmrs-api-2.3.0-SNAPSHOT-tests.jar\\\",\\\"/root/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.0.0.Final/jboss-transaction-api_1.2_spec-1.0.0.Final.jar\\\",\\\"/root/.m2/repository/org/hibernate/hibernate-ehcache/4.3.9.Final/hibernate-ehcache-4.3.9.Final.jar\\\",\\\"/root/.m2/repository/org/powermock/powermock-api-support/1.6.6/powermock-api-support-1.6.6.jar\\\",\\\"/root/.m2/repository/org/powermock/powermock-reflect/1.6.6/powermock-reflect-1.6.6.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-aop/4.1.4.RELEASE/spring-aop-4.1.4.RELEASE.jar\\\",\\\"/root/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar\\\",\\\"/root/.m2/repository/org/owasp/encoder/encoder/1.2/encoder-1.2.jar\\\",\\\"/root/.m2/repository/ca/uhn/hapi/hapi-structures-v23/2.1/hapi-structures-v23-2.1.jar\\\",\\\"/root/.m2/repository/com/thoughtworks/xstream/xstream/1.4.11.1/xstream-1.4.11.1.jar\\\",\\\"/root/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar\\\",\\\"/root/.m2/repository/org/apache/struts/struts-tiles/1.3.8/struts-tiles-1.3.8.jar\\\",\\\"/root/.m2/repository/taglibs/page/1.0.1/page-1.0.1.jar\\\",\\\"/root/.m2/repository/org/dbunit/dbunit/2.6.0/dbunit-2.6.0.jar\\\",\\\"/root/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar\\\",\\\"/tmp/analyzing-afaaeabc2f6f3545/api/target/openmrs-api-2.3.0-SNAPSHOT.jar\\\",\\\"/root/.m2/repository/org/aspectj/aspectjweaver/1.9.4/aspectjweaver-1.9.4.jar\\\",\\\"/root/.m2/repository/commons-logging/commons-logging/1.1.1/commons-logging-1.1.1.jar\\\",\\\"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar\\\",\\\"/root/.m2/repository/org/javassist/javassist/3.25.0-GA/javassist-3.25.0-GA.jar\\\",\\\"/root/.m2/repository/org/hibernate/hibernate-c3p0/4.3.9.Final/hibernate-c3p0-4.3.9.Final.jar\\\",\\\"/root/.m2/repository/org/slf4j/slf4j-log4j12/1.7.26/slf4j-log4j12-1.7.26.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-expression/4.1.4.RELEASE/spring-expression-4.1.4.RELEASE.jar\\\",\\\"/root/.m2/repository/org/aspectj/aspectjrt/1.9.4/aspectjrt-1.9.4.jar\\\"],\\\"output_dir\\\":\\\"/tmp/analyzing-afaaeabc2f6f3545/web/target/classes\\\",\\\"jdk\\\":\\\"JDK1.8\\\"}]\"\n[DEBUG] [27/Jun/2019:15:12:24 +0000] [()] Done generating compilation database.\n[DEBUG] [27/Jun/2019:15:12:24 +0000] [()] Trying to autodetect the build system based on files present in the repository.\n[DEBUG] [27/Jun/2019:15:12:24 +0000] [()] Errorprone JDK1.8 and jceJDK \"JDK1.8\" are compatible.\n[DEBUG] [27/Jun/2019:15:25:36 +0000] [()] Tool completed with 219 but only reporting up to 1200.\n[DEBUG] [27/Jun/2019:15:26:22 +0000] [()] Tool completed with 114 but only reporting up to 1200.\n[DEBUG] [27/Jun/2019:15:26:22 +0000] [()] All tools complete for commit \"master\"\n[DEBUG] [27/Jun/2019:15:26:23 +0000] [()] Analysis has completed.\n"}}
