{"tag":"AnalysisSuccess","contents":{"requestedTools":null,"toolResults":[[{"tag":"Infer"},{"tag":"ToolSuccess","contents":[[{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void RedissonSessionManager.startInternal()` reads without synchronization from `this.broadcastSessionEvents`. Potentially races with write in method `RedissonSessionManager.setBroadcastSessionEvents(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSessionManager.java","tnLine":268,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.tomcat.RedissonSessionManager.startInternal():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Map JCache.invokeAll(Set,EntryProcessor,java.lang.Object[])` indirectly reads without synchronization from `this.closed`. Potentially races with write in method `JCache.close()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/jcache/JCache.java","tnLine":2955,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.jcache.JCache.invokeAll(java.util.Set,javax.cache.processor.EntryProcessor,java.lang.Object[]):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `key.getValue()` could be null and is dereferenced at line 67.","tnFile":"redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonReactiveNumberCommands.java","tnLine":67,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.spring.data.connection.RedissonReactiveNumberCommands.lambda$incrBy$3(org.springframework.data.redis.connection.ReactiveNumberCommands$IncrByCommand):org.reactivestreams.Publisher","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `command.getTimeout()` could be null and is dereferenced at line 170.","tnFile":"redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonReactiveKeyCommands.java","tnLine":170,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.spring.data.connection.RedissonReactiveKeyCommands.lambda$expire$19(org.springframework.data.redis.connection.ReactiveKeyCommands$ExpireCommand):org.reactivestreams.Publisher","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RFuture CommandAsyncService.readAllAsync(Collection,Codec,RedisCommand,java.lang.Object[])` indirectly reads without synchronization from container `command.CommandAsyncService.CODECS` via call to `get`. Potentially races with write in method `CommandAsyncService.getCodec(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/command/CommandAsyncService.java","tnLine":294,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.command.CommandAsyncService.readAllAsync(java.util.Collection,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[]):org.redisson.api.RFuture","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RFuture CommandAsyncService.evalReadAsync(String,Codec,RedisCommand,String,List,java.lang.Object[])` indirectly reads without synchronization from container `command.CommandAsyncService.CODECS` via call to `get`. Potentially races with write in method `CommandAsyncService.getCodec(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/command/CommandAsyncService.java","tnLine":452,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.command.CommandAsyncService.evalReadAsync(java.lang.String,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.String,java.util.List,java.lang.Object[]):org.redisson.api.RFuture","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RFuture JCache.removeAsync(Object)` indirectly reads without synchronization from `this.closed`. Potentially races with write in method `JCache.close()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/jcache/JCache.java","tnLine":1708,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.jcache.JCache.removeAsync(java.lang.Object):org.redisson.api.RFuture","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RFuture CommandAsyncService.writeAsync(String,RedisCommand,java.lang.Object[])` indirectly reads without synchronization from container `command.CommandAsyncService.CODECS` via call to `get`. Potentially races with write in method `CommandAsyncService.getCodec(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/command/CommandAsyncService.java","tnLine":634,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.command.CommandAsyncService.writeAsync(java.lang.String,org.redisson.client.protocol.RedisCommand,java.lang.Object[]):org.redisson.api.RFuture","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void RedissonSessionManager.stopInternal()` indirectly reads without synchronization from `this.keyPrefix`. Potentially races with write in method `RedissonSessionManager.setKeyPrefix(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSessionManager.java","tnLine":377,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.tomcat.RedissonSessionManager.stopInternal():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void RedissonSession.expireSession()` reads without synchronization from `this.isExpirationLocked`. Potentially races with write in method `RedissonSession.getAttribute(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSession.java","tnLine":203,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.tomcat.RedissonSession.expireSession():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `parserContext.getContainingBeanDefinition()` could be null and is dereferenced at line 132.","tnFile":"redisson/src/main/java/org/redisson/spring/support/RedissonNamespaceParserSupport.java","tnLine":132,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.spring.support.RedissonNamespaceParserSupport.createBeanDefinitionBuilder(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,java.lang.Class):org.springframework.beans.factory.support.BeanDefinitionBuilder","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean JCache.containsKey(Object)` indirectly reads without synchronization from `this.closed`. Potentially races with write in method `JCache.close()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/jcache/JCache.java","tnLine":993,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.jcache.JCache.containsKey(java.lang.Object):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void ClientConnectionsEntry.setFreezeReason(ClientConnectionsEntry$FreezeReason)` writes to field `this.freezeReason` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/connection/ClientConnectionsEntry.java","tnLine":110,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.connection.ClientConnectionsEntry.setFreezeReason(org.redisson.connection.ClientConnectionsEntry$FreezeReason):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `invokeMethod(method,RedissonAutoConfiguration.redisProperties)` could be null and is dereferenced at line 153.","tnFile":"redisson-spring-boot-starter/src/main/java/org/redisson/spring/starter/RedissonAutoConfiguration.java","tnLine":153,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.spring.starter.RedissonAutoConfiguration.redisson():org.redisson.api.RedissonClient","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void JCache.loadAll(Set,boolean,CompletionListener)` indirectly reads without synchronization from `this.closed`. Potentially races with write in method `JCache.close()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/jcache/JCache.java","tnLine":1026,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.jcache.JCache.loadAll(java.util.Set,boolean,javax.cache.integration.CompletionListener):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void JCache.put(Object,Object)` indirectly reads without synchronization from `this.closed`. Potentially races with write in method `JCache.close()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/jcache/JCache.java","tnLine":1226,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.jcache.JCache.put(java.lang.Object,java.lang.Object):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean JCache.putIfAbsent(Object,Object)` indirectly reads without synchronization from `this.closed`. Potentially races with write in method `JCache.close()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/jcache/JCache.java","tnLine":1602,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.jcache.JCache.putIfAbsent(java.lang.Object,java.lang.Object):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `parserContext.getContainingComponent()` could be null and is dereferenced at line 130.","tnFile":"redisson/src/main/java/org/redisson/spring/support/RedissonDefinitionParser.java","tnLine":130,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.spring.support.RedissonDefinitionParser.parseAddressTypes(org.w3c.dom.Element,java.lang.String,org.springframework.beans.factory.support.BeanDefinitionBuilder,org.springframework.beans.factory.xml.ParserContext):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `int AsyncSemaphore.getCounter()` reads without synchronization from `this.counter`. Potentially races with write in method `AsyncSemaphore.release()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/pubsub/AsyncSemaphore.java","tnLine":154,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.pubsub.AsyncSemaphore.getCounter():int","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `popTimeout` last assigned on line 886 could be null and is dereferenced by call to `handleBlockingOperations(...)` at line 902.","tnFile":"redisson/src/main/java/org/redisson/command/CommandAsyncService.java","tnLine":902,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.command.CommandAsyncService.checkWriteFuture(org.redisson.command.AsyncDetails,boolean,org.redisson.client.RedisConnection):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `new()` at line 134 is not released after line 134.","tnFile":"redisson/src/main/java/org/redisson/config/ConfigSupport.java","tnLine":134,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.config.ConfigSupport.fromJSON(java.net.URL,java.lang.Class):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object RedissonSession.getAttribute(String)` reads without synchronization from `this.map`. Potentially races with write in method `RedissonSession.recycle()`.\n Reporting because this access may occur on a background thread.","tnFile":"redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSession.java","tnLine":106,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.tomcat.RedissonSession.getAttribute(java.lang.String):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `binarySearch(o,RedissonObject.codec).getIndex()` could be null and is dereferenced at line 197.","tnFile":"redisson/src/main/java/org/redisson/RedissonSortedSet.java","tnLine":197,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.RedissonSortedSet.contains(java.lang.Object):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RFuture CommandAsyncService.evalWriteAsync(String,Codec,RedisCommand,String,List,java.lang.Object[])` indirectly reads without synchronization from container `command.CommandAsyncService.CODECS` via call to `get`. Potentially races with write in method `CommandAsyncService.getCodec(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/command/CommandAsyncService.java","tnLine":469,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.command.CommandAsyncService.evalWriteAsync(java.lang.String,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.String,java.util.List,java.lang.Object[]):org.redisson.api.RFuture","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void RedissonSessionManager.startInternal()` writes to field `this.messageListener` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSessionManager.java","tnLine":270,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.tomcat.RedissonSessionManager.startInternal():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RFuture CommandAsyncService.readAsync(String,RedisCommand,java.lang.Object[])` indirectly reads without synchronization from container `command.CommandAsyncService.CODECS` via call to `get`. Potentially races with write in method `CommandAsyncService.getCodec(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/command/CommandAsyncService.java","tnLine":446,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.command.CommandAsyncService.readAsync(java.lang.String,org.redisson.client.protocol.RedisCommand,java.lang.Object[]):org.redisson.api.RFuture","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean JCache.replace(Object,Object,Object)` indirectly reads without synchronization from `this.closed`. Potentially races with write in method `JCache.close()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/jcache/JCache.java","tnLine":2399,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.jcache.JCache.replace(java.lang.Object,java.lang.Object,java.lang.Object):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `String AsyncSemaphore.toString()` reads without synchronization from `this.counter`. Potentially races with write in method `AsyncSemaphore.release()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/pubsub/AsyncSemaphore.java","tnLine":179,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.pubsub.AsyncSemaphore.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RFuture CommandAsyncService.writeAsync(byte[],Codec,RedisCommand,java.lang.Object[])` indirectly reads without synchronization from container `command.CommandAsyncService.CODECS` via call to `get`. Potentially races with write in method `CommandAsyncService.getCodec(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/command/CommandAsyncService.java","tnLine":648,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.command.CommandAsyncService.writeAsync(byte[],org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[]):org.redisson.api.RFuture","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void RedissonSessionManager.startInternal()` indirectly writes to field `client.resolvedAddr` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSessionManager.java","tnLine":237,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.tomcat.RedissonSessionManager.startInternal():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `propertyValue` last assigned on line 99 could be null and is dereferenced at line 102.","tnFile":"redisson/src/main/java/org/redisson/spring/support/RemoteInvocationOptionDecorator.java","tnLine":102,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.spring.support.RemoteInvocationOptionDecorator.decorate(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder,org.redisson.spring.support.RedissonNamespaceParserSupport):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RFuture CommandAsyncService.evalWriteAsync(MasterSlaveEntry,Codec,RedisCommand,String,List,java.lang.Object[])` indirectly reads without synchronization from container `command.CommandAsyncService.CODECS` via call to `get`. Potentially races with write in method `CommandAsyncService.getCodec(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/command/CommandAsyncService.java","tnLine":473,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.command.CommandAsyncService.evalWriteAsync(org.redisson.connection.MasterSlaveEntry,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.String,java.util.List,java.lang.Object[]):org.redisson.api.RFuture","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RFuture CommandBatchService.getConnection(boolean,NodeSource,RedisCommand)` indirectly reads without synchronization from `entry.connectionFuture`. Potentially races with write in method `CommandBatchService.getConnection(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"redisson/src/main/java/org/redisson/command/CommandBatchService.java","tnLine":337,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.command.CommandBatchService.getConnection(boolean,org.redisson.connection.NodeSource,org.redisson.client.protocol.RedisCommand):org.redisson.api.RFuture","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RFuture JCache.getAndPutAsync(Object,Object)` indirectly reads without synchronization from `this.closed`. Potentially races with write in method `JCache.close()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/jcache/JCache.java","tnLine":1407,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.jcache.JCache.getAndPutAsync(java.lang.Object,java.lang.Object):org.redisson.api.RFuture","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RedissonClient RedissonSessionManager.getRedisson()` reads without synchronization from `this.redisson`. Potentially races with write in method `RedissonSessionManager.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSessionManager.java","tnLine":231,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.tomcat.RedissonSessionManager.getRedisson():org.redisson.api.RedissonClient","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Codec CommandAsyncService.getCodec(Codec)` reads without synchronization from container `command.CommandAsyncService.CODECS` via call to `get`. Potentially races with write in method `CommandAsyncService.evalWriteAllAsync(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"redisson/src/main/java/org/redisson/command/CommandAsyncService.java","tnLine":819,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.command.CommandAsyncService.getCodec(org.redisson.client.codec.Codec):org.redisson.client.codec.Codec","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void RedissonSessionManager.stop()` reads without synchronization from `this.messageListener`. Potentially races with write in method `RedissonSessionManager.start()`.\n Reporting because this access may occur on a background thread.","tnFile":"redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/RedissonSessionManager.java","tnLine":393,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.tomcat.RedissonSessionManager.stop():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `nameFuture` last assigned on line 267 could be null and is dereferenced at line 268.","tnFile":"redisson/src/main/java/org/redisson/client/RedisClient.java","tnLine":268,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.client.RedisClient.connectPubSubAsync():org.redisson.api.RFuture","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RFuture CommandBatchService.getConnection(boolean,NodeSource,RedisCommand)` indirectly reads without synchronization from `this.options`. Potentially races with write in method `CommandBatchService.execute(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"redisson/src/main/java/org/redisson/command/CommandBatchService.java","tnLine":323,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.command.CommandBatchService.getConnection(boolean,org.redisson.connection.NodeSource,org.redisson.client.protocol.RedisCommand):org.redisson.api.RFuture","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `res` last assigned on line 143 could be null and is dereferenced at line 144.","tnFile":"redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonClusterConnection.java","tnLine":144,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.spring.data.connection.RedissonClusterConnection.clusterGetNodeForSlot(int):org.springframework.data.redis.connection.RedisClusterNode","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void RedissonSessionManager.shutdownRedisson()` reads without synchronization from `this.redisson`. Potentially races with write in method `RedissonSessionManager.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSessionManager.java","tnLine":392,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.tomcat.RedissonSessionManager.shutdownRedisson():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void RedissonSessionManager.start()` writes to field `this.codecToUse` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/RedissonSessionManager.java","tnLine":274,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.tomcat.RedissonSessionManager.start():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object JCache.get(Object)` indirectly reads without synchronization from `this.closed`. Potentially races with write in method `JCache.close()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/jcache/JCache.java","tnLine":207,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.jcache.JCache.get(java.lang.Object):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RFuture JCache.clearAsync()` indirectly reads without synchronization from `this.closed`. Potentially races with write in method `JCache.close()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/jcache/JCache.java","tnLine":2900,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.jcache.JCache.clearAsync():org.redisson.api.RFuture","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void RedissonSession.endAccess()` reads without synchronization from `this.isNew`. Potentially races with write in method `RedissonSession.getAttribute(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSession.java","tnLine":268,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.tomcat.RedissonSession.endAccess():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `command.getExpireAt()` could be null and is dereferenced at line 257.","tnFile":"redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonReactiveKeyCommands.java","tnLine":257,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.spring.data.connection.RedissonReactiveKeyCommands.lambda$pExpireAt$36(org.springframework.data.redis.connection.ReactiveKeyCommands$ExpireAtCommand):org.reactivestreams.Publisher","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ConnectionPool$3$1.accept(String,Throwable)` indirectly reads without synchronization from `connectionEntry.freezeReason`. Potentially races with write in method `ConnectionPool$3$1.accept(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"redisson/src/main/java/org/redisson/connection/pool/ConnectionPool.java","tnLine":407,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.connection.pool.ConnectionPool$3$1.accept(java.lang.String,java.lang.Throwable):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RSet RedissonSessionManager.getNotifiedNodes(String)` reads without synchronization from `this.redisson`. Potentially races with write in method `RedissonSessionManager.startInternal()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSessionManager.java","tnLine":157,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.tomcat.RedissonSessionManager.getNotifiedNodes(java.lang.String):org.redisson.api.RSet","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.util.Scanner` acquired by call to `new()` at line 92 is not released after line 92.","tnFile":"redisson/src/main/java/org/redisson/config/ConfigSupport.java","tnLine":92,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.config.ConfigSupport.resolveEnvParams(java.io.FileReader):java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Iterator JCache.iterator()` indirectly reads without synchronization from `this.closed`. Potentially races with write in method `JCache.close()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/jcache/JCache.java","tnLine":3171,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.jcache.JCache.iterator():java.util.Iterator","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RedissonClient RedissonSessionManager.getRedisson()` reads without synchronization from `this.redisson`. Potentially races with write in method `RedissonSessionManager.startInternal()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSessionManager.java","tnLine":231,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.tomcat.RedissonSessionManager.getRedisson():org.redisson.api.RedissonClient","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void RedissonSessionManager.startInternal()` reads without synchronization from `this.redisson`. Potentially races with write in method `RedissonSessionManager.startInternal()`.\n Reporting because this access may occur on a background thread.","tnFile":"redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSessionManager.java","tnLine":248,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.tomcat.RedissonSessionManager.startInternal():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `res` last assigned on line 106 could be null and is dereferenced at line 109.","tnFile":"redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonClusterConnection.java","tnLine":109,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.spring.data.connection.RedissonClusterConnection.clusterGetMasterSlaveMap():java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void RedissonSessionManager.shutdownRedisson()` reads without synchronization from `this.redisson`. Potentially races with write in method `RedissonSessionManager.startInternal()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSessionManager.java","tnLine":392,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.tomcat.RedissonSessionManager.shutdownRedisson():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RFuture JCache.putAsync(Object,Object)` indirectly reads without synchronization from `this.closed`. Potentially races with write in method `JCache.close()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/jcache/JCache.java","tnLine":1100,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.jcache.JCache.putAsync(java.lang.Object,java.lang.Object):org.redisson.api.RFuture","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.redisson.codec.CustomObjectInputStream` acquired by call to `new()` at line 284 is not released after line 286.","tnFile":"redisson/src/main/java/org/redisson/executor/TasksRunnerService.java","tnLine":286,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.executor.TasksRunnerService.decode(org.redisson.executor.params.ScheduledCronExpressionParameters):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `slaves` last assigned on line 66 could be null and is dereferenced by call to `toRedisServersList(...)` at line 67.","tnFile":"redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonSentinelConnection.java","tnLine":67,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.spring.data.connection.RedissonSentinelConnection.slaves(org.springframework.data.redis.connection.NamedNode):java.util.Collection","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `command.getExpireAt()` could be null and is dereferenced at line 245.","tnFile":"redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonReactiveKeyCommands.java","tnLine":245,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.spring.data.connection.RedissonReactiveKeyCommands.lambda$expireAt$34(org.springframework.data.redis.connection.ReactiveKeyCommands$ExpireAtCommand):org.reactivestreams.Publisher","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RFuture JCache.putAllAsync(Map)` indirectly reads without synchronization from `this.closed`. Potentially races with write in method `JCache.close()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/jcache/JCache.java","tnLine":1513,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.jcache.JCache.putAllAsync(java.util.Map):org.redisson.api.RFuture","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `connectionEntry` last assigned on line 153 could be null and is dereferenced by call to `freeze(...)` at line 154.","tnFile":"redisson/src/main/java/org/redisson/connection/balancer/LoadBalancerManager.java","tnLine":154,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.connection.balancer.LoadBalancerManager.freeze(java.net.InetSocketAddress,org.redisson.connection.ClientConnectionsEntry$FreezeReason):org.redisson.connection.ClientConnectionsEntry","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RMap RedissonSessionManager.getMap(String)` reads without synchronization from `this.codecToUse`. Potentially races with write in method `RedissonSessionManager.startInternal()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSessionManager.java","tnLine":163,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.tomcat.RedissonSessionManager.getMap(java.lang.String):org.redisson.api.RMap","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RFuture CommandAsyncService.readRandomAsync(Codec,RedisCommand,java.lang.Object[])` indirectly reads without synchronization from container `command.CommandAsyncService.CODECS` via call to `get`. Potentially races with write in method `CommandAsyncService.getCodec(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/command/CommandAsyncService.java","tnLine":305,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.command.CommandAsyncService.readRandomAsync(org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[]):org.redisson.api.RFuture","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RFuture CommandAsyncService.readAllAsync(RedisCommand,SlotCallback,java.lang.Object[])` indirectly reads without synchronization from container `command.CommandAsyncService.CODECS` via call to `get`. Potentially races with write in method `CommandAsyncService.getCodec(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/command/CommandAsyncService.java","tnLine":356,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.command.CommandAsyncService.readAllAsync(org.redisson.client.protocol.RedisCommand,org.redisson.SlotCallback,java.lang.Object[]):org.redisson.api.RFuture","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `attrs` last assigned on line 66 could be null and is dereferenced at line 67.","tnFile":"redisson/src/main/java/org/redisson/spring/session/config/RedissonWebSessionConfiguration.java","tnLine":67,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.spring.session.config.RedissonWebSessionConfiguration.setImportMetadata(org.springframework.core.type.AnnotationMetadata):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void RedissonSession.load(Map)` writes to field `this.maxInactiveInterval` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSession.java","tnLine":364,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.tomcat.RedissonSession.load(java.util.Map):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `anno` last assigned on line 163 could be null and is dereferenced at line 165.","tnFile":"redisson/src/main/java/org/redisson/liveobject/core/RedissonObjectBuilder.java","tnLine":165,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.liveobject.core.RedissonObjectBuilder.getNamingScheme(java.lang.Class,org.redisson.client.codec.Codec):org.redisson.liveobject.resolver.NamingScheme","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void RedissonSessionManager.start()` indirectly writes to field `client.resolvedAddr` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/RedissonSessionManager.java","tnLine":259,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.tomcat.RedissonSessionManager.start():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `attrs` last assigned on line 66 could be null and is dereferenced at line 67.","tnFile":"redisson/src/main/java/org/redisson/spring/session/config/RedissonHttpSessionConfiguration.java","tnLine":67,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.spring.session.config.RedissonHttpSessionConfiguration.setImportMetadata(org.springframework.core.type.AnnotationMetadata):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `addrFuture` last assigned on line 214 could be null and is dereferenced at line 215.","tnFile":"redisson/src/main/java/org/redisson/client/RedisClient.java","tnLine":215,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.client.RedisClient.connectAsync():org.redisson.api.RFuture","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `res.getIndex()` could be null and is dereferenced at line 221.","tnFile":"redisson/src/main/java/org/redisson/RedissonPriorityQueue.java","tnLine":221,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.RedissonPriorityQueue.remove(java.lang.Object):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean ClientConnectionsEntry.isMasterForRead()` indirectly reads without synchronization from `this.freezeReason`. Potentially races with write in method `ClientConnectionsEntry.freezeMaster(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/connection/ClientConnectionsEntry.java","tnLine":76,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.connection.ClientConnectionsEntry.isMasterForRead():boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `key.getValue()` could be null and is dereferenced at line 95.","tnFile":"redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonReactiveNumberCommands.java","tnLine":95,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.spring.data.connection.RedissonReactiveNumberCommands.lambda$decrBy$7(org.springframework.data.redis.connection.ReactiveNumberCommands$DecrByCommand):org.reactivestreams.Publisher","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object JCache.getAndRemove(Object)` indirectly reads without synchronization from `this.closed`. Potentially races with write in method `JCache.close()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/jcache/JCache.java","tnLine":2195,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.jcache.JCache.getAndRemove(java.lang.Object):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void RedissonSession.save()` reads without synchronization from `this.creationTime`. Potentially races with write in method `RedissonSession.getAttribute(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSession.java","tnLine":320,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.tomcat.RedissonSession.save():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RFuture JCache.getAndReplaceAsync(Object,Object)` indirectly reads without synchronization from `this.closed`. Potentially races with write in method `JCache.close()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/jcache/JCache.java","tnLine":2730,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.jcache.JCache.getAndReplaceAsync(java.lang.Object,java.lang.Object):org.redisson.api.RFuture","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void RedissonSession.setMaxInactiveInterval(int)` reads without synchronization from `this.maxInactiveInterval`. Potentially races with write in method `RedissonSession.getAttribute(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSession.java","tnLine":228,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.tomcat.RedissonSession.setMaxInactiveInterval(int):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void CommandAsyncService.async(boolean,NodeSource,Codec,RedisCommand,java.lang.Object[],RPromise,int,boolean)` indirectly reads without synchronization from container `command.CommandAsyncService.CODECS` via call to `get`. Potentially races with write in method `CommandAsyncService.getCodec(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/command/CommandAsyncService.java","tnLine":667,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.command.CommandAsyncService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],org.redisson.misc.RPromise,int,boolean):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RFuture CommandAsyncService.readAsync(MasterSlaveEntry,Codec,RedisCommand,java.lang.Object[])` indirectly reads without synchronization from container `command.CommandAsyncService.CODECS` via call to `get`. Potentially races with write in method `CommandAsyncService.getCodec(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/command/CommandAsyncService.java","tnLine":433,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.command.CommandAsyncService.readAsync(org.redisson.connection.MasterSlaveEntry,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[]):org.redisson.api.RFuture","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RMap RedissonSessionManager.getMap(String)` reads without synchronization from `this.codecToUse`. Potentially races with write in method `RedissonSessionManager.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSessionManager.java","tnLine":163,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.tomcat.RedissonSessionManager.getMap(java.lang.String):org.redisson.api.RMap","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RFuture CommandAsyncService.readAllAsync(RedisCommand,java.lang.Object[])` indirectly reads without synchronization from container `command.CommandAsyncService.CODECS` via call to `get`. Potentially races with write in method `CommandAsyncService.getCodec(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/command/CommandAsyncService.java","tnLine":258,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.command.CommandAsyncService.readAllAsync(org.redisson.client.protocol.RedisCommand,java.lang.Object[]):org.redisson.api.RFuture","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void ConnectionPool$3$1.accept(Object,Object)` indirectly reads without synchronization from `connectionEntry.freezeReason`. Potentially races with write in method `ConnectionPool$3$1.accept(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/connection/pool/ConnectionPool.java","tnLine":395,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.connection.pool.ConnectionPool$3$1.accept(java.lang.Object,java.lang.Object):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `key.getValue()` could be null and is dereferenced at line 113.","tnFile":"redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonReactiveNumberCommands.java","tnLine":113,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.spring.data.connection.RedissonReactiveNumberCommands.lambda$hIncrBy$9(org.springframework.data.redis.connection.ReactiveNumberCommands$HIncrByCommand):org.reactivestreams.Publisher","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `command.getExpireAt()` could be null and is dereferenced at line 208.","tnFile":"redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonReactiveKeyCommands.java","tnLine":208,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.spring.data.connection.RedissonReactiveKeyCommands.lambda$pExpireAt$25(org.springframework.data.redis.connection.ReactiveKeyCommands$ExpireAtCommand):org.reactivestreams.Publisher","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RTopic RedissonSessionManager.getTopic()` reads without synchronization from `this.redisson`. Potentially races with write in method `RedissonSessionManager.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSessionManager.java","tnLine":169,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.tomcat.RedissonSessionManager.getTopic():org.redisson.api.RTopic","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `addrFuture` last assigned on line 297 could be null and is dereferenced at line 298.","tnFile":"redisson/src/main/java/org/redisson/connection/MasterSlaveEntry.java","tnLine":298,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.connection.MasterSlaveEntry.addSlave(org.redisson.client.RedisClient,boolean,org.redisson.api.NodeType):org.redisson.api.RFuture","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void JCache.removeAll()` indirectly reads without synchronization from `this.closed`. Potentially races with write in method `JCache.close()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/jcache/JCache.java","tnLine":2876,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.jcache.JCache.removeAll():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RFuture CommandAsyncService.writeAsync(String,Codec,RedisCommand,java.lang.Object[])` indirectly reads without synchronization from container `command.CommandAsyncService.CODECS` via call to `get`. Potentially races with write in method `CommandAsyncService.getCodec(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/command/CommandAsyncService.java","tnLine":641,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.command.CommandAsyncService.writeAsync(java.lang.String,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[]):org.redisson.api.RFuture","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `node` last assigned on line 193 could be null and is dereferenced at line 194.","tnFile":"redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonClusterConnection.java","tnLine":194,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.spring.data.connection.RedissonClusterConnection.clusterCountKeysInSlot(int):java.lang.Long","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RFuture CommandAsyncService.evalReadAsync(RedisClient,String,Codec,RedisCommand,String,List,java.lang.Object[])` indirectly reads without synchronization from container `command.CommandAsyncService.CODECS` via call to `get`. Potentially races with write in method `CommandAsyncService.getCodec(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/command/CommandAsyncService.java","tnLine":463,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.command.CommandAsyncService.evalReadAsync(org.redisson.client.RedisClient,java.lang.String,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.String,java.util.List,java.lang.Object[]):org.redisson.api.RFuture","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.redisson.spring.data.connection.RedissonConnection$5` acquired by call to `RedissonConnection$5(...)` at line 1542 is not released after line 1569.","tnFile":"redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":1569,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.spring.data.connection.RedissonConnection.hScan(byte[],org.springframework.data.redis.core.ScanOptions):org.springframework.data.redis.core.Cursor","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void RedissonSession.save()` reads without synchronization from `this.isNew`. Potentially races with write in method `RedissonSession.getAttribute(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSession.java","tnLine":325,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.tomcat.RedissonSession.save():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RFuture CommandAsyncService.pollFromAnyAsync(String,Codec,RedisCommand,long,java.lang.String[])` indirectly reads without synchronization from container `command.CommandAsyncService.CODECS` via call to `get`. Potentially races with write in method `CommandAsyncService.getCodec(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/command/CommandAsyncService.java","tnLine":1257,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.command.CommandAsyncService.pollFromAnyAsync(java.lang.String,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,long,java.lang.String[]):org.redisson.api.RFuture","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `ChannelFuture RedisPubSubConnection.psubscribe(Codec,org.redisson.client.ChannelName[])` mutates container `this.patternChannels` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/client/RedisPubSubConnection.java","tnLine":97,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.client.RedisPubSubConnection.psubscribe(org.redisson.client.codec.Codec,org.redisson.client.ChannelName[]):io.netty.channel.ChannelFuture","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `command.getPoint()` could be null and is dereferenced at line 166.","tnFile":"redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonReactiveGeoCommands.java","tnLine":166,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.spring.data.connection.RedissonReactiveGeoCommands.lambda$geoRadius$11(org.springframework.data.redis.connection.ReactiveGeoCommands$GeoRadiusCommand):org.reactivestreams.Publisher","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `ClientConnectionsEntry WeightedRoundRobinBalancer.getEntry(List)` mutates container `this.weights` via call to `put` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"redisson/src/main/java/org/redisson/connection/balancer/WeightedRoundRobinBalancer.java","tnLine":112,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.connection.balancer.WeightedRoundRobinBalancer.getEntry(java.util.List):org.redisson.connection.ClientConnectionsEntry","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void RedissonSessionManager.startInternal()` writes to field `this.codecToUse` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSessionManager.java","tnLine":252,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.tomcat.RedissonSessionManager.startInternal():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `command.getIncrement()` could be null and is dereferenced at line 137.","tnFile":"redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonReactiveZSetCommands.java","tnLine":137,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.spring.data.connection.RedissonReactiveZSetCommands.lambda$zIncrBy$6(org.springframework.data.redis.connection.ReactiveZSetCommands$ZIncrByCommand):org.reactivestreams.Publisher","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `c` last assigned on line 106 could be null and is dereferenced by call to `RedisCommand(...)` at line 120.","tnFile":"redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonReactiveScriptingCommands.java","tnLine":120,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.spring.data.connection.RedissonReactiveScriptingCommands.toCommand(org.springframework.data.redis.connection.ReturnType,java.lang.String):org.redisson.client.protocol.RedisCommand","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RFuture CommandAsyncService.writeAllAsync(Codec,RedisCommand,SlotCallback,java.lang.Object[])` indirectly reads without synchronization from container `command.CommandAsyncService.CODECS` via call to `get`. Potentially races with write in method `CommandAsyncService.getCodec(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/command/CommandAsyncService.java","tnLine":351,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.command.CommandAsyncService.writeAllAsync(org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,org.redisson.SlotCallback,java.lang.Object[]):org.redisson.api.RFuture","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void RedissonSession.setCreationTime(long)` reads without synchronization from `this.creationTime`. Potentially races with write in method `RedissonSession.getAttribute(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSession.java","tnLine":176,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.tomcat.RedissonSession.setCreationTime(long):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `io.netty.buffer.ByteBufInputStream` acquired by call to `new()` at line 47 is not released after line 51.\n**Note**: potential exception at line 51","tnFile":"redisson/src/main/java/org/redisson/codec/SerializationCodec.java","tnLine":51,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.codec.SerializationCodec$1.decode(io.netty.buffer.ByteBuf,org.redisson.client.handler.State):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `res.getIndex()` could be null and is dereferenced at line 223.","tnFile":"redisson/src/main/java/org/redisson/RedissonSortedSet.java","tnLine":223,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.RedissonSortedSet.add(java.lang.Object):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RTopic RedissonSessionManager.getTopic()` reads without synchronization from `this.redisson`. Potentially races with write in method `RedissonSessionManager.startInternal()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSessionManager.java","tnLine":169,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.tomcat.RedissonSessionManager.getTopic():org.redisson.api.RTopic","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean JCache.isClosed()` reads without synchronization from `this.closed`. Potentially races with write in method `JCache.close()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/jcache/JCache.java","tnLine":3014,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.jcache.JCache.isClosed():boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void RedissonSession.expireSession()` reads without synchronization from `this.maxInactiveInterval`. Potentially races with write in method `RedissonSession.getAttribute(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSession.java","tnLine":206,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.tomcat.RedissonSession.expireSession():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RFuture JCache.containsKeyAsync(Object)` indirectly reads without synchronization from `this.closed`. Potentially races with write in method `JCache.close()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/jcache/JCache.java","tnLine":1000,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.jcache.JCache.containsKeyAsync(java.lang.Object):org.redisson.api.RFuture","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `io.netty.buffer.ByteBufInputStream` acquired by call to `new()` at line 47 is not released after line 53.","tnFile":"redisson/src/main/java/org/redisson/codec/SerializationCodec.java","tnLine":53,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.codec.SerializationCodec$1.decode(io.netty.buffer.ByteBuf,org.redisson.client.handler.State):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `io.netty.buffer.ByteBufInputStream` acquired by call to `new()` at line 47 is not released after line 55.","tnFile":"redisson/src/main/java/org/redisson/codec/SerializationCodec.java","tnLine":55,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.codec.SerializationCodec$1.decode(io.netty.buffer.ByteBuf,org.redisson.client.handler.State):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `CacheManager JCache.getCacheManager()` indirectly reads without synchronization from `this.closed`. Potentially races with write in method `JCache.close()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/jcache/JCache.java","tnLine":2987,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.jcache.JCache.getCacheManager():javax.cache.CacheManager","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void RedissonSessionManager.start()` reads without synchronization from `this.redisson`. Potentially races with write in method `RedissonSessionManager.start()`.\n Reporting because this access may occur on a background thread.","tnFile":"redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/RedissonSessionManager.java","tnLine":270,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.tomcat.RedissonSessionManager.start():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `res.getIndex()` could be null and is dereferenced at line 297.","tnFile":"redisson/src/main/java/org/redisson/RedissonSortedSet.java","tnLine":297,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.RedissonSortedSet.remove(java.lang.Object):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void RedissonSessionManager.start()` reads without synchronization from `this.messageListener`. Potentially races with write in method `RedissonSessionManager.start()`.\n Reporting because this access may occur on a background thread.","tnFile":"redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/RedissonSessionManager.java","tnLine":352,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.tomcat.RedissonSessionManager.start():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RFuture CommandAsyncService.evalAllAsync(boolean,RedisCommand,SlotCallback,String,List,java.lang.Object[])` indirectly reads without synchronization from container `command.CommandAsyncService.CODECS` via call to `get`. Potentially races with write in method `CommandAsyncService.getCodec(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/command/CommandAsyncService.java","tnLine":509,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.command.CommandAsyncService.evalAllAsync(boolean,org.redisson.client.protocol.RedisCommand,org.redisson.SlotCallback,java.lang.String,java.util.List,java.lang.Object[]):org.redisson.api.RFuture","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.redisson.spring.data.connection.RedissonConnection$3` acquired by call to `RedissonConnection$3(...)` at line 998 is not released after line 1025.","tnFile":"redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":1025,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.spring.data.connection.RedissonConnection.sScan(byte[],org.springframework.data.redis.core.ScanOptions):org.springframework.data.redis.core.Cursor","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Map JCache.getAll(Set)` indirectly reads without synchronization from `this.closed`. Potentially races with write in method `JCache.close()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/jcache/JCache.java","tnLine":834,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.jcache.JCache.getAll(java.util.Set):java.util.Map","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void RedissonSession.load(Map)` writes to field `this.creationTime` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSession.java","tnLine":356,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.tomcat.RedissonSession.load(java.util.Map):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.redisson.spring.data.connection.RedissonConnection$4` acquired by call to `RedissonConnection$4(...)` at line 1343 is not released after line 1370.","tnFile":"redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":1370,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.spring.data.connection.RedissonConnection.zScan(byte[],org.springframework.data.redis.core.ScanOptions):org.springframework.data.redis.core.Cursor","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `addrFuture` last assigned on line 123 could be null and is dereferenced at line 124.","tnFile":"redisson/src/main/java/org/redisson/connection/MasterSlaveEntry.java","tnLine":124,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.connection.MasterSlaveEntry.setupMasterEntry(org.redisson.client.RedisClient):org.redisson.api.RFuture","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `me.getClass().getSuperclass()` could be null and is dereferenced by call to `getNamingScheme(...)` at line 138.","tnFile":"redisson/src/main/java/org/redisson/liveobject/core/LiveObjectInterceptor.java","tnLine":138,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.liveobject.core.LiveObjectInterceptor.intercept(java.lang.reflect.Method,java.lang.Object[],java.lang.Object,java.lang.Object,org.redisson.liveobject.core.LiveObjectInterceptor$Setter,org.redisson.liveobject.core.LiveObjectInterceptor$Getter,org.redisson.api.RMap,org.redisson.liveobject.core.LiveObjectInterceptor$Setter,org.redisson.liveobject.core.LiveObjectInterceptor$Getter):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `entry` last assigned on line 193 could be null and is dereferenced at line 194.","tnFile":"redisson/src/main/java/org/redisson/connection/balancer/LoadBalancerManager.java","tnLine":194,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.connection.balancer.LoadBalancerManager.isUnfreezed(org.redisson.misc.RedisURI):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Session RedissonSessionManager.createSession(String)` indirectly reads without synchronization from `this.redisson`. Potentially races with write in method `RedissonSessionManager.startInternal()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSessionManager.java","tnLine":141,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.tomcat.RedissonSessionManager.createSession(java.lang.String):org.apache.catalina.Session","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RFuture CommandAsyncService.readAsync(RedisClient,String,Codec,RedisCommand,java.lang.Object[])` indirectly reads without synchronization from container `command.CommandAsyncService.CODECS` via call to `get`. Potentially races with write in method `CommandAsyncService.getCodec(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/command/CommandAsyncService.java","tnLine":231,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.command.CommandAsyncService.readAsync(org.redisson.client.RedisClient,java.lang.String,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[]):org.redisson.api.RFuture","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `masters` last assigned on line 60 could be null and is dereferenced by call to `toRedisServersList(...)` at line 61.","tnFile":"redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonSentinelConnection.java","tnLine":61,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.spring.data.connection.RedissonSentinelConnection.masters():java.util.Collection","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void RedissonSessionManager.start()` writes to field `this.messageListener` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/RedissonSessionManager.java","tnLine":292,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.tomcat.RedissonSessionManager.start():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void RedissonSessionManager.stopInternal()` reads without synchronization from `this.messageListener`. Potentially races with write in method `RedissonSessionManager.startInternal()`.\n Reporting because this access may occur on a background thread.","tnFile":"redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSessionManager.java","tnLine":376,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.tomcat.RedissonSessionManager.stopInternal():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `binarySearch(o,RedissonObject.codec).getIndex()` could be null and is dereferenced at line 168.","tnFile":"redisson/src/main/java/org/redisson/RedissonPriorityQueue.java","tnLine":168,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.RedissonPriorityQueue.contains(java.lang.Object):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `connection.sync(org.redisson.client.protocol.RedisCommands.INFO_REPLICATION,__new_array(java.lang.Object*[_*_]))` could be null and is dereferenced at line 80.","tnFile":"redisson/src/main/java/org/redisson/connection/ReplicatedConnectionManager.java","tnLine":80,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.connection.ReplicatedConnectionManager.<init>(org.redisson.config.ReplicatedServersConfig,org.redisson.config.Config,java.util.UUID)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RFuture CommandAsyncService.readAllAsync(Codec,RedisCommand,java.lang.Object[])` indirectly reads without synchronization from container `command.CommandAsyncService.CODECS` via call to `get`. Potentially races with write in method `CommandAsyncService.getCodec(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/command/CommandAsyncService.java","tnLine":252,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.command.CommandAsyncService.readAllAsync(org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[]):org.redisson.api.RFuture","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `ChannelFuture RedisPubSubConnection.subscribe(Codec,org.redisson.client.ChannelName[])` mutates container `this.channels` via call to `put` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/client/RedisPubSubConnection.java","tnLine":90,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.client.RedisPubSubConnection.subscribe(org.redisson.client.codec.Codec,org.redisson.client.ChannelName[]):io.netty.channel.ChannelFuture","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `c` last assigned on line 1953 could be null and is dereferenced by call to `RedisCommand(...)` at line 1967.","tnFile":"redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":1967,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.spring.data.connection.RedissonConnection.toCommand(org.springframework.data.redis.connection.ReturnType,java.lang.String):org.redisson.client.protocol.RedisCommand","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `new()` at line 178 is not released after line 178.","tnFile":"redisson/src/main/java/org/redisson/config/ConfigSupport.java","tnLine":178,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.config.ConfigSupport.fromYAML(java.io.InputStream,java.lang.Class):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void RedissonSession.load(Map)` writes to field `this.isExpirationLocked` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSession.java","tnLine":380,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.tomcat.RedissonSession.load(java.util.Map):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RFuture JCache.replaceAsync(Object,Object,Object)` indirectly reads without synchronization from `this.closed`. Potentially races with write in method `JCache.close()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/jcache/JCache.java","tnLine":2406,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.jcache.JCache.replaceAsync(java.lang.Object,java.lang.Object,java.lang.Object):org.redisson.api.RFuture","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RFuture CommandAsyncService.readAsync(String,Codec,RedisCommand,java.lang.Object[])` indirectly reads without synchronization from container `command.CommandAsyncService.CODECS` via call to `get`. Potentially races with write in method `CommandAsyncService.getCodec(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/command/CommandAsyncService.java","tnLine":419,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.command.CommandAsyncService.readAsync(java.lang.String,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[]):org.redisson.api.RFuture","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RFuture JCache.replaceAsync(Object,Object)` indirectly reads without synchronization from `this.closed`. Potentially races with write in method `JCache.close()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/jcache/JCache.java","tnLine":2663,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.jcache.JCache.replaceAsync(java.lang.Object,java.lang.Object):org.redisson.api.RFuture","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.redisson.codec.CustomObjectInputStream` acquired by call to `new()` at line 284 is not released after line 288.\n**Note**: potential exception at line 285","tnFile":"redisson/src/main/java/org/redisson/executor/TasksRunnerService.java","tnLine":288,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.executor.TasksRunnerService.decode(org.redisson.executor.params.ScheduledCronExpressionParameters):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object JCache.getAndPut(Object,Object)` indirectly reads without synchronization from `this.closed`. Potentially races with write in method `JCache.close()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/jcache/JCache.java","tnLine":1400,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.jcache.JCache.getAndPut(java.lang.Object,java.lang.Object):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void RedissonSessionManager.stopInternal()` writes to field `this.codecToUse` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSessionManager.java","tnLine":381,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.tomcat.RedissonSessionManager.stopInternal():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RFuture JCache.getAllAsync(Set)` indirectly reads without synchronization from `this.closed`. Potentially races with write in method `JCache.close()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/jcache/JCache.java","tnLine":865,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.jcache.JCache.getAllAsync(java.util.Set):org.redisson.api.RFuture","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `command.getTimeout()` could be null and is dereferenced at line 219.","tnFile":"redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonReactiveKeyCommands.java","tnLine":219,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.spring.data.connection.RedissonReactiveKeyCommands.lambda$expire$30(org.springframework.data.redis.connection.ReactiveKeyCommands$ExpireCommand):org.reactivestreams.Publisher","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `ClientConnectionsEntry LoadBalancerManager.freeze(ClientConnectionsEntry,ClientConnectionsEntry$FreezeReason)` indirectly reads without synchronization from `connectionEntry.freezeReason`. Potentially races with write in method `LoadBalancerManager.freeze(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"redisson/src/main/java/org/redisson/connection/balancer/LoadBalancerManager.java","tnLine":160,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.connection.balancer.LoadBalancerManager.freeze(org.redisson.connection.ClientConnectionsEntry,org.redisson.connection.ClientConnectionsEntry$FreezeReason):org.redisson.connection.ClientConnectionsEntry","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void RedissonSessionManager.start()` reads without synchronization from `this.broadcastSessionEvents`. Potentially races with write in method `RedissonSessionManager.setBroadcastSessionEvents(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/RedissonSessionManager.java","tnLine":290,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.tomcat.RedissonSessionManager.start():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void JCache.checkNotClosed()` reads without synchronization from `this.closed`. Potentially races with write in method `JCache.close()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/jcache/JCache.java","tnLine":149,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.jcache.JCache.checkNotClosed():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `parserContext.getContainingComponent()` could be null and is dereferenced at line 118.","tnFile":"redisson/src/main/java/org/redisson/spring/support/RedissonDefinitionParser.java","tnLine":118,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.spring.support.RedissonDefinitionParser.parseConfigTypes(org.w3c.dom.Element,java.lang.String,org.springframework.beans.factory.support.BeanDefinitionBuilder,org.springframework.beans.factory.xml.ParserContext):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `res.getIndex()` could be null and is dereferenced at line 180.","tnFile":"redisson/src/main/java/org/redisson/RedissonPriorityQueue.java","tnLine":180,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.RedissonPriorityQueue.add(java.lang.Object):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RFuture JCache.putIfAbsentAsync(Object,Object)` indirectly reads without synchronization from `this.closed`. Potentially races with write in method `JCache.close()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/jcache/JCache.java","tnLine":1609,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.jcache.JCache.putIfAbsentAsync(java.lang.Object,java.lang.Object):org.redisson.api.RFuture","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.redisson.spring.data.connection.RedissonConnection$2` acquired by call to `RedissonConnection$2(...)` at line 342 is not released after line 386.","tnFile":"redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":386,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.spring.data.connection.RedissonConnection.scan(org.springframework.data.redis.core.ScanOptions):org.springframework.data.redis.core.Cursor","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `RedissonClient RedissonSessionManager.buildClient()` indirectly writes to field `client.resolvedAddr` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSessionManager.java","tnLine":352,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.tomcat.RedissonSessionManager.buildClient():org.redisson.api.RedissonClient","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RFuture JCache.removeAllAsync(Set)` indirectly reads without synchronization from `this.closed`. Potentially races with write in method `JCache.close()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/jcache/JCache.java","tnLine":2796,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.jcache.JCache.removeAllAsync(java.util.Set):org.redisson.api.RFuture","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void RedissonSessionManager.startInternal()` indirectly reads without synchronization from `this.keyPrefix`. Potentially races with write in method `RedissonSessionManager.setKeyPrefix(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSessionManager.java","tnLine":269,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.tomcat.RedissonSessionManager.startInternal():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `new()` at line 168 is not released after line 168.","tnFile":"redisson/src/main/java/org/redisson/config/ConfigSupport.java","tnLine":168,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.config.ConfigSupport.fromYAML(java.net.URL,java.lang.Class):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object JCache.getAndReplace(Object,Object)` indirectly reads without synchronization from `this.closed`. Potentially races with write in method `JCache.close()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/jcache/JCache.java","tnLine":2723,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.jcache.JCache.getAndReplace(java.lang.Object,java.lang.Object):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `res` last assigned on line 79 could be null and is dereferenced at line 81.","tnFile":"redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonClusterConnection.java","tnLine":81,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.spring.data.connection.RedissonClusterConnection.clusterGetSlaves(org.springframework.data.redis.connection.RedisClusterNode):java.util.Collection","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void RedissonSessionManager.stop()` indirectly reads without synchronization from `this.keyPrefix`. Potentially races with write in method `RedissonSessionManager.setKeyPrefix(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/RedissonSessionManager.java","tnLine":394,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.tomcat.RedissonSessionManager.stop():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RFuture CommandAsyncService.evalReadAsync(MasterSlaveEntry,Codec,RedisCommand,String,List,java.lang.Object[])` indirectly reads without synchronization from container `command.CommandAsyncService.CODECS` via call to `get`. Potentially races with write in method `CommandAsyncService.getCodec(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/command/CommandAsyncService.java","tnLine":457,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.command.CommandAsyncService.evalReadAsync(org.redisson.connection.MasterSlaveEntry,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.String,java.util.List,java.lang.Object[]):org.redisson.api.RFuture","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean JCache.remove(Object)` indirectly reads without synchronization from `this.closed`. Potentially races with write in method `JCache.close()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/jcache/JCache.java","tnLine":1701,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.jcache.JCache.remove(java.lang.Object):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RFuture JCache.getAndRemoveAsync(Object)` indirectly reads without synchronization from `this.closed`. Potentially races with write in method `JCache.close()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/jcache/JCache.java","tnLine":2202,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.jcache.JCache.getAndRemoveAsync(java.lang.Object):org.redisson.api.RFuture","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileReader` acquired by call to `new()` at line 163 is not released after line 163.","tnFile":"redisson/src/main/java/org/redisson/config/ConfigSupport.java","tnLine":163,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.config.ConfigSupport.fromYAML(java.io.File,java.lang.Class,java.lang.ClassLoader):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object `connectionEntry` last assigned on line 148 could be null and is dereferenced by call to `freeze(...)` at line 149.","tnFile":"redisson/src/main/java/org/redisson/connection/balancer/LoadBalancerManager.java","tnLine":149,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.connection.balancer.LoadBalancerManager.freeze(org.redisson.misc.RedisURI,org.redisson.connection.ClientConnectionsEntry$FreezeReason):org.redisson.connection.ClientConnectionsEntry","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Session RedissonSessionManager.findSession(String)` indirectly reads without synchronization from `this.codecToUse`. Potentially races with write in method `RedissonSessionManager.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSessionManager.java","tnLine":174,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.tomcat.RedissonSessionManager.findSession(java.lang.String):org.apache.catalina.Session","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `command.getExpireAt()` could be null and is dereferenced at line 196.","tnFile":"redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonReactiveKeyCommands.java","tnLine":196,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.spring.data.connection.RedissonReactiveKeyCommands.lambda$expireAt$23(org.springframework.data.redis.connection.ReactiveKeyCommands$ExpireAtCommand):org.reactivestreams.Publisher","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void RedissonSession.save()` reads without synchronization from `this.isExpirationLocked`. Potentially races with write in method `RedissonSession.getAttribute(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSession.java","tnLine":327,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.tomcat.RedissonSession.save():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RFuture CommandAsyncService.readAsync(RedisClient,byte[],Codec,RedisCommand,java.lang.Object[])` indirectly reads without synchronization from container `command.CommandAsyncService.CODECS` via call to `get`. Potentially races with write in method `CommandAsyncService.getCodec(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/command/CommandAsyncService.java","tnLine":238,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.command.CommandAsyncService.readAsync(org.redisson.client.RedisClient,byte[],org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[]):org.redisson.api.RFuture","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void JCache.putAll(Map)` indirectly reads without synchronization from `this.closed`. Potentially races with write in method `JCache.close()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/jcache/JCache.java","tnLine":1507,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.jcache.JCache.putAll(java.util.Map):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `ClientConnectionsEntry$FreezeReason ClientConnectionsEntry.getFreezeReason()` reads without synchronization from `this.freezeReason`. Potentially races with write in method `ClientConnectionsEntry.freezeMaster(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/connection/ClientConnectionsEntry.java","tnLine":114,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.connection.ClientConnectionsEntry.getFreezeReason():org.redisson.connection.ClientConnectionsEntry$FreezeReason","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RFuture CommandAsyncService.writeAllAsync(RedisCommand,java.lang.Object[])` indirectly reads without synchronization from container `command.CommandAsyncService.CODECS` via call to `get`. Potentially races with write in method `CommandAsyncService.getCodec(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/command/CommandAsyncService.java","tnLine":341,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.command.CommandAsyncService.writeAllAsync(org.redisson.client.protocol.RedisCommand,java.lang.Object[]):org.redisson.api.RFuture","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean JCache.replace(Object,Object)` indirectly reads without synchronization from `this.closed`. Potentially races with write in method `JCache.close()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/jcache/JCache.java","tnLine":2656,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.jcache.JCache.replace(java.lang.Object,java.lang.Object):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `io.netty.buffer.ByteBufOutputStream` acquired to `result` by call to `new()` at line 73 is not released after line 78.\n**Note**: potential exception at line 74","tnFile":"redisson/src/main/java/org/redisson/codec/SerializationCodec.java","tnLine":78,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.codec.SerializationCodec$2.encode(java.lang.Object):io.netty.buffer.ByteBuf","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void JCache.removeAll(Set)` indirectly reads without synchronization from `this.closed`. Potentially races with write in method `JCache.close()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/jcache/JCache.java","tnLine":2790,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.jcache.JCache.removeAll(java.util.Set):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `masterHost.resolveAddr()` could be null and is dereferenced at line 60.","tnFile":"redisson/src/main/java/org/redisson/connection/DNSMonitor.java","tnLine":60,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.connection.DNSMonitor.<init>(org.redisson.connection.ConnectionManager,org.redisson.client.RedisClient,java.util.Collection,long,io.netty.resolver.AddressResolverGroup)","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.redisson.codec.CustomObjectInputStream` acquired by call to `new()` at line 51 is not released after line 55.","tnFile":"redisson/src/main/java/org/redisson/codec/SerializationCodec.java","tnLine":55,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.codec.SerializationCodec$1.decode(io.netty.buffer.ByteBuf,org.redisson.client.handler.State):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RFuture CommandAsyncService.readAsync(RedisClient,Codec,RedisCommand,java.lang.Object[])` indirectly reads without synchronization from container `command.CommandAsyncService.CODECS` via call to `get`. Potentially races with write in method `CommandAsyncService.getCodec(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/command/CommandAsyncService.java","tnLine":245,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.command.CommandAsyncService.readAsync(org.redisson.client.RedisClient,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[]):org.redisson.api.RFuture","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.FileReader` acquired by call to `new()` at line 129 is not released after line 129.","tnFile":"redisson/src/main/java/org/redisson/config/ConfigSupport.java","tnLine":129,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.config.ConfigSupport.fromJSON(java.io.File,java.lang.Class,java.lang.ClassLoader):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void RedissonSession.access()` indirectly reads without synchronization from `this.maxInactiveInterval`. Potentially races with write in method `RedissonSession.getAttribute(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSession.java","tnLine":198,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.tomcat.RedissonSession.access():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RFuture CommandAsyncService.writeAllAsync(RedisCommand,SlotCallback,java.lang.Object[])` indirectly reads without synchronization from container `command.CommandAsyncService.CODECS` via call to `get`. Potentially races with write in method `CommandAsyncService.getCodec(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/command/CommandAsyncService.java","tnLine":346,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.command.CommandAsyncService.writeAllAsync(org.redisson.client.protocol.RedisCommand,org.redisson.SlotCallback,java.lang.Object[]):org.redisson.api.RFuture","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `ClientConnectionsEntry WeightedRoundRobinBalancer.getEntry(List)` reads with synchronization from container `this.weights` via call to `values`. Potentially races with unsynchronized write in method `WeightedRoundRobinBalancer.getEntry(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"redisson/src/main/java/org/redisson/connection/balancer/WeightedRoundRobinBalancer.java","tnLine":129,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.connection.balancer.WeightedRoundRobinBalancer.getEntry(java.util.List):org.redisson.connection.ClientConnectionsEntry","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void RedissonSession.setMaxInactiveInterval(int)` indirectly reads without synchronization from `this.isExpirationLocked`. Potentially races with write in method `RedissonSession.getAttribute(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSession.java","tnLine":229,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.tomcat.RedissonSession.setMaxInactiveInterval(int):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `String ClientConnectionsEntry.toString()` reads without synchronization from `this.freezeReason`. Potentially races with write in method `ClientConnectionsEntry.freezeMaster(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/connection/ClientConnectionsEntry.java","tnLine":253,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.connection.ClientConnectionsEntry.toString():java.lang.String","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `boolean JCache.remove(Object,Object)` indirectly reads without synchronization from `this.closed`. Potentially races with write in method `JCache.close()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/jcache/JCache.java","tnLine":1868,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.jcache.JCache.remove(java.lang.Object,java.lang.Object):boolean","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void JCache.clear()` indirectly reads without synchronization from `this.closed`. Potentially races with write in method `JCache.close()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/jcache/JCache.java","tnLine":2894,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.jcache.JCache.clear():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RFuture CommandAsyncService.readAsync(byte[],Codec,RedisCommand,java.lang.Object[])` indirectly reads without synchronization from container `command.CommandAsyncService.CODECS` via call to `get`. Potentially races with write in method `CommandAsyncService.getCodec(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/command/CommandAsyncService.java","tnLine":427,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.command.CommandAsyncService.readAsync(byte[],org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[]):org.redisson.api.RFuture","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `io.netty.buffer.ByteBufOutputStream` acquired by call to `new()` at line 73 is not released after line 78.\n**Note**: potential exception at line 75","tnFile":"redisson/src/main/java/org/redisson/codec/SerializationCodec.java","tnLine":78,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.codec.SerializationCodec$2.encode(java.lang.Object):io.netty.buffer.ByteBuf","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RFuture CommandAsyncService.readAsync(RedisClient,MasterSlaveEntry,Codec,RedisCommand,java.lang.Object[])` indirectly reads without synchronization from container `command.CommandAsyncService.CODECS` via call to `get`. Potentially races with write in method `CommandAsyncService.getCodec(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/command/CommandAsyncService.java","tnLine":223,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.command.CommandAsyncService.readAsync(org.redisson.client.RedisClient,org.redisson.connection.MasterSlaveEntry,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[]):org.redisson.api.RFuture","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Session RedissonSessionManager.createSession(String)` indirectly reads without synchronization from `this.redisson`. Potentially races with write in method `RedissonSessionManager.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSessionManager.java","tnLine":141,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.tomcat.RedissonSessionManager.createSession(java.lang.String):org.apache.catalina.Session","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void CommandAsyncService.checkAttemptFuture(NodeSource,AsyncDetails,RFuture,boolean)` indirectly reads without synchronization from container `command.CommandAsyncService.CODECS` via call to `get`. Potentially races with write in method `CommandAsyncService.getCodec(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/command/CommandAsyncService.java","tnLine":1031,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.command.CommandAsyncService.checkAttemptFuture(org.redisson.connection.NodeSource,org.redisson.command.AsyncDetails,org.redisson.api.RFuture,boolean):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void JCache.close()` indirectly reads without synchronization from `this.closed`. Potentially races with write in method `JCache.close()`.\n Reporting because this access may occur on a background thread.","tnFile":"redisson/src/main/java/org/redisson/jcache/JCache.java","tnLine":2993,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.jcache.JCache.close():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RFuture JCache.removeAsync(Object,Object)` indirectly reads without synchronization from `this.closed`. Potentially races with write in method `JCache.close()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/jcache/JCache.java","tnLine":1875,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.jcache.JCache.removeAsync(java.lang.Object,java.lang.Object):org.redisson.api.RFuture","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"NULL_DEREFERENCE","tnDesc":"object returned by `CommandDecoder.state.get()` could be null and is dereferenced at line 102.","tnFile":"redisson/src/main/java/org/redisson/client/handler/CommandDecoder.java","tnLine":102,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.client.handler.CommandDecoder.decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void RedissonSessionManager.start()` indirectly reads without synchronization from `this.keyPrefix`. Potentially races with write in method `RedissonSessionManager.setKeyPrefix(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/RedissonSessionManager.java","tnLine":291,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.tomcat.RedissonSessionManager.start():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void RedissonSessionManager.stop()` writes to field `this.codecToUse` outside of synchronization.\n Reporting because this access may occur on a background thread.","tnFile":"redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/RedissonSessionManager.java","tnLine":398,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.tomcat.RedissonSessionManager.stop():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RFuture CommandAsyncService.writeAsync(MasterSlaveEntry,Codec,RedisCommand,java.lang.Object[])` indirectly reads without synchronization from container `command.CommandAsyncService.CODECS` via call to `get`. Potentially races with write in method `CommandAsyncService.getCodec(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/command/CommandAsyncService.java","tnLine":440,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.command.CommandAsyncService.writeAsync(org.redisson.connection.MasterSlaveEntry,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[]):org.redisson.api.RFuture","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void RedissonSessionManager.startInternal()` reads without synchronization from `this.messageListener`. Potentially races with write in method `RedissonSessionManager.startInternal()`.\n Reporting because this access may occur on a background thread.","tnFile":"redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSessionManager.java","tnLine":331,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.tomcat.RedissonSessionManager.startInternal():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `java.io.InputStreamReader` acquired by call to `new()` at line 144 is not released after line 144.","tnFile":"redisson/src/main/java/org/redisson/config/ConfigSupport.java","tnLine":144,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.config.ConfigSupport.fromJSON(java.io.InputStream,java.lang.Class):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RSet RedissonSessionManager.getNotifiedNodes(String)` reads without synchronization from `this.redisson`. Potentially races with write in method `RedissonSessionManager.start()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSessionManager.java","tnLine":157,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.tomcat.RedissonSessionManager.getNotifiedNodes(java.lang.String):org.redisson.api.RSet","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RFuture JCache.getAsync(Object)` indirectly reads without synchronization from `this.closed`. Potentially races with write in method `JCache.close()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/jcache/JCache.java","tnLine":217,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.jcache.JCache.getAsync(java.lang.Object):org.redisson.api.RFuture","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object JCache.invoke(Object,EntryProcessor,java.lang.Object[])` indirectly reads without synchronization from `this.closed`. Potentially races with write in method `JCache.close()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/jcache/JCache.java","tnLine":2916,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.jcache.JCache.invoke(java.lang.Object,javax.cache.processor.EntryProcessor,java.lang.Object[]):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Session RedissonSessionManager.findSession(String)` indirectly reads without synchronization from `this.codecToUse`. Potentially races with write in method `RedissonSessionManager.startInternal()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSessionManager.java","tnLine":174,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.tomcat.RedissonSessionManager.findSession(java.lang.String):org.apache.catalina.Session","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object RedissonSession.getAttribute(String)` reads without synchronization from `this.loaded`. Potentially races with write in method `RedissonSession.getAttribute(...)`.\n Reporting because this access may occur on a background thread.","tnFile":"redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSession.java","tnLine":108,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.tomcat.RedissonSession.getAttribute(java.lang.String):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `Object JCache.loadValue(Object)` indirectly reads without synchronization from `this.closed`. Potentially races with write in method `JCache.close()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/jcache/JCache.java","tnLine":396,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.jcache.JCache.loadValue(java.lang.Object):java.lang.Object","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"RESOURCE_LEAK","tnDesc":"resource of type `org.redisson.spring.data.connection.RedissonClusterConnection$1` acquired by call to `RedissonClusterConnection$1(...)` at line 392 is not released after line 430.","tnFile":"redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonClusterConnection.java","tnLine":430,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.spring.data.connection.RedissonClusterConnection.scan(org.springframework.data.redis.connection.RedisClusterNode,org.springframework.data.redis.core.ScanOptions):org.springframework.data.redis.core.Cursor","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RFuture CommandAsyncService.evalWriteAllAsync(RedisCommand,SlotCallback,String,List,java.lang.Object[])` indirectly reads without synchronization from container `command.CommandAsyncService.CODECS` via call to `get`. Potentially races with write in method `CommandAsyncService.getCodec(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/command/CommandAsyncService.java","tnLine":478,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.command.CommandAsyncService.evalWriteAllAsync(org.redisson.client.protocol.RedisCommand,org.redisson.SlotCallback,java.lang.String,java.util.List,java.lang.Object[]):org.redisson.api.RFuture","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Unprotected write. Non-private method `void RedissonSession.load(Map)` writes to field `this.isNew` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSession.java","tnLine":376,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.tomcat.RedissonSession.load(java.util.Map):void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `RFuture CommandAsyncService.readRandomAsync(MasterSlaveEntry,Codec,RedisCommand,java.lang.Object[])` indirectly reads without synchronization from container `command.CommandAsyncService.CODECS` via call to `get`. Potentially races with write in method `CommandAsyncService.getCodec(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson/src/main/java/org/redisson/command/CommandAsyncService.java","tnLine":312,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.command.CommandAsyncService.readRandomAsync(org.redisson.connection.MasterSlaveEntry,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[]):org.redisson.api.RFuture","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}},{"tnType":"THREAD_SAFETY_VIOLATION","tnDesc":"Read/Write race. Non-private method `void RedissonSession.save()` reads without synchronization from `this.maxInactiveInterval`. Potentially races with write in method `RedissonSession.getAttribute(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","tnFile":"redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSession.java","tnLine":323,"tnColumn":-1,"tnPatch":null,"tnCodeLine":null,"tnProcedure":"org.redisson.tomcat.RedissonSession.save():void","tnPhase":"PhaseUnknown","tnTool":{"tag":"Infer"}}],null,{"analysisLOC":null,"analysisBuildSys":"Maven []","analysisLang":null}]}],[{"tag":"ErrorProne_JDK8"},{"tag":"ToolSuccess","contents":[[{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson/src/main/java/org/redisson/client/handler/ConnectionWatchdog.java","tnLine":152,"tnColumn":31,"tnPatch":null,"tnCodeLine":"                conn.subscribe(entry.getValue(), entry.getKey());","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/PropertiesDecoder.java","tnLine":38,"tnColumn":41,"tnPatch":null,"tnCodeLine":"            String[] parts = entry.split(\":\");","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonReactiveSubscription.java","tnLine":146,"tnColumn":76,"tnPatch":null,"tnCodeLine":"                                ByteBuffer.wrap(channel.toString().getBytes()), ByteBuffer.wrap((byte[])message)));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"isBlockingCommand implements method in QueueCommand; expected @Override","tnFile":"redisson/src/main/java/org/redisson/client/protocol/CommandData.java","tnLine":99,"tnColumn":20,"tnPatch":null,"tnCodeLine":"    public boolean isBlockingCommand() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"TypeParameterUnusedInFormals","tnDesc":"Declaring a type parameter that is only used in the return type is a misuse of generics: operations on the type parameter are unchecked, it hides unsafe casts at invocations of the method, and it interacts badly with method overload resolution.","tnFile":"redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":1936,"tnColumn":18,"tnPatch":null,"tnCodeLine":"    public <T> T eval(byte[] script, ReturnType returnType, int numKeys, byte[]... keysAndArgs) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson/src/main/java/org/redisson/transaction/operation/set/RemoveOperation.java","tnLine":52,"tnColumn":57,"tnPatch":null,"tnCodeLine":"        getLock(set, commandExecutor, value).unlockAsync();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":1926,"tnColumn":59,"tnPatch":null,"tnCodeLine":"                    this.result.set(i, this.result.get(i) | result.get(i));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"redisson-spring-data/redisson-spring-data-17/src/main/java/org/redisson/spring/data/connection/RedisClusterNodeDecoder.java","tnLine":57,"tnColumn":46,"tnPatch":null,"tnCodeLine":"            for (String flag : flagsStr.split(\",\")) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StaticGuardedByInstance","tnDesc":"Write to static variable should not be guarded by instance lock 'pipeline'","tnFile":"redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/RedissonSessionManager.java","tnLine":373,"tnColumn":21,"tnPatch":null,"tnCodeLine":"                    updateValve = null;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"add implements method in List; expected @Override","tnFile":"redisson/src/main/java/org/redisson/api/BatchResult.java","tnLine":109,"tnColumn":20,"tnPatch":null,"tnCodeLine":"    public boolean add(E e) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"Finally","tnDesc":"If you return or throw from a finally, then values returned or thrown from the try-catch block will be ignored. Consider using try-with-resources instead.","tnFile":"redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/JndiRedissonSessionManager.java","tnLine":55,"tnColumn":21,"tnPatch":null,"tnCodeLine":"                    throw new LifecycleException(\"Unable to close JNDI context\", e);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"TypeParameterUnusedInFormals","tnDesc":"Declaring a type parameter that is only used in the return type is a misuse of generics: operations on the type parameter are unchecked, it hides unsafe casts at invocations of the method, and it interacts badly with method overload resolution.","tnFile":"redisson-spring-data/redisson-spring-data-16/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":1860,"tnColumn":18,"tnPatch":null,"tnCodeLine":"    public <T> T eval(byte[] script, ReturnType returnType, int numKeys, byte[]... keysAndArgs) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson-spring-data/redisson-spring-data-18/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":458,"tnColumn":34,"tnPatch":null,"tnCodeLine":"            f.syncUninterruptibly();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ReferenceEquality","tnDesc":"Comparison using reference equality instead of value equality","tnFile":"redisson/src/main/java/org/redisson/api/StreamMessageId.java","tnLine":128,"tnColumn":18,"tnPatch":null,"tnCodeLine":"        if (this == ALL) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"NarrowingCompoundAssignment","tnDesc":"Compound assignments from long to int hide lossy casts","tnFile":"redisson-hibernate/redisson-hibernate-5/src/main/java/org/redisson/hibernate/strategy/AbstractReadWriteAccessStrategy.java","tnLine":319,"tnColumn":22,"tnPatch":null,"tnCodeLine":"                temp ^= ( lockId >>> ( i * Integer.SIZE ) );","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/PropertiesDecoder.java","tnLine":38,"tnColumn":41,"tnPatch":null,"tnCodeLine":"            String[] parts = entry.split(\":\");","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson/src/main/java/org/redisson/connection/balancer/LoadBalancerManager.java","tnLine":139,"tnColumn":52,"tnPatch":null,"tnCodeLine":"                slaveConnectionPool.initConnections(entry);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"TypeParameterUnusedInFormals","tnDesc":"Declaring a type parameter that is only used in the return type is a misuse of generics: operations on the type parameter are unchecked, it hides unsafe casts at invocations of the method, and it interacts badly with method overload resolution.","tnFile":"redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":837,"tnColumn":11,"tnPatch":null,"tnCodeLine":"    <T> T read(byte[] key, Codec codec, RedisCommand<?> command, Object... params) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"redisson-spring-data/redisson-spring-data-18/src/main/java/org/redisson/spring/data/connection/RedisClusterNodeDecoder.java","tnLine":85,"tnColumn":49,"tnPatch":null,"tnCodeLine":"                    String[] parts = slots.split(\"-\");","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"TypeParameterUnusedInFormals","tnDesc":"Declaring a type parameter that is only used in the return type is a misuse of generics: operations on the type parameter are unchecked, it hides unsafe casts at invocations of the method, and it interacts badly with method overload resolution.","tnFile":"redisson-spring-data/redisson-spring-data-18/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":1921,"tnColumn":18,"tnPatch":null,"tnCodeLine":"    public <T> T eval(byte[] script, ReturnType returnType, int numKeys, byte[]... keysAndArgs) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"iterator implements method in List; expected @Override","tnFile":"redisson/src/main/java/org/redisson/api/BatchResult.java","tnLine":85,"tnColumn":24,"tnPatch":null,"tnCodeLine":"    public Iterator<E> iterator() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"TypeParameterUnusedInFormals","tnDesc":"Declaring a type parameter that is only used in the return type is a misuse of generics: operations on the type parameter are unchecked, it hides unsafe casts at invocations of the method, and it interacts badly with method overload resolution.","tnFile":"redisson-spring-data/redisson-spring-data-18/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":818,"tnColumn":11,"tnPatch":null,"tnCodeLine":"    <T> T write(byte[] key, Codec codec, RedisCommand<?> command, Object... params) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedisClusterNodeDecoder.java","tnLine":51,"tnColumn":45,"tnPatch":null,"tnCodeLine":"            String[] params = nodeInfo.split(\" \");","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"TypeParameterUnusedInFormals","tnDesc":"Declaring a type parameter that is only used in the return type is a misuse of generics: operations on the type parameter are unchecked, it hides unsafe casts at invocations of the method, and it interacts badly with method overload resolution.","tnFile":"redisson/src/main/java/org/redisson/client/handler/State.java","tnLine":54,"tnColumn":39,"tnPatch":null,"tnCodeLine":"    public <T extends DecoderState> T getDecoderState() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson/src/main/java/org/redisson/connection/pool/ConnectionPool.java","tnLine":147,"tnColumn":58,"tnPatch":null,"tnCodeLine":"                                    connection.closeAsync();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"TypeParameterUnusedInFormals","tnDesc":"Declaring a type parameter that is only used in the return type is a misuse of generics: operations on the type parameter are unchecked, it hides unsafe casts at invocations of the method, and it interacts badly with method overload resolution.","tnFile":"redisson/src/main/java/org/redisson/api/RScript.java","tnLine":117,"tnColumn":11,"tnPatch":null,"tnCodeLine":"    <R> R eval(String key, Mode mode, String luaScript, ReturnType returnType, List<Object> keys, Object... values);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson-spring-data/redisson-spring-data-17/src/main/java/org/redisson/spring/data/connection/RedissonSubscription.java","tnLine":73,"tnColumn":41,"tnPatch":null,"tnCodeLine":"            subscribeService.unsubscribe(new ChannelName(channel), PubSubType.UNSUBSCRIBE);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonSentinelConnection.java","tnLine":83,"tnColumn":30,"tnPatch":null,"tnCodeLine":"        connection.closeAsync();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"TypeParameterUnusedInFormals","tnDesc":"Declaring a type parameter that is only used in the return type is a misuse of generics: operations on the type parameter are unchecked, it hides unsafe casts at invocations of the method, and it interacts badly with method overload resolution.","tnFile":"redisson/src/main/java/org/redisson/api/RScript.java","tnLine":80,"tnColumn":11,"tnPatch":null,"tnCodeLine":"    <R> R evalSha(String key, Mode mode, String shaDigest, ReturnType returnType, List<Object> keys, Object... values);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StaticGuardedByInstance","tnDesc":"Write to static variable should not be guarded by instance lock 'pipeline'","tnFile":"redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/RedissonSessionManager.java","tnLine":388,"tnColumn":21,"tnPatch":null,"tnCodeLine":"                    updateValve = null;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson/src/main/java/org/redisson/connection/ClientConnectionsEntry.java","tnLine":148,"tnColumn":34,"tnPatch":null,"tnCodeLine":"            connection.closeAsync();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"getMinimumIdleSize implements method in ConnectionPool; expected @Override","tnFile":"redisson/src/main/java/org/redisson/connection/pool/SlaveConnectionPool.java","tnLine":37,"tnColumn":19,"tnPatch":null,"tnCodeLine":"    protected int getMinimumIdleSize(ClientConnectionsEntry entry) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ReferenceEquality","tnDesc":"Comparison using reference equality instead of value equality","tnFile":"redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonReactiveStringCommands.java","tnLine":369,"tnColumn":23,"tnPatch":null,"tnCodeLine":"            if (range == Range.<Long>unbounded()) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"redisson-spring-data/redisson-spring-data-17/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":1588,"tnColumn":56,"tnPatch":null,"tnCodeLine":"                iterator.set(((String) object).getBytes());","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":458,"tnColumn":34,"tnPatch":null,"tnCodeLine":"            f.syncUninterruptibly();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedisClusterNodeDecoder.java","tnLine":85,"tnColumn":49,"tnPatch":null,"tnCodeLine":"                    String[] parts = slots.split(\"-\");","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonReactiveSubscription.java","tnLine":145,"tnColumn":102,"tnPatch":null,"tnCodeLine":"                        emitter.next(new PatternMessage<>(ByteBuffer.wrap(pattern.toString().getBytes()), ","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonSubscription.java","tnLine":100,"tnColumn":41,"tnPatch":null,"tnCodeLine":"            subscribeService.unsubscribe(new ChannelName(pattern), PubSubType.PUNSUBSCRIBE);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"run implements method in Runnable; expected @Override","tnFile":"redisson/src/main/java/org/redisson/client/RedisClient.java","tnLine":244,"tnColumn":41,"tnPatch":null,"tnCodeLine":"                            public void run() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonReactiveKeyCommands.java","tnLine":119,"tnColumn":130,"tnPatch":null,"tnCodeLine":"        return reactive.getKeysByPattern(options.getPattern(), options.getCount().intValue()).map(t -> ByteBuffer.wrap(t.getBytes()));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"Finally","tnDesc":"If you return or throw from a finally, then values returned or thrown from the try-catch block will be ignored. Consider using try-with-resources instead.","tnFile":"redisson-hibernate/redisson-hibernate-5/src/main/java/org/redisson/hibernate/JndiRedissonRegionFactory.java","tnLine":60,"tnColumn":21,"tnPatch":null,"tnCodeLine":"                    throw new CacheException(\"Unable to close JNDI context\", e);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"TypeParameterUnusedInFormals","tnDesc":"Declaring a type parameter that is only used in the return type is a misuse of generics: operations on the type parameter are unchecked, it hides unsafe casts at invocations of the method, and it interacts badly with method overload resolution.","tnFile":"redisson-spring-data/redisson-spring-data-17/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":1954,"tnColumn":18,"tnPatch":null,"tnCodeLine":"    public <T> T evalSha(byte[] scriptSha, ReturnType returnType, int numKeys, byte[]... keysAndArgs) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson/src/main/java/org/redisson/client/RedisConnection.java","tnLine":178,"tnColumn":13,"tnPatch":null,"tnCodeLine":"        send(new CommandData<T, R>(promise, encoder, command, params));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson/src/main/java/org/redisson/connection/MasterSlaveEntry.java","tnLine":212,"tnColumn":34,"tnPatch":null,"tnCodeLine":"            connection.closeAsync();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ReferenceEquality","tnDesc":"Comparison using reference equality instead of value equality","tnFile":"redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/RedissonSessionManager.java","tnLine":146,"tnColumn":41,"tnPatch":null,"tnCodeLine":"                    if (event.getType() == Session.SESSION_DESTROYED_EVENT) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"TypeParameterUnusedInFormals","tnDesc":"Declaring a type parameter that is only used in the return type is a misuse of generics: operations on the type parameter are unchecked, it hides unsafe casts at invocations of the method, and it interacts badly with method overload resolution.","tnFile":"redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":840,"tnColumn":11,"tnPatch":null,"tnCodeLine":"    <T> T read(byte[] key, Codec codec, RedisCommand<?> command, Object... params) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"redisson-spring-data/redisson-spring-data-16/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":1556,"tnColumn":56,"tnPatch":null,"tnCodeLine":"                iterator.set(((String) object).getBytes());","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"TypeParameterUnusedInFormals","tnDesc":"Declaring a type parameter that is only used in the return type is a misuse of generics: operations on the type parameter are unchecked, it hides unsafe casts at invocations of the method, and it interacts badly with method overload resolution.","tnFile":"redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":822,"tnColumn":11,"tnPatch":null,"tnCodeLine":"    <T> T write(byte[] key, Codec codec, RedisCommand<?> command, Object... params) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedisClusterNodeDecoder.java","tnLine":85,"tnColumn":49,"tnPatch":null,"tnCodeLine":"                    String[] parts = slots.split(\"-\");","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":1623,"tnColumn":56,"tnPatch":null,"tnCodeLine":"                iterator.set(((String) object).getBytes());","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UndefinedEquals","tnDesc":"CharSequence does not have well-defined equals behavior.","tnFile":"redisson/src/main/java/org/redisson/pubsub/PubSubConnectionEntry.java","tnLine":196,"tnColumn":69,"tnPatch":null,"tnCodeLine":"                if (type == PubSubType.UNSUBSCRIBE && channel.equals(ch)) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"Finally","tnDesc":"If you return or throw from a finally, then values returned or thrown from the try-catch block will be ignored. Consider using try-with-resources instead.","tnFile":"redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/JndiRedissonSessionManager.java","tnLine":55,"tnColumn":21,"tnPatch":null,"tnCodeLine":"                    throw new LifecycleException(\"Unable to close JNDI context\", e);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"redisson-spring-data/redisson-spring-data-16/src/main/java/org/redisson/spring/data/connection/PropertiesDecoder.java","tnLine":38,"tnColumn":41,"tnPatch":null,"tnCodeLine":"            String[] parts = entry.split(\":\");","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"TypeParameterUnusedInFormals","tnDesc":"Declaring a type parameter that is only used in the return type is a misuse of generics: operations on the type parameter are unchecked, it hides unsafe casts at invocations of the method, and it interacts badly with method overload resolution.","tnFile":"redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":1988,"tnColumn":18,"tnPatch":null,"tnCodeLine":"    public <T> T evalSha(byte[] scriptSha, ReturnType returnType, int numKeys, byte[]... keysAndArgs) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson-spring-data/redisson-spring-data-16/src/main/java/org/redisson/spring/data/connection/RedissonConnectionFactory.java","tnLine":120,"tnColumn":38,"tnPatch":null,"tnCodeLine":"                connection.closeAsync();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"TypeParameterUnusedInFormals","tnDesc":"Declaring a type parameter that is only used in the return type is a misuse of generics: operations on the type parameter are unchecked, it hides unsafe casts at invocations of the method, and it interacts badly with method overload resolution.","tnFile":"redisson/src/main/java/org/redisson/client/RedisConnection.java","tnLine":176,"tnColumn":21,"tnPatch":null,"tnCodeLine":"    public <T, R> R sync(Codec encoder, RedisCommand<T> command, Object... params) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":203,"tnColumn":53,"tnPatch":null,"tnCodeLine":"                        return ((String) t).getBytes();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ImmutableEnumChecker","tnDesc":"enums should be immutable: 'ReturnType' has field 'command' of type 'org.redisson.client.protocol.RedisCommand<?>', the declaration of type 'org.redisson.client.protocol.RedisCommand<?>' is not annotated with @com.google.errorprone.annotations.Immutable","tnFile":"redisson/src/main/java/org/redisson/api/RScript.java","tnLine":43,"tnColumn":39,"tnPatch":null,"tnCodeLine":"        private final RedisCommand<?> command;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"redisson-spring-data/redisson-spring-data-18/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":1607,"tnColumn":56,"tnPatch":null,"tnCodeLine":"                iterator.set(((String) object).getBytes());","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ReferenceEquality","tnDesc":"Comparison using reference equality instead of value equality","tnFile":"redisson/src/main/java/org/redisson/api/StreamMessageId.java","tnLine":122,"tnColumn":18,"tnPatch":null,"tnCodeLine":"        if (this == MIN) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"run implements method in Runnable; expected @Override","tnFile":"redisson/src/main/java/org/redisson/client/RedisClient.java","tnLine":297,"tnColumn":41,"tnPatch":null,"tnCodeLine":"                            public void run() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StaticGuardedByInstance","tnDesc":"Write to static variable should not be guarded by instance lock 'pipeline'","tnFile":"redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSessionManager.java","tnLine":262,"tnColumn":21,"tnPatch":null,"tnCodeLine":"                    updateValve = new UpdateValve();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StaticGuardedByInstance","tnDesc":"Write to static variable should not be guarded by instance lock 'pipeline'","tnFile":"redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/RedissonSessionManager.java","tnLine":264,"tnColumn":21,"tnPatch":null,"tnCodeLine":"                    updateValve = new UpdateValve();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"TypeParameterUnusedInFormals","tnDesc":"Declaring a type parameter that is only used in the return type is a misuse of generics: operations on the type parameter are unchecked, it hides unsafe casts at invocations of the method, and it interacts badly with method overload resolution.","tnFile":"redisson-spring-data/redisson-spring-data-16/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":767,"tnColumn":11,"tnPatch":null,"tnCodeLine":"    <T> T write(byte[] key, Codec codec, RedisCommand<?> command, Object... params) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedisClusterNodeDecoder.java","tnLine":51,"tnColumn":45,"tnPatch":null,"tnCodeLine":"            String[] params = nodeInfo.split(\" \");","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"redisson-spring-data/redisson-spring-data-16/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":325,"tnColumn":64,"tnPatch":null,"tnCodeLine":"        RFuture<Set<byte[]>> f = (RFuture<Set<byte[]>>)(Object)(executorService.readAllAsync(results, ByteArrayCodec.INSTANCE, KEYS, pattern));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson/src/main/java/org/redisson/client/handler/ConnectionWatchdog.java","tnLine":155,"tnColumn":32,"tnPatch":null,"tnCodeLine":"                conn.psubscribe(entry.getValue(), entry.getKey());","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"TypeParameterUnusedInFormals","tnDesc":"Declaring a type parameter that is only used in the return type is a misuse of generics: operations on the type parameter are unchecked, it hides unsafe casts at invocations of the method, and it interacts badly with method overload resolution.","tnFile":"redisson/src/main/java/org/redisson/api/RScript.java","tnLine":97,"tnColumn":11,"tnPatch":null,"tnCodeLine":"    <R> R evalSha(Mode mode, String shaDigest, ReturnType returnType);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"Finally","tnDesc":"If you return or throw from a finally, then values returned or thrown from the try-catch block will be ignored. Consider using try-with-resources instead.","tnFile":"redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/JndiRedissonSessionManager.java","tnLine":55,"tnColumn":21,"tnPatch":null,"tnCodeLine":"                    throw new LifecycleException(\"Unable to close JNDI context\", e);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"redisson-spring-data/redisson-spring-data-17/src/main/java/org/redisson/spring/data/connection/PropertiesDecoder.java","tnLine":38,"tnColumn":41,"tnPatch":null,"tnCodeLine":"            String[] parts = entry.split(\":\");","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedisClusterNodeDecoder.java","tnLine":57,"tnColumn":46,"tnPatch":null,"tnCodeLine":"            for (String flag : flagsStr.split(\",\")) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson/src/main/java/org/redisson/client/handler/PingConnectionHandler.java","tnLine":72,"tnColumn":40,"tnPatch":null,"tnCodeLine":"                    ctx.channel().close();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson-spring-data/redisson-spring-data-18/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":307,"tnColumn":30,"tnPatch":null,"tnCodeLine":"                es.writeAsync(entry.getKey(), null, command, key);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"It is very rare for LinkedList to out-perform ArrayList or ArrayDeque. Avoid it unless you're willing to invest a lot of time into benchmarking. Caveat: LinkedList supports null elements, but ArrayDeque does not.","tnFile":"redisson/src/main/java/org/redisson/connection/pool/ConnectionPool.java","tnLine":201,"tnColumn":42,"tnPatch":null,"tnCodeLine":"        List<InetSocketAddress> failed = new LinkedList<InetSocketAddress>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"TypeParameterUnusedInFormals","tnDesc":"Declaring a type parameter that is only used in the return type is a misuse of generics: operations on the type parameter are unchecked, it hides unsafe casts at invocations of the method, and it interacts badly with method overload resolution.","tnFile":"redisson-spring-data/redisson-spring-data-17/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":799,"tnColumn":11,"tnPatch":null,"tnCodeLine":"    <T> T write(byte[] key, Codec codec, RedisCommand<?> command, Object... params) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"redisson-spring-data/redisson-spring-data-18/src/main/java/org/redisson/spring/data/connection/RedisClusterNodeDecoder.java","tnLine":64,"tnColumn":46,"tnPatch":null,"tnCodeLine":"                String addr = params[1].split(\"@\")[0];","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson-spring-data/redisson-spring-data-18/src/main/java/org/redisson/spring/data/connection/RedissonConnectionFactory.java","tnLine":129,"tnColumn":38,"tnPatch":null,"tnCodeLine":"                connection.closeAsync();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"redisson-spring-data/redisson-spring-data-18/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":1908,"tnColumn":59,"tnPatch":null,"tnCodeLine":"                    this.result.set(i, this.result.get(i) | result.get(i));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson/src/main/java/org/redisson/connection/MasterSlaveEntry.java","tnLine":318,"tnColumn":41,"tnPatch":null,"tnCodeLine":"                    client.shutdownAsync();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson-spring-data/redisson-spring-data-18/src/main/java/org/redisson/spring/data/connection/RedissonSubscription.java","tnLine":73,"tnColumn":41,"tnPatch":null,"tnCodeLine":"            subscribeService.unsubscribe(new ChannelName(channel), PubSubType.UNSUBSCRIBE);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"redisson-spring-data/redisson-spring-data-17/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":1889,"tnColumn":59,"tnPatch":null,"tnCodeLine":"                    this.result.set(i, this.result.get(i) | result.get(i));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"redisson-spring-data/redisson-spring-data-16/src/main/java/org/redisson/spring/data/connection/PropertiesDecoder.java","tnLine":37,"tnColumn":40,"tnPatch":null,"tnCodeLine":"        for (String entry : value.split(\"\\r\\n|\\n\")) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson-spring-data/redisson-spring-data-17/src/main/java/org/redisson/spring/data/connection/RedissonConnectionFactory.java","tnLine":129,"tnColumn":38,"tnPatch":null,"tnCodeLine":"                connection.closeAsync();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"TypeParameterUnusedInFormals","tnDesc":"Declaring a type parameter that is only used in the return type is a misuse of generics: operations on the type parameter are unchecked, it hides unsafe casts at invocations of the method, and it interacts badly with method overload resolution.","tnFile":"redisson/src/main/java/org/redisson/api/RScript.java","tnLine":153,"tnColumn":11,"tnPatch":null,"tnCodeLine":"    <R> R eval(Mode mode, Codec codec, String luaScript, ReturnType returnType);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"TypeParameterUnusedInFormals","tnDesc":"Declaring a type parameter that is only used in the return type is a misuse of generics: operations on the type parameter are unchecked, it hides unsafe casts at invocations of the method, and it interacts badly with method overload resolution.","tnFile":"redisson/src/main/java/org/redisson/api/RScript.java","tnLine":86,"tnColumn":11,"tnPatch":null,"tnCodeLine":"    <R> R evalSha(Mode mode, Codec codec, String shaDigest, ReturnType returnType, List<Object> keys, Object... values);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":304,"tnColumn":30,"tnPatch":null,"tnCodeLine":"                es.writeAsync(entry.getKey(), null, command, key);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson/src/main/java/org/redisson/connection/pool/ConnectionPool.java","tnLine":439,"tnColumn":34,"tnPatch":null,"tnCodeLine":"            connection.closeAsync();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"Finally","tnDesc":"If you return or throw from a finally, then values returned or thrown from the try-catch block will be ignored. Consider using try-with-resources instead.","tnFile":"redisson-hibernate/redisson-hibernate-52/src/main/java/org/redisson/hibernate/JndiRedissonRegionFactory.java","tnLine":61,"tnColumn":21,"tnPatch":null,"tnCodeLine":"                    throw new CacheException(\"Unable to close JNDI context\", e);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson-spring-data/redisson-spring-data-17/src/main/java/org/redisson/spring/data/connection/RedissonSentinelConnection.java","tnLine":83,"tnColumn":30,"tnPatch":null,"tnCodeLine":"        connection.closeAsync();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonConnectionFactory.java","tnLine":134,"tnColumn":38,"tnPatch":null,"tnCodeLine":"                connection.closeAsync();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson/src/main/java/org/redisson/transaction/operation/set/RemoveOperation.java","tnLine":46,"tnColumn":57,"tnPatch":null,"tnCodeLine":"        getLock(set, commandExecutor, value).unlockAsync();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson/src/main/java/org/redisson/client/RedisConnection.java","tnLine":261,"tnColumn":34,"tnPatch":null,"tnCodeLine":"                    channel.close();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"remove implements method in List; expected @Override","tnFile":"redisson/src/main/java/org/redisson/api/BatchResult.java","tnLine":117,"tnColumn":20,"tnPatch":null,"tnCodeLine":"    public boolean remove(Object o) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonSentinelConnection.java","tnLine":83,"tnColumn":30,"tnPatch":null,"tnCodeLine":"        connection.closeAsync();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"TypeParameterUnusedInFormals","tnDesc":"Declaring a type parameter that is only used in the return type is a misuse of generics: operations on the type parameter are unchecked, it hides unsafe casts at invocations of the method, and it interacts badly with method overload resolution.","tnFile":"redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":825,"tnColumn":11,"tnPatch":null,"tnCodeLine":"    <T> T write(byte[] key, Codec codec, RedisCommand<?> command, Object... params) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ReferenceEquality","tnDesc":"Comparison using reference equality instead of value equality","tnFile":"redisson/src/main/java/org/redisson/api/StreamMessageId.java","tnLine":119,"tnColumn":18,"tnPatch":null,"tnCodeLine":"        if (this == NEWEST) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"TypeParameterUnusedInFormals","tnDesc":"Declaring a type parameter that is only used in the return type is a misuse of generics: operations on the type parameter are unchecked, it hides unsafe casts at invocations of the method, and it interacts badly with method overload resolution.","tnFile":"redisson-spring-data/redisson-spring-data-17/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":1902,"tnColumn":18,"tnPatch":null,"tnCodeLine":"    public <T> T eval(byte[] script, ReturnType returnType, int numKeys, byte[]... keysAndArgs) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":339,"tnColumn":64,"tnPatch":null,"tnCodeLine":"        RFuture<Set<byte[]>> f = (RFuture<Set<byte[]>>)(Object)(executorService.readAllAsync(results, ByteArrayCodec.INSTANCE, KEYS, pattern));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ReferenceEquality","tnDesc":"Comparison using reference equality instead of value equality","tnFile":"redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonReactiveStringCommands.java","tnLine":369,"tnColumn":23,"tnPatch":null,"tnCodeLine":"            if (range == Range.<Long>unbounded()) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson/src/main/java/org/redisson/connection/MasterSlaveEntry.java","tnLine":200,"tnColumn":34,"tnPatch":null,"tnCodeLine":"            connection.closeAsync();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"TypeParameterUnusedInFormals","tnDesc":"Declaring a type parameter that is only used in the return type is a misuse of generics: operations on the type parameter are unchecked, it hides unsafe casts at invocations of the method, and it interacts badly with method overload resolution.","tnFile":"redisson/src/main/java/org/redisson/client/RedisConnection.java","tnLine":96,"tnColumn":49,"tnPatch":null,"tnCodeLine":"    public static <C extends RedisConnection> C getFrom(Channel channel) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"TypeParameterUnusedInFormals","tnDesc":"Declaring a type parameter that is only used in the return type is a misuse of generics: operations on the type parameter are unchecked, it hides unsafe casts at invocations of the method, and it interacts badly with method overload resolution.","tnFile":"redisson/src/main/java/org/redisson/api/RScript.java","tnLine":103,"tnColumn":11,"tnPatch":null,"tnCodeLine":"    <R> R evalSha(Mode mode, Codec codec, String shaDigest, ReturnType returnType);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedisClusterNodeDecoder.java","tnLine":64,"tnColumn":46,"tnPatch":null,"tnCodeLine":"                String addr = params[1].split(\"@\")[0];","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"EqualsGetClass","tnDesc":"Overriding Object#equals in a non-final class by using getClass rather than instanceof breaks substitutability of subclasses.","tnFile":"redisson/src/main/java/org/redisson/client/protocol/ScoredEntry.java","tnLine":54,"tnColumn":20,"tnPatch":null,"tnCodeLine":"    public boolean equals(Object obj) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"NarrowingCompoundAssignment","tnDesc":"Compound assignments from long to int hide lossy casts","tnFile":"redisson-hibernate/redisson-hibernate-4/src/main/java/org/redisson/hibernate/strategy/AbstractReadWriteAccessStrategy.java","tnLine":318,"tnColumn":22,"tnPatch":null,"tnCodeLine":"                temp ^= ( lockId >>> ( i * Integer.SIZE ) );","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonSubscription.java","tnLine":73,"tnColumn":41,"tnPatch":null,"tnCodeLine":"            subscribeService.unsubscribe(new ChannelName(channel), PubSubType.UNSUBSCRIBE);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"NarrowingCompoundAssignment","tnDesc":"Compound assignments from long to int hide lossy casts","tnFile":"redisson-hibernate/redisson-hibernate-52/src/main/java/org/redisson/hibernate/strategy/AbstractReadWriteAccessStrategy.java","tnLine":319,"tnColumn":22,"tnPatch":null,"tnCodeLine":"                temp ^= ( lockId >>> ( i * Integer.SIZE ) );","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson/src/main/java/org/redisson/client/RedisClient.java","tnLine":290,"tnColumn":53,"tnPatch":null,"tnCodeLine":"                                        c.closeAsync();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson-spring-data/redisson-spring-data-17/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":449,"tnColumn":34,"tnPatch":null,"tnCodeLine":"            f.syncUninterruptibly();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"redisson-spring-data/redisson-spring-data-16/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":189,"tnColumn":53,"tnPatch":null,"tnCodeLine":"                        return ((String) t).getBytes();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"TypeParameterUnusedInFormals","tnDesc":"Declaring a type parameter that is only used in the return type is a misuse of generics: operations on the type parameter are unchecked, it hides unsafe casts at invocations of the method, and it interacts badly with method overload resolution.","tnFile":"redisson-spring-data/redisson-spring-data-18/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":833,"tnColumn":11,"tnPatch":null,"tnCodeLine":"    <T> T read(byte[] key, Codec codec, RedisCommand<?> command, Object... params) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ArrayAsKeyOfSetOrMap","tnDesc":"Arrays do not override equals() or hashCode, so comparisons will be done on reference equality only. If neither deduplication nor lookup are needed, consider using a List instead. Otherwise, use IdentityHashMap/Set, a Map from a library that handles object arrays, or an Iterable/List of pairs.","tnFile":"redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonClusterConnection.java","tnLine":322,"tnColumn":30,"tnPatch":null,"tnCodeLine":"        Set<byte[]> result = new HashSet<byte[]>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonReactiveScriptingCommands.java","tnLine":96,"tnColumn":63,"tnPatch":null,"tnCodeLine":"                        this.result.set(i, this.result.get(i) | result.get(i));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StaticGuardedByInstance","tnDesc":"Write to static variable should not be guarded by instance lock 'pipeline'","tnFile":"redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSessionManager.java","tnLine":371,"tnColumn":21,"tnPatch":null,"tnCodeLine":"                    updateValve = null;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ArrayAsKeyOfSetOrMap","tnDesc":"Arrays do not override equals() or hashCode, so comparisons will be done on reference equality only. If neither deduplication nor lookup are needed, consider using a List instead. Otherwise, use IdentityHashMap/Set, a Map from a library that handles object arrays, or an Iterable/List of pairs.","tnFile":"redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":335,"tnColumn":31,"tnPatch":null,"tnCodeLine":"        Set<byte[]> results = new HashSet<byte[]>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"redisson-spring-data/redisson-spring-data-18/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":339,"tnColumn":64,"tnPatch":null,"tnCodeLine":"        RFuture<Set<byte[]>> f = (RFuture<Set<byte[]>>)(Object)(executorService.readAllAsync(results, ByteArrayCodec.INSTANCE, KEYS, pattern));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":455,"tnColumn":34,"tnPatch":null,"tnCodeLine":"            f.syncUninterruptibly();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"isEmpty implements method in List; expected @Override","tnFile":"redisson/src/main/java/org/redisson/api/BatchResult.java","tnLine":69,"tnColumn":20,"tnPatch":null,"tnCodeLine":"    public boolean isEmpty() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"EqualsGetClass","tnDesc":"Overriding Object#equals in a non-final class by using getClass rather than instanceof breaks substitutability of subclasses.","tnFile":"redisson/src/main/java/org/redisson/misc/RedisURI.java","tnLine":102,"tnColumn":20,"tnPatch":null,"tnCodeLine":"    public boolean equals(Object obj) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"redisson-spring-data/redisson-spring-data-17/src/main/java/org/redisson/spring/data/connection/RedisClusterNodeDecoder.java","tnLine":50,"tnColumn":46,"tnPatch":null,"tnCodeLine":"        for (String nodeInfo : response.split(\"\\n\")) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"TypeParameterUnusedInFormals","tnDesc":"Declaring a type parameter that is only used in the return type is a misuse of generics: operations on the type parameter are unchecked, it hides unsafe casts at invocations of the method, and it interacts badly with method overload resolution.","tnFile":"redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":1971,"tnColumn":18,"tnPatch":null,"tnCodeLine":"    public <T> T evalSha(String scriptSha, ReturnType returnType, int numKeys, byte[]... keysAndArgs) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"TypeParameterUnusedInFormals","tnDesc":"Declaring a type parameter that is only used in the return type is a misuse of generics: operations on the type parameter are unchecked, it hides unsafe casts at invocations of the method, and it interacts badly with method overload resolution.","tnFile":"redisson/src/main/java/org/redisson/api/RScript.java","tnLine":147,"tnColumn":11,"tnPatch":null,"tnCodeLine":"    <R> R eval(Mode mode, String luaScript, ReturnType returnType);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"HidingField","tnDesc":"Hiding fields of superclasses may cause confusion and errors. This field is hiding a field of the same name in superclass: ManagerBase","tnFile":"redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/RedissonSessionManager.java","tnLine":64,"tnColumn":23,"tnPatch":null,"tnCodeLine":"    private final Log log = LogFactory.getLog(RedissonSessionManager.class);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ReferenceEquality","tnDesc":"Comparison using reference equality instead of value equality","tnFile":"redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSessionManager.java","tnLine":145,"tnColumn":41,"tnPatch":null,"tnCodeLine":"                    if (event.getType() == Session.SESSION_DESTROYED_EVENT) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"redisson-spring-data/redisson-spring-data-17/src/main/java/org/redisson/spring/data/connection/RedisClusterNodeDecoder.java","tnLine":51,"tnColumn":45,"tnPatch":null,"tnCodeLine":"            String[] params = nodeInfo.split(\" \");","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"toArray implements method in List; expected @Override","tnFile":"redisson/src/main/java/org/redisson/api/BatchResult.java","tnLine":93,"tnColumn":21,"tnPatch":null,"tnCodeLine":"    public Object[] toArray() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonReactiveKeyCommands.java","tnLine":92,"tnColumn":89,"tnPatch":null,"tnCodeLine":"                List<ByteBuffer> values = v.stream().map(t -> ByteBuffer.wrap(t.getBytes())).collect(Collectors.toList());","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":200,"tnColumn":53,"tnPatch":null,"tnCodeLine":"                        return ((String) t).getBytes();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"TypeParameterUnusedInFormals","tnDesc":"Declaring a type parameter that is only used in the return type is a misuse of generics: operations on the type parameter are unchecked, it hides unsafe casts at invocations of the method, and it interacts badly with method overload resolution.","tnFile":"redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":1939,"tnColumn":18,"tnPatch":null,"tnCodeLine":"    public <T> T eval(byte[] script, ReturnType returnType, int numKeys, byte[]... keysAndArgs) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"TypeParameterUnusedInFormals","tnDesc":"Declaring a type parameter that is only used in the return type is a misuse of generics: operations on the type parameter are unchecked, it hides unsafe casts at invocations of the method, and it interacts badly with method overload resolution.","tnFile":"redisson-spring-data/redisson-spring-data-16/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":1895,"tnColumn":18,"tnPatch":null,"tnCodeLine":"    public <T> T evalSha(String scriptSha, ReturnType returnType, int numKeys, byte[]... keysAndArgs) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"TypeParameterUnusedInFormals","tnDesc":"Declaring a type parameter that is only used in the return type is a misuse of generics: operations on the type parameter are unchecked, it hides unsafe casts at invocations of the method, and it interacts badly with method overload resolution.","tnFile":"redisson-spring-data/redisson-spring-data-16/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":782,"tnColumn":11,"tnPatch":null,"tnCodeLine":"    <T> T read(byte[] key, Codec codec, RedisCommand<?> command, Object... params) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnusedVariable","tnDesc":"The field 'log' is never read.","tnFile":"redisson/src/main/java/org/redisson/connection/balancer/LoadBalancerManager.java","tnLine":53,"tnColumn":26,"tnPatch":null,"tnCodeLine":"    private final Logger log = LoggerFactory.getLogger(getClass());","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"It is very rare for LinkedList to out-perform ArrayList or ArrayDeque. Avoid it unless you're willing to invest a lot of time into benchmarking. Caveat: LinkedList supports null elements, but ArrayDeque does not.","tnFile":"redisson/src/main/java/org/redisson/connection/MasterSlaveEntry.java","tnLine":99,"tnColumn":38,"tnPatch":null,"tnCodeLine":"        List<RFuture<Void>> result = new LinkedList<RFuture<Void>>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson-spring-data/redisson-spring-data-18/src/main/java/org/redisson/spring/data/connection/RedissonSentinelConnection.java","tnLine":83,"tnColumn":30,"tnPatch":null,"tnCodeLine":"        connection.closeAsync();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson-spring-data/redisson-spring-data-16/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":444,"tnColumn":34,"tnPatch":null,"tnCodeLine":"            f.syncUninterruptibly();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson-spring-data/redisson-spring-data-17/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":298,"tnColumn":30,"tnPatch":null,"tnCodeLine":"                es.writeAsync(entry.getKey(), null, command, key);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"TypeParameterUnusedInFormals","tnDesc":"Declaring a type parameter that is only used in the return type is a misuse of generics: operations on the type parameter are unchecked, it hides unsafe casts at invocations of the method, and it interacts badly with method overload resolution.","tnFile":"redisson/src/main/java/org/redisson/api/RScript.java","tnLine":130,"tnColumn":11,"tnPatch":null,"tnCodeLine":"    <R> R eval(Mode mode, String luaScript, ReturnType returnType, List<Object> keys, Object... values);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ReferenceEquality","tnDesc":"Comparison using reference equality instead of value equality","tnFile":"redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/RedissonSessionManager.java","tnLine":145,"tnColumn":41,"tnPatch":null,"tnCodeLine":"                    if (event.getType() == Session.SESSION_DESTROYED_EVENT) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson/src/main/java/org/redisson/connection/MasterSlaveEntry.java","tnLine":126,"tnColumn":37,"tnPatch":null,"tnCodeLine":"                client.shutdownAsync();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UndefinedEquals","tnDesc":"CharSequence does not have well-defined equals behavior.","tnFile":"redisson/src/main/java/org/redisson/client/SubscribeListener.java","tnLine":42,"tnColumn":24,"tnPatch":null,"tnCodeLine":"        if (name.equals(channel) && this.type.equals(type)) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ArrayAsKeyOfSetOrMap","tnDesc":"Arrays do not override equals() or hashCode, so comparisons will be done on reference equality only. If neither deduplication nor lookup are needed, consider using a List instead. Otherwise, use IdentityHashMap/Set, a Map from a library that handles object arrays, or an Iterable/List of pairs.","tnFile":"redisson-spring-data/redisson-spring-data-16/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":324,"tnColumn":31,"tnPatch":null,"tnCodeLine":"        Set<byte[]> results = new HashSet<byte[]>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson/src/main/java/org/redisson/client/RedisClient.java","tnLine":233,"tnColumn":57,"tnPatch":null,"tnCodeLine":"                                            c.closeAsync();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson/src/main/java/org/redisson/client/RedisClient.java","tnLine":185,"tnColumn":34,"tnPatch":null,"tnCodeLine":"        resolveFuture.addListener(new FutureListener<InetSocketAddress>() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedisClusterNodeDecoder.java","tnLine":64,"tnColumn":46,"tnPatch":null,"tnCodeLine":"                String addr = params[1].split(\"@\")[0];","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson/src/main/java/org/redisson/client/RedisClient.java","tnLine":237,"tnColumn":53,"tnPatch":null,"tnCodeLine":"                                        c.closeAsync();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson-spring-data/redisson-spring-data-17/src/main/java/org/redisson/spring/data/connection/RedissonSubscription.java","tnLine":100,"tnColumn":41,"tnPatch":null,"tnCodeLine":"            subscribeService.unsubscribe(new ChannelName(pattern), PubSubType.PUNSUBSCRIBE);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson/src/main/java/org/redisson/client/RedisClient.java","tnLine":317,"tnColumn":38,"tnPatch":null,"tnCodeLine":"                connection.closeAsync();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson/src/main/java/org/redisson/transaction/operation/set/RemoveOperation.java","tnLine":45,"tnColumn":24,"tnPatch":null,"tnCodeLine":"        set.removeAsync(value);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/PropertiesDecoder.java","tnLine":37,"tnColumn":40,"tnPatch":null,"tnCodeLine":"        for (String entry : value.split(\"\\r\\n|\\n\")) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"It is very rare for LinkedList to out-perform ArrayList or ArrayDeque. Avoid it unless you're willing to invest a lot of time into benchmarking. Caveat: LinkedList supports null elements, but ArrayDeque does not.","tnFile":"redisson/src/main/java/org/redisson/connection/pool/ConnectionPool.java","tnLine":188,"tnColumn":52,"tnPatch":null,"tnCodeLine":"        List<ClientConnectionsEntry> entriesCopy = new LinkedList<ClientConnectionsEntry>(entries);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"EqualsGetClass","tnDesc":"Overriding Object#equals in a non-final class by using getClass rather than instanceof breaks substitutability of subclasses.","tnFile":"redisson/src/main/java/org/redisson/pubsub/AsyncSemaphore.java","tnLine":60,"tnColumn":24,"tnPatch":null,"tnCodeLine":"        public boolean equals(Object obj) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"EqualsGetClass","tnDesc":"Overriding Object#equals in a non-final class by using getClass rather than instanceof breaks substitutability of subclasses.","tnFile":"redisson/src/main/java/org/redisson/cluster/ClusterSlotRange.java","tnLine":55,"tnColumn":20,"tnPatch":null,"tnCodeLine":"    public boolean equals(Object obj) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ArrayAsKeyOfSetOrMap","tnDesc":"Arrays do not override equals() or hashCode, so comparisons will be done on reference equality only. If neither deduplication nor lookup are needed, consider using a List instead. Otherwise, use IdentityHashMap/Set, a Map from a library that handles object arrays, or an Iterable/List of pairs.","tnFile":"redisson-spring-data/redisson-spring-data-17/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":329,"tnColumn":31,"tnPatch":null,"tnCodeLine":"        Set<byte[]> results = new HashSet<byte[]>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"redisson-spring-data/redisson-spring-data-18/src/main/java/org/redisson/spring/data/connection/RedisClusterNodeDecoder.java","tnLine":51,"tnColumn":45,"tnPatch":null,"tnCodeLine":"            String[] params = nodeInfo.split(\" \");","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson-spring-data/redisson-spring-data-16/src/main/java/org/redisson/spring/data/connection/RedissonSubscription.java","tnLine":73,"tnColumn":41,"tnPatch":null,"tnCodeLine":"            subscribeService.unsubscribe(new ChannelName(channel), PubSubType.UNSUBSCRIBE);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"redisson-spring-data/redisson-spring-data-18/src/main/java/org/redisson/spring/data/connection/RedisClusterNodeDecoder.java","tnLine":57,"tnColumn":46,"tnPatch":null,"tnCodeLine":"            for (String flag : flagsStr.split(\",\")) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonReactiveSubscription.java","tnLine":156,"tnColumn":102,"tnPatch":null,"tnCodeLine":"                        emitter.next(new ChannelMessage<>(ByteBuffer.wrap(channel.toString().getBytes()), ByteBuffer.wrap((byte[])msg)));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"redisson-spring-data/redisson-spring-data-17/src/main/java/org/redisson/spring/data/connection/PropertiesDecoder.java","tnLine":37,"tnColumn":40,"tnPatch":null,"tnCodeLine":"        for (String entry : value.split(\"\\r\\n|\\n\")) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ReferenceEquality","tnDesc":"Comparison using reference equality instead of value equality","tnFile":"redisson/src/main/java/org/redisson/api/StreamMessageId.java","tnLine":125,"tnColumn":18,"tnPatch":null,"tnCodeLine":"        if (this == MAX) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"toArray implements method in List; expected @Override","tnFile":"redisson/src/main/java/org/redisson/api/BatchResult.java","tnLine":101,"tnColumn":20,"tnPatch":null,"tnCodeLine":"    public <T> T[] toArray(T[] a) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"size implements method in List; expected @Override","tnFile":"redisson/src/main/java/org/redisson/api/BatchResult.java","tnLine":61,"tnColumn":16,"tnPatch":null,"tnCodeLine":"    public int size() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"redisson-spring-data/redisson-spring-data-18/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":203,"tnColumn":53,"tnPatch":null,"tnCodeLine":"                        return ((String) t).getBytes();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson/src/main/java/org/redisson/client/RedisClient.java","tnLine":353,"tnColumn":78,"tnPatch":null,"tnCodeLine":"                                bootstrap.config().group().shutdownGracefully();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson-spring-data/redisson-spring-data-16/src/main/java/org/redisson/spring/data/connection/RedissonSentinelConnection.java","tnLine":83,"tnColumn":30,"tnPatch":null,"tnCodeLine":"        connection.closeAsync();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":336,"tnColumn":64,"tnPatch":null,"tnCodeLine":"        RFuture<Set<byte[]>> f = (RFuture<Set<byte[]>>)(Object)(executorService.readAllAsync(results, ByteArrayCodec.INSTANCE, KEYS, pattern));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"TypeParameterUnusedInFormals","tnDesc":"Declaring a type parameter that is only used in the return type is a misuse of generics: operations on the type parameter are unchecked, it hides unsafe casts at invocations of the method, and it interacts badly with method overload resolution.","tnFile":"redisson/src/main/java/org/redisson/api/RScript.java","tnLine":136,"tnColumn":11,"tnPatch":null,"tnCodeLine":"    <R> R eval(Mode mode, Codec codec, String luaScript, ReturnType returnType, List<Object> keys, Object... values);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"TypeParameterUnusedInFormals","tnDesc":"Declaring a type parameter that is only used in the return type is a misuse of generics: operations on the type parameter are unchecked, it hides unsafe casts at invocations of the method, and it interacts badly with method overload resolution.","tnFile":"redisson-spring-data/redisson-spring-data-18/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":1956,"tnColumn":18,"tnPatch":null,"tnCodeLine":"    public <T> T evalSha(String scriptSha, ReturnType returnType, int numKeys, byte[]... keysAndArgs) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"tryFailure implements method in QueueCommand; expected @Override","tnFile":"redisson/src/main/java/org/redisson/client/protocol/CommandData.java","tnLine":77,"tnColumn":20,"tnPatch":null,"tnCodeLine":"    public boolean tryFailure(Throwable cause) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson/src/main/java/org/redisson/connection/ClientConnectionsEntry.java","tnLine":226,"tnColumn":34,"tnPatch":null,"tnCodeLine":"            connection.closeAsync();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"TypeParameterUnusedInFormals","tnDesc":"Declaring a type parameter that is only used in the return type is a misuse of generics: operations on the type parameter are unchecked, it hides unsafe casts at invocations of the method, and it interacts badly with method overload resolution.","tnFile":"redisson-spring-data/redisson-spring-data-16/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":1912,"tnColumn":18,"tnPatch":null,"tnCodeLine":"    public <T> T evalSha(byte[] scriptSha, ReturnType returnType, int numKeys, byte[]... keysAndArgs) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"redisson-spring-data/redisson-spring-data-18/src/main/java/org/redisson/spring/data/connection/PropertiesDecoder.java","tnLine":37,"tnColumn":40,"tnPatch":null,"tnCodeLine":"        for (String entry : value.split(\"\\r\\n|\\n\")) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedisClusterNodeDecoder.java","tnLine":57,"tnColumn":46,"tnPatch":null,"tnCodeLine":"            for (String flag : flagsStr.split(\",\")) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"toString overrides method in Object; expected @Override","tnFile":"redisson/src/main/java/org/redisson/client/protocol/RedisCommand.java","tnLine":148,"tnColumn":19,"tnPatch":null,"tnCodeLine":"    public String toString() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"TypeParameterUnusedInFormals","tnDesc":"Declaring a type parameter that is only used in the return type is a misuse of generics: operations on the type parameter are unchecked, it hides unsafe casts at invocations of the method, and it interacts badly with method overload resolution.","tnFile":"redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":1991,"tnColumn":18,"tnPatch":null,"tnCodeLine":"    public <T> T evalSha(byte[] scriptSha, ReturnType returnType, int numKeys, byte[]... keysAndArgs) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ReferenceEquality","tnDesc":"Comparison using reference equality instead of value equality","tnFile":"redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/RedissonSessionManager.java","tnLine":168,"tnColumn":41,"tnPatch":null,"tnCodeLine":"                    if (event.getType() == Session.SESSION_DESTROYED_EVENT) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UnnecessaryParentheses","tnDesc":"Unnecessary use of grouping parentheses","tnFile":"redisson-spring-data/redisson-spring-data-17/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":330,"tnColumn":64,"tnPatch":null,"tnCodeLine":"        RFuture<Set<byte[]>> f = (RFuture<Set<byte[]>>)(Object)(executorService.readAllAsync(results, ByteArrayCodec.INSTANCE, KEYS, pattern));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson/src/main/java/org/redisson/connection/pool/ConnectionPool.java","tnLine":337,"tnColumn":28,"tnPatch":null,"tnCodeLine":"            conn.closeAsync();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"UndefinedEquals","tnDesc":"CharSequence does not have well-defined equals behavior.","tnFile":"redisson/src/main/java/org/redisson/pubsub/PubSubConnectionEntry.java","tnLine":230,"tnColumn":70,"tnPatch":null,"tnCodeLine":"                if (type == PubSubType.PUNSUBSCRIBE && channel.equals(ch)) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedisClusterNodeDecoder.java","tnLine":50,"tnColumn":46,"tnPatch":null,"tnCodeLine":"        for (String nodeInfo : response.split(\"\\n\")) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"EqualsGetClass","tnDesc":"Overriding Object#equals in a non-final class by using getClass rather than instanceof breaks substitutability of subclasses.","tnFile":"redisson/src/main/java/org/redisson/client/protocol/Time.java","tnLine":52,"tnColumn":20,"tnPatch":null,"tnCodeLine":"    public boolean equals(Object obj) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson/src/main/java/org/redisson/client/handler/ConnectionWatchdog.java","tnLine":122,"tnColumn":42,"tnPatch":null,"tnCodeLine":"                            channel.close();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson/src/main/java/org/redisson/client/RedisClient.java","tnLine":310,"tnColumn":44,"tnPatch":null,"tnCodeLine":"        shutdownAsync().syncUninterruptibly();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ArrayAsKeyOfSetOrMap","tnDesc":"Arrays do not override equals() or hashCode, so comparisons will be done on reference equality only. If neither deduplication nor lookup are needed, consider using a List instead. Otherwise, use IdentityHashMap/Set, a Map from a library that handles object arrays, or an Iterable/List of pairs.","tnFile":"redisson-spring-data/redisson-spring-data-18/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":338,"tnColumn":31,"tnPatch":null,"tnCodeLine":"        Set<byte[]> results = new HashSet<byte[]>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonReactiveScriptingCommands.java","tnLine":92,"tnColumn":63,"tnPatch":null,"tnCodeLine":"                        this.result.set(i, this.result.get(i) | result.get(i));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StaticGuardedByInstance","tnDesc":"Write to static variable should not be guarded by instance lock 'pipeline'","tnFile":"redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/RedissonSessionManager.java","tnLine":284,"tnColumn":21,"tnPatch":null,"tnCodeLine":"                    updateValve = new UpdateValve();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson/src/main/java/org/redisson/connection/MasterSlaveEntry.java","tnLine":430,"tnColumn":58,"tnPatch":null,"tnCodeLine":"                    masterEntry.getClient().shutdownAsync();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson-spring-data/redisson-spring-data-18/src/main/java/org/redisson/spring/data/connection/RedissonSubscription.java","tnLine":100,"tnColumn":41,"tnPatch":null,"tnCodeLine":"            subscribeService.unsubscribe(new ChannelName(pattern), PubSubType.PUNSUBSCRIBE);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson-spring-data/redisson-spring-data-16/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":293,"tnColumn":30,"tnPatch":null,"tnCodeLine":"                es.writeAsync(entry.getKey(), null, command, key);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson/src/main/java/org/redisson/connection/pool/ConnectionPool.java","tnLine":390,"tnColumn":41,"tnPatch":null,"tnCodeLine":"                            c.closeAsync();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"TypeParameterUnusedInFormals","tnDesc":"Declaring a type parameter that is only used in the return type is a misuse of generics: operations on the type parameter are unchecked, it hides unsafe casts at invocations of the method, and it interacts badly with method overload resolution.","tnFile":"redisson-spring-data/redisson-spring-data-17/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":814,"tnColumn":11,"tnPatch":null,"tnCodeLine":"    <T> T read(byte[] key, Codec codec, RedisCommand<?> command, Object... params) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StaticGuardedByInstance","tnDesc":"Write to static variable should not be guarded by instance lock 'pipeline'","tnFile":"redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/RedissonSessionManager.java","tnLine":262,"tnColumn":21,"tnPatch":null,"tnCodeLine":"                    updateValve = new UpdateValve();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ReferenceEquality","tnDesc":"Comparison using reference equality instead of value equality","tnFile":"redisson/src/main/java/org/redisson/api/StreamMessageId.java","tnLine":116,"tnColumn":18,"tnPatch":null,"tnCodeLine":"        if (this == NEVER_DELIVERED) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson/src/main/java/org/redisson/connection/MasterSlaveEntry.java","tnLine":453,"tnColumn":48,"tnPatch":null,"tnCodeLine":"            oldMaster.getClient().shutdownAsync();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ArrayAsKeyOfSetOrMap","tnDesc":"Arrays do not override equals() or hashCode, so comparisons will be done on reference equality only. If neither deduplication nor lookup are needed, consider using a List instead. Otherwise, use IdentityHashMap/Set, a Map from a library that handles object arrays, or an Iterable/List of pairs.","tnFile":"redisson-spring-data/redisson-spring-data-17/src/main/java/org/redisson/spring/data/connection/RedissonClusterConnection.java","tnLine":321,"tnColumn":30,"tnPatch":null,"tnCodeLine":"        Set<byte[]> result = new HashSet<byte[]>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson/src/main/java/org/redisson/connection/pool/ConnectionPool.java","tnLine":414,"tnColumn":49,"tnPatch":null,"tnCodeLine":"                                    c.closeAsync();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedisClusterNodeDecoder.java","tnLine":50,"tnColumn":46,"tnPatch":null,"tnCodeLine":"        for (String nodeInfo : response.split(\"\\n\")) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StaticGuardedByInstance","tnDesc":"Write to static variable should not be guarded by instance lock 'pipeline'","tnFile":"redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/RedissonSessionManager.java","tnLine":371,"tnColumn":21,"tnPatch":null,"tnCodeLine":"                    updateValve = null;","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson/src/main/java/org/redisson/connection/balancer/LoadBalancerManager.java","tnLine":140,"tnColumn":53,"tnPatch":null,"tnCodeLine":"                pubSubConnectionPool.initConnections(entry);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson/src/main/java/org/redisson/client/RedisConnection.java","tnLine":256,"tnColumn":26,"tnPatch":null,"tnCodeLine":"            channel.close();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"TypeParameterUnusedInFormals","tnDesc":"Declaring a type parameter that is only used in the return type is a misuse of generics: operations on the type parameter are unchecked, it hides unsafe casts at invocations of the method, and it interacts badly with method overload resolution.","tnFile":"redisson-spring-data/redisson-spring-data-18/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":1973,"tnColumn":18,"tnPatch":null,"tnCodeLine":"    public <T> T evalSha(byte[] scriptSha, ReturnType returnType, int numKeys, byte[]... keysAndArgs) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"redisson-spring-data/redisson-spring-data-17/src/main/java/org/redisson/spring/data/connection/RedisClusterNodeDecoder.java","tnLine":85,"tnColumn":49,"tnPatch":null,"tnCodeLine":"                    String[] parts = slots.split(\"-\");","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"redisson-spring-data/redisson-spring-data-16/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":1847,"tnColumn":59,"tnPatch":null,"tnCodeLine":"                    this.result.set(i, this.result.get(i) | result.get(i));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"TypeParameterUnusedInFormals","tnDesc":"Declaring a type parameter that is only used in the return type is a misuse of generics: operations on the type parameter are unchecked, it hides unsafe casts at invocations of the method, and it interacts badly with method overload resolution.","tnFile":"redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":1974,"tnColumn":18,"tnPatch":null,"tnCodeLine":"    public <T> T evalSha(String scriptSha, ReturnType returnType, int numKeys, byte[]... keysAndArgs) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"Finally","tnDesc":"If you return or throw from a finally, then values returned or thrown from the try-catch block will be ignored. Consider using try-with-resources instead.","tnFile":"redisson-hibernate/redisson-hibernate-4/src/main/java/org/redisson/hibernate/JndiRedissonRegionFactory.java","tnLine":60,"tnColumn":21,"tnPatch":null,"tnCodeLine":"                    throw new CacheException(\"Unable to close JNDI context\", e);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"MissingOverride","tnDesc":"contains implements method in List; expected @Override","tnFile":"redisson/src/main/java/org/redisson/api/BatchResult.java","tnLine":77,"tnColumn":20,"tnPatch":null,"tnCodeLine":"    public boolean contains(Object o) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson/src/main/java/org/redisson/connection/pool/ConnectionPool.java","tnLine":127,"tnColumn":48,"tnPatch":null,"tnCodeLine":"                                conn.closeAsync();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"Finally","tnDesc":"If you return or throw from a finally, then values returned or thrown from the try-catch block will be ignored. Consider using try-with-resources instead.","tnFile":"redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/JndiRedissonSessionManager.java","tnLine":55,"tnColumn":21,"tnPatch":null,"tnCodeLine":"                    throw new LifecycleException(\"Unable to close JNDI context\", e);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson/src/main/java/org/redisson/client/handler/ConnectionWatchdog.java","tnLine":132,"tnColumn":50,"tnPatch":null,"tnCodeLine":"                                    channel.close();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ArrayAsKeyOfSetOrMap","tnDesc":"Arrays do not override equals() or hashCode, so comparisons will be done on reference equality only. If neither deduplication nor lookup are needed, consider using a List instead. Otherwise, use IdentityHashMap/Set, a Map from a library that handles object arrays, or an Iterable/List of pairs.","tnFile":"redisson-spring-data/redisson-spring-data-18/src/main/java/org/redisson/spring/data/connection/RedissonClusterConnection.java","tnLine":321,"tnColumn":30,"tnPatch":null,"tnCodeLine":"        Set<byte[]> result = new HashSet<byte[]>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ArrayAsKeyOfSetOrMap","tnDesc":"Arrays do not override equals() or hashCode, so comparisons will be done on reference equality only. If neither deduplication nor lookup are needed, consider using a List instead. Otherwise, use IdentityHashMap/Set, a Map from a library that handles object arrays, or an Iterable/List of pairs.","tnFile":"redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":338,"tnColumn":31,"tnPatch":null,"tnCodeLine":"        Set<byte[]> results = new HashSet<byte[]>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"redisson-spring-data/redisson-spring-data-18/src/main/java/org/redisson/spring/data/connection/PropertiesDecoder.java","tnLine":38,"tnColumn":41,"tnPatch":null,"tnCodeLine":"            String[] parts = entry.split(\":\");","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ArrayAsKeyOfSetOrMap","tnDesc":"Arrays do not override equals() or hashCode, so comparisons will be done on reference equality only. If neither deduplication nor lookup are needed, consider using a List instead. Otherwise, use IdentityHashMap/Set, a Map from a library that handles object arrays, or an Iterable/List of pairs.","tnFile":"redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonClusterConnection.java","tnLine":327,"tnColumn":30,"tnPatch":null,"tnCodeLine":"        Set<byte[]> result = new HashSet<byte[]>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"TypeParameterUnusedInFormals","tnDesc":"Declaring a type parameter that is only used in the return type is a misuse of generics: operations on the type parameter are unchecked, it hides unsafe casts at invocations of the method, and it interacts badly with method overload resolution.","tnFile":"redisson/src/main/java/org/redisson/api/RScript.java","tnLine":66,"tnColumn":11,"tnPatch":null,"tnCodeLine":"    <R> R evalSha(Mode mode, String shaDigest, ReturnType returnType, List<Object> keys, Object... values);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":307,"tnColumn":30,"tnPatch":null,"tnCodeLine":"                es.writeAsync(entry.getKey(), null, command, key);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"EqualsGetClass","tnDesc":"Overriding Object#equals in a non-final class by using getClass rather than instanceof breaks substitutability of subclasses.","tnFile":"redisson/src/main/java/org/redisson/api/StreamMessageId.java","tnLine":99,"tnColumn":20,"tnPatch":null,"tnCodeLine":"    public boolean equals(Object obj) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"ShortCircuitBoolean","tnDesc":"Prefer the short-circuiting boolean operators && and || to & and |.","tnFile":"redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":1923,"tnColumn":59,"tnPatch":null,"tnCodeLine":"                    this.result.set(i, this.result.get(i) | result.get(i));","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"redisson-spring-data/redisson-spring-data-17/src/main/java/org/redisson/spring/data/connection/RedisClusterNodeDecoder.java","tnLine":64,"tnColumn":46,"tnPatch":null,"tnCodeLine":"                String addr = params[1].split(\"@\")[0];","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson/src/main/java/org/redisson/client/RedisClient.java","tnLine":323,"tnColumn":35,"tnPatch":null,"tnCodeLine":"        channelsFuture.addListener(new FutureListener<Void>() {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonSubscription.java","tnLine":100,"tnColumn":41,"tnPatch":null,"tnCodeLine":"            subscribeService.unsubscribe(new ChannelName(pattern), PubSubType.PUNSUBSCRIBE);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonSubscription.java","tnLine":73,"tnColumn":41,"tnPatch":null,"tnCodeLine":"            subscribeService.unsubscribe(new ChannelName(channel), PubSubType.UNSUBSCRIBE);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"JdkObsolete","tnDesc":"It is very rare for LinkedList to out-perform ArrayList or ArrayDeque. Avoid it unless you're willing to invest a lot of time into benchmarking. Caveat: LinkedList supports null elements, but ArrayDeque does not.","tnFile":"redisson/src/main/java/org/redisson/connection/pool/ConnectionPool.java","tnLine":202,"tnColumn":43,"tnPatch":null,"tnCodeLine":"        List<InetSocketAddress> freezed = new LinkedList<InetSocketAddress>();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"redisson-spring-data/redisson-spring-data-17/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":194,"tnColumn":53,"tnPatch":null,"tnCodeLine":"                        return ((String) t).getBytes();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonReactiveKeyCommands.java","tnLine":110,"tnColumn":89,"tnPatch":null,"tnCodeLine":"                List<ByteBuffer> values = v.stream().map(t -> ByteBuffer.wrap(t.getBytes())).collect(Collectors.toList());","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson/src/main/java/org/redisson/client/RedisClient.java","tnLine":286,"tnColumn":57,"tnPatch":null,"tnCodeLine":"                                            c.closeAsync();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson/src/main/java/org/redisson/connection/pool/ConnectionPool.java","tnLine":140,"tnColumn":58,"tnPatch":null,"tnCodeLine":"                                    connection.closeAsync();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"redisson-spring-data/redisson-spring-data-18/src/main/java/org/redisson/spring/data/connection/RedisClusterNodeDecoder.java","tnLine":50,"tnColumn":46,"tnPatch":null,"tnCodeLine":"        for (String nodeInfo : response.split(\"\\n\")) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson-spring-data/redisson-spring-data-16/src/main/java/org/redisson/spring/data/connection/RedissonSubscription.java","tnLine":100,"tnColumn":41,"tnPatch":null,"tnCodeLine":"            subscribeService.unsubscribe(new ChannelName(pattern), PubSubType.PUNSUBSCRIBE);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"FutureReturnValueIgnored","tnDesc":"Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.","tnFile":"redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonConnectionFactory.java","tnLine":134,"tnColumn":38,"tnPatch":null,"tnCodeLine":"                connection.closeAsync();","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"DefaultCharset","tnDesc":"Implicit use of the platform default charset, which can result in differing behaviour between JVM executions or incorrect behavior if the encoding of the data source doesn't match expectations.","tnFile":"redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":1620,"tnColumn":56,"tnPatch":null,"tnCodeLine":"                iterator.set(((String) object).getBytes());","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"StringSplitter","tnDesc":"String.split(String) has surprising behavior","tnFile":"redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/PropertiesDecoder.java","tnLine":37,"tnColumn":40,"tnPatch":null,"tnCodeLine":"        for (String entry : value.split(\"\\r\\n|\\n\")) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"TypeParameterUnusedInFormals","tnDesc":"Declaring a type parameter that is only used in the return type is a misuse of generics: operations on the type parameter are unchecked, it hides unsafe casts at invocations of the method, and it interacts badly with method overload resolution.","tnFile":"redisson-spring-data/redisson-spring-data-17/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java","tnLine":1937,"tnColumn":18,"tnPatch":null,"tnCodeLine":"    public <T> T evalSha(String scriptSha, ReturnType returnType, int numKeys, byte[]... keysAndArgs) {","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}},{"tnType":"Finally","tnDesc":"If you return or throw from a finally, then values returned or thrown from the try-catch block will be ignored. Consider using try-with-resources instead.","tnFile":"redisson-hibernate/redisson-hibernate-53/src/main/java/org/redisson/hibernate/JndiRedissonRegionFactory.java","tnLine":61,"tnColumn":21,"tnPatch":null,"tnCodeLine":"                    throw new CacheException(\"Unable to close JNDI context\", e);","tnProcedure":null,"tnPhase":"PhaseUnknown","tnTool":{"tag":"ErrorProne_JDK8"}}],null,{"analysisLOC":null,"analysisBuildSys":"Maven []","analysisLang":null}]}]],"debugLog":"/.m2/repository/org/hamcrest/hamcrest-library/1.3/hamcrest-library-1.3.jar\\\",\\\"/root/.m2/repository/redis/clients/jedis/2.9.0/jedis-2.9.0.jar\\\",\\\"/root/.m2/repository/io/netty/netty-handler/4.1.36.Final/netty-handler-4.1.36.Final.jar\\\",\\\"/root/.m2/repository/org/objenesis/objenesis/2.6/objenesis-2.6.jar\\\",\\\"/root/.m2/repository/io/lettuce/lettuce-core/5.1.3.RELEASE/lettuce-core-5.1.3.RELEASE.jar\\\",\\\"/root/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.9.9/jackson-dataformat-yaml-2.9.9.jar\\\",\\\"/root/.m2/repository/org/springframework/data/spring-data-keyvalue/1.2.14.RELEASE/spring-data-keyvalue-1.2.14.RELEASE.jar\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson/target/redisson-3.11.2-SNAPSHOT.jar\\\",\\\"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-core/5.1.8.RELEASE/spring-core-5.1.8.RELEASE.jar\\\",\\\"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.9.9/jackson-core-2.9.9.jar\\\",\\\"/root/.m2/repository/org/projectlombok/lombok/1.18.4/lombok-1.18.4.jar\\\"],\\\"output_dir\\\":\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-18/target/classes\\\",\\\"jdk\\\":\\\"JDK1.8\\\"},{\\\"arguments\\\":[],\\\"files\\\":[\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonReactiveClusterKeyCommands.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonReactiveClusterGeoCommands.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonSentinelConnection.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/GeoResultsDecoder.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonClusterConnection.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonReactiveClusterNumberCommands.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonReactiveClusterHyperLogLogCommands.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonReactiveRedisConnection.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/SecondsConvertor.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/SetReplayDecoder.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/ByteBufferGeoResultsDecoder.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/GeoResultsDistanceDecoder.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/DistanceConvertor.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonReactiveStringCommands.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonReactiveClusterListCommands.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/ScoredSortedListReplayDecoder.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonExceptionConverter.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/ObjectListReplayDecoder2.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonReactiveKeyCommands.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonReactiveClusterSetCommands.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonReactiveHyperLogLogCommands.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonReactiveServerCommands.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonReactiveClusterHashCommands.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/PointDecoder.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/ScoredSortedSetReplayDecoder.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonReactiveZSetCommands.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/DataTypeConvertor.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/PropertiesDecoder.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonReactiveSetCommands.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonReactiveRedisClusterConnection.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonConnectionFactory.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonReactiveNumberCommands.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonReactiveScriptingCommands.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonReactiveClusterStringCommands.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/PropertiesListDecoder.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedisClusterNodeDecoder.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/BinaryConvertor.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonReactiveClusterServerCommands.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonReactiveGeoCommands.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonReactiveListCommands.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonBaseReactive.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonSubscription.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonReactiveClusterZSetCommands.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonReactiveHashCommands.java\\\"],\\\"classpath\\\":[\\\"/root/.m2/repository/org/springframework/data/spring-data-keyvalue/2.0.9.RELEASE/spring-data-keyvalue-2.0.9.RELEASE.jar\\\",\\\"/root/.m2/repository/org/reactivestreams/reactive-streams/1.0.2/reactive-streams-1.0.2.jar\\\",\\\"/root/.m2/repository/org/mockito/mockito-core/2.23.4/mockito-core-2.23.4.jar\\\",\\\"/root/.m2/repository/io/netty/netty-buffer/4.1.36.Final/netty-buffer-4.1.36.Final.jar\\\",\\\"/root/.m2/repository/org/assertj/assertj-core/3.10.0/assertj-core-3.10.0.jar\\\",\\\"/root/.m2/repository/io/projectreactor/reactor-test/3.2.3.RELEASE/reactor-test-3.2.3.RELEASE.jar\\\",\\\"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0.jar\\\",\\\"/root/.m2/repository/javax/cache/cache-api/1.0.0/cache-api-1.0.0.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-expression/5.0.8.RELEASE/spring-expression-5.0.8.RELEASE.jar\\\",\\\"/root/.m2/repository/io/netty/netty-codec-dns/4.1.36.Final/netty-codec-dns-4.1.36.Final.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-oxm/5.0.8.RELEASE/spring-oxm-5.0.8.RELEASE.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-jcl/5.1.8.RELEASE/spring-jcl-5.1.8.RELEASE.jar\\\",\\\"/root/.m2/repository/org/apache/commons/commons-pool2/2.4.2/commons-pool2-2.4.2.jar\\\",\\\"/root/.m2/repository/io/netty/netty-resolver-dns/4.1.36.Final/netty-resolver-dns-4.1.36.Final.jar\\\",\\\"/root/.m2/repository/io/netty/netty-transport/4.1.36.Final/netty-transport-4.1.36.Final.jar\\\",\\\"/root/.m2/repository/org/awaitility/awaitility/3.1.0/awaitility-3.1.0.jar\\\",\\\"/root/.m2/repository/de/ruedigermoeller/fst/2.57/fst-2.57.jar\\\",\\\"/root/.m2/repository/org/javassist/javassist/3.21.0-GA/javassist-3.21.0-GA.jar\\\",\\\"/root/.m2/repository/org/jodd/jodd-bean/5.0.10/jodd-bean-5.0.10.jar\\\",\\\"/root/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar\\\",\\\"/root/.m2/repository/io/reactivex/rxjava2/rxjava/2.2.7/rxjava-2.2.7.jar\\\",\\\"/root/.m2/repository/io/projectreactor/reactor-core/3.2.6.RELEASE/reactor-core-3.2.6.RELEASE.jar\\\",\\\"/root/.m2/repository/org/jodd/jodd-core/5.0.10/jodd-core-5.0.10.jar\\\",\\\"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.9.9/jackson-databind-2.9.9.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-test/5.1.8.RELEASE/spring-test-5.1.8.RELEASE.jar\\\",\\\"/root/.m2/repository/org/springframework/data/spring-data-redis/2.0.9.RELEASE/spring-data-redis-2.0.9.RELEASE.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-aop/5.0.8.RELEASE/spring-aop-5.0.8.RELEASE.jar\\\",\\\"/root/.m2/repository/org/yaml/snakeyaml/1.23/snakeyaml-1.23.jar\\\",\\\"/root/.m2/repository/net/bytebuddy/byte-buddy/1.9.10/byte-buddy-1.9.10.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-tx/5.0.8.RELEASE/spring-tx-5.0.8.RELEASE.jar\\\",\\\"/root/.m2/repository/org/springframework/data/spring-data-commons/2.0.9.RELEASE/spring-data-commons-2.0.9.RELEASE.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-context-support/5.0.8.RELEASE/spring-context-support-5.0.8.RELEASE.jar\\\",\\\"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar\\\",\\\"/root/.m2/repository/io/netty/netty-resolver/4.1.36.Final/netty-resolver-4.1.36.Final.jar\\\",\\\"/root/.m2/repository/io/netty/netty-codec/4.1.36.Final/netty-codec-4.1.36.Final.jar\\\",\\\"/root/.m2/repository/io/netty/netty-common/4.1.36.Final/netty-common-4.1.36.Final.jar\\\",\\\"/root/.m2/repository/net/bytebuddy/byte-buddy-agent/1.9.3/byte-buddy-agent-1.9.3.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-beans/5.0.8.RELEASE/spring-beans-5.0.8.RELEASE.jar\\\",\\\"/root/.m2/repository/org/hamcrest/hamcrest-library/1.3/hamcrest-library-1.3.jar\\\",\\\"/root/.m2/repository/redis/clients/jedis/2.9.0/jedis-2.9.0.jar\\\",\\\"/root/.m2/repository/io/netty/netty-handler/4.1.36.Final/netty-handler-4.1.36.Final.jar\\\",\\\"/root/.m2/repository/org/objenesis/objenesis/2.6/objenesis-2.6.jar\\\",\\\"/root/.m2/repository/io/lettuce/lettuce-core/5.1.3.RELEASE/lettuce-core-5.1.3.RELEASE.jar\\\",\\\"/root/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.9.9/jackson-dataformat-yaml-2.9.9.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-context/5.0.8.RELEASE/spring-context-5.0.8.RELEASE.jar\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson/target/redisson-3.11.2-SNAPSHOT.jar\\\",\\\"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-core/5.1.8.RELEASE/spring-core-5.1.8.RELEASE.jar\\\",\\\"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.9.9/jackson-core-2.9.9.jar\\\",\\\"/root/.m2/repository/org/projectlombok/lombok/1.18.4/lombok-1.18.4.jar\\\"],\\\"output_dir\\\":\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-20/target/classes\\\",\\\"jdk\\\":\\\"JDK1.8\\\"},{\\\"arguments\\\":[],\\\"files\\\":[\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonReactiveScriptingCommands.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonSentinelConnection.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonReactiveRedisConnection.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/DistanceConvertor.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonSubscription.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonBaseReactive.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonReactiveClusterZSetCommands.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonReactiveSetCommands.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonReactiveClusterSetCommands.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonReactiveStringCommands.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/GeoResultsDistanceDecoder.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonReactiveHashCommands.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonReactivePubSubCommands.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonReactiveClusterHyperLogLogCommands.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonReactiveZSetCommands.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonReactiveHyperLogLogCommands.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonReactiveRedisClusterConnection.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonReactiveClusterServerCommands.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonReactiveGeoCommands.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonReactiveSubscription.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/ScoredSortedListReplayDecoder.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/PropertiesListDecoder.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonReactiveClusterStringCommands.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonReactiveClusterHashCommands.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedisClusterNodeDecoder.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/ObjectListReplayDecoder2.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonReactiveListCommands.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/SetReplayDecoder.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonExceptionConverter.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonReactiveServerCommands.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/GeoResultsDecoder.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/BinaryConvertor.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonReactiveClusterKeyCommands.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonReactiveClusterListCommands.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/SecondsConvertor.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonReactiveClusterNumberCommands.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonReactiveClusterGeoCommands.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/PointDecoder.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/DataTypeConvertor.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/PropertiesDecoder.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonReactiveKeyCommands.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonReactiveNumberCommands.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonConnectionFactory.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonClusterConnection.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/ScoredSortedSetReplayDecoder.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/ByteBufferGeoResultsDecoder.java\\\"],\\\"classpath\\\":[\\\"/root/.m2/repository/org/reactivestreams/reactive-streams/1.0.2/reactive-streams-1.0.2.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-context-support/5.1.2.RELEASE/spring-context-support-5.1.2.RELEASE.jar\\\",\\\"/root/.m2/repository/org/mockito/mockito-core/2.23.4/mockito-core-2.23.4.jar\\\",\\\"/root/.m2/repository/io/netty/netty-buffer/4.1.36.Final/netty-buffer-4.1.36.Final.jar\\\",\\\"/root/.m2/repository/org/assertj/assertj-core/3.10.0/assertj-core-3.10.0.jar\\\",\\\"/root/.m2/repository/io/projectreactor/reactor-test/3.2.3.RELEASE/reactor-test-3.2.3.RELEASE.jar\\\",\\\"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0.jar\\\",\\\"/root/.m2/repository/javax/cache/cache-api/1.0.0/cache-api-1.0.0.jar\\\",\\\"/root/.m2/repository/io/netty/netty-codec-dns/4.1.36.Final/netty-codec-dns-4.1.36.Final.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-jcl/5.1.8.RELEASE/spring-jcl-5.1.8.RELEASE.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-expression/5.1.2.RELEASE/spring-expression-5.1.2.RELEASE.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-oxm/5.1.2.RELEASE/spring-oxm-5.1.2.RELEASE.jar\\\",\\\"/root/.m2/repository/org/apache/commons/commons-pool2/2.4.2/commons-pool2-2.4.2.jar\\\",\\\"/root/.m2/repository/io/netty/netty-resolver-dns/4.1.36.Final/netty-resolver-dns-4.1.36.Final.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-tx/5.1.2.RELEASE/spring-tx-5.1.2.RELEASE.jar\\\",\\\"/root/.m2/repository/io/netty/netty-transport/4.1.36.Final/netty-transport-4.1.36.Final.jar\\\",\\\"/root/.m2/repository/org/awaitility/awaitility/3.1.0/awaitility-3.1.0.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-aop/5.1.2.RELEASE/spring-aop-5.1.2.RELEASE.jar\\\",\\\"/root/.m2/repository/de/ruedigermoeller/fst/2.57/fst-2.57.jar\\\",\\\"/root/.m2/repository/org/javassist/javassist/3.21.0-GA/javassist-3.21.0-GA.jar\\\",\\\"/root/.m2/repository/org/jodd/jodd-bean/5.0.10/jodd-bean-5.0.10.jar\\\",\\\"/root/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar\\\",\\\"/root/.m2/repository/io/reactivex/rxjava2/rxjava/2.2.7/rxjava-2.2.7.jar\\\",\\\"/root/.m2/repository/io/projectreactor/reactor-core/3.2.6.RELEASE/reactor-core-3.2.6.RELEASE.jar\\\",\\\"/root/.m2/repository/org/jodd/jodd-core/5.0.10/jodd-core-5.0.10.jar\\\",\\\"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.9.9/jackson-databind-2.9.9.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-context/5.1.2.RELEASE/spring-context-5.1.2.RELEASE.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-beans/5.1.2.RELEASE/spring-beans-5.1.2.RELEASE.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-test/5.1.8.RELEASE/spring-test-5.1.8.RELEASE.jar\\\",\\\"/root/.m2/repository/org/springframework/data/spring-data-commons/2.1.2.RELEASE/spring-data-commons-2.1.2.RELEASE.jar\\\",\\\"/root/.m2/repository/org/yaml/snakeyaml/1.23/snakeyaml-1.23.jar\\\",\\\"/root/.m2/repository/net/bytebuddy/byte-buddy/1.9.10/byte-buddy-1.9.10.jar\\\",\\\"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar\\\",\\\"/root/.m2/repository/io/netty/netty-resolver/4.1.36.Final/netty-resolver-4.1.36.Final.jar\\\",\\\"/root/.m2/repository/io/netty/netty-codec/4.1.36.Final/netty-codec-4.1.36.Final.jar\\\",\\\"/root/.m2/repository/io/netty/netty-common/4.1.36.Final/netty-common-4.1.36.Final.jar\\\",\\\"/root/.m2/repository/net/bytebuddy/byte-buddy-agent/1.9.3/byte-buddy-agent-1.9.3.jar\\\",\\\"/root/.m2/repository/org/hamcrest/hamcrest-library/1.3/hamcrest-library-1.3.jar\\\",\\\"/root/.m2/repository/redis/clients/jedis/2.9.0/jedis-2.9.0.jar\\\",\\\"/root/.m2/repository/io/netty/netty-handler/4.1.36.Final/netty-handler-4.1.36.Final.jar\\\",\\\"/root/.m2/repository/org/objenesis/objenesis/2.6/objenesis-2.6.jar\\\",\\\"/root/.m2/repository/io/lettuce/lettuce-core/5.1.3.RELEASE/lettuce-core-5.1.3.RELEASE.jar\\\",\\\"/root/.m2/repository/org/springframework/data/spring-data-redis/2.1.2.RELEASE/spring-data-redis-2.1.2.RELEASE.jar\\\",\\\"/root/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.9.9/jackson-dataformat-yaml-2.9.9.jar\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson/target/redisson-3.11.2-SNAPSHOT.jar\\\",\\\"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-core/5.1.8.RELEASE/spring-core-5.1.8.RELEASE.jar\\\",\\\"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.9.9/jackson-core-2.9.9.jar\\\",\\\"/root/.m2/repository/org/springframework/data/spring-data-keyvalue/2.1.2.RELEASE/spring-data-keyvalue-2.1.2.RELEASE.jar\\\",\\\"/root/.m2/repository/org/projectlombok/lombok/1.18.4/lombok-1.18.4.jar\\\"],\\\"output_dir\\\":\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-21/target/classes\\\",\\\"jdk\\\":\\\"JDK1.8\\\"},{\\\"arguments\\\":[],\\\"files\\\":[\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-boot-starter/src/main/java/org/redisson/spring/starter/RedissonAutoConfiguration.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-boot-starter/src/main/java/org/redisson/spring/starter/RedissonProperties.java\\\"],\\\"classpath\\\":[\\\"/root/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.11.1/log4j-to-slf4j-2.11.1.jar\\\",\\\"/root/.m2/repository/org/reactivestreams/reactive-streams/1.0.2/reactive-streams-1.0.2.jar\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-data/redisson-spring-data-21/target/redisson-spring-data-21-3.11.2-SNAPSHOT.jar\\\",\\\"/root/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.13/tomcat-embed-websocket-9.0.13.jar\\\",\\\"/root/.m2/repository/org/mockito/mockito-core/2.23.4/mockito-core-2.23.4.jar\\\",\\\"/root/.m2/repository/org/assertj/assertj-core/3.10.0/assertj-core-3.10.0.jar\\\",\\\"/root/.m2/repository/org/skyscreamer/jsonassert/1.5.0/jsonassert-1.5.0.jar\\\",\\\"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0.jar\\\",\\\"/root/.m2/repository/org/ow2/asm/asm/5.0.4/asm-5.0.4.jar\\\",\\\"/root/.m2/repository/io/netty/netty-buffer/4.1.31.Final/netty-buffer-4.1.31.Final.jar\\\",\\\"/root/.m2/repository/org/slf4j/jul-to-slf4j/1.7.25/jul-to-slf4j-1.7.25.jar\\\",\\\"/root/.m2/repository/org/springframework/boot/spring-boot-starter-data-redis/2.1.1.RELEASE/spring-boot-starter-data-redis-2.1.1.RELEASE.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-context-support/5.1.3.RELEASE/spring-context-support-5.1.3.RELEASE.jar\\\",\\\"/root/.m2/repository/net/minidev/accessors-smart/1.2/accessors-smart-1.2.jar\\\",\\\"/root/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.1.1.RELEASE/spring-boot-starter-json-2.1.1.RELEASE.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-aop/5.1.3.RELEASE/spring-aop-5.1.3.RELEASE.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-jcl/5.1.3.RELEASE/spring-jcl-5.1.3.RELEASE.jar\\\",\\\"/root/.m2/repository/io/netty/netty-codec-dns/4.1.31.Final/netty-codec-dns-4.1.31.Final.jar\\\",\\\"/root/.m2/repository/io/netty/netty-common/4.1.31.Final/netty-common-4.1.31.Final.jar\\\",\\\"/root/.m2/repository/io/projectreactor/reactor-core/3.2.3.RELEASE/reactor-core-3.2.3.RELEASE.jar\\\",\\\"/root/.m2/repository/org/springframework/boot/spring-boot-test/2.1.1.RELEASE/spring-boot-test-2.1.1.RELEASE.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-test/5.1.3.RELEASE/spring-test-5.1.3.RELEASE.jar\\\",\\\"/root/.m2/repository/org/springframework/boot/spring-boot/2.1.1.RELEASE/spring-boot-2.1.1.RELEASE.jar\\\",\\\"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.9.7/jackson-core-2.9.7.jar\\\",\\\"/root/.m2/repository/com/jayway/jsonpath/json-path/2.4.0/json-path-2.4.0.jar\\\",\\\"/root/.m2/repository/io/netty/netty-resolver/4.1.31.Final/netty-resolver-4.1.31.Final.jar\\\",\\\"/root/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar\\\",\\\"/root/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.9.7/jackson-dataformat-yaml-2.9.7.jar\\\",\\\"/root/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/9.0.13/tomcat-embed-el-9.0.13.jar\\\",\\\"/root/.m2/repository/de/ruedigermoeller/fst/2.57/fst-2.57.jar\\\",\\\"/root/.m2/repository/org/javassist/javassist/3.21.0-GA/javassist-3.21.0-GA.jar\\\",\\\"/root/.m2/repository/org/jodd/jodd-bean/5.0.10/jodd-bean-5.0.10.jar\\\",\\\"/root/.m2/repository/org/latencyutils/LatencyUtils/2.0.3/LatencyUtils-2.0.3.jar\\\",\\\"/root/.m2/repository/org/springframework/data/spring-data-keyvalue/2.1.3.RELEASE/spring-data-keyvalue-2.1.3.RELEASE.jar\\\",\\\"/root/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-context/5.1.3.RELEASE/spring-context-5.1.3.RELEASE.jar\\\",\\\"/root/.m2/repository/org/jodd/jodd-core/5.0.10/jodd-core-5.0.10.jar\\\",\\\"/root/.m2/repository/net/minidev/json-smart/2.3/json-smart-2.3.jar\\\",\\\"/root/.m2/repository/ch/qos/logback/logback-core/1.2.3/logback-core-1.2.3.jar\\\",\\\"/root/.m2/repository/javax/validation/validation-api/2.0.1.Final/validation-api-2.0.1.Final.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-beans/5.1.3.RELEASE/spring-beans-5.1.3.RELEASE.jar\\\",\\\"/root/.m2/repository/org/springframework/boot/spring-boot-starter-logging/2.1.1.RELEASE/spring-boot-starter-logging-2.1.1.RELEASE.jar\\\",\\\"/root/.m2/repository/ch/qos/logback/logback-classic/1.2.3/logback-classic-1.2.3.jar\\\",\\\"/root/.m2/repository/org/hdrhistogram/HdrHistogram/2.1.9/HdrHistogram-2.1.9.jar\\\",\\\"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.9.7/jackson-databind-2.9.7.jar\\\",\\\"/root/.m2/repository/net/bytebuddy/byte-buddy/1.9.5/byte-buddy-1.9.5.jar\\\",\\\"/root/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.1.1.RELEASE/spring-boot-starter-tomcat-2.1.1.RELEASE.jar\\\",\\\"/root/.m2/repository/com/fasterxml/classmate/1.4.0/classmate-1.4.0.jar\\\",\\\"/root/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.13/tomcat-embed-core-9.0.13.jar\\\",\\\"/root/.m2/repository/org/yaml/snakeyaml/1.23/snakeyaml-1.23.jar\\\",\\\"/root/.m2/repository/io/netty/netty-codec/4.1.31.Final/netty-codec-4.1.31.Final.jar\\\",\\\"/root/.m2/repository/org/springframework/data/spring-data-redis/2.1.3.RELEASE/spring-data-redis-2.1.3.RELEASE.jar\\\",\\\"/root/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/2.1.1.RELEASE/spring-boot-test-autoconfigure-2.1.1.RELEASE.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-expression/5.1.3.RELEASE/spring-expression-5.1.3.RELEASE.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-tx/5.1.3.RELEASE/spring-tx-5.1.3.RELEASE.jar\\\",\\\"/root/.m2/repository/org/xmlunit/xmlunit-core/2.6.2/xmlunit-core-2.6.2.jar\\\",\\\"/root/.m2/repository/io/netty/netty-resolver-dns/4.1.31.Final/netty-resolver-dns-4.1.31.Final.jar\\\",\\\"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar\\\",\\\"/root/.m2/repository/io/netty/netty-transport/4.1.31.Final/netty-transport-4.1.31.Final.jar\\\",\\\"/root/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.9.7/jackson-datatype-jsr310-2.9.7.jar\\\",\\\"/root/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-oxm/5.1.3.RELEASE/spring-oxm-5.1.3.RELEASE.jar\\\",\\\"/root/.m2/repository/io/micrometer/micrometer-core/1.1.1/micrometer-core-1.1.1.jar\\\",\\\"/root/.m2/repository/net/bytebuddy/byte-buddy-agent/1.9.5/byte-buddy-agent-1.9.5.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-core/5.1.3.RELEASE/spring-core-5.1.3.RELEASE.jar\\\",\\\"/root/.m2/repository/javax/annotation/javax.annotation-api/1.3.2/javax.annotation-api-1.3.2.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-web/5.1.3.RELEASE/spring-web-5.1.3.RELEASE.jar\\\",\\\"/root/.m2/repository/io/netty/netty-handler/4.1.31.Final/netty-handler-4.1.31.Final.jar\\\",\\\"/root/.m2/repository/org/objenesis/objenesis/2.5.1/objenesis-2.5.1.jar\\\",\\\"/root/.m2/repository/org/hibernate/validator/hibernate-validator/6.0.13.Final/hibernate-validator-6.0.13.Final.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-webmvc/5.1.3.RELEASE/spring-webmvc-5.1.3.RELEASE.jar\\\",\\\"/root/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.1.1.RELEASE/spring-boot-starter-web-2.1.1.RELEASE.jar\\\",\\\"/root/.m2/repository/org/apache/logging/log4j/log4j-api/2.11.1/log4j-api-2.11.1.jar\\\",\\\"/root/.m2/repository/org/hamcrest/hamcrest-library/1.3/hamcrest-library-1.3.jar\\\",\\\"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.9.7/jackson-module-parameter-names-2.9.7.jar\\\",\\\"/root/.m2/repository/org/springframework/boot/spring-boot-starter-actuator/2.1.1.RELEASE/spring-boot-starter-actuator-2.1.1.RELEASE.jar\\\",\\\"/root/.m2/repository/io/reactivex/rxjava2/rxjava/2.2.4/rxjava-2.2.4.jar\\\",\\\"/root/.m2/repository/javax/cache/cache-api/1.1.0/cache-api-1.1.0.jar\\\",\\\"/root/.m2/repository/org/springframework/boot/spring-boot-actuator/2.1.1.RELEASE/spring-boot-actuator-2.1.1.RELEASE.jar\\\",\\\"/root/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.9.7/jackson-datatype-jdk8-2.9.7.jar\\\",\\\"/root/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.1.1.RELEASE/spring-boot-autoconfigure-2.1.1.RELEASE.jar\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson/target/redisson-3.11.2-SNAPSHOT.jar\\\",\\\"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar\\\",\\\"/root/.m2/repository/org/springframework/boot/spring-boot-actuator-autoconfigure/2.1.1.RELEASE/spring-boot-actuator-autoconfigure-2.1.1.RELEASE.jar\\\",\\\"/root/.m2/repository/org/springframework/boot/spring-boot-starter-test/2.1.1.RELEASE/spring-boot-starter-test-2.1.1.RELEASE.jar\\\",\\\"/root/.m2/repository/org/springframework/boot/spring-boot-starter/2.1.1.RELEASE/spring-boot-starter-2.1.1.RELEASE.jar\\\",\\\"/root/.m2/repository/org/springframework/data/spring-data-commons/2.1.3.RELEASE/spring-data-commons-2.1.3.RELEASE.jar\\\"],\\\"output_dir\\\":\\\"/tmp/analyzing-b80da023458acc92/redisson-spring-boot-starter/target/classes\\\",\\\"jdk\\\":\\\"JDK1.8\\\"},{\\\"arguments\\\":[],\\\"files\\\":[\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-4/src/main/java/org/redisson/hibernate/region/RedissonCollectionRegion.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-4/src/main/java/org/redisson/hibernate/region/BaseRegion.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-4/src/main/java/org/redisson/hibernate/strategy/NonStrictReadWriteEntityRegionAccessStrategy.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-4/src/main/java/org/redisson/hibernate/strategy/TransactionalEntityRegionAccessStrategy.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-4/src/main/java/org/redisson/hibernate/RedissonStrategyRegistrationProvider.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-4/src/main/java/org/redisson/hibernate/region/RedissonEntityRegion.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-4/src/main/java/org/redisson/hibernate/JndiRedissonRegionFactory.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-4/src/main/java/org/redisson/hibernate/strategy/AbstractReadWriteAccessStrategy.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-4/src/main/java/org/redisson/hibernate/strategy/TransactionalNaturalIdRegionAccessStrategy.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-4/src/main/java/org/redisson/hibernate/strategy/ReadWriteEntityRegionAccessStrategy.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-4/src/main/java/org/redisson/hibernate/strategy/NonStrictReadWriteCollectionRegionAccessStrategy.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-4/src/main/java/org/redisson/hibernate/strategy/ReadOnlyEntityRegionAccessStrategy.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-4/src/main/java/org/redisson/hibernate/region/RedissonTimestampsRegion.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-4/src/main/java/org/redisson/hibernate/strategy/BaseRegionAccessStrategy.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-4/src/main/java/org/redisson/hibernate/strategy/TransactionalCollectionRegionAccessStrategy.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-4/src/main/java/org/redisson/hibernate/RedissonRegionFactory.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-4/src/main/java/org/redisson/hibernate/strategy/ReadWriteNaturalIdRegionAccessStrategy.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-4/src/main/java/org/redisson/hibernate/strategy/ReadWriteCollectionRegionAccessStrategy.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-4/src/main/java/org/redisson/hibernate/region/RedissonQueryRegion.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-4/src/main/java/org/redisson/hibernate/strategy/NonStrictReadWriteNaturalIdRegionAccessStrategy.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-4/src/main/java/org/redisson/hibernate/strategy/ReadOnlyCollectionRegionAccessStrategy.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-4/src/main/java/org/redisson/hibernate/strategy/ReadOnlyNaturalIdRegionAccessStrategy.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-4/src/main/java/org/redisson/hibernate/region/RedissonNaturalIdRegion.java\\\"],\\\"classpath\\\":[\\\"/root/.m2/repository/org/reactivestreams/reactive-streams/1.0.2/reactive-streams-1.0.2.jar\\\",\\\"/root/.m2/repository/com/h2database/h2/1.4.192/h2-1.4.192.jar\\\",\\\"/root/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar\\\",\\\"/root/.m2/repository/org/yaml/snakeyaml/1.23/snakeyaml-1.23.jar\\\",\\\"/root/.m2/repository/io/netty/netty-buffer/4.1.36.Final/netty-buffer-4.1.36.Final.jar\\\",\\\"/root/.m2/repository/org/jboss/byteman/byteman/2.1.2/byteman-2.1.2.jar\\\",\\\"/root/.m2/repository/net/bytebuddy/byte-buddy/1.9.10/byte-buddy-1.9.10.jar\\\",\\\"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0.jar\\\",\\\"/root/.m2/repository/javax/cache/cache-api/1.0.0/cache-api-1.0.0.jar\\\",\\\"/root/.m2/repository/de/ruedigermoeller/fst/2.54/fst-2.54.jar\\\",\\\"/root/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.0.0.Final/jboss-transaction-api_1.2_spec-1.0.0.Final.jar\\\",\\\"/root/.m2/repository/io/netty/netty-codec-dns/4.1.36.Final/netty-codec-dns-4.1.36.Final.jar\\\",\\\"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar\\\",\\\"/root/.m2/repository/io/netty/netty-resolver/4.1.36.Final/netty-resolver-4.1.36.Final.jar\\\",\\\"/root/.m2/repository/org/jboss/logging/jboss-logging-annotations/1.2.0.Beta1/jboss-logging-annotations-1.2.0.Beta1.jar\\\",\\\"/root/.m2/repository/org/hibernate/hibernate-core/4.3.11.Final/hibernate-core-4.3.11.Final.jar\\\",\\\"/root/.m2/repository/io/netty/netty-codec/4.1.36.Final/netty-codec-4.1.36.Final.jar\\\",\\\"/root/.m2/repository/org/jboss/jandex/1.1.0.Final/jandex-1.1.0.Final.jar\\\",\\\"/root/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar\\\",\\\"/root/.m2/repository/com/experlog/xapool/1.5.0/xapool-1.5.0.jar\\\",\\\"/root/.m2/repository/io/netty/netty-common/4.1.36.Final/netty-common-4.1.36.Final.jar\\\",\\\"/root/.m2/repository/io/netty/netty-resolver-dns/4.1.36.Final/netty-resolver-dns-4.1.36.Final.jar\\\",\\\"/root/.m2/repository/org/jboss/logging/jboss-logging/3.1.3.GA/jboss-logging-3.1.3.GA.jar\\\",\\\"/root/.m2/repository/org/jboss/byteman/byteman-bmunit/2.1.2/byteman-bmunit-2.1.2.jar\\\",\\\"/root/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar\\\",\\\"/root/.m2/repository/org/objenesis/objenesis/2.5.1/objenesis-2.5.1.jar\\\",\\\"/root/.m2/repository/org/hibernate/hibernate-testing/4.3.11.Final/hibernate-testing-4.3.11.Final.jar\\\",\\\"/root/.m2/repository/io/netty/netty-transport/4.1.36.Final/netty-transport-4.1.36.Final.jar\\\",\\\"/root/.m2/repository/org/jboss/byteman/byteman-install/2.1.2/byteman-install-2.1.2.jar\\\",\\\"/root/.m2/repository/org/javassist/javassist/3.21.0-GA/javassist-3.21.0-GA.jar\\\",\\\"/root/.m2/repository/org/jboss/jbossts/jbossjta/4.16.4.Final/jbossjta-4.16.4.Final.jar\\\",\\\"/root/.m2/repository/io/netty/netty-handler/4.1.36.Final/netty-handler-4.1.36.Final.jar\\\",\\\"/root/.m2/repository/org/jodd/jodd-bean/5.0.10/jodd-bean-5.0.10.jar\\\",\\\"/root/.m2/repository/io/reactivex/rxjava2/rxjava/2.2.7/rxjava-2.2.7.jar\\\",\\\"/root/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar\\\",\\\"/usr/lib/jvm/java-8-openjdk-amd64/jre/../lib/tools.jar\\\",\\\"/root/.m2/repository/org/hibernate/common/hibernate-commons-annotations/4.0.5.Final/hibernate-commons-annotations-4.0.5.Final.jar\\\",\\\"/root/.m2/repository/io/projectreactor/reactor-core/3.2.6.RELEASE/reactor-core-3.2.6.RELEASE.jar\\\",\\\"/root/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.9.9/jackson-dataformat-yaml-2.9.9.jar\\\",\\\"/root/.m2/repository/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar\\\",\\\"/root/.m2/repository/org/jodd/jodd-core/5.0.10/jodd-core-5.0.10.jar\\\",\\\"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.9.9/jackson-databind-2.9.9.jar\\\",\\\"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.8.8/jackson-core-2.8.8.jar\\\",\\\"/root/.m2/repository/org/jboss/byteman/byteman-submit/2.1.2/byteman-submit-2.1.2.jar\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson/target/redisson-3.11.2-SNAPSHOT.jar\\\",\\\"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar\\\",\\\"/root/.m2/repository/org/assertj/assertj-core/3.11.1/assertj-core-3.11.1.jar\\\"],\\\"output_dir\\\":\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-4/target/classes\\\",\\\"jdk\\\":\\\"JDK1.8\\\"},{\\\"arguments\\\":[],\\\"files\\\":[\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-5/src/main/java/org/redisson/hibernate/region/RedissonTimestampsRegion.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-5/src/main/java/org/redisson/hibernate/strategy/ReadOnlyCollectionRegionAccessStrategy.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-5/src/main/java/org/redisson/hibernate/region/RedissonEntityRegion.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-5/src/main/java/org/redisson/hibernate/strategy/AbstractReadWriteAccessStrategy.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-5/src/main/java/org/redisson/hibernate/strategy/NonStrictReadWriteEntityRegionAccessStrategy.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-5/src/main/java/org/redisson/hibernate/strategy/ReadOnlyNaturalIdRegionAccessStrategy.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-5/src/main/java/org/redisson/hibernate/strategy/ReadOnlyEntityRegionAccessStrategy.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-5/src/main/java/org/redisson/hibernate/region/RedissonNaturalIdRegion.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-5/src/main/java/org/redisson/hibernate/region/RedissonCollectionRegion.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-5/src/main/java/org/redisson/hibernate/strategy/ReadWriteEntityRegionAccessStrategy.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-5/src/main/java/org/redisson/hibernate/RedissonRegionFactory.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-5/src/main/java/org/redisson/hibernate/strategy/TransactionalNaturalIdRegionAccessStrategy.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-5/src/main/java/org/redisson/hibernate/strategy/TransactionalCollectionRegionAccessStrategy.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-5/src/main/java/org/redisson/hibernate/region/BaseRegion.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-5/src/main/java/org/redisson/hibernate/RedissonStrategyRegistrationProvider.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-5/src/main/java/org/redisson/hibernate/strategy/NonStrictReadWriteNaturalIdRegionAccessStrategy.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-5/src/main/java/org/redisson/hibernate/region/RedissonQueryRegion.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-5/src/main/java/org/redisson/hibernate/strategy/TransactionalEntityRegionAccessStrategy.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-5/src/main/java/org/redisson/hibernate/strategy/ReadWriteCollectionRegionAccessStrategy.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-5/src/main/java/org/redisson/hibernate/strategy/NonStrictReadWriteCollectionRegionAccessStrategy.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-5/src/main/java/org/redisson/hibernate/strategy/ReadWriteNaturalIdRegionAccessStrategy.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-5/src/main/java/org/redisson/hibernate/strategy/BaseRegionAccessStrategy.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-5/src/main/java/org/redisson/hibernate/JndiRedissonRegionFactory.java\\\"],\\\"classpath\\\":[\\\"/root/.m2/repository/org/reactivestreams/reactive-streams/1.0.2/reactive-streams-1.0.2.jar\\\",\\\"/root/.m2/repository/io/netty/netty-buffer/4.1.36.Final/netty-buffer-4.1.36.Final.jar\\\",\\\"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0.jar\\\",\\\"/root/.m2/repository/org/hibernate/hibernate-core/5.1.16.Final/hibernate-core-5.1.16.Final.jar\\\",\\\"/root/.m2/repository/javax/cache/cache-api/1.0.0/cache-api-1.0.0.jar\\\",\\\"/root/.m2/repository/io/netty/netty-codec-dns/4.1.36.Final/netty-codec-dns-4.1.36.Final.jar\\\",\\\"/root/.m2/repository/io/netty/netty-resolver-dns/4.1.36.Final/netty-resolver-dns-4.1.36.Final.jar\\\",\\\"/root/.m2/repository/org/jboss/byteman/byteman-bmunit/2.1.2/byteman-bmunit-2.1.2.jar\\\",\\\"/root/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar\\\",\\\"/root/.m2/repository/io/netty/netty-transport/4.1.36.Final/netty-transport-4.1.36.Final.jar\\\",\\\"/root/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.1.Final/hibernate-commons-annotations-5.0.1.Final.jar\\\",\\\"/root/.m2/repository/org/jboss/byteman/byteman-install/2.1.2/byteman-install-2.1.2.jar\\\",\\\"/root/.m2/repository/org/javassist/javassist/3.21.0-GA/javassist-3.21.0-GA.jar\\\",\\\"/root/.m2/repository/org/jodd/jodd-bean/5.0.10/jodd-bean-5.0.10.jar\\\",\\\"/root/.m2/repository/io/reactivex/rxjava2/rxjava/2.2.7/rxjava-2.2.7.jar\\\",\\\"/root/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar\\\",\\\"/usr/lib/jvm/java-8-openjdk-amd64/jre/../lib/tools.jar\\\",\\\"/root/.m2/repository/io/projectreactor/reactor-core/3.2.6.RELEASE/reactor-core-3.2.6.RELEASE.jar\\\",\\\"/root/.m2/repository/org/jodd/jodd-core/5.0.10/jodd-core-5.0.10.jar\\\",\\\"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.9.9/jackson-databind-2.9.9.jar\\\",\\\"/root/.m2/repository/org/apache/geronimo/specs/geronimo-jta_1.1_spec/1.1.1/geronimo-jta_1.1_spec-1.1.1.jar\\\",\\\"/root/.m2/repository/com/h2database/h2/1.4.192/h2-1.4.192.jar\\\",\\\"/root/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar\\\",\\\"/root/.m2/repository/org/yaml/snakeyaml/1.23/snakeyaml-1.23.jar\\\",\\\"/root/.m2/repository/org/jboss/logging/jboss-logging/3.3.0.Final/jboss-logging-3.3.0.Final.jar\\\",\\\"/root/.m2/repository/org/jboss/byteman/byteman/2.1.2/byteman-2.1.2.jar\\\",\\\"/root/.m2/repository/net/bytebuddy/byte-buddy/1.9.10/byte-buddy-1.9.10.jar\\\",\\\"/root/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar\\\",\\\"/root/.m2/repository/de/ruedigermoeller/fst/2.54/fst-2.54.jar\\\",\\\"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar\\\",\\\"/root/.m2/repository/io/netty/netty-resolver/4.1.36.Final/netty-resolver-4.1.36.Final.jar\\\",\\\"/root/.m2/repository/io/netty/netty-codec/4.1.36.Final/netty-codec-4.1.36.Final.jar\\\",\\\"/root/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar\\\",\\\"/root/.m2/repository/com/experlog/xapool/1.5.0/xapool-1.5.0.jar\\\",\\\"/root/.m2/repository/io/netty/netty-common/4.1.36.Final/netty-common-4.1.36.Final.jar\\\",\\\"/root/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.1/jaxb-impl-2.3.1.jar\\\",\\\"/root/.m2/repository/org/hibernate/hibernate-testing/5.1.16.Final/hibernate-testing-5.1.16.Final.jar\\\",\\\"/root/.m2/repository/org/objenesis/objenesis/2.5.1/objenesis-2.5.1.jar\\\",\\\"/root/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar\\\",\\\"/root/.m2/repository/org/jboss/jbossts/jbossjta/4.16.4.Final/jbossjta-4.16.4.Final.jar\\\",\\\"/root/.m2/repository/io/netty/netty-handler/4.1.36.Final/netty-handler-4.1.36.Final.jar\\\",\\\"/root/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar\\\",\\\"/root/.m2/repository/com/fasterxml/classmate/1.3.0/classmate-1.3.0.jar\\\",\\\"/root/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.9.9/jackson-dataformat-yaml-2.9.9.jar\\\",\\\"/root/.m2/repository/org/jboss/jandex/2.0.3.Final/jandex-2.0.3.Final.jar\\\",\\\"/root/.m2/repository/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar\\\",\\\"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.8.8/jackson-core-2.8.8.jar\\\",\\\"/root/.m2/repository/org/jboss/byteman/byteman-submit/2.1.2/byteman-submit-2.1.2.jar\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson/target/redisson-3.11.2-SNAPSHOT.jar\\\",\\\"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar\\\",\\\"/root/.m2/repository/org/assertj/assertj-core/3.11.1/assertj-core-3.11.1.jar\\\"],\\\"output_dir\\\":\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-5/target/classes\\\",\\\"jdk\\\":\\\"JDK1.8\\\"},{\\\"arguments\\\":[],\\\"files\\\":[\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-52/src/main/java/org/redisson/hibernate/region/RedissonTimestampsRegion.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-52/src/main/java/org/redisson/hibernate/strategy/TransactionalEntityRegionAccessStrategy.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-52/src/main/java/org/redisson/hibernate/strategy/ReadWriteEntityRegionAccessStrategy.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-52/src/main/java/org/redisson/hibernate/region/BaseRegion.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-52/src/main/java/org/redisson/hibernate/region/RedissonNaturalIdRegion.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-52/src/main/java/org/redisson/hibernate/strategy/ReadOnlyNaturalIdRegionAccessStrategy.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-52/src/main/java/org/redisson/hibernate/strategy/NonStrictReadWriteNaturalIdRegionAccessStrategy.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-52/src/main/java/org/redisson/hibernate/strategy/ReadOnlyEntityRegionAccessStrategy.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-52/src/main/java/org/redisson/hibernate/strategy/NonStrictReadWriteCollectionRegionAccessStrategy.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-52/src/main/java/org/redisson/hibernate/strategy/ReadOnlyCollectionRegionAccessStrategy.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-52/src/main/java/org/redisson/hibernate/RedissonStrategyRegistrationProvider.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-52/src/main/java/org/redisson/hibernate/RedissonRegionFactory.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-52/src/main/java/org/redisson/hibernate/strategy/ReadWriteNaturalIdRegionAccessStrategy.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-52/src/main/java/org/redisson/hibernate/strategy/ReadWriteCollectionRegionAccessStrategy.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-52/src/main/java/org/redisson/hibernate/strategy/TransactionalNaturalIdRegionAccessStrategy.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-52/src/main/java/org/redisson/hibernate/strategy/AbstractReadWriteAccessStrategy.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-52/src/main/java/org/redisson/hibernate/strategy/BaseRegionAccessStrategy.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-52/src/main/java/org/redisson/hibernate/region/RedissonEntityRegion.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-52/src/main/java/org/redisson/hibernate/strategy/TransactionalCollectionRegionAccessStrategy.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-52/src/main/java/org/redisson/hibernate/region/RedissonQueryRegion.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-52/src/main/java/org/redisson/hibernate/strategy/NonStrictReadWriteEntityRegionAccessStrategy.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-52/src/main/java/org/redisson/hibernate/JndiRedissonRegionFactory.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-52/src/main/java/org/redisson/hibernate/region/RedissonCollectionRegion.java\\\"],\\\"classpath\\\":[\\\"/root/.m2/repository/org/reactivestreams/reactive-streams/1.0.2/reactive-streams-1.0.2.jar\\\",\\\"/root/.m2/repository/io/netty/netty-buffer/4.1.36.Final/netty-buffer-4.1.36.Final.jar\\\",\\\"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0.jar\\\",\\\"/root/.m2/repository/javax/cache/cache-api/1.0.0/cache-api-1.0.0.jar\\\",\\\"/root/.m2/repository/io/netty/netty-codec-dns/4.1.36.Final/netty-codec-dns-4.1.36.Final.jar\\\",\\\"/root/.m2/repository/io/netty/netty-resolver-dns/4.1.36.Final/netty-resolver-dns-4.1.36.Final.jar\\\",\\\"/root/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar\\\",\\\"/root/.m2/repository/io/netty/netty-transport/4.1.36.Final/netty-transport-4.1.36.Final.jar\\\",\\\"/root/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.1.Final/hibernate-commons-annotations-5.0.1.Final.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-beans/4.3.24.RELEASE/spring-beans-4.3.24.RELEASE.jar\\\",\\\"/root/.m2/repository/org/hibernate/hibernate-testing/5.2.17.Final/hibernate-testing-5.2.17.Final.jar\\\",\\\"/root/.m2/repository/org/javassist/javassist/3.21.0-GA/javassist-3.21.0-GA.jar\\\",\\\"/root/.m2/repository/org/jodd/jodd-bean/5.0.10/jodd-bean-5.0.10.jar\\\",\\\"/root/.m2/repository/org/jboss/byteman/byteman/4.0.0-BETA5/byteman-4.0.0-BETA5.jar\\\",\\\"/root/.m2/repository/io/reactivex/rxjava2/rxjava/2.2.7/rxjava-2.2.7.jar\\\",\\\"/root/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar\\\",\\\"/usr/lib/jvm/java-8-openjdk-amd64/jre/../lib/tools.jar\\\",\\\"/root/.m2/repository/io/projectreactor/reactor-core/3.2.6.RELEASE/reactor-core-3.2.6.RELEASE.jar\\\",\\\"/root/.m2/repository/org/jodd/jodd-core/5.0.10/jodd-core-5.0.10.jar\\\",\\\"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.9.9/jackson-databind-2.9.9.jar\\\",\\\"/root/.m2/repository/org/jboss/byteman/byteman-bmunit/4.0.0-BETA5/byteman-bmunit-4.0.0-BETA5.jar\\\",\\\"/root/.m2/repository/com/h2database/h2/1.4.192/h2-1.4.192.jar\\\",\\\"/root/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar\\\",\\\"/root/.m2/repository/org/yaml/snakeyaml/1.23/snakeyaml-1.23.jar\\\",\\\"/root/.m2/repository/net/bytebuddy/byte-buddy/1.9.10/byte-buddy-1.9.10.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-aop/4.3.24.RELEASE/spring-aop-4.3.24.RELEASE.jar\\\",\\\"/root/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar\\\",\\\"/root/.m2/repository/de/ruedigermoeller/fst/2.54/fst-2.54.jar\\\",\\\"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar\\\",\\\"/root/.m2/repository/io/netty/netty-resolver/4.1.36.Final/netty-resolver-4.1.36.Final.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-expression/4.3.24.RELEASE/spring-expression-4.3.24.RELEASE.jar\\\",\\\"/root/.m2/repository/io/netty/netty-codec/4.1.36.Final/netty-codec-4.1.36.Final.jar\\\",\\\"/root/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar\\\",\\\"/root/.m2/repository/com/experlog/xapool/1.5.0/xapool-1.5.0.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-context/4.3.24.RELEASE/spring-context-4.3.24.RELEASE.jar\\\",\\\"/root/.m2/repository/io/netty/netty-common/4.1.36.Final/netty-common-4.1.36.Final.jar\\\",\\\"/root/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.1/jaxb-impl-2.3.1.jar\\\",\\\"/root/.m2/repository/org/objenesis/objenesis/2.5.1/objenesis-2.5.1.jar\\\",\\\"/root/.m2/repository/org/hibernate/hibernate-core/5.2.17.Final/hibernate-core-5.2.17.Final.jar\\\",\\\"/root/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar\\\",\\\"/root/.m2/repository/org/springframework/spring-core/4.3.24.RELEASE/spring-core-4.3.24.RELEASE.jar\\\",\\\"/root/.m2/repository/org/jboss/jbossts/jbossjta/4.16.4.Final/jbossjta-4.16.4.Final.jar\\\",\\\"/root/.m2/repository/io/netty/netty-handler/4.1.36.Final/netty-handler-4.1.36.Final.jar\\\",\\\"/root/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.0.1.Final/jboss-transaction-api_1.2_spec-1.0.1.Final.jar\\\",\\\"/root/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar\\\",\\\"/root/.m2/repository/com/fasterxml/classmate/1.3.0/classmate-1.3.0.jar\\\",\\\"/root/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.9.9/jackson-dataformat-yaml-2.9.9.jar\\\",\\\"/root/.m2/repository/org/jboss/jandex/2.0.3.Final/jandex-2.0.3.Final.jar\\\",\\\"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.8.8/jackson-core-2.8.8.jar\\\",\\\"/root/.m2/repository/org/jboss/byteman/byteman-install/4.0.0-BETA5/byteman-install-4.0.0-BETA5.jar\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson/target/redisson-3.11.2-SNAPSHOT.jar\\\",\\\"/root/.m2/repository/org/jboss/logging/jboss-logging/3.3.1.Final/jboss-logging-3.3.1.Final.jar\\\",\\\"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar\\\",\\\"/root/.m2/repository/org/jboss/byteman/byteman-submit/4.0.0-BETA5/byteman-submit-4.0.0-BETA5.jar\\\",\\\"/root/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar\\\",\\\"/root/.m2/repository/org/assertj/assertj-core/3.11.1/assertj-core-3.11.1.jar\\\"],\\\"output_dir\\\":\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-52/target/classes\\\",\\\"jdk\\\":\\\"JDK1.8\\\"},{\\\"arguments\\\":[],\\\"files\\\":[\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-53/src/main/java/org/redisson/hibernate/JndiRedissonRegionFactory.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-53/src/main/java/org/redisson/hibernate/RedissonStorage.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-53/src/main/java/org/redisson/hibernate/RedissonRegionFactory.java\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-53/src/main/java/org/redisson/hibernate/RedissonStrategyRegistrationProvider.java\\\"],\\\"classpath\\\":[\\\"/root/.m2/repository/org/reactivestreams/reactive-streams/1.0.2/reactive-streams-1.0.2.jar\\\",\\\"/root/.m2/repository/io/netty/netty-buffer/4.1.36.Final/netty-buffer-4.1.36.Final.jar\\\",\\\"/root/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar\\\",\\\"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0.jar\\\",\\\"/root/.m2/repository/javax/cache/cache-api/1.0.0/cache-api-1.0.0.jar\\\",\\\"/root/.m2/repository/io/netty/netty-codec-dns/4.1.36.Final/netty-codec-dns-4.1.36.Final.jar\\\",\\\"/root/.m2/repository/net/bytebuddy/byte-buddy/1.8.17/byte-buddy-1.8.17.jar\\\",\\\"/root/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar\\\",\\\"/root/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar\\\",\\\"/root/.m2/repository/io/netty/netty-resolver-dns/4.1.36.Final/netty-resolver-dns-4.1.36.Final.jar\\\",\\\"/root/.m2/repository/org/jboss/byteman/byteman/4.0.3/byteman-4.0.3.jar\\\",\\\"/root/.m2/repository/io/netty/netty-transport/4.1.36.Final/netty-transport-4.1.36.Final.jar\\\",\\\"/root/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar\\\",\\\"/root/.m2/repository/org/jboss/byteman/byteman-install/4.0.3/byteman-install-4.0.3.jar\\\",\\\"/root/.m2/repository/org/javassist/javassist/3.21.0-GA/javassist-3.21.0-GA.jar\\\",\\\"/root/.m2/repository/org/jboss/byteman/byteman-submit/4.0.3/byteman-submit-4.0.3.jar\\\",\\\"/root/.m2/repository/org/jodd/jodd-bean/5.0.10/jodd-bean-5.0.10.jar\\\",\\\"/root/.m2/repository/io/reactivex/rxjava2/rxjava/2.2.7/rxjava-2.2.7.jar\\\",\\\"/root/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar\\\",\\\"/usr/lib/jvm/java-8-openjdk-amd64/jre/../lib/tools.jar\\\",\\\"/root/.m2/repository/io/projectreactor/reactor-core/3.2.6.RELEASE/reactor-core-3.2.6.RELEASE.jar\\\",\\\"/root/.m2/repository/org/jodd/jodd-core/5.0.10/jodd-core-5.0.10.jar\\\",\\\"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.9.9/jackson-databind-2.9.9.jar\\\",\\\"/root/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar\\\",\\\"/root/.m2/repository/com/h2database/h2/1.4.192/h2-1.4.192.jar\\\",\\\"/root/.m2/repository/org/yaml/snakeyaml/1.23/snakeyaml-1.23.jar\\\",\\\"/root/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar\\\",\\\"/root/.m2/repository/de/ruedigermoeller/fst/2.54/fst-2.54.jar\\\",\\\"/root/.m2/repository/org/jboss/byteman/byteman-bmunit/4.0.3/byteman-bmunit-4.0.3.jar\\\",\\\"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar\\\",\\\"/root/.m2/repository/io/netty/netty-resolver/4.1.36.Final/netty-resolver-4.1.36.Final.jar\\\",\\\"/root/.m2/repository/io/netty/netty-codec/4.1.36.Final/netty-codec-4.1.36.Final.jar\\\",\\\"/root/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar\\\",\\\"/root/.m2/repository/org/hibernate/hibernate-testing/5.3.7.Final/hibernate-testing-5.3.7.Final.jar\\\",\\\"/root/.m2/repository/com/experlog/xapool/1.5.0/xapool-1.5.0.jar\\\",\\\"/root/.m2/repository/io/netty/netty-common/4.1.36.Final/netty-common-4.1.36.Final.jar\\\",\\\"/root/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.1/jaxb-impl-2.3.1.jar\\\",\\\"/root/.m2/repository/org/objenesis/objenesis/2.5.1/objenesis-2.5.1.jar\\\",\\\"/root/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar\\\",\\\"/root/.m2/repository/org/jboss/jbossts/jbossjta/4.16.4.Final/jbossjta-4.16.4.Final.jar\\\",\\\"/root/.m2/repository/io/netty/netty-handler/4.1.36.Final/netty-handler-4.1.36.Final.jar\\\",\\\"/root/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar\\\",\\\"/root/.m2/repository/org/hibernate/hibernate-core/5.3.7.Final/hibernate-core-5.3.7.Final.jar\\\",\\\"/root/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.9.9/jackson-dataformat-yaml-2.9.9.jar\\\",\\\"/root/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar\\\",\\\"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.8.8/jackson-core-2.8.8.jar\\\",\\\"/tmp/analyzing-b80da023458acc92/redisson/target/redisson-3.11.2-SNAPSHOT.jar\\\",\\\"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar\\\",\\\"/root/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.4.Final/hibernate-commons-annotations-5.0.4.Final.jar\\\",\\\"/root/.m2/repository/org/assertj/assertj-core/3.11.1/assertj-core-3.11.1.jar\\\"],\\\"output_dir\\\":\\\"/tmp/analyzing-b80da023458acc92/redisson-hibernate/redisson-hibernate-53/target/classes\\\",\\\"jdk\\\":\\\"JDK1.8\\\"}]\"\n[DEBUG] [27/Jun/2019:15:29:31 +0000] [()] Done generating compilation database.\n[DEBUG] [27/Jun/2019:15:29:31 +0000] [()] Trying to autodetect the build system based on files present in the repository.\n[DEBUG] [27/Jun/2019:15:29:31 +0000] [()] Errorprone JDK1.8 and jceJDK \"JDK1.8\" are compatible.\n[DEBUG] [27/Jun/2019:15:47:31 +0000] [()] Tool completed with 204 but only reporting up to 1200.\n[DEBUG] [27/Jun/2019:15:49:40 +0000] [()] Tool completed with 232 but only reporting up to 1200.\n[DEBUG] [27/Jun/2019:15:49:40 +0000] [()] All tools complete for commit \"master\"\n[DEBUG] [27/Jun/2019:15:49:41 +0000] [()] Analysis has completed.\n"}}
